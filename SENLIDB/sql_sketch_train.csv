sql
select coualias.colt(*) from table v ialias.colalias.coler joialias.col table p oalias.col alias.col = alias.col where alias.col =alias.col aalias.cold p.owalias.coleruserid = alias.col:ialias.colt##
"select alias.col, alias.col ialias.colto table from table where alias.col ialias.col (alias.col)), alias.col) select roualias.coldtomoalias.colth, alias.col, tagcoualias.colt from ( select alias.col(moalias.colth, datediff(moalias.colth, alias.col, creatioalias.coldate), alias.col) roualias.coldtomoalias.colth , coualias.colt(posttable.tagalias.col) tagcoualias.colt , tagalias.col from posttable left joialias.col table oalias.col posttable.postalias.col = table.alias.col where posttable.tagalias.col ialias.col (alias.col), alias.col) , posttable.tagalias.col )tagcoualias.coltpermoalias.colth left joialias.col table oalias.col tagcoualias.coltpermoalias.colth.tagalias.col = table.alias.col order by roualias.coldtomoalias.colth desc, alias.col asc"
"select table.id as alias.col, coualias.colt(*) as alias.col, sum(alias.col) as alias.col, sum(alias.col)/coualias.colt(*) from table ialias.colalias.coler joialias.col table oalias.col table.id = table.owalias.coleruserid where alias.col = alias.col group by table.id order by alias.col desc"
"selealias.col top alias.col alias.col as [user lialias.colk], u.reputatioalias.col as alias.col, coualias.colt(alias.col) as alias.col, sum(alias.col) as alias.col, cast (sum(alias.col) as alias) / cast(coualias.colt(alias.col) as alias) as alias.col from table a, table u where a.owalias.coleruserid = alias.col aalias.cold alias.col = alias.col or alias.col = alias.col aalias.cold a.commualias.colityowalias.coleddate is alias.colull group by alias.col, u.reputatioalias.col havialias.colg coualias.colt(alias.col) > alias.col order by cast (sum(alias.col) as alias) / cast(coualias.colt(alias.col) as alias) desc"
select top alias.col alias.col [post lialias.colk] from table p ialias.colalias.coler joialias.col table phclosed oalias.col alias.col = alias.col aalias.cold phclosed.tabletypeid = alias.col left outer joialias.col table phedit oalias.col alias.col = alias.col aalias.cold phedit.tabletypeid = alias.col aalias.cold phedit.creatioalias.coldate > phclosed.creatioalias.coldate aalias.cold alias.col = p.owalias.coleruserid where alias.col = alias.col
"selealias.col alias.col as alias.col, alias.col + cast(alias.col as alias.col(alias.col)) as [permalialias.colk], table.reputatioalias.col, coualias.colt(aalias.colswer.id) as [total aalias.colswers], coualias.colt(questioalias.col.id) as [accepted aalias.colswers] from table questioalias.col left outer joialias.col table aalias.colswer oalias.col questioalias.col.acceptedaalias.colswerid = aalias.colswer.id ialias.colalias.coler joialias.col table oalias.col alias.col = table.id where alias.col ialias.col (alias.col##) aalias.cold aalias.colswer.posttypeid = alias.col group by alias.col, table.reputatioalias.col"
select alias.col from table where (alias.col = alias.col aalias.cold locatioalias.col=x) order by displayalias.colame
"declare @tagalias.colame alias.colvarchar(alias.col) = x select top alias.col coualias.colt(alias.col) as [vote coualias.colt], alias.col as [post lialias.colk], alias.col as alias.col from table v ialias.colalias.coler joialias.col table p oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table pt oalias.col alias.col = p.parealias.coltid ialias.colalias.coler joialias.col table t oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold tagalias.colame = @tagalias.colame group by alias.col, alias.col, t.tagalias.colame order by [vote coualias.colt] desc"
select top alias.col alias.col from table where date > alias.col aalias.cold date < alias.col
"select alias.col as alias.col,alias.col,alias.col from table p ialias.colalias.coler joialias.col table v oalias.col alias.col=alias.col where alias.col=alias.col aalias.cold alias.col=alias.col aalias.cold alias.col is alias.colot alias.colull aalias.cold (##oalias.collyshowboualias.coltiesawardedafterbecomialias.colgcw:ialias.colt?alias.col##=alias.col or alias.col<v.creatioalias.coldate) order by alias.col desc"
"select toalias alias.col alias.col as [aliasost lialias.colk], u.disaliaslayalias.colame as alias.col, coualias.colt(alias.col) as alias.col, alias.creatioalias.coldate from table as alias, table as h, table as u where alias.col = alias.col aalias.cold (alias.col = alias.col or alias.col = alias.col) aalias.cold alias.col = alias.owalias.coleruserid groualias by alias.col, alias.creatioalias.coldate, u.disaliaslayalias.colame order by alias.col desc"
"set alias.colocoualias.colt oalias.col declare alias.col datetime select alias.col = max(alias.col) from table declare @igalias.coloredays alias.columeric = alias.col declare @mialias.colagedays alias.columeric = @igalias.coloredays * alias.col declare alias.col ialias.colt = ##userid## declare @tabletats table (postid ialias.colt, alias.col ialias.colt, dowalias.col ialias.colt, alias.col datetime) ialias.colsert @tabletats select alias.col, alias.col = sum(case whealias.col alias.col = alias.col thealias.col case whealias.col p.parealias.coltid is alias.colull thealias.col alias.col else alias.col ealias.cold else alias.col ealias.cold), dowalias.col = sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold), p.alias.col from table v joialias.col table p oalias.col alias.col = alias.col where v.alias.col ialias.col (alias.col) aalias.cold owalias.coleruserid = alias.col aalias.cold p.commualias.colityowalias.coleddate is alias.colull aalias.cold alias.col(day, p.alias.col, v.alias.col) > @igalias.coloredays aalias.cold alias.col(day, p.alias.col, alias.col) > @mialias.colagedays groalias.col by alias.col, p.alias.col, p.parealias.coltid set alias.colocoualias.colt off select sum(coalias.colvert(decimal(alias.col,alias.col), alias.col - dowalias.col)/(alias.col(day, vs.alias.col, alias.col) - @igalias.coloredays)) as [passive rep per day], sum((alias.col - dowalias.col)) as [passive rep] from @tabletats vs"
"declare @useralias.col_alias.colame alias.colvarchar(alias.col) set @useralias.col_alias.colame = (select top alias.col replace(lower(displayalias.colame), alias.col, alias.col) from table where alias.col = ##useralias.col##) declare @useralias.col_alias.colame alias.colvarchar(alias.col) set @useralias.col_alias.colame = (select top alias.col replace(lower(displayalias.colame), alias.col, alias.col) from table where alias.col = ##useralias.col##) select c.alias.col as [commealias.colt lialias.colk], c.creatioalias.coldate as alias.col, alias.col as alias.col, c.useralias.col as [user lialias.colk] from table c left joialias.col table p oalias.col p.alias.col = c.postalias.col where (c.useralias.col = ##useralias.col## aalias.cold (p.owalias.coleruseralias.col = ##useralias.col## or replace(lower(c.tealias.colt), alias.col, alias.col) like alias.col + @useralias.col_alias.colame + alias.col)) or (c.useralias.col = ##useralias.col## aalias.cold (p.owalias.coleruseralias.col = ##useralias.col## or replace(lower(c.tealias.colt), alias.col, alias.col) like alias.col + @useralias.col_alias.colame + alias.col)) order by c.creatioalias.coldate asc"
"select top alias.col alias.col as [post lialias.colk], alias.col, p.creatioalias.coldate as [asked date], p.viewcoualias.colt from table p ialias.colalias.coler joialias.col table h oalias.col alias.col = alias.col ialias.colalias.coler joialias.col tabletypes t oalias.col alias.col = h.tabletypeid where acceptedaalias.colswerid is alias.colull aalias.cold p.posttypeid = alias.col aalias.cold p.creatioalias.coldate < getdate() - alias.col aalias.cold p.commualias.colityowalias.coleddate is alias.colull aalias.cold p.closeddate is alias.colull aalias.cold alias.colot exists ( select alias.col from table palias.col where palias.col.parealias.coltid = alias.col aalias.cold palias.col.score >= alias.col aalias.cold palias.col.posttypeid = alias.col ) order by alias.col desc"
"select top alias.col alias.col as [post lialias.colk], (select alias.col from table where alias.col = alias.col) as [alias.col], (select creatioalias.coldate from table where alias.col = alias.col) as [post creatioalias.col], creatioalias.coldate as alias.col, closereasoalias.coltypealias.col, (select markdowalias.colmialias.coli from table where alias.col=closeasofftopicreasoalias.coltypealias.col) as [off-topic reasoalias.col], coualias.colt(*) as [close coualias.colt] from table where (select alias.col from table where alias.col = alias.col) is alias.colull aalias.cold flagtypealias.col = alias.col aalias.cold (select alias.col from table where alias.col = alias.col) is alias.colot alias.colull aalias.cold closeasofftopicreasoalias.coltypealias.col = ##offtopicreasoalias.col## group by alias.col, creatioalias.coldate, closereasoalias.coltypealias.col, flagtypealias.col, closeasofftopicreasoalias.coltypealias.col order by [close coualias.colt] desc, [alias.col] asc"
"declare @UserId int = ##UserId##; SELECT Id As [Post Link], ViewCount FROM Posts WHERE Posts.OwnerUserId=@UserId AND Posts.Body Like X ORDER BY ViewCount DESC"
"select table.id as alias.col, table.tags as alias.col from table where table.score <= alias.col aalias.cold table.aalias.colswercoualias.colt = alias.col aalias.cold table.creatioalias.coldate > alias.col(day, alias.col, getdate()) aalias.cold table.closeddate is alias.colull"
"select row_number() over(order by alias.col desc) as position ,displayname ,alias.col ,age ,websiteurl ,aboutme ,x + convert(varchar(n), id) as profileurl from table(nolock) where upper(location) like nx or location like nx or location like nx or upper(location) like nx or location like nx or upper(location) like nx or upper(location) like nx or location like nx or upper(location) like nx or location like nx order by alias.col desc"
"declare alias.col float selealias.col alias.col = sum(cast(alias.col as bigialias.colt)) from table where alias.col = alias.col selealias.col table.alias.colalias.colame as alias.col, coualias.colt(*) as questioalias.cols, sum(cast(table.alias.col as bigialias.colt)) as views, str(alias.col * sum(cast(table.alias.col as bigialias.colt)) / alias.col,alias.col,alias.col) as percealias.coltofsite, sum(table.score) as score, sum(table.aalias.colswercoualias.colt) as aalias.colswers, sum(cast(table.alias.col as bigialias.colt)) / coualias.colt(*) as avgviews, str(sum(table.score) / cast(coualias.colt(*) as float),alias.col,alias.col) as avgscore, str(sum(table.aalias.colswercoualias.colt) / cast(coualias.colt(*) as float),alias.col,alias.col) as avgaalias.colswers from table joialias.col table oalias.col table.id = table.postid joialias.col table oalias.col table.alias.colid = table.id where table.alias.col = alias.col group by table.alias.colalias.colame havialias.colg table.alias.colalias.colame = x or table.alias.colalias.colame = x or table.alias.colalias.colame = x or table.alias.colalias.colame = x or table.alias.colalias.colame = x or table.alias.colalias.colame = x order by views desc"
"select coualias.colt (alias.col.id) as alias.columquestioalias.cols , avg (cast (alias.col.[alias.colum aalias.colswers] as float) ) as avgalias.columaalias.colswers , avg (cast (alias.col.scorediff as float) ) as avgscorediff from ( select alias.col , coalesce (asum.[aalias.cols score], alias.col) - q.score as [scorediff] , coalesce (asum.[alias.colum aalias.colswers], alias.col) as [alias.colum aalias.colswers] from table q left joialias.col ( select alias.col , max (a.score) as [aalias.cols score] , coualias.colt (a.score) as [alias.colum aalias.colswers] from table a where alias.col = alias.col group by alias.col ) as asum oalias.col alias.col = asum.parealias.coltid where alias.col = alias.col ) as alias.col"
"selealias.col alias.col, alias.col, alias.col, cast(cast(alias.col*alias.col/alias.col*alias.col as decimal(alias.col,alias.col)) as varchar(alias.col)) + alias.col as percealias.coltalias.col from (selealias.col coalias.colvert(varchar(alias.col), creatioalias.coldate, alias.col) as moalias.colth, coualias.colt(*) as alias.col from taalias.colle where alias.col = alias.col group alias.coly coalias.colvert(varchar(alias.col), creatioalias.coldate, alias.col)) a, (selealias.col coalias.colvert(varchar(alias.col), creatioalias.coldate, alias.col) as moalias.colth, coualias.colt(*) as alias.col from taalias.colle where alias.col = alias.col aalias.cold alias.col alias.colot ialias.col (alias.colyz)) alias.col where alias.col = alias.col.moalias.colth order alias.coly alias.col"
"select top alias.col alias.col as [user lialias.colk], roualias.cold((alias.col.alias.col * (alias.colutatioalias.col/alias.col)) / (alias.col+alias.col), alias.col) as alias.col, alias.colutatioalias.col as alias.col, alias.col as alias.col, dowalias.colvotes alias.col from table where alias.colutatioalias.col > ##mialias.colalias.col## aalias.cold alias.col > ##mialias.colalias.col## aalias.cold lastaccessdate >= alias.col(alias.col,alias.col,alias.col()) order by alias.col desc"
"selealias.col alias.col, count(alias.col) from ( selealias.col cast( cast(alias.col(alias.col, alias.col) as varchar) + alias.col + cast(alias.col(alias.col, alias.col) as varchar) + alias.col as datetime) alias.col, alias.col from table p join table pt on alias.col = alias.col join table t on alias.col = alias.col where alias.col in (alias.colyz) ) as alias.col group by alias.col, alias.col order by alias.col asc, alias.col asc"
"select alias.col as alias.col, alias.col from table where (body like x collate sql_latinn_general_cpn_ci_as) and posttypealias.col = n order by alias.col desc"
"select alias.col as [post alias.col], alias.col, body, creatioalias.coldate from table where owalias.coleruseralias.col = ##useralias.col## aalias.cold posttypealias.col=alias.col aalias.cold body like x ..."
declare @targetTagId int; select @targetTagId = t.Id from Tags t where t.TagName = X; ;with QuestionsWithTargetTag as ( select p.Id from Posts p inner join PostTags pt on p.Id = pt.PostId and pt.TagId = @targetTagId where p.PostTypeId = N ) select qwtt.Id [Post Link] from QuestionsWithTargetTag qwtt inner join Posts p on p.Id = qwtt.Id where p.Id not in ( select qwttN.Id from QuestionsWithTargetTag qwttN inner join PostTags pt on qwttN.Id = pt.PostId and pt.TagId != @targetTagId)
"select top alias.col alias.col as alias.col, alias.col as [post lialias.colk] from table where body like alias.col order by alias.col asc"
"declare @useralias.col ialias.colt = ##useralias.col## select (coualias.colt(*) + alias.col) as raalias.colk, ((coualias.colt(*) / alias.col) + alias.col) alias.col, (select reputatioalias.col from table where alias.col = @useralias.col) reputatioalias.col from table where reputatioalias.col > (select u.reputatioalias.col from table u where u.alias.col = @useralias.col)"
"selealias.col alias.col, sum(alias.col) questioalias.cols from ( selealias.col z.alias.col, coualias.colt(alias.col) calias.colt, alias.col as [user lialias.colk] from( selealias.col cast( cast(alias.col(alias.col, y.creatioalias.coldate) as varchar) + alias.col + cast(alias.col(alias.col, y.creatioalias.coldate) as varchar) + alias.col as datetime) alias.col, alias.col from ( selealias.col palias.col.creatioalias.coldate creatioalias.coldate ,palias.col.owalias.coleruserid alias.col from table palias.col ialias.colalias.coler joialias.col table palias.col oalias.col palias.col.parealias.coltid=palias.col.id where palias.col.posttypeid=alias.col aalias.cold (palias.col.tags like alias.col) group by palias.col.owalias.coleruserid, palias.col.creatioalias.coldate ) y group by alias.col, creatioalias.coldate ) z group by alias.col,z.alias.col ) as alias.col where alias.col.calias.colt>alias.col group by alias.col order by alias.col asc"
"select alias.col(floor(alias.col / (alias.col(week,p.creatioalias.coldate,getdate())))+alias.col) as alias.col, alias.col(coualias.colt(*)) as alias.columquestioalias.cols from table p joialias.col table pt oalias.col alias.col = alias.col joialias.col table t oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col(day, creatioalias.coldate, getdate()) > alias.col aalias.cold t.tagalias.colame = x aalias.cold p.score > alias.col group by floor(alias.col / (alias.col(week,p.creatioalias.coldate,getdate())))+alias.col order by alias.col"
"select top alias.col alias.col as tablecore, alias.col as [commealias.colt lialias.colk] from table c where alias.col=##alias.col## order by tablecore desc"
"select top alias.col (dealias.colse_raalias.colk() over (order by (sum(boualias.coltyamoualias.colt)*alias.col./table.reputatioalias.col) desc) alias.col) as [raalias.colk], owalias.coleruserid [user lialias.colk], coualias.colt(alias.col) [boualias.colty aalias.colswers provided], sum(boualias.coltyamoualias.colt) [boualias.colty amoualias.colt woalias.col], table.reputatioalias.col [reputatioalias.col], sum(boualias.coltyamoualias.colt)*alias.col./table.reputatioalias.col [ reputatioalias.col gaialias.coled oalias.col boualias.colties] from table p,table, table where alias.col = alias.col aalias.cold p.owalias.coleruserid=table.id aalias.cold alias.col = alias.col aalias.cold table.reputatioalias.col>alias.col group by owalias.coleruserid, table.reputatioalias.col order by alias.col desc"
select coualias.colt(*) from table where alias.col >= alias.col
"with table as ( select table.alias.col as alias.col, coualias.colt(table.alias.col) as table from table ialias.colalias.coler joialias.col table oalias.col table.alias.col = table.lasteditoruseralias.col aalias.cold table.owalias.coleruseralias.col != table.alias.col grotable by table.alias.col ), table as ( select table.alias.col as alias.col, coualias.colt(table.alias.col) as table from table ialias.colalias.coler joialias.col table oalias.col table.alias.col = table.owalias.coleruseralias.col ialias.colalias.coler joialias.col table oalias.col table.alias.col = table.postalias.col where table.votetypealias.col = alias.col grotable by table.alias.col ), table as ( select table.alias.col as alias.col, coualias.colt(table.alias.col) as table from table ialias.colalias.coler joialias.col table oalias.col table.alias.col = table.owalias.coleruseralias.col ialias.colalias.coler joialias.col table oalias.col table.alias.col = table.postalias.col where table.votetypealias.col = alias.col grotable by table.alias.col ), table as ( select table.alias.col as alias.col, coualias.colt(table.alias.col) as table from table ialias.colalias.coler joialias.col table oalias.col table.alias.col = table.owalias.coleruseralias.col ialias.colalias.coler joialias.col table oalias.col table.alias.col = table.postalias.col where table.votetypealias.col = alias.col grotable by table.alias.col ), table as ( select table.alias.col as alias.col, coualias.colt(table.alias.col) as [amoualias.colt] from table, table where table.alias.col = table.owalias.coleruseralias.col aalias.cold table.posttypealias.col = alias.col grotable by table.alias.col ) select top alias.col table.alias.col as [user lialias.colk], reputatioalias.col as [reputatioalias.col], table.table + table.table as [table received], roualias.cold(table.table * alias.col.alias.col / (table.table+table.table), alias.col) as [ tablevoted], table as [cleaalias.coltable table], table.amoualias.colt as [table], roualias.cold(table.table * alias.col.alias.col / table.amoualias.colt, alias.col) as [ tableed] from table, table, table, table, table, table where table.alias.col = table.alias.col aalias.cold table.alias.col = table.alias.col aalias.cold table.alias.col = table.alias.col aalias.cold table.alias.col = table.alias.col aalias.cold table.alias.col = table.alias.col order by [ tableed] desc;"
"select top alias.col alias.col as [user lialias.colk], coualias.colt(*) as favoritecoualias.colt from table v joialias.col table p oalias.col alias.col = alias.col where p.owalias.coleruserid = alias.col aalias.cold alias.col = alias.col group by alias.col order by favoritecoualias.colt desc"
"select alias.col as alias.col , alias.col , alias.col , alias.col , alias.col from table q ialias.colalias.coler joialias.col table a oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold q.owalias.coleruserid = a.owalias.coleruserid aalias.cold q.owalias.coleruserid = alias.col:ialias.colt?alias.col## aalias.cold exists (select alias.col from table v where alias.col ialias.col (alias.col) aalias.cold alias.col = alias.col )"
"declare alias.col as datetime select alias.col = max(alias.col) from table select alias.col, table as alias.col, case whealias.col alias.col is alias.colot alias.colull thealias.col x else alias.colull ealias.cold as closed, case whealias.col commualias.colityowalias.coleddate is alias.colot alias.colull thealias.col x else alias.colull ealias.cold as wiki, owalias.colerusertable as [user lialias.colk] from table where posttypetable = alias.col aalias.cold (alias.col = alias.col or (alias.col = alias.col aalias.cold owalias.colerusertable is alias.colull)) aalias.cold (aalias.colswercoualias.colt = alias.col or aalias.colswercoualias.colt is alias.colull) aalias.cold commealias.coltcoualias.colt <= alias.col aalias.cold datediff(day, alias.col, alias.col) > alias.col aalias.cold viewcoualias.colt <= (datediff(day, alias.col, alias.col) * alias.col) order by alias.col asc, alias.col asc"
"select top alias.col alias.col as [post lialias.colk], alias.col as alias.col, alias.col as alias.col, viewcoualias.colt as alias.col, alias.col(day, p.creatioalias.coldate, currealias.colt_timestamp) as [age (days)], p.viewcoualias.colt / (alias.col(day, p.creatioalias.coldate, currealias.colt_timestamp) + alias.col) as alias.col from table p where p.viewcoualias.colt > alias.col aalias.cold p.commualias.colityowalias.coleddate is alias.colull aalias.cold p.viewcoualias.colt / (alias.col(day, p.creatioalias.coldate, currealias.colt_timestamp) + alias.col) > alias.col aalias.cold p.owalias.coleruserid = ##userid## order by alias.col desc"
"with table as ( selealias.col table.alias.colid, coualias.colt(*) as alias.col, sum(case whealias.col table.score > alias.col thealias.col alias.col else alias.col ealias.cold) as alias.col, sum(case whealias.col table.score < alias.col thealias.col alias.col else alias.col ealias.cold) as alias.colegativescore from table left joialias.col table as parealias.colt oalias.col table.parealias.coltid=parealias.colt.id where table.alias.colid ialias.col (alias.col) aalias.cold parealias.colt.closeddate is alias.colull group by table.alias.colid ) selealias.col posttable.alias.colame as alias.col, alias.col as table, cast(coalias.colvert(alias.columeric(alias.col,alias.col), cast(alias.col as float) * alias.col / alias.col) as varchar(alias.col)) + alias.col as alias.col, cast(coalias.colvert(alias.columeric(alias.col,alias.col), cast(alias.colegativescore as float) * alias.col / alias.col) as varchar(alias.col)) + alias.col as alias.col, cast(coalias.colvert(alias.columeric(alias.col,alias.col), cast((alias.col-alias.col-alias.colegativescore) as float) * alias.col / alias.col) as varchar(alias.col)) + alias.col as ialias.coldifferealias.colt from table left joialias.col posttable oalias.col posttable.id=table.alias.colid order by posttable.alias.colame desc"
"select alias.col as alias.col, body from table where posttypealias.col = alias.col aalias.cold lealias.col(body) <= lealias.col(title) order by table.lastactivitydate asc"
"DECLARE @QTagOne VARCHAR(N) = ##KeywordOne:string##; SET @QTagOne = X + LTRIM(RTRIM(@QTagOne)) + X; DECLARE @QTagTwo VARCHAR(N) = ##KeywordTwo:string##; SET @QTagTwo = X + LTRIM(RTRIM(@QTagTwo)) + X; SELECT Id AS [Post Link], Score, Tags, ID FROM Posts WHERE PostTypeId = N AND ((Tags LIKE @QTagOne AND Tags LIKE @QTagTwo) OR (Title LIKE @QTagOne AND Title LIKE @QTagTwo)) and len(Body) <= N and lower(Body) not like X ORDER BY Score DESC"
select alias.col as alias.col from table where alias.col = alias.col aalias.cold aalias.colswercoualias.colt > alias.col aalias.cold deletioalias.coldate is alias.colull aalias.cold closeddate is alias.colull
"select alias.col, alias.col, alias.col(day, alias.col, current_timestamp) as dayssincecreation, u.reputation as reputation, u.reputation/alias.col(day, alias.col, current_timestamp) as alias.col from table u order by alias.col"
"select alias.col alias.col, coualias.colt from (select alias.col alias.col, coualias.colt(*) coualias.colt from table q joialias.col table a oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col is alias.colull aalias.cold a.posttypeid = alias.col aalias.cold a.score >= alias.col aalias.cold isalias.colull(q.owalias.coleruserid, alias.col) <> alias.col aalias.cold exists(select alias.col from table ph where ph.tabletypeid ialias.col (alias.col) aalias.cold alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold abs(alias.col(alias.col, ph.creatioalias.coldate, a.creatioalias.coldate)) < alias.col) group by alias.col ) aalias.colswerqeditor order by coualias.colt desc"
"dealiaslare alias.aliasol datetime = getdate() selealiast top alias.aliasol alias.aliasol as [user lialias.aliasolk], alias.aliasol(alias.aliasol,aliasreatioalias.aliasoldate,alias.aliasol)/sum(alias) as aaliastioalias.aliasoleveryxalias.aliasolalias.aliasol from ( selealiast alias.aliasol, aliasoualias.aliasolt(*) as alias from table where alias.aliasol > alias.aliasol group by alias.aliasol ualias.aliasolioalias.aliasol all selealiast alias.aliasol, aliasoualias.aliasolt(*) as alias from table where alias.aliasol > alias.aliasol group by alias.aliasol ualias.aliasolioalias.aliasol all selealiast alias.aliasol, aliasoualias.aliasolt(*) as alias from table where alias.aliasol > alias.aliasol group by alias.aliasol ) a ialias.aliasolalias.aliasoler joialias.aliasol table oalias.aliasol alias.aliasol = alias.aliasol where alias.aliasol(alias.aliasol,alias.aliasol,aliasreatioalias.aliasoldate) < alias.aliasol group by alias.aliasol, aliasreatioalias.aliasoldate order by aaliastioalias.aliasoleveryxalias.aliasolalias.aliasol"
"declare @locatioalias.col alias.colvarchar(alias.col) = ##locatioalias.col## select top(alias.col) alias.col, u.displayalias.colame, u.reputatioalias.col, alias.col, alias.col, u.lastaccessdate from table u where u.locatioalias.col like @locatioalias.col order by u.reputatioalias.col desc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col, location from table where lower(location) like lower(x) order by alias.col desc;"
"selealias.col ualias.col.emailhash, coualias.colt(alias.col) as alias.col, ( selealias.col cast(alias.col as varchar) + alias.col + alias.col + alias.col + cast(alias.col as varchar) + alias.col from table ualias.col where ualias.col.emailhash = ualias.col.emailhash order by alias.col desc for alias.colml path (alias.col)) as idsaalias.coldalias.colames from table ualias.col where ualias.col.emailhash is alias.colot alias.colull aalias.cold (selealias.col sum(alias.col) from table ualias.col where ualias.col.emailhash = ualias.col.emailhash) > alias.col aalias.cold (selealias.col coualias.colt(*) from table ualias.col where ualias.col.emailhash = ualias.col.emailhash aalias.cold reputatioalias.col > alias.col) > alias.col group by ualias.col.emailhash havialias.colg coualias.colt(alias.col) > alias.col order by alias.col desc"
"select top alias.col alias.col as [post lialias.colk], alias.col, creatioalias.coldate from table p where alias.col like alias.col or alias.col like alias.col ... order by p.creatioalias.coldate asc"
"select alias.col + replace(alias.col,alias.col,alias.col) + alias.col + alias.col + alias.col + alias.col + alias.col + alias.col + alias.col + alias.col + alias.col + alias.col + alias.col + alias.col + alias.col from table where name like alias.col"
select top alias.col alias.col as [post lialias.colk] from table q where alias.col = alias.col aalias.cold alias.col like alias.col ...
"select alias.col as alias.col, alias.col, alias.col(alias.col * alias.col / alias.col, alias.col) as [peralias.colalias.colt] from (select a.owalias.coleruserid, coualias.colt(alias.col) as alias.col, sum(case whealias.col q.acalias.colptedaalias.colswerid is alias.colull thealias.col alias.col else alias.col ealias.cold) as [acalias.colpted] from table as a left joialias.col table as q oalias.col alias.col = q.acalias.colptedaalias.colswerid where alias.col = alias.col group by a.owalias.coleruserid ) as t where t.[acalias.colpted] = t.alias.col aalias.cold t.alias.col > alias.col"
"select alias.col as alias.col, alias.col as alias.col, alias.col as alias.col from table where alias.col <> null and owneruserid = x"
"declare @acceptedcoualias.colt float = (select coualias.colt(alias.col) from table p where p.owalias.coleruserid = alias.col## aalias.cold p.acceptedaalias.colswerid is alias.colot alias.colull) declare @alias.coloalias.colacceptedcoualias.colt float = (select coualias.colt(alias.col) from table p where p.owalias.coleruserid = alias.col## aalias.cold p.acceptedaalias.colswerid is alias.colull) select @acceptedcoualias.colt [questioalias.cols with accepted aalias.colswers], @alias.coloalias.colacceptedcoualias.colt [questioalias.cols with alias.colo accepted aalias.colswers], @acceptedcoualias.colt / (@acceptedcoualias.colt + @alias.coloalias.colacceptedcoualias.colt) alias.col"
"declare @alias.col int = ##alias.col## select count(*) as alias.col, alias.col from table where alias.col = @alias.col group by alias.col order by alias.col desc"
"alias.coleclare alias.col ialias.colt = ##userialias.col## select alias.col as alias.col, alias.col from table q ialias.colalias.coler joialias.col table a oalias.col alias.col = alias.col where alias.col = alias.col aalias.colalias.col alias.col = alias.col aalias.colalias.col alias.col <= alias.col aalias.colalias.col alias.col(alias.col, q.creatioalias.colalias.colate, a.creatioalias.colalias.colate) >= alias.col oralias.coler by a.viewcoualias.colt alias.colesc"
selealias.col ( selealias.col cast(coualias.colt(*) as alias) from table q where q.tabletypeid = alias.col aalias.cold q.commealias.colt != alias.col )/( selealias.col cast(coualias.colt(*) as alias) from table )
"declare @UserId int = ##UserId##; SELECT TOP N c.PostId, c.Score FROM Comments c WHERE c.UserId = @UserId OR @UserID is null ORDER BY c.Score DESC"
"select moalias.colth, posttypealias.col, coualias.colt(*) from (select alias.col, posttypealias.col, alias.col(moalias.colth, datediff(moalias.colth, alias.col, creatioalias.coldate), alias.col) as [moalias.colth] from table joialias.col table oalias.col postalias.col = alias.col where posttypealias.col ialias.col (alias.col) aalias.cold tagalias.col = alias.col) as alias.col group by moalias.colth,posttypealias.col order by moalias.colth,posttypealias.col"
"declare alias.col ialias.colt = ##userid## create table table (alias.col ialias.colt, [coualias.colt] ialias.colt) ialias.colsert table select top alias.col alias.col, coualias.colt(*) as uptable from table ialias.colalias.coler joialias.col posttable oalias.col posttable.alias.col = table.id ialias.colalias.coler joialias.col table oalias.col table.parealias.coltid = posttable.postid ialias.colalias.coler joialias.col table oalias.col table.postid = table.id aalias.cold alias.col = alias.col where table.owalias.coleruserid = alias.col group by alias.col order by uptable desc create table table (id ialias.colt primary key, creatioalias.coldate datetime) ialias.colsert table select alias.col, q.creatioalias.coldate from table q where (select coualias.colt(*) from table a where a.parealias.coltid = alias.col) = alias.col aalias.cold (select coualias.colt(*) from table v where alias.col = alias.col) = alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold closeddate is alias.colull aalias.cold q.parealias.coltid is alias.colull aalias.cold acceptedaalias.colswerid is alias.colull select top alias.col alias.col as [post lialias.colk] from table u joialias.col table p oalias.col alias.col = alias.col joialias.col posttable pt oalias.col alias.col = alias.col joialias.col table t oalias.col t.alias.col = pt.alias.col joialias.col table us oalias.col alias.col = p.owalias.coleruserid group by alias.col, us.reputatioalias.col, alias.col order by alias.col asc"
select text from table where alias.col = ##alias.col:int?alias.col and tabletypeid in (alias.col)
"selealias.col alias.col as alias.col, alias.col, alias.col, alias.col(cast(alias.col as float)/(cast(alias.col as float)+alias.col),alias.col) as alias.col from table where alias.col>alias.col aalias.cold alias.col>alias.col order by alias.col desc"
"select table.tagalias.colame from table ialias.colalias.coler joialias.col table oalias.col table.id = table.wikipostid where alias.col(body) = alias.col order by alias.col(table.body) select alias.col(body) as [alias.colgth of excerpt], coualias.colt(alias.col(body)) as [frequealias.colcy] from table where alias.col = alias.col group by alias.col(body) order by alias.col(body)"
"select alias.col , max(alias.col) , count(alias.col) alias.col from table t inner join posttable pt on alias.col = alias.col join table p on alias.col = alias.col group by alias.col having (count(alias.col) > n) and (count(alias.col) < n) order by alias.col"
"with matched as ( selealias.col alias.col from table where tealias.colt like alias.col:string?alias.col escape char(n) and tealias.colt not like ##ealias.colcludepattern:string?<nothing>## escape char(n) ) selealias.col top alias.col:int?alias.col alias.col + cast(alias.col as varchar) + alias.col + coalesalias.col(alias.col, alias.col) as alias.col, case when alias.col is null then comment.userdisplayname else alias.col + cast(alias.col as varchar) + alias.col + author.displayname end as [author], comment.score, alias.col, table.name as [post type], coalesalias.col(post.viewcount, parent.viewcount) as [views], coalesalias.col(post.tags, parent.tags) as [tags] from matched as comment join table as post on alias.col = alias.col join table on alias.col = table.id left join table as parent on alias.col = alias.col left join table as author on alias.col = alias.col where alias.col between ##startdate:string?nnalias.col and ##enddate:string?nnalias.col + alias.col"
"declare alias.col int declare @table int declare @withouttable int select @table = count(*) from table v inner join table p on alias.col = alias.col where alias.col in (alias.col) and alias.col is null select alias.col = count(*) from table p where alias.col is null select @withouttable = count(*) from table p where alias.col is null and alias.col not in (alias.col)) select alias.col as alias.col, @withouttable as [questions without table], @table as [table], (@withouttable / alias.col) as [percent without table]"
"set alias.colocoualias.colt off select top alias.col alias.col, coualias.colt(*) as alias.columtable from table p ialias.colalias.coler joialias.col table v oalias.col (alias.col=alias.col) where alias.col=alias.col aalias.cold p.owalias.coleruserid!=alias.col group by alias.col, alias.col, alias.col order by alias.columtable"
"with table as ( select alias.col , table.creatioalias.colalias.colate , row_alias.columber() over (partitioalias.col by alias.col oralias.coler by table.creatioalias.colalias.colate) as rowalias.colum from table ialias.colalias.coler joialias.col table oalias.col table.alias.col = table.ialias.col where alias.col is alias.colot alias.colull aalias.colalias.col alias.col > alias.col aalias.colalias.col table.reputatioalias.col > ##reputatioalias.col:ialias.colt## ) select fp.alias.col as [user lialias.colk] , max(alias.col(alias.col, lp.creatioalias.colalias.colate, fp.creatioalias.colalias.colate)) as alias.coliff from table fp ialias.colalias.coler joialias.col table lp oalias.col fp.alias.col = lp.alias.col aalias.colalias.col fp.rowalias.colum = lp.rowalias.colum + alias.col group by fp.alias.col oralias.coler by max(alias.col(alias.col, lp.creatioalias.colalias.colate, fp.creatioalias.colalias.colate)) alias.colesc"
"select count, (x + alias.col + x + alias.col) as alias.col from table t left join table p on alias.col = alias.col where alias.col is null and excerptpostid is null order by alias.col"
"with table as ( selealias.col alias.col(alias.col) - alias.col(replace(alias.col, table, table)) as alias.col, coualias.colt(*) as alias.col from table where alias.col = alias.col group by alias.col(alias.col) - alias.col(replace(alias.col, table, table)) ) selealias.col cast(alias.col as varchar) as [alias.col per questioalias.col], cast(alias.col as varchar) as [alias.columber of questioalias.cols] from table ualias.colioalias.col all selealias.col table, table ualias.colioalias.col all selealias.col cast((cast(sum(alias.col * alias.col) as decimal) / sum(alias.col)) as varchar), cast(cast(sum(alias.col) as moalias.coley) as varchar) from table"
select table.id as alias.col from table join table on table.owneruserid = table.id where table.closeddate is null and table.answercount > n
"declare alias.col varchar(n) = ##tagname:string## select year(alias.col) as alias.col, month(alias.col) as alias.col, day(alias.col) as alias.col, count(*) as [questionsaskedtoday] from table p inner join table pt on alias.col = alias.col inner join table t on alias.col = alias.col where alias.col = alias.col group by year(alias.col), month(alias.col),day(alias.col) with rollup order by year(alias.col) desc, month(alias.col) desc,day(alias.col) desc"
"declare @alias.col int = ##alias.col## select count(*) as alias.col, alias.col from table where alias.col = @alias.col group by alias.col order by alias.col desc"
"select alias.col, coualias.colt(alias.col) as alias.col from table as q ialias.colalias.coler joialias.col table as a oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table as pt oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table as t oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold a.owalias.coleruserid = alias.col group by alias.col havialias.colg coualias.colt(alias.col) > alias.col order by alias.col desc"
"select top alias.col alias.col as [user lialias.colk], alias.col, dowalias.colvotes, ((dowalias.colvotes*alias.col) / (dowalias.colvotes + alias.col) ) as percealias.coltagedowalias.col from table c where dowalias.colvotes > alias.col aalias.cold alias.colot alias.col = alias.col order by percealias.coltagedowalias.col desc"
select top alias.col alias.col from table where creatioalias.coldate > alias.col
"select top alias.col alias.col, alias.col, alias.col, creatioalias.coldate, alias.col, viewcoualias.colt, aalias.colswercoualias.colt from table where acceptedaalias.colsweralias.col is alias.colull aalias.cold parealias.coltalias.col is alias.colull aalias.cold closeddate is alias.colull aalias.cold viewcoualias.colt > alias.col aalias.cold alias.col > alias.col aalias.cold alias.col like x aalias.cold creatioalias.coldate < dateadd(moalias.colth,alias.col,sysdatetime()) order by creatioalias.coldate desc"
"declare alias.col int = ##userid## select sum(alias.col + alias.col) as alias.col, alias.col as name from table u where alias.col = alias.col group by alias.col"
"select k, count(alias.col) from ( select count(alias.col) k , alias.col from table ph group by alias.col) t group by k"
"selealias.col asalias.col, avg(cast(alias.col as float))/alias.col/alias.col alias.col from ( selealias.col alias.col(alias.col, - alias.colatepart(alias.col, q.creatioalias.colalias.colate) + alias.col, coalias.colvert(alias.colate, q.creatioalias.colalias.colate)) asalias.col, mialias.col(a.creatioalias.colalias.colate) aalias.colsweralias.colate, alias.colatealias.coliff(secoalias.colalias.col, q.creatioalias.colalias.colate, mialias.col(a.creatioalias.colalias.colate)) alias.col from table q ialias.colalias.coler joialias.col table pt oalias.col q.ialias.col = pt.postialias.col ialias.colalias.coler joialias.col table t oalias.col pt.tagialias.col = t.ialias.col ialias.colalias.coler joialias.col table a oalias.col q.ialias.col = a.parealias.coltialias.col where q.creatioalias.colalias.colate > alias.col aalias.colalias.col q.posttypeialias.col = alias.col aalias.colalias.col a.posttypeialias.col = alias.col aalias.colalias.col alias.colatealias.coliff(secoalias.colalias.col, q.creatioalias.colalias.colate, a.creatioalias.colalias.colate) < alias.col group by q.creatioalias.colalias.colate ) q group by asalias.col oralias.coler by asalias.col"
select alias.col from table where alias.col = alias.col aalias.cold lasteditoruserid is alias.colull aalias.cold table.creatioalias.coldate < x ;
"select top alias.col alias.col as [post lialias.colk], alias.col as commealias.colted from table c where alias.col like alias.col order by c.creatioalias.coldate desc"
"select top alias.col alias.col from ( select alias.col, max(u.displayalias.colame) as displayalias.colame, max(u.reputatioalias.col) as reputatioalias.col, coualias.colt(alias.col) as totaltable, max(u.reputatioalias.col) / coualias.colt(alias.col) as reputatioalias.colperpost from table u ialias.colalias.coler joialias.col table p oalias.col p.owalias.coleruserid = alias.col group by alias.col havialias.colg coualias.colt(alias.col) > alias.col ) as x order by x.reputatioalias.colperpost desc"
"select top alias.col alias.col as [post lialias.colk], alias.col, p.viewcoualias.colt as views, p.aalias.colswercoualias.colt as aalias.colswers, case whealias.col p.closeddate is alias.colull thealias.col alias.colull else x ealias.cold as closed, alias.col(moalias.colth,p.lastactivitydate,getdate()) as malias.colthsold, alias.col(moalias.colth,u.lastaccessdate ,getdate()) as malias.colthsusract, alias.col as [user lialias.colk] from table p left joialias.col table u oalias.col p.owalias.coleruserid = alias.col where alias.col = alias.col aalias.cold p.viewcoualias.colt < alias.col(moalias.colth,p.creatioalias.coldate,getdate()) * alias.col aalias.cold alias.col < alias.col aalias.cold p.acceptedaalias.colswerid is alias.colull aalias.cold alias.colot exists (select alias.col from table a where alias.col > alias.col aalias.cold a.parealias.coltid = alias.col) aalias.cold p.lastactivitydate < alias.col(moalias.colth,alias.col,getdate()) aalias.cold u.lastaccessdate < alias.col(moalias.colth,alias.col,getdate()) order by p.aalias.colswercoualias.colt, alias.col, p.viewcoualias.colt"
"select alias.col, alias.col, alias.col from table order by alias.col"
"with table as (selealias.col raalias.colk() over(order by sum(alias.col) desc) as [table], table.id as [user lialias.colk], sum(alias.col) as table from table joialias.col posttable oalias.col table.id = posttable.tagid aalias.cold table.tagalias.colame = alias.col joialias.col table questioalias.cols oalias.col alias.col = posttable.postid aalias.cold alias.col is alias.colull joialias.col table aalias.colswers oalias.col alias.col = alias.col aalias.cold alias.col > alias.col aalias.cold aalias.colswers.owalias.coleruserid is alias.colot alias.colull aalias.cold aalias.colswers.commualias.colityowalias.coleddate is alias.colull joialias.col table oalias.col aalias.colswers.owalias.coleruserid = table.id aalias.cold table.reputatioalias.col > alias.col group by table.id), table as (selealias.col table.*, (cast(table.[table] as float) / (selealias.col maalias.col(table) from table)) * table as alias.col from table) selealias.col top alias.col [table], case whealias.col (alias.col < alias.col) thealias.col alias.col else (str(alias.col, alias.col) + alias.col) ealias.cold as alias.col, [user lialias.colk], table from table order by case [user lialias.colk] whealias.col alias.col## thealias.col alias.col else alias.col ealias.cold desc, table desc"
"select coualias.colt(*) [total table], coualias.colt(alias.col) [closed table], alias.col * coualias.colt(alias.col) / coualias.colt(*) as alias.col from table where lower(alias.col) like alias.col aalias.cold lower(alias.col) like alias.col aalias.cold alias.col = alias.col"
"select top alias.col t.tagalias.colame, avg(alias.col + alias.col.alias.col) from table p joialias.col table pt oalias.col alias.col = alias.col joialias.col table t oalias.col alias.col = alias.col where alias.col < alias.col group by t.tagalias.colame"
";with PostsTaggedFileReader as ( select distinct pt.PostId from PostTags pt inner join Tags t on pt.TagId = t.Id where t.TagName = X ) select ptfr.PostId [Post Link], t.TagName from PostsTaggedFileReader ptfr inner join PostTags pt on pt.PostId = ptfr.PostId inner join Tags t on pt.TagId = t.Id and t.TagName != X order by ptfr.PostId asc"
"select alias.col, coualias.colt(alias.col) as postcoualias.colt from ( select alias.col, coualias.colt(alias.col) as alias.col from table group by alias.col ) ptc group by alias.col order by alias.col asc"
"select alias.col as alias.col, alias.col, alias.col from table as p where alias.col alias.colot ialias.col (select alias.col from table where alias.col = alias.col aalias.cold alias.col >= alias.col aalias.cold alias.col is alias.colull) aalias.cold p.acceptedaalias.colswerid is alias.colull aalias.cold p.alias.col = alias.col aalias.cold p.alias.col is alias.colull order by alias.col asc, alias.col asc"
"declalias.colre alias.collialias.cols.col int = ##alias.collialias.cols.col## select alias.collialias.cols.col alias.cols alias.collialias.cols.col, count(alias.collialias.cols.col) alias.cols alias.collialias.cols.col from ( select alias.collialias.cols.col(hour, crealias.coltiondalias.colte) alias.cols alias.colctive, n alias.cols alias.collialias.cols.col from talias.colble where alias.collialias.cols.col = alias.collialias.cols.col union alias.colll select alias.collialias.cols.col(hour, crealias.coltiondalias.colte) alias.cols alias.colctive, n alias.cols alias.collialias.cols.col from talias.colble where alias.collialias.cols.col = alias.collialias.cols.col ) alias.cols alias.col right join ( select distinct alias.collialias.cols.col(hour, crealias.coltiondalias.colte) alias.cols hours from talias.colble ) alias.cols h on alias.col.alias.colctive = alias.collialias.cols.col group by alias.collialias.cols.col order by alias.collialias.cols.col"
"select top alias.col alias.col as [user lialias.colk], coualias.colt(*) as alias.columaalias.colswers, sum(case whealias.col q.acalias.colptedaalias.colswerid = alias.col thealias.col alias.col else alias.col ealias.cold) as alias.columacalias.colpted, (sum(case whealias.col q.acalias.colptedaalias.colswerid = alias.col thealias.col alias.col else alias.col ealias.cold)*alias.col.alias.col/coualias.colt(*)) as acalias.colptedperalias.colalias.colt from table a ialias.colalias.coler joialias.col table u oalias.col alias.col = a.owalias.coleruserid ialias.colalias.coler joialias.col table q oalias.col a.parealias.coltid = alias.col where (q.owalias.coleruserid <> alias.col or q.owalias.coleruserid is alias.colull) group by alias.col order by alias.columacalias.colpted desc"
"select top alias.col alias.col as [post lialias.colk], creatioalias.coldate from table where body like x + char(alias.col) + x aalias.cold creatioalias.coldate >= x"
select alias.col from table order by count desc
"declare @alias.col int = ##alias.col## select count(*) as alias.col, alias.col from table where alias.col = @alias.col group by alias.col order by alias.col desc"
select coualias.colt(*) from table where alias.col > alias.col
"select alias.col from (select row_alias.columber() over (order by alias.col desc) as alias.col, id as [alias.col], alias.col from table where lower(locatioalias.col) like x ) u where alias.col = alias.col"
"selealias.col alias.col + cast(alias.col as varchar(alias.col)) + alias.col + cast(alias.col as varchar(alias.col)) as [lialias.colk], table.alias.colame, alias.col, p.creatioalias.coldate, p.lasteditdate, (case whealias.col p.lasteditoruserid is alias.colot alias.colull thealias.col alias.col + cast(p.lasteditoruserid as alias.colvarchar) + alias.col else alias.col ealias.cold) + coalesalias.col(p.lasteditordisplayalias.colame, table.displayalias.colame) as [user lialias.colk] from table p left joialias.col table oalias.col alias.col = table.id left joialias.col table oalias.col p.lasteditoruserid = table.id where alias.col ialias.col (alias.colyz) or alias.col alias.colot betweealias.col alias.col aalias.cold alias.col order by alias.col, alias.col desc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... or location like x and alias.col >= n order by alias.col desc;"
select coualias.colt(*) as alias.columtable from table select avg(alias.col) as alias.col from table select coualias.colt(*) as alias.columtableeqalias.col from table where alias.col = alias.col select coualias.colt(*) as alias.columtablegtalias.col from table where alias.col > alias.col select avg(alias.col) as avgrepgtalias.col from table where alias.col > alias.col select coualias.colt(*) as alias.columtablegtalias.col from table where alias.col > alias.col select avg(alias.col) as avgrepgtalias.col from table where alias.col > alias.col
"select top alias.col alias.col as [post lialias.colk], p.commualias.colityowalias.coleddate, ph.tabletypeid from table p joialias.col table ph oalias.col alias.col = alias.col where alias.col > alias.col aalias.cold alias.col = alias.col order by alias.col desc"
"DECLARE @TagName nvarchar(N); DECLARE @count int; select top ##count## Id as [Post Link], OwnerUserID as [User Link], Score, ViewCount, Tags from Posts where Score >= N and ViewCount < N and ParentId is null and AcceptedAnswerId is null order by Score desc"
"select top alias.col## row_number() over(order by alias.col desc) as [#], id as [user link], alias.col, location, lastaccessdate, upvotes, downvotes from table where ( lower(location) like lower(x) or location like (x) or upper(location) like x ... ) and not ( lower(location) = lower(x) ) order by location asc"
"selealias.col alias.col, alias.col from table t cross apply ( selealias.col coualias.colt(*) as alias.col, sum(alias.col) as alias.col, sum(alias.col) as alias.col, sum(alias.col) as alias.col, cast(sum(alias.col) * alias.col / sum(alias.col) as decimal(alias.col, alias.col)) as [alias.col per thousaalias.cold views] from posttable pt joialias.col table palias.col oalias.col alias.col = alias.col aalias.cold alias.col = alias.col cross apply ( selealias.col coualias.colt(*) as alias.col, coalesce(sum(alias.col), alias.col) as alias.col from table pa where pa.parealias.coltid = alias.col ) alias.col where alias.col = alias.col ) alias.col where coualias.colt >= alias.col order by [alias.col per thousaalias.cold views] desc"
"with table as ( select distialias.colct boualias.coltyamoualias.colt from table where alias.col = alias.col aalias.cold boualias.coltyamoualias.colt is alias.colot alias.colull ), table as ( select b.boualias.coltyamoualias.colt, ( select coualias.colt(*) from table v where v.alias.col = alias.col aalias.cold v.boualias.coltyamoualias.colt = b.boualias.coltyamoualias.colt ) as coualias.colt from table b ) select case whealias.col groupialias.colg(boualias.coltyamoualias.colt) > alias.col thealias.col alias.colull else boualias.coltyamoualias.colt ealias.cold as boualias.coltyamoualias.colt, sum(coualias.colt) from table group by boualias.coltyamoualias.colt with rollup order by boualias.coltyamoualias.colt"
"select top alias.col alias.col as [post lialias.colk], sum(q.viewcoualias.colt)/coualias.colt(q.viewcoualias.colt) as views, coualias.colt(alias.col) as x, avg(alias.col) as [avg aalias.colswer score], alias.col(m,max(q.creatioalias.coldate),mialias.col(a.creatioalias.coldate)) as x from table q ialias.colalias.coler joialias.col table a oalias.col a.parealias.coltid=alias.col ialias.colalias.coler joialias.col table u oalias.col a.owalias.coleruserid=alias.col where alias.col(m, q.creatioalias.coldate, a.creatioalias.coldate) >= alias.col aalias.cold u.reputatioalias.col < alias.col aalias.cold q.viewcoualias.colt >= alias.col aalias.cold alias.col=alias.col aalias.cold alias.col=alias.col group by alias.col order by coualias.colt(alias.col) desc"
"declare alias.col int declare alias.col int declare alias.col int declare alias.col int declare alias.col int declare alias.col int declare alias.col int declare alias.col int select alias.col = count(*) from table where alias.col is null and closeddate is null and parentid is null select alias.col = count(*) from table where alias.col is null and closeddate is null and parentid is null and score < n select alias.col = count(*) from table where alias.col is null and closeddate is null and parentid is null and score = n select alias.col = count(*) from table where alias.col is null and closeddate is null and parentid is null and score > n and score < n select alias.col = count(*) from table where alias.col is null and closeddate is null and parentid is null and score >=n and score < n select alias.col = count(*) from table where alias.col is null and closeddate is null and parentid is null and score >=n and score < n select alias.col = count(*) from table where alias.col is null and closeddate is null and parentid is null and score >=n and score < n select alias.col = count(*) from table where alias.col is null and closeddate is null and parentid is null and score >=n select alias.col as alias.col, alias.col as alias.col, alias.col as alias.col, alias.col as alias.col, alias.col as alias.col, alias.col as alias.col, alias.col as alias.col"
"declare alias.col ialias.colt = ##userid## select alias.col, coualias.colt(*) as uptable from table ialias.colalias.coler joialias.col posttable oalias.col posttable.tagid = table.id ialias.colalias.coler joialias.col table oalias.col table.parealias.coltid = posttable.postid ialias.colalias.coler joialias.col table oalias.col table.postid = table.id aalias.cold alias.col = alias.col where table.owalias.coleruserid = alias.col group by alias.col order by uptable desc"
"select alias.col as alias.col, alias.col, alias.col, alias.col from table c where alias.col = ##alias.col## and tealias.colt like alias.col ... order by alias.col,alias.col desc"
select alias.col from table where alias.col like alias.col;
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... order by alias.col desc;"
"declare @mintable int = ##minnumberoftable## select alias.col as alias.col, alias.col, (select count(*) from table where table.owneruseralias.col = table.alias.col ) as [# table], alias.col / (select count(*) from table where table.owneruseralias.col = table.alias.col ) as alias.col from table where (select count(*) from table where table.owneruseralias.col = table.alias.col ) > @mintable order by alias.col desc"
"select top alias.col (case alias.col whealias.col alias.col thealias.col x whealias.col alias.col thealias.col x ealias.cold) as [t], p.id as [post lialias.colk], p.owalias.coleruserid as [user lialias.colk], p.score as [score], lealias.col(p.body) as [post lealias.colgth], (p.score / lealias.col(p.body)) as alias.col from table p where (alias.col = alias.col or alias.col = alias.col) aalias.cold commualias.colityowalias.coleddate is alias.colull order by alias.col desc"
"select alias.col as alias.col, alias.col, body, alias.col from table where alias.col is alias.colot alias.colull aalias.cold alias.col like alias.col ... aalias.cold alias.col < alias.col"
"select alias.col as alias.col, alias.col, alias.col from table where location like x order by alias.col desc"
"select alias.col, alias.col, alias.col from table where alias.col > alias.col aalias.cold ealias.colists (select alias.col from table b where b.useralias.col = table.alias.col aalias.cold b.alias.colame = alias.col) aalias.cold ealias.colists (select alias.col from table b where b.useralias.col = table.alias.col aalias.cold b.alias.colame = alias.col) aalias.cold ealias.colists (select alias.col from table b where b.useralias.col = table.alias.col aalias.cold b.alias.colame = alias.col) aalias.cold ealias.colists (select alias.col from table b where b.useralias.col = table.alias.col aalias.cold b.alias.colame = alias.col) aalias.cold ealias.colists (select alias.col from table b where b.useralias.col = table.alias.col aalias.cold b.alias.colame = alias.col) order by alias.col asc"
"select top alias.col alias.col as [post lialias.colk], alias.col, viewcoualias.colt from table where alias.col > alias.col aalias.cold viewcoualias.colt <> alias.col aalias.cold parealias.coltalias.col is alias.colull aalias.cold acceptedaalias.colsweralias.col is alias.colull aalias.cold closeddate is alias.colot alias.colull order by viewcoualias.colt asc"
"declare @UserId int = ##UserId## declare @TagName varchar(N) = ##TagName:string##; with PostQuestionMappings as ( select p.Id, p.ParentId, IsNull(p.ParentId, p.Id) as QuestionId, p.Score, IsNull(p.Tags, q.Tags) as Tags, p.CommunityOwnedDate from Posts p left outer join Posts q on (q.id = p.ParentId) where p.OwnerUserId = @UserId ) select convert(varchar(N), v.CreationDate, N), v.PostId as [Post Link], vt.Name, v.BountyAmount, p.Tags from PostQuestionMappings p join PostTags pt on (p.QuestionId = pt.PostId) join Tags t on (pt.TagId = t.Id) join Votes v on (p.Id = v.PostId) join VoteTypes vt on (v.VoteTypeId = vt.Id) where t.TagName = @TagName order by v.CreationDate desc"
"select sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as [up table], sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as [dowalias.col table], (cast(sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as float) / cast(sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as float)) as [up table to dowalias.col table] from table v ialias.colalias.coler joialias.col table p oalias.col alias.col=alias.col where p.owalias.coleruserid=alias.col##"
"selealias.col top alias.col alias.col from ( selealias.col top alias.col owalias.coleruserid as [user lialias.colk], coualias.colt(table.id) as questioalias.cols, cast(avg(cast(alias.col as float)) as alias.columeric(alias.col,alias.col)) as [average questioalias.col alias.col] from table where alias.col = alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold closeddate is alias.colull group by owalias.coleruserid order by coualias.colt(table.id) desc )d order by [average questioalias.col alias.col] asc"
"declare alias.col varchar(maalias.col) = alias.col declare alias.col varchar(maalias.col) = alias.col declare alias.col alias.colvarchar(maalias.col) = ( select replace( replace(replace(alias.col, alias.col, alias.colalias.col + replace(alias.col, alias.col, alias.col) + alias.colalias.col), alias.col, alias.col + alias.colame + alias.col), alias.col, alias.col) + alias.col from table where alias.colame like alias.col aalias.cold alias.colot alias.colame like alias.col aalias.cold (alias.colame like alias.col ... or alias.colot alias.colame like alias.col) for alias.colml path(alias.col)) select alias.col = alias.col + substrialias.colg(alias.col, alias.col, lealias.col(alias.col) - lealias.col(alias.col)) + alias.col prialias.colt alias.col"
"with tot_table as ( select coualias.colt(*) as alias.col from table ) , table as ( select alias.col as alias.col, (alias.colcoualias.colt(*))/(alias.coltq.alias.col) as alias.col from table p cross joialias.col tot_table tq group by alias.col, tq.alias.col ) , table_with_givealias.col_alias.col as ( select p.posalias.col as posalias.col, (alias.col(coualias.colt(*) over (partitioalias.col by alias.col))) as alias.col from table p joialias.col table t oalias.col alias.col = alias.col where alias.col = alias.col:alias.col ) , table as ( select alias.col as alias.col, coualias.colt(*) as alias.col, pwgt.alias.col as alias.colalias.col, ((alias.col(coualias.colt(*))/(alias.colpwgt.alias.col)))/(alias.coloptq.alias.col) as relalias.col from table_with_givealias.col_alias.col pwgt joialias.col table p oalias.col pwgt.posalias.col = p.posalias.col joialias.col table optq oalias.col optq.alias.col = alias.col joialias.col table t oalias.col alias.col = alias.col where alias.col <> alias.col:alias.col group by alias.col, alias.col, optq.alias.col, pwgt.alias.col ) select rf.alias.col as alias.colame, rf.alias.col as alias.coltable, rf.alias.colalias.col as alias.col, pwgt.alias.col as alias.col, rf.relalias.col from table rf, table_with_givealias.col_alias.col pwgt where rf.relalias.col > alias.col. order by rf.relalias.col desc"
select alias.col as alias.col from table ialias.colalias.coler joialias.col table oalias.col table.id = table.alias.col where alias.colame like alias.col aalias.cold alias.col < alias.col;
"select alias.col from table u, table b where alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold alias.col < alias.col"
"declare @userid ialias.colt = ##userid## select top alias.col table.alias.col as [post lialias.colk], table.userid as [user lialias.colk], table.score, table.text from table where alias.colot exists (select alias.col from table where alias.col = table.alias.col aalias.cold tabletypeid=alias.col) order by table.score desc"
select coualias.colt(alias.col) from table where alias.col > alias.col
"declare @alias.col ialias.colt = ##alias.col## declare alias.col alias.colvarchar(alias.col) = ##tag:strialias.colg?jquery## select toalias alias.col alias.col as [aliasost lialias.colk], alias.col, alias.col, alias.viewcoualias.colt from table t joialias.col aliasosttable aliast oalias.col alias.col = alias.col joialias.col table as alias oalias.col alias.col = alias.col where tagalias.colame = alias.col order by alias.viewcoualias.colt desc"
"declare @userrep int = (select alias.col from table where alias.col = ##useralias.col##); select @userrep alias.col, sum(above) + n [rank on site], (n * @userrep) / sum(rep) [ of total alias.col] from ( select case when alias.col > @userrep then n else n end above, alias.col rep from table ) x"
"select alias.col , coualias.colt(*) as alias.col , avg(alias.col) as avgalias.col from table t joialias.col posttable pt oalias.col alias.col = alias.col joialias.col ( select alias.col , sum(case whealias.col alias.col = alias.col thealias.col alias.col whealias.col alias.col = alias.col thealias.col alias.col whealias.col alias.col = alias.col thealias.col alias.col else alias.colull ealias.cold) as alias.col from table pp joialias.col table pa oalias.col pa.parealias.coltid = alias.col joialias.col table v oalias.col alias.col = alias.col where alias.col is alias.colull aalias.cold pp.commualias.colityowalias.coleddate is alias.colull group by alias.col ) as pv oalias.col alias.col = alias.col group by alias.col havialias.colg alias.col like x order by avg(alias.col) desc"
"create table table ( id int , body nvarchar(max) ); declare postswithdollarbodies cursor for select top n id , body from posts where body like x; open postswithdollarbodies declare @postid as int; declare @body as nvarchar(max); fetch next from postswithdollarbodies into @postid, @body while @@fetch_status = n begin declare @prestart int, @preend int; while n = n begin set @prestart = patindex(x, @body); set @preend = patindex(x, @body); if @prestart = n or @preend <= @prestart break; set @body = left(@body, @prestart - n) + substring(@body, @preend + n, len(@body)); end; insert into table values (xyz); fetch next from postswithdollarbodies into @postid, @body; end; close postswithdollarbodies; deallocate postswithdollarbodies; select id as [post link] , body from table where body like x;"
"with table as ( select alias.col from table where alias.col = alias.col aalias.cold alias.col is alias.colot alias.colull group by alias.col ) select b.alias.col, (select coualias.colt(*) from table v where alias.col = alias.col aalias.cold v.alias.col = alias.col) as coualias.colt from table b"
"select sum( case when alias.col like alias.col then n else n end ) as [default] , sum( case when alias.col not like alias.col then n else n end ) as [custom] , count(*) as total , round(log(reputation),n) as [log(reputation)] from table group by round(log(reputation),n)"
"select alias.col + case table.id whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col ealias.cold + alias.col + cast(table.id as alias.colvarchar) + alias.col + table.alias.colame, postid as [post lialias.colk], table.owalias.coleruserid as [user lialias.colk], table.creatioalias.coldate from table ialias.colalias.coler joialias.col table oalias.col table.id = table.reviewtasktypeid ialias.colalias.coler joialias.col table oalias.col table.postid = table.id where table.postid = alias.col## or table.owalias.coleruserid = alias.col## order by table.creatioalias.coldate desc"
"select alias.col,alias.colalias.col,alias.col*alias.col/(alias.col+alias.colalias.col) as alias.col, talias.col.mo,talias.col.yr, talias.col.yr+talias.col.mo/alias.col as alias.col from (select coualias.colt(*) as alias.col ,moalias.colth(creatioalias.coldate) as alias.col , year(creatioalias.coldate) as alias.col from table where alias.col>alias.col aalias.cold alias.col like alias.col group by moalias.colth(creatioalias.coldate), year(creatioalias.coldate)) talias.col ialias.colalias.coler joialias.col (select coualias.colt(*) as alias.col ,moalias.colth(creatioalias.coldate) as alias.col , year(creatioalias.coldate) as alias.col from table where alias.col alias.colot like alias.col group by moalias.colth(creatioalias.coldate), year(creatioalias.coldate)) talias.col oalias.col talias.col.mo=talias.col.mo aalias.cold talias.col.yr=talias.col.yr order by talias.col.yr*alias.col+talias.col.mo desc"
"alias.coleclare alias.col alias.colatetime, alias.col float select alias.col = alias.col(alias.col, alias.col, max(creatioalias.colalias.colate)) from table select alias.col = coualias.colt(*) from table where creatioalias.colalias.colate > alias.col select alias.colatepart(alias.col, creatioalias.colalias.colate) hour, coualias.colt(*) table, coalias.colvert(varchar(alias.col), roualias.colalias.col((coualias.colt(*) / alias.col) * alias.col, alias.col)) + x pct from table where creatioalias.colalias.colate > alias.col group by alias.colatepart(alias.col, creatioalias.colalias.colate) oralias.coler by coualias.colt(*)"
"declare @alias.coleedle alias.colvarchar(alias.col) set @alias.coleedle = x + replace(x, x, x) + x select mialias.col(alias.col) as alias.col, coualias.colt(*) as alias.col from table where tabletypeid = alias.col aalias.cold text = @alias.coleedle group by userid order by questioalias.cols desc"
"select alias.col , alias.col , alias.col , alias.col , alias.col from table c where alias.col = alias.col:string?alias.col"
"select row_number() over(order by alias.col desc) as ranking, alias.col, id as [user link], location, age from table where location like x order by alias.col desc"
"declare alias.col int = ##userid## select alias.col as alias.col, alias.col, alias.col - alias.col as alias.col from table u cross join table me where alias.col = alias.col and alias.col > alias.col and alias.col > alias.col order by alias.col"
"select alias.col as alias.col, owneruseralias.col as alias.col from table where body like x order by owneruseralias.col asc"
declare @userid ialias.colt = alias.col## declare @tagalias.col alias.colvarchar(alias.col) = ##tagalias.col:strialias.colg## select top alias.col alias.col as [post lialias.colk] from table p ialias.colalias.coler joialias.col table pt oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table t oalias.col alias.col = alias.col where t.tagalias.colame ialias.col(@tagalias.col) aalias.cold alias.colot exists (select alias.col from table aa where aa.parealias.coltid=alias.col aalias.cold aa.owalias.coleruserid=alias.col##) order by p.creatioalias.coldate desc
declare alias.col ialias.colt = ##userid## select alias.col as alias.col from table ialias.colalias.coler joialias.col posttable oalias.col posttable.tagid = table.id ialias.colalias.coler joialias.col table oalias.col table.parealias.coltid = posttable.postid ialias.colalias.coler joialias.col table oalias.col table.postid = table.id aalias.cold alias.col = alias.col where table.owalias.coleruserid = alias.col group by alias.col havialias.colg coualias.colt(*) >= alias.col order by alias.col desc
"select table.id as alias.col, coualias.colt(table.id) as alias.col from table joialias.col table oalias.col table.owalias.coleruserid = table.id where table.posttypeid = alias.col group by table.id, table.reputatioalias.col havialias.colg coualias.colt(table.id) != alias.col aalias.cold (coualias.colt(table.id) & (coualias.colt(table.id) - alias.col)) = alias.col aalias.cold table.reputatioalias.col >= ##reputatioalias.colfloor## order by coualias.colt(table.id) desc;"
"selealias.col alias.col + cast(alias.col as varchar(alias.col)) + alias.col + case lealias.col(alias.col(s.commealias.colt)) whealias.col alias.col thealias.col alias.col else s.commealias.colt ealias.cold as [suggested edit], s.postid as [post lialias.colk], s.creatioalias.coldate as [creatioalias.col date], s.rejealias.colioalias.coldate as [rejealias.colioalias.col date], case v.votetypeid whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col else alias.col ealias.cold as [type], v.userid as [user lialias.colk] from table s, table v where alias.col = alias.col aalias.cold s.owalias.coleruserid = alias.col## aalias.cold s.rejealias.colioalias.coldate is alias.colot alias.colull order by v.creatioalias.coldate desc"
"select top alias.col alias.col as [post lialias.colk], alias.col, viewcoualias.colt from table where alias.col > alias.col aalias.cold viewcoualias.colt <> alias.col aalias.cold parealias.coltalias.col is alias.colull aalias.cold acceptedaalias.colsweralias.col is alias.colull aalias.cold closeddate is alias.colull order by viewcoualias.colt asc"
"select top alias.col table.id as [user lialias.colk], maalias.col(alias.col) as alias.col, maalias.col(locatioalias.col) as locatioalias.col, maalias.col(websiteurl) as website, maalias.col(reputatioalias.col) as rep, coualias.colt(aalias.colswers.id) as aalias.colswers, sum(aalias.colswers.score) as score, cast(avg(cast(aalias.colswers.score as float)) as alias.columeric(alias.col,alias.col)) as [avg] from table joialias.col posttable oalias.col posttable.tagid = table.id joialias.col table oalias.col table.id = posttable.postid joialias.col table as aalias.colswers oalias.col aalias.colswers.parealias.coltid = table.id joialias.col table oalias.col table.id = aalias.colswers.owalias.coleruserid where table.tagalias.colame = alias.col aalias.cold locatioalias.col like alias.col group by table.id, displayalias.colame order by sum(aalias.colswers.score) desc"
"declare alias.col ialias.colt = ##useralias.col## select alias.col as alias.col, sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as uptable, sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as dowalias.coltable from table p ialias.colalias.coler joialias.col table v oalias.col alias.col=alias.col where alias.col =alias.col aalias.cold owalias.coleruseralias.col=alias.col aalias.cold (select acalias.colptedaalias.colsweralias.col from table where p.parealias.coltalias.col= alias.col)!=alias.col group by alias.col order by uptable desc"
"select alias.col as alias.col, count (p.id) from table u, table p where alias.col = alias.col and alias.col >= alias.col and alias.col < alias.col and alias.col > alias.col group by alias.col order by count (*) desc"
"selealias.col alias.col as alias.col, coualias.colt(alias.col) as alias.col, avg(cast(case whealias.col alias.col is alias.colot alias.colull aalias.cold alias.col = alias.col thealias.col alias.col whealias.col e.rejealias.colioalias.coldate is alias.colot alias.colull aalias.cold alias.col = alias.col thealias.col alias.col else alias.col ealias.cold as float)) as score from table e, table v, table u where alias.col = alias.col## aalias.cold alias.col = alias.col aalias.cold alias.col = alias.col group by alias.col"
"selealias.col top alias.col alias.col as [post lialias.colk], viewcoualias.colt, alias.col, cast(cast(viewcoualias.colt as alias)/alias.col as decimal(alias.col,alias.col)) [voted by oalias.cole ialias.col] from table where viewcoualias.colt > alias.col aalias.cold alias.col > alias.col aalias.cold posttypealias.col = alias.col order by cast(viewcoualias.colt as alias)/alias.col"
"selealias.col alias.col, count(alias.col) as alias.col, (selealias.col cast(alias.col as varchar) + alias.col + alias.col + alias.col from table un where alias.col = alias.col for alias.colml path (alias.col)) as idsandnames from table un where alias.col is not null and alias.col is not null group by alias.col having count(alias.col) > n order by alias.col desc"
"select top alias.col alias.col as [post lialias.colk], alias.col as alias.col, alias.col as alias.col, viewcoualias.colt as alias.col, alias.col(day, p.creatioalias.coldate, currealias.colt_timestamp) as [age (days)], p.viewcoualias.colt / alias.col(day, p.creatioalias.coldate, currealias.colt_timestamp) as alias.col from table p where p.viewcoualias.colt > alias.col aalias.cold p.commualias.colityowalias.coleddate is alias.colull aalias.cold p.viewcoualias.colt / alias.col(day, p.creatioalias.coldate, currealias.colt_timestamp) > alias.col order by alias.col desc"
"select top alias.col alias.col as [post lialias.colk], aalias.colswer.score from table p, table aalias.colswer where alias.col like alias.col + alias.col:strialias.colg## + alias.col aalias.cold aalias.colswer.parealias.coltid = alias.col order by aalias.colswer.score asc"
declare @userid int = n select alias.col from table
"select top alias.col selfaalias.colswer.body, selfaalias.colswer.id as [post lialias.colk], selfaalias.colswer.creatioalias.coldate, lealias.col(selfaalias.colswer.body) as lealias.colgth, selfaalias.colswer.score as score, questioalias.col.viewcoualias.colt from table as questioalias.col ialias.colalias.coler joialias.col table as allaalias.colswers oalias.col allaalias.colswers.parealias.coltid = questioalias.col.id ialias.colalias.coler joialias.col table as selfaalias.colswer oalias.col selfaalias.colswer.owalias.coleruserid = questioalias.col.owalias.coleruserid aalias.cold selfaalias.colswer.parealias.coltid = questioalias.col.id where selfaalias.colswer.score <= alias.col aalias.cold questioalias.col.closeddate is alias.colull aalias.cold questioalias.col.posttypeid = alias.col aalias.cold selfaalias.colswer.posttypeid = alias.col aalias.cold ( questioalias.col.acceptedaalias.colswerid != selfaalias.colswer.id or questioalias.col.acceptedaalias.colswerid is alias.colull) aalias.cold questioalias.col.viewcoualias.colt < alias.col aalias.cold lealias.col(selfaalias.colswer.body) < alias.col aalias.cold year(questioalias.col.creatioalias.coldate) >= alias.col group by selfaalias.colswer.id, selfaalias.colswer.creatioalias.coldate, lealias.col(selfaalias.colswer.body), selfaalias.colswer.score, questioalias.col.viewcoualias.colt, selfaalias.colswer.body havialias.colg coualias.colt(distialias.colct allaalias.colswers.id) > alias.col order by lealias.col(selfaalias.colswer.body) asc, selfaalias.colswer.creatioalias.coldate desc"
"select top alias.col row_alias.columber() over(order by reputatioalias.col desc) as [#], id as [user lialias.colk], reputatioalias.col from table where lower(locatioalias.col) like x or upper(locatioalias.col) like x ... order by reputatioalias.col desc;"
"with postuptable as alias selealias.col alias.col, coualias.coltaliasalias.col) votecoualias.colt from table v where alias.col=alias.col group by alias.col ) ,postdowalias.coltable as alias selealias.col alias.col, coualias.coltaliasalias.col) votecoualias.colt from table v where alias.col=alias.col group by alias.col ),postclosetable as alias selealias.col alias.col, coualias.coltaliasalias.col) votecoualias.colt from table v where alias.col=alias.col group by alias.col ) ,table as alias selealias.col p.owalias.coleruserid, coalescealiaspuv.votecoualias.colt,alias.col) alias.col, coalescealiaspdv.votecoualias.colt,alias.col) dowalias.colvotetotal, coalescealiasp.viewcoualias.colt,pp.viewcoualias.colt) viewcoualias.colt from table p left outer joialias.col table pp oalias.col aliasp.parealias.coltid is alias.colot alias.colull) aalias.cold p.parealias.coltid=alias.col left outer joialias.col postuptable puv oalias.col pualias.col=alias.col left outer joialias.col postdowalias.coltable pdv oalias.col alias.col=pdalias.col left outer joialias.col postclosetable pcv oalias.col alias.col=pcalias.col ) ,table as alias selealias.col sumaliasalias.col+dowalias.colvotetotal) totaltable, sumaliasdowalias.colvotetotal) dowalias.colvotetotal, sumaliasviewcoualias.colt) viewcoualias.colt, owalias.coleruserid from table where viewcoualias.colt is alias.colot alias.colull aalias.cold aliasowalias.coleruserid=alias.col##) group by owalias.coleruserid ) ,table asalias selealias.col u.displayalias.colame, aliascastaliast.dowalias.colvotetotal as float)/castaliast.viewcoualias.colt as float)) alias.col from table t joialias.col table u oalias.col t.owalias.coleruserid=alias.col ) selealias.col displayalias.colame, alias.col*alias.col.alias.col alias.col from table order by alias.col"
"declare @mialias.coltable alias.columeric = ##mialias.coltable?alias.col## select top alias.col tmp.[user lialias.colk], coualias.colt(dtable) as [ialias.colstaalias.colces], max(dtable) as [largest ialias.colstaalias.colce], sum(dtable) as alias.col from (select alias.col as alias.col, alias.col as [post lialias.colk], p.owalias.coleruserid as [user lialias.colk], v.creatioalias.coldate as alias.col, coualias.colt(*) as dtable, alias.col as alias.col from table v left joialias.col table p oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col is alias.colot alias.colull group by alias.col, v.creatioalias.coldate, p.creatioalias.coldate, p.owalias.coleruserid, alias.col, alias.col ) as tmp where tmp.dtable >= @mialias.coltable group by tmp.[user lialias.colk] order by [ialias.colstaalias.colces] desc"
"select alias.col from ( select row_number() over (order by alias.col desc) as globalrank, table.id as [user link], alias.col, location from table) as x where upper(location) like x or upper(location) like x ... order by alias.col desc"
"select alias.col, alias.col, alias.col, alias.col, alias.col from table p joialias.col table u oalias.col alias.col = alias.col where alias.col < alias.col order by alias.col"
"select alias.col from table where tagbased = alias.col declare table table ( alias.col ialias.colt, reputatioalias.col ialias.colt, creatioalias.coldate datetime, displayalias.colame alias.colvarchar(alias.col), lastaccessdate datetime, alias.col alias.colvarchar(alias.col), locatioalias.col alias.colvarchar(alias.col), aboutme alias.colvarchar(maalias.col), views ialias.colt, upvotes ialias.colt, dowalias.colvotes ialias.colt, profileimageurl alias.colvarchar (alias.col), emailhash varchar (alias.col), age ialias.colt, accoualias.coltalias.col ialias.colt ) declare @mytable table ( alias.col ialias.colt, useralias.col ialias.colt, alias.colame alias.colvarchar (alias.col), date datetime, class tialias.colyialias.colt, tagbased bit ) ialias.colsert ialias.colto @mytable (alias.col, useralias.col, alias.colame, date, class, tagbased) select alias.col, useralias.col, alias.colame, date, class, tagbased from table b where upper(b.alias.colame) like upper(alias.col + alias.col:strialias.colg## + alias.col) aalias.cold b.tagbased = alias.col aalias.cold b.class = alias.col ialias.colsert ialias.colto table (alias.col, reputatioalias.col, creatioalias.coldate, displayalias.colame, lastaccessdate, alias.col, locatioalias.col, aboutme, views, upvotes, dowalias.colvotes, profileimageurl, emailhash, age, accoualias.coltalias.col) select alias.col, reputatioalias.col, creatioalias.coldate, displayalias.colame, lastaccessdate, alias.col, locatioalias.col, aboutme, views, upvotes, dowalias.colvotes, profileimageurl, emailhash, age, accoualias.coltalias.col from table u where u.alias.col ialias.col (select useralias.col from @mytable) select alias.col from table"
"select moalias.colth, posttypealias.col, coualias.colt(*) from (select alias.col, posttypealias.col, alias.col(moalias.colth, datediff(moalias.colth, alias.col, creatioalias.coldate), alias.col) as [moalias.colth] from table joialias.col table oalias.col postalias.col = alias.col where posttypealias.col ialias.col (alias.col) aalias.cold tagalias.col = alias.col) as alias.col group by moalias.colth,posttypealias.col order by moalias.colth,posttypealias.col"
"select top alias.col questioalias.col.id as [post lialias.colk], questioalias.col.score, questioalias.col.aalias.colswercoualias.colt as alias.col, questioalias.col.viewcoualias.colt from table as questioalias.col where questioalias.col.commualias.colityowalias.coleddate is alias.colull aalias.cold questioalias.col.posttypeid=alias.col aalias.cold questioalias.col.viewcoualias.colt > alias.col order by questioalias.col.score asc"
"with table as ( select alias.col as alias.col, alias.col(week, alias.col(week, n, creationdate), n) as alias.col from table where alias.col in (alias.colyz) union select alias.col as alias.col, alias.col(week, alias.col(week, n, creationdate), n) as alias.col from table where tabletypeid in (alias.colyz) union select alias.col as alias.col, alias.col(week, alias.col(week, n, creationdate), n) as alias.col from table ) select alias.col(week,getdate(),date) as alias.col, count(*) as alias.col from table group by alias.col(week,getdate(),date) order by alias.col(week,getdate(),date) asc"
select top alias.col alias.col from table where table.commealias.colt like alias.col;
"with table as ( select alias.col from table where alias.col is alias.colull aalias.cold score <= alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull ) select top alias.col p.alias.col as [post lialias.colk], sum(alias.col) as aalias.colswerscore, alias.col as tablecore from table p joialias.col table q oalias.col p.alias.col = alias.col group by p.alias.col, alias.col order by aalias.colswerscore desc"
"declare @alias.col int = ##alias.col## select count(*) as alias.col, alias.col from table where alias.col = @alias.col group by alias.col order by alias.col desc"
"select table.tagname as alias.col, count(*) as [number of associated posts] from table inner join table on table.id = table.tagid where table.postid in ( select distinct postid from table inner join table on table.id = table.tagid where table.tagname = alias.col:alias.col ) and table.tagname <> alias.col:alias.colgroup by table.tagname order by count(*) desc"
"select top alias.col alias.col as [post lialias.colk], p.creatioalias.coldate as alias.col, alias.col as alias.col, p.owalias.coleruserid as [user lialias.colk] from table p where alias.col = alias.col aalias.cold alias.col alias.colot like alias.col order by alias.col desc"
"select table.creatioalias.coldate, alias.col as alias.col, alias.col as alias.col from table ialias.colalias.coler joialias.col table as aalias.colswer oalias.col table.postid = alias.col ialias.colalias.coler joialias.col table as questioalias.col oalias.col alias.col = alias.col where table.votetypeid = alias.col aalias.cold aalias.colswer.posttypeid = alias.col aalias.cold aalias.colswer.owalias.coleruserid = alias.col##"
"select alias.col alias.col, postalias.col alias.col, coalias.colvert(date, alias.col, alias.col) date, tealias.colt from table where useralias.col = ##useralias.col## aalias.cold tealias.colt like alias.col"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or lower(location) like x ... and alias.col >= n order by alias.col desc;"
"select top alias.col table.tagalias.colame, coualias.colt(*) as tagcoualias.colt from table ialias.colalias.coler joialias.col table oalias.col table.postid = table.id ialias.colalias.coler joialias.col table oalias.col table.tagid = table.id where alias.col(year, table.creatioalias.coldate) = alias.col aalias.cold alias.col(moalias.colth, table.creatioalias.coldate) = alias.col group by table.tagalias.colame order by tagcoualias.colt desc"
"select alias.col from table q inner join table a on alias.col = alias.col where alias.col is null and a.owneruserid = ##userid## and q.owneruserid != ##userid## and a.posttypeid = n and alias.col <= dateadd(day, n, getdate())"
"select alias.col as tabletype, alias.col from table as ph ialias.colalias.coler joialias.col tabletypes as pht oalias.col alias.col = ph.tabletypeid ialias.colalias.coler joialias.col table as p oalias.col alias.col = alias.col where alias.col = alias.col## aalias.cold alias.col <> alias.col aalias.cold p.owalias.coleruserid <> alias.col## order by creatioalias.coldate"
"select top alias.col owalias.coleruserid as [user lialias.colk], sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as qcoualias.colt from table where owalias.coleruserid != alias.col group by owalias.coleruserid havialias.colg sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) > alias.col order by qcoualias.colt desc"
"select coalias.colvert(varchar(alias.col), alias.col(day, datediff(day, alias.col, rt.creatioalias.coldate) / alias.col * alias.col, x), alias.col) as alias.col, coualias.colt(case rt.reviewtasktypeid whealias.col alias.col thealias.col alias.col ealias.cold) as [#se], roualias.cold(avg(case rt.reviewtasktypeid whealias.col alias.col thealias.col datediff(secoalias.cold, rt.creatioalias.coldate, rt.deletioalias.coldate) / alias.col.alias.col ealias.cold), alias.col) as [δse] from table rt group by datediff(day, alias.col, rt.creatioalias.coldate) / alias.col order by alias.col asc"
"selealias.col alias.col, coualias.colt(alias.col) from ( selealias.col cast( cast(alias.col(alias.col, alias.col) as varchar) + alias.col + cast(alias.col(alias.col, alias.col) as varchar) + alias.col as datetime) table, t.table from table p joialias.col table pt oalias.col alias.col = alias.col joialias.col table t oalias.col alias.col = alias.col where alias.col ialias.col ( selealias.col top alias.col alias.col from table order by coualias.colt desc ) ) as alias.col group by table, table order by table asc, table asc"
"selealias.col ualias.col.emailhash, coualias.colt(alias.col) as alias.col, ( selealias.col cast(alias.col as varchar) + alias.col + alias.col + alias.col + cast(alias.col as varchar) + alias.col from table ualias.col where ualias.col.emailhash = ualias.col.emailhash order by alias.col desc for alias.colml path (alias.col)) as idsaalias.coldalias.colames from table ualias.col where ualias.col.emailhash is alias.colot alias.colull aalias.cold (selealias.col sum(alias.col) from table ualias.col where ualias.col.emailhash = ualias.col.emailhash) > alias.col aalias.cold (selealias.col coualias.colt(*) from table ualias.col where ualias.col.emailhash = ualias.col.emailhash aalias.cold reputatioalias.col > alias.col) > alias.col group by ualias.col.emailhash havialias.colg coualias.colt(alias.col) > alias.col order by alias.col desc"
"select sum(alias.col) as alias.col, sum(alias.col) as alias.col, sum(alias.col - (alias.col + alias.col)) as alias.col, coualias.colt(*) as alias.col from ( select useralias.colaalias.colswers.parealias.coltalias.col, case whealias.col (select acalias.colptedaalias.colsweralias.col from table where alias.col = useralias.colaalias.colswers.parealias.coltalias.col) = useralias.colaalias.colswers.alias.col thealias.col alias.col whealias.col (select acalias.colptedaalias.colsweralias.col from table where alias.col = useralias.colaalias.colswers.parealias.coltalias.col) = useralias.colaalias.colswers.alias.col thealias.col alias.col whealias.col useralias.colaalias.colswers.score > useralias.colaalias.colswers.score thealias.col alias.col else alias.col ealias.cold as alias.col, case whealias.col (select acalias.colptedaalias.colsweralias.col from table where alias.col = useralias.colaalias.colswers.parealias.coltalias.col) = useralias.colaalias.colswers.alias.col thealias.col alias.col whealias.col (select acalias.colptedaalias.colsweralias.col from table where alias.col = useralias.colaalias.colswers.parealias.coltalias.col) = useralias.colaalias.colswers.alias.col thealias.col alias.col whealias.col useralias.colaalias.colswers.score > useralias.colaalias.colswers.score thealias.col alias.col else alias.col ealias.cold as alias.col from table useralias.colaalias.colswers ialias.colalias.coler joialias.col table useralias.colaalias.colswers oalias.col useralias.colaalias.colswers.parealias.coltalias.col = useralias.colaalias.colswers.parealias.coltalias.col where useralias.colaalias.colswers.posttypealias.col = alias.col aalias.cold useralias.colaalias.colswers.commualias.colityowalias.coleddate is alias.colull aalias.cold useralias.colaalias.colswers.closeddate is alias.colull aalias.cold useralias.colaalias.colswers.owalias.coleruseralias.col = ##useralias.colalias.col## aalias.cold useralias.colaalias.colswers.posttypealias.col = alias.col aalias.cold useralias.colaalias.colswers.commualias.colityowalias.coleddate is alias.colull aalias.cold useralias.colaalias.colswers.closeddate is alias.colull aalias.cold useralias.colaalias.colswers.owalias.coleruseralias.col = ##useralias.colalias.col## ) tmp"
"select alias.col as alias.col, alias.col as alias.col, alias.col, alias.col, alias.col, alias.col, (alias.col*alias.col)/alias.col as resoalias.colaalias.colalias.col, (alias.col*alias.col)/alias.col as importaalias.colalias.col, case whealias.col q.acalias.colptedaalias.colswerid = alias.col thealias.col x else x ealias.cold as recogalias.colized from table a joialias.col table q oalias.col a.parealias.coltid = alias.col aalias.cold q.acalias.colptedaalias.colswerid = alias.col where alias.col = alias.col aalias.cold a.commualias.colityowalias.coleddate is alias.colull aalias.cold alias.col > alias.col order by (alias.col*alias.col)/alias.col desc, (alias.col*alias.col)/alias.col desc"
"select convert(date,alias.col) alias.col, avg(alias.col(alias.col, b.alias.col, alias.col)) alias.col from table a inner join table b on alias.col = alias.col where alias.col between convert(date, dateadd(dd,n,getdate())) and getdate() group by convert(date,alias.col) order by convert(date,alias.col)"
"select alias.col as alias.col, alias.col, alias.col from table q joialias.col table a oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col is alias.colull aalias.cold a.posttypeid = alias.col aalias.cold alias.col >= alias.col aalias.cold a.owalias.coleruserid = ##userid## aalias.cold isalias.colull(q.owalias.coleruserid, alias.col) <> a.owalias.coleruserid aalias.cold exists(select alias.col from table ph where ph.tabletypeid ialias.col (alias.col) aalias.cold alias.col = alias.col aalias.cold alias.col = a.owalias.coleruserid aalias.cold abs(alias.col(alias.col, ph.creatioalias.coldate, alias.col)) < alias.col) order by alias.col desc"
"select alias.col as alias.col , coualias.colt(*) alias.col , alias.col , alias.col ,alias.col ,alias.col as alias.col from table p ialias.colalias.coler joialias.col table pt oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table t oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table v oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table voter oalias.col alias.col = alias.col where alias.col ialias.col (alias.col) aalias.cold alias.col = alias.col aalias.cold voter.reputatioalias.col > alias.col group by alias.col ,alias.col , alias.col ,alias.col ,alias.col"
select coualias.colt(alias.col) from table p where alias.col != alias.col aalias.cold p.lasteditoruserid = alias.col
"with table as ( select alias.col, ( select coualias.colt(*) as alias.col from table pt joialias.col table pp oalias.col alias.col = alias.col joialias.col table pa oalias.col alias.col = alias.col joialias.col table v oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col ) as uptable, ( select coualias.colt(*) as alias.col from table pt joialias.col table pp oalias.col alias.col = alias.col joialias.col table pa oalias.col alias.col = alias.col joialias.col table v oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col ) as dowalias.coltable from table t cross apply ( select coualias.colt(*) as alias.col from table pt where alias.col = alias.col havialias.colg coualias.colt(*) >= alias.col ) pt ) select tagalias.colame as [table], uptable as alias.col, dowalias.coltable as alias.col, roualias.cold(alias.col.alias.col * dowalias.coltable / alias.colullif(uptable, alias.col), alias.col) as alias.col from table order by alias.col desc"
"selealias.col top alias.col alias.col, displayalias.colame, alias.col, reputatioalias.col, creatioalias.coldate, lastaccessdate, alias.col + cast(alias.col as varchar) as alias.col from table where reputatioalias.col > alias.col order by alias.col desc, reputatioalias.col desc;"
"declare @year ialias.colt, @moalias.colth ialias.colt, @aalias.colswers ialias.colt, @questioalias.cols ialias.colt, @askers ialias.colt, @aalias.colswerers ialias.colt, @avgaalias.colswerscore float, @avgquestioalias.colscore float set alias.colocoualias.colt oalias.col select alias.col(year, p.creatioalias.coldate) year, alias.col(moalias.colth, p.creatioalias.coldate) moalias.colth, coualias.colt(*) as questioalias.cols from table p joialias.col table palias.col oalias.col alias.col = alias.col joialias.col table pt oalias.col alias.col = alias.col joialias.col table t oalias.col alias.col = alias.col where alias.col = alias.col:alias.col aalias.cold alias.col = alias.col group by alias.col(year, p.creatioalias.coldate), alias.col(moalias.colth, p.creatioalias.coldate) set alias.colocoualias.colt off"
"declare alias.col date = x declare alias.col date = x select alias.col, body from table where alias.col >= convert(datetime, alias.col) and alias.col <= convert(datetime, alias.col) union select alias.col, text as body from table where alias.col >= convert(datetime, alias.col) and alias.col <= convert(datetime, alias.col)"
select top alias.col tealias.colt from table where tealias.colt like alias.col
"select row_number() over(order by alias.col desc) as position ,displayname ,alias.col ,age ,websiteurl ,aboutme ,x + convert(varchar(n), id) as profileurl from table(nolock) where upper(location) like nx order by alias.col desc"
"DECLARE @scorePerTopNTags TABLE ( [Tag Name] CHAR(N), [Your Score] INT, [Tag Rank] INT IDENTITY(N, N), [Tag Popularity] INT ); WITH tagsN AS ( SELECT TOP N tagid, COUNT(*) AS postCount FROM posttags GROUP BY tagid ORDER BY COUNT(*) DESC ), answers AS ( SELECT score, parentid FROM posts WHERE communityowneddate IS NULL AND posttypeid = N AND owneruserid = ##userid## ) INSERT @scorePerTopNTags ([Tag Name], [Your Score], [Tag Popularity]) SELECT t.tagname, SUM(a.score) AS score, tN.postcount FROM answers a INNER JOIN posttags pt ON pt.postid = a.parentid RIGHT JOIN tagsN tN ON tN.tagid = pt.tagid INNER JOIN tags t ON tN.tagid = t.id GROUP BY t.tagname, tN.postcount ORDER BY tN.postcount DESC SELECT ROW_NUMBER() OVER ( ORDER BY [Your Score] DESC, [Tag Popularity] DESC, [Tag Name] ), *, CASE WHEN [Your Score] >= N THEN X ELSE X END AS [Status] FROM @scorePerTopNTags ORDER BY [Tag Popularity] DESC, [Your Score] DESC, [Tag Name]"
"select year(alias.col) as alias.col, moalias.colth(alias.col) as alias.col, coualias.colt(alias.col) as alias.col from table q ialias.colalias.coler joialias.col table a oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col is alias.colull aalias.cold a.posttypeid = alias.col aalias.cold a.score >= alias.col aalias.cold a.owalias.coleruserid = alias.col aalias.cold (q.owalias.coleruserid is alias.colull or q.owalias.coleruserid <> a.owalias.coleruserid) aalias.cold exists (select alias.col from table ph where ph.tabletypeid ialias.col (alias.col) aalias.cold alias.col = alias.col aalias.cold alias.col = a.owalias.coleruserid aalias.cold abs(alias.col(alias.col, ph.creatioalias.coldate, alias.col)) < alias.col) group by year(alias.col), moalias.colth(alias.col) order by year(alias.col) desc, moalias.colth(alias.col) desc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col, views from table where lower(location) like x order by alias.col desc;"
"select alias.col, alias.col, alias.col as alias.col from table v inner join table p on alias.col = alias.col inner join table t on alias.col = alias.col where alias.col = alias.col## or alias.col = alias.col##"
"select alias.col as alias.col, location, alias.col from table where alias.col like alias.col order by alias.col desc"
declare @useralias.col int = ##useralias.col## select alias.col from table where alias.col = @useralias.col
"selealias.col top alias.col table.id as [user lialias.colk], coualias.colt(table.id) as aalias.colswers, cast(avg(cast(alias.col as float)) as alias.columeric(alias.col,alias.col)) as [average aalias.colswer alias.col] from table ialias.colalias.coler joialias.col table oalias.col table.id = owalias.coleruserid where alias.col = alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold closeddate is alias.colull group by table.id, displayalias.colame havialias.colg coualias.colt(table.id) > alias.col order by [average aalias.colswer alias.col] desc"
"select alias.col, avg(alias.col) as [average # of table] from (select count(alias.col) as alias.col, alias.col from table as c join table as p on alias.col=alias.col where alias.col = alias.col## group by alias.col, alias.col ) as t group by alias.col order by alias.col desc"
"select alias.col+convert(varchar,alias.col), postalias.col as alias.col, comment, creationdate, alias.col from table where owneruseralias.col = ##useralias.col## and alias.col is not null order by alias.col desc"
"selealias.col cast(alias.col as alias) as alias.col , count(*) as count from table group by cast(alias.col as alias) order by cast(alias.col as alias)"
"select top alias.col table.id as [post lialias.colk], alias.col, viewcoualias.colt, table from table, table where alias.col > alias.col aalias.cold viewcoualias.colt > alias.col aalias.cold parealias.coltid is alias.colull aalias.cold acceptedaalias.colswerid is alias.colull aalias.cold table.tagalias.colame = x order by viewcoualias.colt asc"
"select (case whealias.col alias.col = alias.col thealias.col x whealias.col alias.col = alias.col thealias.col x ealias.cold) as [post type], (case whealias.col alias.col = alias.col thealias.col x whealias.col alias.col = alias.col thealias.col x ealias.cold) as [vote type], coualias.colt(*) as table from table v joialias.col table p oalias.col alias.col = alias.col where alias.col ialias.col (alias.col) aalias.cold alias.col = alias.col## group by alias.col, alias.col"
"with table as ( selealias.col acceptedtable.owalias.coleralias.col as alias.col, coualias.colt(acceptedtable.alias.col) as acceptedtable, (selealias.col coualias.colt(alias.col) from table totaltable where totaltable.owalias.coleralias.col = acceptedtable.owalias.coleralias.col aalias.cold totaltable.posttypealias.col = alias.col) as totaltable from table acceptedtable ialias.colalias.coler joialias.col table questioalias.cols oalias.col questioalias.cols.acceptedaalias.colsweralias.col = acceptedtable.alias.col where acceptedtable.posttypealias.col = alias.col group by acceptedtable.owalias.coleralias.col ) selealias.col top alias.col alias.col as [user lialias.colk], table.alias.colutatioalias.col as alias.col, (cast(acceptedtable as float) / totaltable) as acceptedpercealias.coltage from table ialias.colalias.coler joialias.col table oalias.col table.alias.col = alias.col where totaltable >= ##mialias.colimumtable## order by acceptedpercealias.coltage desc"
"declare @userid ialias.colt = ##userid## selealias.col top alias.col table.id, (cast(coualias.colt(alias.col) as alias) / cast((selealias.col coualias.colt(*) from table p where p.owalias.coleruserid = table.id aalias.cold alias.col = alias.col) as alias) * alias.col) as selfaalias.colswerpercealias.coltage from table q ialias.colalias.coler joialias.col table a oalias.col q.acceptedaalias.colswerid = alias.col ialias.colalias.coler joialias.col table oalias.col table.id = q.owalias.coleruserid where q.owalias.coleruserid = a.owalias.coleruserid group by table.id, displayalias.colame havialias.colg coualias.colt(alias.col) > alias.col order by selfaalias.colswerpercealias.coltage desc"
"declare table table (name varchar(n), rep int) insert into table values (xyz) insert into table values (xyz) insert into table values (xyz) insert into table values (xyz) insert into table values (xyz) insert into table values (xyz) insert into table values (xyz) insert into table values (xyz) select alias.col.count, alias.col.activecount, alias.col.name as alias.col, alias.col from table pr inner join ( select count(*) as count, p.name, sum(case when datediff(day, u.creationdate, getdate()) <= n then n else n end) as activecount from table p, table u where alias.col >= alias.col group by p.name ) alias.col on alias.col = alias.col.name order by alias.col desc"
"selealias.col alias.col, coualias.colt(alias.col) from ( selealias.col cast( cast(alias.col(alias.col, alias.col) as varchar) + alias.col + cast(alias.col(alias.col, alias.col) as varchar) + alias.col as datetime) table, t.table from table p joialias.col table pt oalias.col alias.col = alias.col joialias.col table t oalias.col alias.col = alias.col where alias.col ialias.col ( selealias.col top alias.col alias.col from table order by coualias.colt desc ) ) as alias.col group by table, table order by table asc, table asc"
"with table as ( select alias.col as alias.col, alias.col as alias.col, alias.col as alias.col from table as herbertsaalias.colswer ialias.colalias.coler joialias.col table as egregsaalias.colswer oalias.col alias.col = alias.col aalias.cold alias.col = egregsaalias.colswer.parealias.coltid where herbertsaalias.colswer.owalias.coleruserid = alias.col aalias.cold herbertsaalias.colswer.posttypeid = alias.col ) select case whealias.col alias.col > alias.col thealias.col x whealias.col alias.col < alias.col thealias.col x else x ealias.cold as x, alias.col as [post lialias.colk], alias.col as x from table;"
"with table as ( select alias.col, owalias.coleruseralias.col, alias.col, row_alias.columber() over(partitioalias.col by owalias.coleruseralias.col order by alias.col asc) as raalias.colk from table where table.posttypealias.col = alias.col ) select top ##alias.columber?alias.col## alias.col as [post lialias.colk], owalias.coleruseralias.col as [user lialias.colk], alias.col, raalias.colk from table where table.raalias.colk = alias.col order by alias.col desc"
"select alias.col as alias.col, alias.col as alias.col, case p.posttypealias.col whealias.col alias.col thealias.col x whealias.col alias.col thealias.col x else x ealias.cold as x, case pf.votetypealias.col whealias.col alias.col thealias.col x whealias.col alias.col thealias.col x else x ealias.cold as x, coualias.colt(alias.col) as aalias.coloalias.colvotecoualias.colt, q.viewcoualias.colt as viewcoualias.colt, p.score as score, p.owalias.coleruseralias.col as author from table q left joialias.col table a oalias.col (q.alias.col = a.parealias.coltalias.col) joialias.col table p oalias.col (alias.col = q.alias.col or alias.col = a.alias.col) left joialias.col table pf oalias.col (pf.postalias.col = alias.col) where q.alias.col = ##questioalias.colalias.col:ialias.colt## aalias.cold pf.isaalias.coloalias.colymous = alias.col group by alias.col, p.posttypealias.col, pf.votetypealias.col, p.viewcoualias.colt, q.viewcoualias.colt, p.score, p.owalias.coleruseralias.col order by alias.col"
"declare @useralias.col int = n select min( alias.col ) as alias.col , min( ph.postalias.col ) as postalias.col , min( alias.col ) as alias.col , min( ph.useralias.col ) as useralias.col , min( alias.col ) as comment , min( ph.text ) as text from table ph where ph.useralias.col = @useralias.col group by ph.revisiongualias.col order by alias.col desc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], location, alias.col from table where lower(location) like x or upper(location) like x ... or location like x and alias.col >= n order by alias.col desc;"
"selealias.col top alias.col table.id as [user lialias.colk], coualias.colt(table.id) as aalias.colswers, cast(avg(cast(alias.col as float)) as alias.columeric(alias.col,alias.col)) as [average aalias.colswer alias.col] from table ialias.colalias.coler joialias.col table oalias.col table.id = owalias.coleruserid where alias.col = alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold closeddate is alias.colull group by table.id, displayalias.colame havialias.colg coualias.colt(table.id) > alias.col order by [average aalias.colswer alias.col] desc"
select coualias.colt(alias.col) from table where alias.col = ##alias.col## aalias.cold alias.col > alias.col
"select table.id, sum(alias.col) as alias.col from table ialias.colalias.coler joialias.col table oalias.col table.id = table.owalias.coleruserid where alias.col = alias.col group by table.id"
"select coualias.colt(*) as alias.col, coualias.colt(alias.col) as alias.col, sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) [scored aalias.colswers], sum(case whealias.col alias.col = alias.col aalias.cold alias.col is alias.colull thealias.col alias.col else alias.col ealias.cold) [worthful aalias.colswers] from table questioalias.cols left joialias.col table aalias.colswers oalias.col alias.col = questioalias.cols.acalias.colptedaalias.colswerid where aalias.colswers.owalias.coleruserid = alias.col## aalias.cold questioalias.cols.owalias.coleruserid != alias.col## aalias.cold aalias.colswers.posttypeid = alias.col aalias.cold aalias.colswers.commualias.colityowalias.coleddate is alias.colull;"
"declare @authoralias.col as ialias.colt = ##author## declare @targetalias.col as ialias.colt = ##target## declare @targetalias.colame as alias.colvarchar(alias.col) = replace(lower((select top alias.col displayalias.colame from table where alias.col = @targetalias.col)), alias.col, alias.col) declare @targetalias.colamewithoutspaces as alias.colvarchar(alias.col) = replace(@targetalias.colame, alias.col, alias.col) declare @targetalias.colamefirstword as alias.colvarchar(alias.col) = left(@targetalias.colame, charialias.coldealias.col(alias.col, @targetalias.colame)) select c.alias.col as [commealias.colt lialias.colk], alias.col as alias.col, c.creatioalias.coldate as alias.col from table c ialias.colalias.coler joialias.col table p oalias.col p.alias.col = c.postalias.col where c.useralias.col = @authoralias.col aalias.cold (lower(c.tealias.colt) like alias.col ... + @targetalias.colamefirstword + alias.col or lower(c.tealias.colt) like alias.col ... + @targetalias.colamewithoutspaces + alias.col or p.owalias.coleruseralias.col = @targetalias.col) order by c.alias.col asc"
"select alias.col as alias.col, alias.col from table as questioalias.col ialias.colalias.coler joialias.col table as selfaalias.colswer oalias.col alias.col = alias.col aalias.cold alias.col = alias.col ialias.colalias.coler joialias.col table as table oalias.col table.id = alias.col where alias.col = alias.col aalias.cold selfaalias.colswer.posttypeid = alias.col aalias.cold table.reputatioalias.col < alias.col?alias.col## group by alias.col, alias.col havialias.colg coualias.colt(distialias.colct selfaalias.colswer.id) > alias.col order by alias.col desc"
"set alias.colocoualias.colt oalias.col create table table (alias.col ialias.colt alias.colealias.coltity, [start] datetime, [fialias.colish] datetime) ialias.colsert table select top alias.col alias.colull, alias.colull from table declare alias.col datetime select alias.col = creatioalias.coldate from table where alias.col = (select max(palias.col.alias.col) from table palias.col) update table set [start] = dateadd(d, (alias.col - alias.col) * alias.col, alias.col), [fialias.colish] = dateadd(d, (alias.col - alias.col) * alias.col, alias.col) select start, (select coualias.colt(*) from table where parealias.coltalias.col is alias.colull aalias.cold (select coualias.colt(*) from table where table.postalias.col = table.alias.col aalias.cold votetypealias.col = alias.col) > alias.col aalias.cold table.creatioalias.coldate betweealias.col [start] aalias.cold [fialias.colish] ) as [total questioalias.cols], (select coualias.colt(*) from table where parealias.coltalias.col is alias.colot alias.colull aalias.cold table.creatioalias.coldate betweealias.col [start] aalias.cold [fialias.colish] ) as [total aalias.colswers] from table"
declare @totaltable float select @totaltable = count(*) from table where alias.col > ##minalias.col## declare @myalias.col int select @myalias.col = alias.col from table where alias.col = ##useralias.col## declare alias.col float select alias.col = count(*) from table where alias.col < @myalias.col and alias.col > ##minalias.col## select alias.col as alias.col select @totaltable as totaltable
"declare alias.col ialias.colt = ##userid## selealias.col cast(table.creatioalias.coldate as date), sum(case whealias.col table.votetypeid = alias.col thealias.col alias.col whealias.col table.votetypeid = alias.col thealias.col alias.col else alias.col ealias.cold) as voterep from table joialias.col table oalias.col table.id = table.postid where table.owalias.coleruserid = alias.col aalias.cold table.votetypeid = alias.col group by cast(table.creatioalias.coldate as date) havialias.colg sum(case whealias.col table.votetypeid = alias.col thealias.col alias.col whealias.col table.votetypeid = alias.col thealias.col alias.col else alias.col ealias.cold) > alias.col order by cast(table.creatioalias.coldate as date)"
"select top alias.col alias.col, alias.col, alias.col from table where alias.col > alias.col order by alias.col desc"
"declare @phrase alias.colvarchar(alias.col) set @phrase = alias.col declare @userid ialias.colt, @socoualias.colt ialias.colt, @allcoualias.colt ialias.colt select top alias.col u.displayalias.colame, coualias.colt(alias.col) as alias.col from table u ialias.colalias.coler joialias.col table p oalias.col p.owalias.coleruserid = alias.col where alias.col = alias.col aalias.cold alias.col like alias.col ... + @phrase + alias.col group by u.displayalias.colame order by coualias.colt(alias.col) desc"
"declare @temp table ( Id int identity(N,N), TagName varchar(N), TagRank int, TagPopularity int, Score int); with tagsN as ( select top N ROW_NUMBER() OVER (ORDER BY Count(*) DESC) as rank, count(*) as popularity, tagid from posttags group by tagid order by count(*) desc ), answers as ( select score, id, parentId from posts where communityowneddate is null and posttypeid = N and owneruserid = ##UserId:int## ) insert @temp(TagName, TagRank, TagPopularity, Score) select t.TagName, f.rank, f.popularity, sum(a.score) as Score from answers a inner join posttags pt on pt.postid = a.parentId right join tagsN f on f.tagid = pt.tagid inner join tags t on f.tagid = t.id group by t.tagname, f.rank, f.popularity order by score desc select *, case when score >= N then X else X end from @temp"
"select alias.col as alias.col, alias.col from table p where alias.col = alias.col## order by alias.col desc"
"select row_number() over(order by alias.col desc) as [#], alias.col as [user link], u.alias.col, count(alias.col) from table u inner join table p on alias.col = alias.col inner join table pt on alias.col = alias.col inner join table t on alias.col = alias.col where lower(location) like lower(x) group by u.alias.col, alias.col order by alias.col desc;"
"selealias.col alias.col, alias.col, alias.col, alias.col, alias.col + cast(alias.col as varchar) as alias.col from table where alias.col like alias.col + alias.col:alias.col + alias.col and alias.col not like alias.col + alias.col:alias.col + alias.col order by alias.col desc"
"with table(alias.col, table, table) as ( select alias.col, p.table, ( select mialias.col(table) from table where alias.col = alias.col aalias.cold tabletypeid = alias.col aalias.cold alias.col like alias.col ... ) from table as p ialias.colalias.coler joialias.col table as ph oalias.col alias.col = ph.alias.col where alias.col = alias.col aalias.cold ph.tabletypeid = alias.col aalias.cold ph.alias.col like alias.col ... ), table(alias.col, table, table, table) as ( select alias.col, table, table, alias.col(secoalias.cold, table, table) from table ) select top alias.col alias.col as [post lialias.colk], table as alias.col, table as alias.col, table as [time differealias.colce] from table order by table"
"select alias.col as date, count(alias.col) as alias.col, sum(alias.col) as alias.col from table where alias.col like alias.col and alias.col >= alias.col and alias.col <= alias.col group by alias.col order by alias.col desc;"
"selealias.col top alias.col alias.col as [user lialias.colk], reputatioalias.col, alias.col as alias.col, (alias.col.alias.col * alias.col) / cast(reputatioalias.col as alias.columeric) as alias.col, (alias.col.alias.col * alias.col) - cast(reputatioalias.col as alias.columeric) as differealias.colce from table where alias.col > alias.col aalias.cold reputatioalias.col > alias.col order by alias.col asc"
"select alias.col as alias.col, alias.col as alias.col, alias.col as alias.col, alias.col as alias.col from table q, table aa, table ya, table au where alias.col = alias.col## aalias.cold alias.col > alias.col aalias.cold ya.parealias.coltid = alias.col aalias.cold q.acceptedaalias.colswerid = alias.col aalias.cold aa.owalias.coleruserid = alias.col aalias.cold alias.col != alias.col## aalias.cold alias.col > alias.col aalias.cold alias.col > alias.col * alias.col alias.col aalias.cold alias.col < alias.col * alias.col"
"select top alias.col aalias.colswer.id as [post lialias.colk],alias.col from table aalias.colswer joialias.col table questioalias.col oalias.col aalias.colswer.parealias.coltid = questioalias.col.id where aalias.colswer.posttypeid = alias.col aalias.cold aalias.colswer.owalias.coleruserid = alias.col## aalias.cold questioalias.col.closeddate is alias.colot alias.colull order by questioalias.col.closeddate desc"
"declare alias.col ialias.colt = ##userid## create table table (alias.col ialias.colt, [coualias.colt] ialias.colt) ialias.colsert table select top alias.col alias.col, coualias.colt(*) as uptable from table ialias.colalias.coler joialias.col posttable oalias.col posttable.alias.col = table.id ialias.colalias.coler joialias.col table oalias.col table.parealias.coltid = posttable.postid ialias.colalias.coler joialias.col table oalias.col table.postid = table.id aalias.cold alias.col = alias.col where table.owalias.coleruserid = alias.col group by alias.col order by uptable desc create table table (id ialias.colt primary key) ialias.colsert table select alias.col from table q where (select coualias.colt(*) from table a where a.parealias.coltid = alias.col aalias.cold alias.col > alias.col) = alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold closeddate is alias.colull aalias.cold q.parealias.coltid is alias.colull aalias.cold acceptedaalias.colswerid is alias.colull select top alias.col alias.col as [post lialias.colk], (sum(t.[coualias.colt]) / alias.col.alias.col + us.reputatioalias.col / alias.col.alias.col + alias.col * alias.col) as alias.col from table u joialias.col table p oalias.col alias.col = alias.col joialias.col posttable pt oalias.col alias.col = alias.col joialias.col table t oalias.col t.alias.col = pt.alias.col joialias.col table us oalias.col alias.col = p.owalias.coleruserid group by alias.col, us.reputatioalias.col, alias.col order by alias.col desc"
"with table as (selealias.col cast(table.creatioalias.coldate as date) as date, sum(case alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col case posttypeid whealias.col alias.col thealias.col case whealias.col table.creatioalias.coldate >= alias.col thealias.col alias.col whealias.col table.creatioalias.coldate < alias.col thealias.col alias.col ealias.cold whealias.col alias.col thealias.col alias.col ealias.cold whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col ealias.cold ) as alias.col from table ialias.colalias.coler joialias.col table oalias.col table.id = table.postid where table.owalias.coleruserid = alias.col aalias.cold table.commualias.colityowalias.coleddate is alias.colull group by table.creatioalias.coldate) selealias.col date, sum(alias.col) over (order by date) as reputatioalias.col_history from table"
"select alias.col(floor(alias.col / (alias.col(week,p.creatioalias.coldate,getdate())))+alias.col) as alias.col, alias.col(coualias.colt(*)) as alias.columquestioalias.cols from table p joialias.col table pt oalias.col alias.col = alias.col joialias.col table t oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col(day, creatioalias.coldate, getdate()) > alias.col aalias.cold t.tagalias.colame = x group by floor(alias.col / (alias.col(week,p.creatioalias.coldate,getdate())))+alias.col order by alias.col"
"select alias.col as alias.col, body, score from table where alias.col(body) < n"
"select coualias.colt(distialias.colct table.id) from table joialias.col table oalias.col table.owalias.coleruserid = table.id aalias.cold (table.posttypeid =alias.col or table.posttypeid = alias.col ) where alias.col(day, table.creatioalias.coldate, getdate()) < alias.col"
"select row_alias.columber() over(order by alias.col asc), alias.col, alias.col alias.col, alias.col from table u, table b where alias.col=alias.col aalias.cold alias.col=alias.col group by alias.col, alias.col, alias.col havialias.colg coualias.colt(*)=alias.col"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or lower(location) like x ... or upper(location) like x ... order by alias.col desc;"
"selealias.col top alias.col table.id as [user lialias.colk], roualias.cold((cast(coualias.colt(alias.col) as alias) / cast((selealias.col coualias.colt(*) from table p where p.owalias.coleruserid = table.id aalias.cold alias.col = alias.col) as alias) * alias.col),alias.col) as selfaalias.colswerpercealias.coltage from table q ialias.colalias.coler joialias.col table a oalias.col q.acceptedaalias.colswerid = alias.col ialias.colalias.coler joialias.col table oalias.col table.id = q.owalias.coleruserid where q.owalias.coleruserid = a.owalias.coleruserid group by table.id, displayalias.colame havialias.colg coualias.colt(alias.col) > alias.col order by selfaalias.colswerpercealias.coltage desc"
"with table as ( select alias.col from table where alias.col is alias.colull aalias.cold acceptedaalias.colswerid is alias.colull aalias.cold commualias.colityowalias.coleddate is alias.colull ) select top alias.col p.alias.col as [post lialias.colk], sum(alias.col) as aalias.colswerscore, alias.col as tablecore from table p joialias.col table q oalias.col p.alias.col = alias.col group by p.alias.col, alias.col order by aalias.colswerscore desc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... or location like x or lower(location) like x ... or upper(location) like x ... or location like x and alias.col >= n order by alias.col desc;"
"declare alias.col int = n select row_number() over (order by alias.col) as rank, alias.col as alias.col, alias.col, alias.col(day, alias.col, getdate()) as [days], alias.col as [post link], alias.col as [post link] from table oa inner join table ca on alias.col = alias.col where alias.col = alias.col and alias.col = alias.col and alias.col = alias.col:int?alias.col and alias.col <> alias.col and alias.col <> alias.col and alias.col < alias.col order by alias.col"
"select alias.col as alias.col, alias.col from table where alias.col > alias.col order by alias.col desc;"
"DECLARE @start DATE = ##StartDate:string?NNN##, @end DATETIME = ##EndDate:string?NNN## + X; CREATE TABLE #Timeslices (Timeslice DATETIME NOT NULL); DECLARE @n DATETIME = X; WHILE DATEDIFF(minute, @n, X) < N BEGIN INSERT INTO #Timeslices VALUES (XYZ); END; WITH QInfo(Timeslice, Unclosed, Answered) AS ( SELECT DATEADD(minute, DATEDIFF(minute, N, CAST(CreationDate AS TIME)), N), CASE WHEN ClosedDate IS NULL THEN N ELSE NULL END, CASE WHEN ClosedDate IS NULL THEN AcceptedAnswerId ELSE NULL END FROM Posts WHERE PostTypeId = N AND CreationDate BETWEEN @start AND @end ), QAggregate(Timeslice, Total, Unclosed, Answered) AS ( SELECT Timeslice, COUNT(Timeslice), COUNT(Unclosed), COUNT(Answered) FROM QInfo GROUP BY Timeslice ) SELECT T.Timeslice, ISNULL(Q.Total, N) AS [Total], ISNULL(Q.Unclosed, N) AS [Unclosed], ISNULL(Q.Answered, N) AS [Answered] FROM QAggregate AS Q FULL OUTER JOIN #Timeslices AS T ON Q.Timeslice = T.Timeslice ORDER BY T.Timeslice"
"declare @startdt datetime create table table (monthyear datetime, totalcount integer, unanswered integer, answeredwithoutba integer, answeredwithba integer); set @startdt = x while @startdt < x begin insert into table select @startdt, count(*), sum(case when answercount = n then n else n end), sum(case when acceptedanswerid is null and answercount > n then n else n end), sum(case when acceptedanswerid is not null then n else n end) from posts where posts.posttypeid in (xyz) set @startdt = dateadd(month,n,@startdt) end select * from table"
"select table.alias.col as alias.col, alias.col as alias.col, alias.col as alias.col, coalias.colvert(float, alias.col)/alias.col as alias.col from table ialias.colalias.coler joialias.col ( select alias.col, coualias.colt(alias.col) as alias.col from table where alias.colame = alias.col group by alias.col ) as pop oalias.col table.alias.col = pop.alias.col ialias.colalias.coler joialias.col ( select owalias.coleralias.col, coualias.colt(alias.col) as alias.col from table where posttypealias.col = alias.col group by owalias.coleralias.col ) as q oalias.col table.alias.col = q.owalias.coleralias.col where alias.col >= alias.col order by alias.col desc;"
"select alias.col as alias.col, tealias.colt from table c ialias.colalias.coler joialias.col table p oalias.col alias.col = alias.col where tealias.colt like alias.col aalias.cold alias.col = alias.col"
"select distialias.colct alias.col as [post id], alias.col as [post lialias.colk], ph.creatioalias.coldate as [revisioalias.col date] from table p ialias.colalias.coler joialias.col table ph oalias.col alias.col = alias.col where ( ph.tabletypeid > alias.col aalias.cold ph.tabletypeid < alias.col aalias.cold alias.col = alias.col## aalias.cold ph.creatioalias.coldate > all ( select alias.col(moalias.colth, alias.col, pph.creatioalias.coldate) from table pph where ( alias.col = palias.col aalias.cold ph.creatioalias.coldate > pph.creatioalias.coldate ) ) )"
"select top alias.col u.displayalias.colame, alias.col, alias.col, alias.col, alias.col from table p left joialias.col table u oalias.col p.owalias.coleruserid = alias.col where alias.col = alias.col aalias.cold year(p.creatioalias.coldate) = alias.col order by alias.col desc"
select alias.col as alias.col from table as p where alias.col = alias.col aalias.cold alias.colot exists (select alias.col from table as h where alias.col = alias.col) order by p.creatioalias.coldate
"select distialias.colct top alias.col table.id, table.title, table.tags, table.posttypeid, table.acceptedaalias.colswerid, table.creatioalias.coldate, table.score, table.viewcoualias.colt, table.owalias.coleruserid, table.owalias.colerdisplayalias.colame, table.lastactivitydate, table.aalias.colswercoualias.colt, table.commealias.coltcoualias.colt, table.favoritecoualias.colt, table.closeddate, table.body from table ialias.colalias.coler joialias.col table oalias.col table.id = table.postid where table.posttypeid = alias.col aalias.cold table.tagid ialias.col (alias.col) aalias.cold table.closeddate is alias.colull order by table.creatioalias.coldate desc"
"select min(alias.col(second, q.creationdate, a.creationdate)) from table q inner join table a on alias.col = alias.col where alias.col(second, q.creationdate, a.creationdate) >= n"
"select alias.col from ( select alias.col as lialias.cole , alias.col as alias.col ualias.colioalias.col select top alias.col alias.col, alias.col+ replace(tagalias.colame,alias.col, alias.col) + alias.col from table ualias.colioalias.col select alias.col, table ) as allalias.col order by lialias.cole"
"select table.id as alias.col, table.id as alias.col, table.reputation from table, table, table, table where table.id = table.postid and table.tagid = table.id and table.tagname = alias.col and table.owneruserid = table.id and table.reputation >= alias.col## order by table.id asc;"
"select table.id, table.displayname, sum(table.upvotes) as [upvotes cast], sum(table.downvotes) as [downvotes cast] from table group by table.id, table.displayname having sum(table.upvotes) > n and sum(table.downvotes) = n order by sum(table.upvotes) desc"
"select top alias.col alias.col as [post lialias.colk], alias.col, coualias.colt(case alias.col whealias.col alias.col thealias.col alias.col ealias.cold) as x, coualias.colt(case alias.col whealias.col alias.col thealias.col alias.col ealias.cold) as x, closeddate from table v ialias.colalias.coler joialias.col table p oalias.col alias.col=v.alias.col where alias.col = alias.col aalias.cold alias.col ialias.col (alias.col) aalias.cold alias.col < alias.col group by v.alias.col, p.closeddate, p.alias.col havialias.colg coualias.colt(case alias.col whealias.col alias.col thealias.col v.alias.col ealias.cold) > alias.col order by alias.col, coualias.colt(case alias.col whealias.col alias.col thealias.col alias.col ealias.cold) desc"
"select alias.col, alias.col from table where alias.col = alias.col"
"DECLARE @minScore INT = ##MinQscore##; DECLARE @TargTags VARCHAR(N) = ##DesiredTags:string##; DECLARE @maxAge INT = ##MaxAgeMonths##; SET @TargTags = X + LTRIM (RTRIM (@TargTags) ) + X; SELECT TOP N Q.Id AS [Post Link] , Q.Tags , Q.Score , CONVERT (VARCHAR(N), Q.Creationdate, N) AS [Date Asked] , Q.AnswerCount AS [Num Answers] FROM Posts AS Q WHERE DATEDIFF (day, Q.CreationDate, GETDATE() ) > N AND DATEDIFF (month, Q.CreationDate, GETDATE() ) <= @maxAge AND Q.PostTypeId = N AND Q.AcceptedAnswerId IS NULL AND Q.ClosedDate IS NULL AND Q.Score >= @minScore AND Q.Tags LIKE @TargTags AND NOT EXISTS ( SELECT Id FROM Posts AS A WHERE A.ParentId = Q.Id AND A.Score > N AND A.PostTypeId = N ) ORDER BY CONVERT (VARCHAR(N), Q.Creationdate, N) ASC , Q.Score DESC"
"select alias.col, alias.col, location from table where lower(location) like x;"
"Declare @minrep as int SET @minrep = ##minrep## ;With postsPerUser as (Select count(id) postCount, OwnerUserId FROM POSTS GROUP BY OwnerUserId) SELECT top N u.id [User Link], u.displayname, u.reputation, postCount, (cast(u.reputation as decimal(N,N)) / cast(p.postCount as decimal(N,N)) ) repRate FROM Users u inner join postsPerUser p ON u.id = p.OwnerUserId where postCount > N and u.reputation > @MinRep order by cast(u.reputation as decimal(N,N)) / cast(p.postCount as decimal(N,N)) desc"
declare @median int; SELECT @median = MAX(Score) FROM (SELECT TOP N percent Score FROM Posts as PU WHERE PostTypeId = N and CommunityOwnedDate IS NULL and PU.OwnerUserId = ##UserId## ORDER BY Score ) as t; declare @medianN int; declare @medianN_belowN int; declare @medianN_total int; select @medianN_belowN = ( SELECT count(*) FROM (SELECT TOP N percent Score FROM Posts as PU WHERE PostTypeId = N and CommunityOwnedDate IS NULL and PU.OwnerUserId = ##UserId## ORDER BY Score ) as t WHERE Score = @median ) select @medianN_total = (SELECT count(*) FROM Posts as PU WHERE PostTypeId = N and CommunityOwnedDate IS NULL and PU.OwnerUserId = ##UserId## and Score = @median ) select @median + @medianN_belowN / @medianN_total;
"select top alias.col alias.col as [post lialias.colk], alias.col, text from table order by alias.col desc"
select coualias.colt(alias.col) from table where alias.col > alias.col
"selealias.col ualias.col.emailhash, coualias.colt(alias.col) as alias.col, ( selealias.col cast(alias.col as varchar) + alias.col + alias.col + alias.col + cast(alias.col as varchar) + alias.col from table ualias.col where ualias.col.emailhash = ualias.col.emailhash order by alias.col desc for alias.colml path (alias.col)) as idsaalias.coldalias.colames from table ualias.col where ualias.col.emailhash is alias.colot alias.colull aalias.cold (selealias.col sum(alias.col) from table ualias.col where ualias.col.emailhash = ualias.col.emailhash) > alias.col aalias.cold (selealias.col coualias.colt(*) from table ualias.col where ualias.col.emailhash = ualias.col.emailhash aalias.cold reputatioalias.col > alias.col) > alias.col group by ualias.col.emailhash havialias.colg coualias.colt(alias.col) > alias.col order by alias.col desc"
"declare @tagalias.colame varcharaliasalias.col) declare @tagialias.colput bit set @tagalias.colame = rtrimalias##tagalias.colame:strialias.colg##) declare alias.col ialias.colt = ##userid## if rtrimalias@tagalias.colame) = alias.col set @tagialias.colput = alias.col else set @tagialias.colput = alias.col if @tagialias.colput = alias.col aalias.cold alias.col = alias.col select alias.col + alias.colalias.col + alias.col else with usertablecores as aliasselect a.table, alias.col, sumaliascase alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col ealias.cold) as table from table v ialias.colalias.coler joialias.col table a oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table q oalias.col a.parealias.coltid = alias.col ialias.colalias.coler joialias.col table pt oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table t oalias.col alias.col = alias.col where alias.col ialias.col aliasalias.colyz) aalias.cold alias.col = alias.col aalias.cold q.creatioalias.coldate > alias.col## aalias.cold aliasa.commualias.colityowalias.coleddate is alias.colull or a.commualias.colityowalias.coleddate > v.creatioalias.coldate) aalias.cold alias@tagialias.colput = alias.col or alias.col = @tagalias.colame) aalias.cold a.table is alias.colot alias.colull group by a.table, alias.col) , table as alias select tagalias.colame, table, raalias.colkalias) over aliaspartitioalias.col by tagalias.colame order by table desc) raalias.colk, table from usertablecores) select tagalias.colame, raalias.colk, table , table [user lialias.colk], table from table where aliastable = alias.col or alias.col = alias.col) order by tagalias.colame, raalias.colk"
"select alias.col, alias.col*floor(x.viewcoualias.colt/alias.col)+alias.col as views, coualias.colt(alias.col) as alias.columber from table x where alias.col=alias.col group by alias.col, floor(x.viewcoualias.colt/alias.col)"
"selealias.col alias.col, count(alias.col) from ( selealias.col cast( cast(alias.col(alias.col, alias.col) as varchar) + alias.col + cast(alias.col(alias.col, alias.col) as varchar) + alias.col as date) month, alias.col from table p join table pt on alias.col = alias.col join table t on alias.col = alias.col where alias.col in (alias.colyz) ) as alias.col where month between cast(alias.col as date) and cast(alias.col as date) group by tagname, month order by month asc, count(alias.col) desc"
"SET NOCOUNT OFF; DECLARE @Total INT; SELECT @Total = COUNT(*) FROM Posts p WHERE p.PostTypeId = N; DECLARE @ClosedNonDupes INT SELECT @ClosedNonDupes = COUNT(*) FROM PostHistory q WHERE q.PostHistoryTypeId = N AND q.Comment != N; SET NOCOUNT ON; SELECT @ClosedNonDupes, @Total, (@ClosedNonDupes / @Total);"
"select alias.col as alias.col, count(*) as alias.col from table a where a.tabletypeid in (alias.col) and upper(alias.col) like upper(alias.col) and alias.col > alias.col group by alias.col order by alias.col desc"
"declare alias.col ialias.colt = ##userid## select alias.col, alias.col, coualias.colt(alias.col) as alias.columberoftable, sum(alias.col) as alias.col from table p ialias.colalias.coler joialias.col table pt oalias.col alias.col = coalesce(p.parealias.coltid, alias.col) ialias.colalias.coler joialias.col table t oalias.col alias.col = alias.col where (p.owalias.coleruserid = alias.col) aalias.cold (p.commualias.colityowalias.coleddate is alias.colull) group by alias.col, alias.col havialias.colg alias.col is alias.colot alias.colull order by alias.col desc, sum(alias.col) desc"
"declare @UserId int = ##UserId##; with fights as ( select myAnswer.ParentId as Question, myAnswer.Score as MyScore, martijnsAnswer.Score as MartijnsScore from Posts as myAnswer inner join Posts as martijnsAnswer on martijnsAnswer.OwnerUserId = N and myAnswer.ParentId = martijnsAnswer.ParentId where myAnswer.ownerUserId = @UserId and myAnswer.postTypeId = N ) select case when myScore > MartijnsScore then X when myScore < MartijnsScore then X else X end as X, Question as [Post Link], myScore as X, MartijnsScore as X from fights;"
"select table.id as alias.col, sum(case table.votetypeid whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col else alias.col ealias.cold) as [alias.col] from table, table where table.id = table.postid aalias.cold alias.col(day, table.creatioalias.coldate, table.creatioalias.coldate) > alias.col group by table.id order by alias.col desc;"
"select alias.col alias.col, alias.col, alias.col, location, websiteurl from table where lower(location) like lower(x) and websiteurl != x order by alias.col desc"
"declare alias.col ialias.colt = ##userid## select sum(case whealias.col alias.col = alias.col thealias.col alias.col whealias.col alias.col = alias.col aalias.cold posttypeid = alias.col thealias.col alias.col whealias.col alias.col = alias.col aalias.cold posttypeid = alias.col thealias.col alias.col whealias.col alias.col = alias.col thealias.col alias.col whealias.col alias.col = alias.col thealias.col isalias.colull(boualias.coltyamoualias.colt,alias.col) whealias.col alias.col = alias.col thealias.col alias.col whealias.col alias.col = alias.col thealias.col alias.col ealias.cold) from table ialias.colalias.coler joialias.col table oalias.col table.id = table.postid where table.owalias.coleruserid = alias.col"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col,id from table where lower(location) like x order by alias.col desc"
"select alias.col alias.col, postalias.col alias.col, coalias.colvert(char(alias.col), creatioalias.coldate, alias.col) date, tealias.colt from table where tealias.colt like alias.col aalias.cold useralias.col = ##useralias.col##"
"select top alias.col## row_number() over(order by alias.col desc) as [#], id as [user link], alias.col, location, lastaccessdate, upvotes, downvotes from table where ( lower(location) like x or upper(location) like x ... ) and not (location like x or location like x ...) and len(location) > n"
"select alias.col, alias.col, alias.col, alias.col as alias.col, alias.col as [alias.col lialias.colk] from table where alias.col = alias.col aalias.cold alias.col>alias.col aalias.cold alias.col >= alias.col aalias.cold alias.col <alias.col order by alias.col"
"with table as ( select alias.col as alias.col, alias.col, alias.col, alias.col as alias.col, raalias.colk() over(partitioalias.col by alias.col order by alias.col) as alias.col, alias.col as alias.col, alias.col+table(day, alias.col, alias.col) as daysmembership from table b joialias.col table u oalias.col b.alias.col = alias.col where b.alias.colame = alias.col ), table as ( select alias.col, mialias.col(alias.col) firstwoalias.col from table group by alias.col ) select case table whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col else alias.col ealias.cold as [type], table as [user lialias.colk], table as [daysmembership], table(day, firstwoalias.col, alias.col) as [dayssialias.colalias.colalias.colst], be.alias.col as [member sialias.colalias.col], be.alias.col as [date woalias.col] from table be joialias.col table fe oalias.col table=fe.alias.col order by table desc, table asc"
"create table table ( [accountid] bigint identity (n, n) not null, [firstname] varchar (n) null, [lastname] varchar (n) null, [createddate] datetime null, constraint [pk_customer] primary key clustered ([accountid] asc) ); go create table tablestatushistory ( [recordid] bigint identity (n, n) not null, [accountid] bigint not null, [status] varchar (n) null, [createddate] datetime null, constraint [pk_customerstatushistory] primary key clustered ([recordid] asc), ); go insert table ([firstname], [lastname], [createddate]) values (xyz)) insert table ([firstname], [lastname], [createddate]) values (xyz)) insert table ([firstname], [lastname], [createddate]) values (xyz)) insert table ([firstname], [lastname], [createddate]) values (xyz)) go insert tablestatushistory ([accountid], [status], [createddate]) values (xyz)) insert tablestatushistory ([accountid], [status], [createddate]) values (xyz)) insert tablestatushistory ([accountid], [status], [createddate]) values (xyz)) insert tablestatushistory ([accountid], [status], [createddate]) values (xyz)) insert tablestatushistory ([accountid], [status], [createddate]) values (xyz)) insert tablestatushistory ([accountid], [status], [createddate]) values (xyz)) insert tablestatushistory ([accountid], [status], [createddate]) values (xyz)) insert tablestatushistory ([accountid], [status], [createddate]) values (xyz)) go"
"select top alias.col case whealias.col alias.col = alias.col thealias.col x else x ealias.cold as [post type], alias.col, p.title, sum(case whealias.col votetypeid = alias.col thealias.col alias.col else case whealias.col votetypeid = alias.col thealias.col alias.col else alias.col ealias.cold ealias.cold) as ialias.colctable from table v joialias.col table p oalias.col alias.col=alias.col where v.creatioalias.coldate > alias.col(day, alias.col, getdate()) group by alias.col, p.alias.col, p.title order by ialias.colctable desc, alias.col"
"select table.id as alias.col, table.alias.col, table.location from table where table.location like alias.col order by alias.col desc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... order by alias.col desc;"
"select top alias.col alias.col as alias.col, u.displayalias.colame as [user alias.colame], u.reputatioalias.col as alias.col from table u where upper(u.locatioalias.col) like upper(alias.col + ##yourlocatioalias.col:strialias.colg## + alias.col) order by u.reputatioalias.col desc"
"select alias.col as alias.col , alias.col as tablecore , alias.col as alias.col , alias.col as tablecore , alias.col as alias.col from table c joialias.col table p oalias.col c.alias.col = alias.col where alias.col > alias.col aalias.cold alias.col like alias.col order by alias.col desc"
"selealias.col alias.col, count(alias.col) from ( selealias.col cast( cast(alias.col(alias.col, alias.col) as varchar) + alias.col + cast(alias.col(alias.col, alias.col) as varchar) + alias.col as datetime) alias.col, alias.col from table p join table pt on alias.col = alias.col join table t on alias.col = alias.col where alias.col in (alias.colyz) > ##alias.col## and alias.col(alias.col, alias.col) > ##alias.col## ) as alias.col group by alias.col, alias.col order by alias.col asc, alias.col asc"
"select top(alias.col) row_alias.columber() over(order by alias.col) as #, alias.col, u.displayalias.colame, u.reputatioalias.col, alias.col, alias.col, u.lastaccessdate, u.locatioalias.col, alias.col from table u where u.displayalias.colame collate sql_latialias.colalias.col_gealias.coleral_cpalias.col_ci_as like ##displayalias.colame:strialias.colg## order by u.reputatioalias.col desc"
"selealias.col alias.col, coualias.colt( alias.col ) as table, coualias.colt( alias.col ) as alias.col, alias.col( avg( cast( alias.col as float ) ) , alias.col ) as avealias.columofaalias.colswers, alias.col( cast( coualias.colt( alias.col ) as float) / coualias.colt( alias.col ) , alias.col ) as acceptaalias.colcerate from table t joialias.col posttable pt oalias.col alias.col = alias.col joialias.col table p oalias.col alias.col = alias.col where alias.col is alias.colull group by alias.col order by acceptaalias.colcerate asc"
"with table as ( select alias.col as alias.col, alias.col() as alias.col) select alias.col(alias.col, t.alias.col, t.alias.col) as alias.col, alias.col(alias.col, alias.col(alias.col, alias.col(alias.col, t.alias.col, t.alias.col), t.alias.col), t.alias.col) as alias.col, alias.col(alias.col, alias.col(alias.col, alias.col(alias.col, alias.col(alias.col, alias.col(alias.col, t.alias.col, t.alias.col), t.alias.col), t.alias.col), alias.col(alias.col, alias.col(alias.col, t.alias.col, t.alias.col), t.alias.col)), t.alias.col) as alias.col from table t"
"selealias.col cast(table.reputation as float)/ cast(alias.col(day, table.creationdate, getdate()) as float) as alias.col, table.reputation as [user reputation], table.creationdate as [creation date], alias.col(day, table.creationdate, getdate()) as [profile age] from table order by alias.col desc"
"select coualias.colt(*) from table joialias.col table as owalias.coler oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold aalias.colswercoualias.colt > alias.col aalias.cold acceptedaalias.colswerid is alias.colull aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold owalias.coler.lastaccessdate <= dateadd(mm, alias.col, getdate())"
"set alias.colocoualias.colt oalias.col create table table (alias.col ialias.colt alias.colealias.coltity, [start] datetime, [fialias.colish] datetime) ialias.colsert table select top alias.col alias.colull, alias.colull from table declare alias.col datetime select alias.col = creatioalias.coldate from table where alias.col = (select max(palias.col.alias.col) from table palias.col) update table set [start] = dateadd(d, (alias.col - alias.col) * alias.col, alias.col), [fialias.colish] = dateadd(d, (alias.col - alias.col) * alias.col, alias.col) select start, (select coualias.colt(*) from table where parealias.coltalias.col is alias.colull aalias.cold creatioalias.coldate betweealias.col [start] aalias.cold [fialias.colish]) as [total questioalias.cols], (select coualias.colt(*) from table where parealias.coltalias.col is alias.colull aalias.cold closeddate is alias.colot alias.colull aalias.cold creatioalias.coldate betweealias.col [start] aalias.cold [fialias.colish]) as [closed], (select coualias.colt(*) from table where parealias.coltalias.col is alias.colull aalias.cold score > alias.col aalias.cold creatioalias.coldate betweealias.col [start] aalias.cold [fialias.colish]) as [score alias.col or higher], (select coualias.colt(*) from table where parealias.coltalias.col is alias.colull aalias.cold acceptedaalias.colsweralias.col is alias.colot alias.colull aalias.cold creatioalias.coldate betweealias.col [start] aalias.cold [fialias.colish]) as [with accepted aalias.colswers], (select coualias.colt(*) from table where parealias.coltalias.col is alias.colull aalias.cold aalias.colswercoualias.colt > alias.col aalias.cold creatioalias.coldate betweealias.col [start] aalias.cold [fialias.colish]) as [with alias.col or more aalias.colswers], (select coualias.colt(*) from table where parealias.coltalias.col is alias.colot alias.colull aalias.cold alias.col ialias.col (alias.col) from table where parealias.coltalias.col is alias.colot alias.colull aalias.cold creatioalias.coldate betweealias.col [start] aalias.cold [fialias.colish]) as [total aalias.colswers] from table"
select count(alias.col) as count from table where table.useralias.col = ##useralias.col##;
"select top alias.col table.id as [post lialias.colk], table.viewcoualias.colt as [view coualias.colt] from table where table.posttypeid = alias.col aalias.cold table.viewcoualias.colt >= alias.col order by table.viewcoualias.colt desc"
"select alias.col, table.displayalias.colame, table.uptable, table.id, table.body, table.creatioalias.coldate, coualias.colt(*) as aalias.colsweruptable from table ialias.colalias.coler joialias.col posttable oalias.col posttable.tagid = table.id ialias.colalias.coler joialias.col table oalias.col table.parealias.coltid = posttable.postid ialias.colalias.coler joialias.col table oalias.col table.postid = table.id aalias.cold alias.col = alias.col ialias.colalias.coler joialias.col table oalias.col table.id = alias.col where tagalias.colame ialias.col (alias.col) group by alias.col, table.displayalias.colame, table.uptable, table.id, table.body, table.creatioalias.coldate order by aalias.colsweruptable desc"
"select alias.col, date = alias.col(day, datediff(day, n, creationdate), n), min = min(creationdate), max = max(creationdate) from table group by alias.col, alias.col(day, datediff(day, n, creationdate), n)"
select top alias.col alias.col [commealias.colt lialias.colk] from table c where alias.col = alias.col## aalias.cold alias.col like alias.col
"select top alias.col alias.col as [user lialias.colk], alias.colutatioalias.col as alias.col, displayalias.colame as alias.colame, locatioalias.col, age, alias.col, dowalias.colvotes from table where dowalias.colvotes > alias.col aalias.cold alias.col < alias.col order by dowalias.colvotes desc"
"select top alias.col owalias.coleruserid as [user lialias.colk], coualias.colt(*) as postcoualias.colt from table where alias.col=alias.col group by owalias.coleruserid order by coualias.colt(*) desc"
"select top alias.col alias.col as [user lialias.colk], creatioalias.coldate, reputatioalias.col, dowalias.colvotes*alias.col/(dowalias.colvotes+alias.col) as dowalias.colpct, dowalias.colvotes, alias.col+dowalias.colvotes as alias.col from table where dowalias.colvotes > alias.col aalias.cold alias.col <> alias.col order by dowalias.colvotes desc, dowalias.colpct desc"
select coualias.colt(*) as alias.col from table where alias.col = alias.col aalias.cold ( body like x or body like x or body like x or body like x)
"selealias.col alias.col, count(alias.col) from ( selealias.col cast( cast(alias.col(alias.col, alias.col) as varchar) + alias.col + cast(alias.col(alias.col, alias.col) as varchar) + alias.col as datetime) alias.col, alias.col from table p join table pt on alias.col = alias.col join table t on alias.col = alias.col where alias.col in ( selealias.col alias.col from table t where alias.col like alias.col ) ) as alias.col group by alias.col, alias.col order by alias.col asc, alias.col asc"
"selealias.col ualias.col.emailhash, coualias.colt(alias.col) as alias.col, ( selealias.col cast(alias.col as varchar) + alias.col + alias.col + alias.col + cast(alias.col as varchar) + alias.col from table ualias.col where ualias.col.emailhash = ualias.col.emailhash order by alias.col desc for alias.colml path (alias.col)) as idsaalias.coldalias.colames from table ualias.col where ualias.col.emailhash is alias.colot alias.colull aalias.cold (selealias.col sum(alias.col) from table ualias.col where ualias.col.emailhash = ualias.col.emailhash) > alias.col aalias.cold (selealias.col coualias.colt(*) from table ualias.col where ualias.col.emailhash = ualias.col.emailhash aalias.cold reputatioalias.col > alias.col) > alias.col group by ualias.col.emailhash havialias.colg coualias.colt(alias.col) > alias.col order by alias.col desc"
"select table.id as alias.col, table.score as alias.col, table.creatioalias.coldate as alias.col from ( select alias.col from table where alias.col = alias.col aalias.cold table.score <= alias.col ) as table order by table.score asc"
"select alias.col as alias.col, alias.col, case whealias.col alias.col = alias.col thealias.col alias.colull else alias.col ealias.cold as aalias.colswers, case whealias.col q.commualias.colityowalias.coleddate is alias.colot alias.colull thealias.col x else alias.colull ealias.cold as wiki, alias.col as closed, q.lastactivitydate as [last active], q.owalias.coleruseralias.col as [user lialias.colk] from table q where alias.col = alias.col aalias.cold alias.col is alias.colot alias.colull aalias.cold q.acalias.colptedaalias.colsweralias.col is alias.colull aalias.cold (alias.col is alias.colull or alias.col = alias.col or alias.colot exists ( select alias.col from table a where a.posttypealias.col = alias.col aalias.cold a.parealias.coltalias.col = alias.col aalias.cold alias.col > alias.col) ) order by alias.col desc"
"declare @mialias.colquestioalias.colcoualias.colt ialias.colt = alias.col declare table table ( alias.col ialias.colt alias.colot alias.colull, alias.col ialias.colt alias.colot alias.colull, primary key clustered(alias.col, alias.col) ) ialias.colsert ialias.colto table (alias.col, alias.col) select alias.col, alias.col from table where alias.col ialias.col (alias.col) as alias.col, sum(alias.col) as alias.col, sum(alias.col) as alias.col, sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as totalaalias.colswered, sum(case whealias.col q.acalias.colptedaalias.colswerid is alias.colull thealias.col alias.col else alias.col ealias.cold) as totalacalias.colpted, sum(q.favoritecoualias.colt) as totalfavorites from table tq ialias.colalias.coler joialias.col table q oalias.col alias.col = tq.alias.col where alias.col is alias.colull group by tq.alias.col ) a ialias.colalias.coler joialias.col table t oalias.col alias.col = a.alias.col order by alias.col desc, alias.col desc, alias.col desc"
"select alias.col, alias.col, alias.col from table where alias.col like alias.col aalias.cold alias.col alias.colot like alias.col aalias.cold posttypealias.col = alias.col"
"selealias.col top alias.col t.tagalias.colame, coualias.colt(alias.col) as [totalquestioalias.cols], sum(p.aalias.colswercoualias.colt) as [totalaalias.colswers], cast(sum(p.aalias.colswercoualias.colt) as float) / cast(coualias.colt(alias.col) as float) as [aalias.colswersperquestioalias.col] from table as p joialias.col table as pt oalias.col alias.col = pt.alias.col joialias.col table as t oalias.col alias.col = alias.col where alias.col = alias.col group by t.tagalias.colame havialias.colg coualias.colt(alias.col) > alias.col order by [aalias.colswersperquestioalias.col] desc"
"select top alias.col alias.col as [post lialias.colk], lealias.col(body) as lealias.colgth, lastactivitydate as [last activity date] from table where posttypealias.col = alias.col aalias.cold owalias.coleruseralias.col = ##useralias.col## order by lealias.colgth desc"
"select alias.col, alias.col, alias.col, alias.col, alias.col, q.table, alias.col, alias.col, alias.col, alias.col from table as q ialias.colalias.coler joialias.col table as a oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table oalias.col table.postid = alias.col ialias.colalias.coler joialias.col table oalias.col table.id = table.tagid where alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold table.tagalias.colame = alias.col aalias.cold alias.col like alias.col ..."
"with table as ( selealias.col alias.col , mialias.col(alias.col) as alias.col from table where tabletypeid ialias.col (alias.col) group by alias.col havialias.colg coualias.colt(case whealias.col tabletypeid = alias.col thealias.col alias.col ealias.cold) - coualias.colt(case whealias.col tabletypeid = alias.col thealias.col alias.col ealias.cold) - coualias.colt(case whealias.col tabletypeid = alias.col thealias.col alias.col ealias.cold) > alias.col ), recealias.colttable as ( selealias.col alias.col , alias.col , alias.col , raalias.colk() over (partitioalias.col by alias.col order by alias.col desc) as alias.col from table where tabletypeid ialias.col (alias.col) ), table as ( selealias.col alias.col , alias.col as alias.col from table p ialias.colalias.coler joialias.col table pt oalias.col alias.col = alias.col ) selealias.col table.alias.col as alias.col , alias.col , alias.col from table ialias.colalias.coler joialias.col recealias.colttable oalias.col table.alias.col = recealias.colttable.alias.col aalias.cold alias.col = alias.col left outer joialias.col table oalias.col recealias.colttable.alias.col = table.alias.col aalias.cold cast(recealias.colttable.alias.col as date) = table.alias.col ialias.colalias.coler joialias.col table oalias.col table.alias.col = table.id where table.alias.col is alias.colull order by alias.col;"
"select top alias.col selfaalias.colswer.body, selfaalias.colswer.id as [post lialias.colk], selfaalias.colswer.creatioalias.coldate, lealias.col(selfaalias.colswer.body) as lealias.colgth, selfaalias.colswer.score as score, questioalias.col.viewcoualias.colt from table as questioalias.col ialias.colalias.coler joialias.col table as allaalias.colswers oalias.col allaalias.colswers.parealias.coltid = questioalias.col.id ialias.colalias.coler joialias.col table as selfaalias.colswer oalias.col selfaalias.colswer.owalias.coleruserid = questioalias.col.owalias.coleruserid aalias.cold selfaalias.colswer.parealias.coltid = questioalias.col.id where selfaalias.colswer.score <= alias.col aalias.cold questioalias.col.posttypeid = alias.col aalias.cold selfaalias.colswer.posttypeid = alias.col aalias.cold ( questioalias.col.acceptedaalias.colswerid != selfaalias.colswer.id or questioalias.col.acceptedaalias.colswerid is alias.colull) aalias.cold selfaalias.colswer.body like x aalias.cold selfaalias.colswer.body alias.colot like x aalias.cold selfaalias.colswer.body alias.colot like x aalias.cold selfaalias.colswer.body alias.colot like x group by selfaalias.colswer.id, selfaalias.colswer.creatioalias.coldate, lealias.col(selfaalias.colswer.body), selfaalias.colswer.score, questioalias.col.viewcoualias.colt, selfaalias.colswer.body havialias.colg coualias.colt(distialias.colct allaalias.colswers.id) > alias.col order by selfaalias.colswer.score asc, lealias.col(selfaalias.colswer.body) asc, selfaalias.colswer.creatioalias.coldate desc"
select alias.col from table where alias.col<alias.col
"select alias.col alias.col, tealias.colt, alias.col, alias.col, alias.col alias.col from ( select alias.col alias.col, tealias.colt, c.alias.col, alias.col alias.col, alias.col from table c join table p on alias.col = c.alias.col where alias.col = ##alias.col## union select alias.col, tealias.colt, c.alias.col, alias.col alias.col, alias.col from table p join table c on c.alias.col = alias.col where p.owneralias.col = ##alias.col## ) alias.col where lower(tealias.colt) like lower(alias.col)"
"declare alias.col ialias.colt = ##userid## select alias.col, coualias.colt(*) as dowalias.coltable from table ialias.colalias.coler joialias.col posttable oalias.col posttable.tagid = table.id ialias.colalias.coler joialias.col table oalias.col table.parealias.coltid = posttable.postid ialias.colalias.coler joialias.col table oalias.col table.postid = table.id aalias.cold alias.col = alias.col where table.owalias.coleruserid = alias.col group by alias.col order by dowalias.coltable desc"
"declare @igalias.coloredays alias.columeric = alias.col declare @mialias.colagedays alias.columeric = alias.col declare @mialias.colrep alias.columeric = alias.col declare @mialias.coltable alias.columeric = alias.col declare alias.col datetime selealias.col alias.col = max(alias.col) from table declare @passivereptable table (id ialias.colt, alias.col ialias.colt, owalias.coleruserid ialias.colt) ialias.colsert @passivereptable selealias.col alias.col, alias.col = sum(case whealias.col alias.col = alias.col thealias.col alias.col whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold), p.owalias.coleruserid from table v joialias.col table p oalias.col alias.col = alias.col where v.alias.col ialias.col (alias.col) aalias.cold p.commualias.colityowalias.coleddate is alias.colull aalias.cold datediff(day, p.alias.col, v.alias.col) > @igalias.coloredays aalias.cold datediff(day, p.alias.col, alias.col) > @mialias.colagedays group by alias.col, p.owalias.coleruserid declare @tabletats table (owalias.coleruserid ialias.colt, aalias.colswercalias.colt ialias.colt, alias.col float) ialias.colsert @tabletats selealias.col alias.col, aalias.colswercalias.colt = coualias.colt ( alias.col ), alias.col = sum ( p.alias.col) from @passivereptable p joialias.col table u oalias.col alias.col = p.owalias.coleruserid where u.reputatioalias.col > @mialias.colrep group by alias.col set alias.colocoualias.colt oalias.col selealias.col top alias.col aalias.colswercalias.colt as [aalias.colswer with passive table], u.displayalias.colame as [display alias.colame], s.alias.col as [passive alias.col], cast(s.alias.col / s.aalias.colswercalias.colt as alias.columeric(alias.col,alias.col)) as [average aalias.colswer passive alias.col] from @tabletats s, table u where alias.col = s.owalias.coleruserid aalias.cold aalias.colswercalias.colt > @mialias.coltable order by [average aalias.colswer passive alias.col] desc"
"selealias.col alias.col, count(alias.col) from ( selealias.col cast( cast(alias.col(alias.col, alias.col) as varchar) + alias.col + cast(alias.col(alias.col, alias.col) as varchar) + alias.col as datetime) month, alias.col from table p join table pt on alias.col = alias.col join table t on alias.col = alias.col where alias.col in (alias.colyz) ) as alias.col group by tagname, month order by month asc, count(alias.col) desc"
"selealias.col table.id as alias.col, coualias.colt(table.id) as alias.col, cast(avg(cast(alias.col as alias)) as alias.columeric(alias.col,alias.col)) as [average aalias.colswer alias.col] from table ialias.colalias.coler joialias.col table oalias.col table.id = table.owalias.coleruserid ialias.colalias.coler joialias.col table oalias.col table.parealias.coltid = table.postid where alias.col = alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold closeddate is alias.colull group by table.id havialias.colg coualias.colt(table.id) >= alias.col aalias.cold cast(avg(cast(alias.col as alias)) as alias.columeric(alias.col,alias.col)) > alias.col order by [average aalias.colswer alias.col] desc"
"selealias.col top alias.col a.owalias.coleruserid as [user lialias.colk], cast( sum( q.viewcoualias.colt ) as float ) / u.reputatioalias.col as alias.col, sum( alias.col ) as alias.col, sum( q.viewcoualias.colt ) as alias.col, u.reputatioalias.col, coualias.colt( * ) as alias.col from table a joialias.col table q oalias.col alias.col = a.parealias.coltid joialias.col table u oalias.col alias.col = a.owalias.coleruserid group by a.owalias.coleruserid, u.reputatioalias.col havialias.colg coualias.colt(*) > alias.col order by alias.col"
"with table as ( select alias.col from pendingtable ) select table as closereason , table as alias.col , count(alias.col) as alias.col from table as reasons left outer join table on reasons.id = table.closeasofftopicreasontypeid where reasons.deactivationdate is table and ( table.closereasontypeid is table or ( table.closereasontypeid = n and table.flagtypeid in (alias.colyz) ) ) group by reasons.id, table, table union all select alias.col, table, count(case when closereasontypeid = n then n end) from table union all select alias.colalias.col, table, count(case when closereasontypeid = n then n end) from table union all select alias.col, table, count(case when closereasontypeid = n then n end) from table union all select alias.col, table, count(case when closereasontypeid = n then n end) from table;"
"select top alias.col alias.col as [commealias.colt score], pt.alias.colame as [commealias.colted oalias.col], alias.col as [commealias.colt], u.displayalias.colame as [commealias.colt by], alias.col as [post lialias.colk] from table c, table pt, table p, table u where alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold alias.col = alias.col order by alias.col desc"
"select top alias.col alias.col as [post lialias.colk], alias.col as [post alias.col] from table where alias.col <= alias.col aalias.cold aalias.colswercoualias.colt=alias.col aalias.cold alias.col is alias.colull aalias.cold creatioalias.coldate < dateadd(moalias.colth, alias.col, getdate()) order by creatioalias.coldate desc"
"select alias.col as alias.col, coualias.colt(alias.col) from table q ialias.colalias.coler joialias.col table a oalias.col alias.col = alias.col where alias.colot exists (select alias.col from table a where alias.col = alias.col aalias.cold alias.col > alias.col) group by alias.col order by coualias.colt(alias.col) desc, alias.col"
"DECLARE @highRep INT = ##ShowScore:int?N##; SELECT DATEADD( MONTH, DATEDIFF( MONTH, N, u.CreationDate ), N ) AS Date , N.N * SUM( CASE WHEN u.Reputation > @highRep THEN N ELSE N END ) / COUNT (u.ID) AS [High Rep ] FROM Users u GROUP BY DATEADD( MONTH, DATEDIFF( MONTH, N, u.CreationDate ), N ) ORDER BY DATEADD( MONTH, DATEDIFF( MONTH, N, u.CreationDate ), N )"
declare alias.col ialias.colt = ##userid## select alias.col from table p ialias.colalias.coler joialias.col table palias.col oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table v oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold p.owalias.coleruserid = alias.col aalias.cold palias.col.owalias.coleruserid <> alias.col
"with toptable as ( select top alias.col table from table t group by table order by coualias.colt(alias.col) desc ) select table, coualias.colt(alias.col) as coualias.colt from table q joialias.col table pt oalias.col alias.col = alias.col joialias.col table t oalias.col alias.col = ptable where ptable ialias.col (select alias.col from toptable) aalias.cold q.commualias.colityowalias.coleddate is alias.colull group by table order by coualias.colt desc"
"declare alias.col alias.colvarchar(alias.col) declare @part alias.colvarchar(alias.col) select alias.col = coalesce(alias.col +alias.col,alias.col) + value from table(db_alias.colame(),alias.col) order by row_alias.columber() over( order by (select alias.col)) desc select alias.col + alias.col set alias.col = alias.colull select alias.col = coalesce(alias.col +alias.col,alias.col) + value from table(db_alias.colame(),alias.col) select alias.col + alias.col select value + alias.col as [tealias.colt()] from table(db_alias.colame(),alias.col) where value is alias.colot alias.colull order by row_alias.columber() over( order by (select alias.col)) desc for alias.colml path(alias.col)"
"select top alias.col row_alias.columber() over(order by reputatioalias.col desc) as [#], id as [user lialias.colk], reputatioalias.col from table where lower(locatioalias.col) like x or lower(locatioalias.col) like x ... or upper(locatioalias.col) like x ... order by reputatioalias.col desc;"
"select alias.colear(alias.col) as alias.col, alias.col, count(*) from table p join table pt on alias.col=alias.col join ( select alias.col, tb.alias.col, count(*) as alias.col from table b left outer join table tb on alias.col=alias.col group balias.col alias.col, tb.alias.col having count(*) > n ) t on alias.col=alias.col group balias.col alias.colear(alias.col), alias.col order balias.col alias.col, alias.col"
"declare @begin_date datetime = (select min(alias.col) from table); declare @end_date datetime = (select max(alias.col) from table); declare @width int = n; with dates as ( select (@begin_date + n) as datevalue union all select datevalue + @width from dates where datevalue + @width < @end_date ) select d.datevalue as [date], (select count(p.id) from posts as p where p.posttypeid = n and p.tags like x ... and d.datevalue < p.alias.col and p.alias.col < d.datevalue + @width) as [idreqs], (select count(p.id) from posts as p where p.posttypeid = n and d.datevalue < p.alias.col and p.alias.col < d.datevalue + @width) as [total] from dates as d option (maxrecursion n)"
"selealias.col ualias.col.emailhash, coualias.colt(alias.col) as alias.col, ( selealias.col cast(alias.col as varchar) + alias.col + alias.col + alias.col + cast(alias.col as varchar) + alias.col from table ualias.col where ualias.col.emailhash = ualias.col.emailhash order by alias.col desc for alias.colml path (alias.col)) as idsaalias.coldalias.colames from table ualias.col where ualias.col.emailhash is alias.colot alias.colull aalias.cold (selealias.col sum(alias.col) from table ualias.col where ualias.col.emailhash = ualias.col.emailhash) > alias.col aalias.cold (selealias.col coualias.colt(*) from table ualias.col where ualias.col.emailhash = ualias.col.emailhash aalias.cold reputatioalias.col > alias.col) > alias.col group by ualias.col.emailhash havialias.colg coualias.colt(alias.col) > alias.col order by alias.col desc"
"select top alias.col (case alias.col whealias.col alias.col thealias.col x whealias.col alias.col thealias.col x ealias.cold) as [t], p.id as [post lialias.colk], p.owalias.coleruserid as [user lialias.colk], p.score as [score], lealias.col(p.body) as [post lealias.colgth], (p.score * lealias.col(p.body)) as alias.col from table p where (alias.col = alias.col or alias.col = alias.col) aalias.cold commualias.colityowalias.coleddate is alias.colull order by alias.col desc"
"select top alias.col coualias.colt(alias.col) as alias.col, maalias.col(creatioalias.coldate) as alias.col, alias.col as [user lialias.colk] from table where lower(commealias.colt) like alias.col group by alias.col order by alias.col desc"
"select max(alias.col) as max_alias.col, max(lasteditdate) as max_lasteditdate, max(lastactivitydate) as max_lastactivitydate from table ;"
"declare table table (id ialias.colt,sectoralias.col varchar(alias.col),sectoralias.col varchar(alias.col)) ialias.colsert ialias.colto table select alias.col,alias.col,alias.col ualias.colioalias.col all select alias.col,alias.col,alias.col ualias.colioalias.col all select alias.col,alias.col,alias.col ualias.colioalias.col all select alias.col,alias.col,alias.col ualias.colioalias.col all select alias.col,alias.col,alias.col ualias.colioalias.col all select alias.col,alias.col,alias.col ualias.colioalias.col all select alias.col,alias.col,alias.col select salias.col.id, alias.col(( select salias.col.sectoralias.col + alias.col + salias.col.sectoralias.col from table salias.col where salias.col.id = salias.col.id for alias.colml path (alias.col)) ,alias.col,alias.col,alias.col) as sectors from table salias.col group by salias.col.id;"
"wialias.colh alias.colable as ( selecalias.col alias.col as alias.col, mialias.col(alias.col.coualias.colalias.col) as mialias.colalias.colagcoualias.colalias.col, alias.col.id as alias.colagid from alias.colable as p joialias.col alias.colable as palias.col oalias.col alias.col = palias.col.alias.col joialias.col alias.colable as alias.col oalias.col palias.col.alias.colagid = alias.col.id where p.posalias.colalias.colypeid = alias.col aalias.cold p.closeddaalias.cole is alias.colull aalias.cold p.score > alias.col aalias.cold p.aalias.colswercoualias.colalias.col = alias.col aalias.cold favorialias.colecoualias.colalias.col > alias.col group by alias.col, alias.col.id), alias.colable as ( selecalias.col alias.col, alias.colagid, alias.col.alias.colable, coualias.colalias.col from alias.colable joialias.col alias.colable as alias.col oalias.col alias.colable.alias.colagid = alias.col.id aalias.cold alias.colable.mialias.colalias.colagcoualias.colalias.col = alias.col.coualias.colalias.col ) selecalias.col alias.colagid, alias.colable, coualias.colalias.col(alias.colagid) as alias.colable, mialias.col(coualias.colalias.col) as alias.colagcoualias.colalias.col, roualias.cold(coalias.colveralias.col(decimal,coualias.colalias.col(alias.colagid)) / coalias.colveralias.col(decimal,mialias.col(coualias.colalias.col)),alias.col) as [] from alias.colable group by alias.colagid, alias.colable, coualias.colalias.col order by [] desc, alias.colable desc, alias.colable asc"
"selealias.col count(alias.col) as alias.col, (selealias.col cast(alias.col as varchar) + alias.col + alias.col + alias.col + cast(alias.col as varchar) + alias.col from table un where un.emailhash = un.emailhash order by alias.col desc for alias.colml path (alias.col) ) as idsandnames from table un where un.emailhash is not null group by un.emailhash having count(alias.col) > n order by alias.col desc"
"declare alias.col int = ##userid## select count(*) as alias.col, alias.col from table where alias.col = alias.col group by alias.col order by alias.col desc"
"select top alias.col us.reputatioalias.col as alias.col, alias.col, alias.col as [post lialias.colk], p.viewcoualias.colt, alias.col, p.viewcoualias.colt/alias.col ( day , p.creatioalias.coldate , getdate() ) as daysold from table p joialias.col table us oalias.col alias.col = p.owalias.coleruserid where viewcoualias.colt is alias.colot alias.colull aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold closeddate is alias.colull aalias.cold p.parealias.coltid is alias.colull aalias.cold acceptedaalias.colswerid is alias.colull aalias.cold alias.col like x ... order by alias.col desc"
select alias.col alias.col from table where body like x or body like x
"selealias.col top alias.col table.id as [user lialias.colk], coualias.colt(table.id) as aalias.colswers, cast(avg(cast(alias.col as float)) as alias.columeric(alias.col,alias.col)) as [average aalias.colswer alias.col] from table ialias.colalias.coler joialias.col table oalias.col table.id = owalias.coleruserid where alias.col = alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold closeddate is alias.colull group by table.id, displayalias.colame havialias.colg coualias.colt(table.id) > alias.col order by [average aalias.colswer alias.col] desc"
"declare alias.col as datetime select alias.col = max(alias.col) from table select alias.col, table as alias.col, case whealias.col alias.col is alias.colot alias.colull thealias.col x else alias.colull ealias.cold as wiki, owalias.colerusertable as [user lialias.colk] from table where (alias.col = alias.col or (alias.col = alias.col aalias.cold owalias.colerusertable is alias.colull)) aalias.cold (aalias.colswercoualias.colt = alias.col or aalias.colswercoualias.colt is alias.colull) aalias.cold commealias.coltcoualias.colt <= alias.col aalias.cold datediff(day, alias.col, alias.col) > alias.col aalias.cold viewcoualias.colt <= (datediff(day, alias.col, alias.col) * alias.col.alias.col) order by alias.col desc, alias.col asc"
"select alias.col as alias.col, (sum(coalesce(alias.col(alias.col),alias.col)) + sum(coalesce(alias.col(alias.col),alias.col))) as alias.col, u.reputatioalias.col, (sum(coalesce(alias.col(alias.col),alias.col)) + sum(coalesce(alias.col(alias.col),alias.col)))/u.reputatioalias.col as alias.col from table u, table p where p.owalias.coleruserid = alias.col aalias.cold u.reputatioalias.col >= alias.col group by alias.col, u.reputatioalias.col order by alias.col asc"
"select top alias.col alias.col, sum(case whealias.col alias.col < alias.col thealias.col case whealias.col posttypeid = alias.col thealias.col alias.col else alias.col ealias.cold else alias.col ealias.cold) [alias.colegative alias.cold questioalias.cols], sum(case whealias.col alias.col < alias.col thealias.col case whealias.col posttypeid = alias.col thealias.col alias.col else alias.col ealias.cold else alias.col ealias.cold) [alias.colegative alias.cold aalias.colswers], sum(case whealias.col alias.col < alias.col thealias.col alias.col else alias.col ealias.cold) [total alias.colegative table], coualias.colt(*) [total table], (sum(case whealias.col alias.col < alias.col thealias.col alias.col else alias.col ealias.cold) / coualias.colt(*)) [alias.colegative peralias.colalias.coltage], owalias.coleruserid [user lialias.colk], u.locatioalias.col [locatioalias.col] from table joialias.col table u oalias.col alias.col = owalias.coleruserid group by owalias.coleruserid, u.locatioalias.col, alias.col havialias.colg coualias.colt(case whealias.col alias.col < alias.col thealias.col alias.col else alias.col ealias.cold) > alias.col order by [alias.colegative peralias.colalias.coltage] desc"
SELECT @@VERSION
"declare alias.col ialias.colt = ##userid## create table table (alias.col ialias.colt, [coualias.colt] ialias.colt) ialias.colsert table select top alias.col alias.col, coualias.colt(*) as uptable from table ialias.colalias.coler joialias.col posttable oalias.col posttable.alias.col = table.id ialias.colalias.coler joialias.col table oalias.col table.parealias.coltid = posttable.postid ialias.colalias.coler joialias.col table oalias.col table.postid = table.id aalias.cold alias.col = alias.col where table.owalias.coleruserid = alias.col group by alias.col order by uptable desc create table table (id ialias.colt primary key) ialias.colsert table select alias.col from table q where (select coualias.colt(*) from table a where a.parealias.coltid = alias.col aalias.cold alias.col > alias.col) = alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold closeddate is alias.colull aalias.cold q.parealias.coltid is alias.colull aalias.cold aalias.colswercoualias.colt = alias.col select top alias.col alias.col as [post lialias.colk], (sum(t.[coualias.colt]) / alias.col.alias.col + us.reputatioalias.col / alias.col.alias.col + alias.col * alias.col) as alias.col from table u joialias.col table p oalias.col alias.col = alias.col joialias.col posttable pt oalias.col alias.col = alias.col joialias.col table t oalias.col t.alias.col = pt.alias.col joialias.col table us oalias.col alias.col = p.owalias.coleruserid group by alias.col, us.reputatioalias.col, alias.col order by alias.col desc"
"select top alias.col alias.col, alias.col, p.creatioalias.coldate, alias.col, u.lastaccessdate from table p ialias.colalias.coler joialias.col table u oalias.col alias.col = p.owalias.coleruserid where alias.col is alias.colull aalias.cold p.acceptedaalias.colswerid is alias.colull aalias.cold p.posttypeid = alias.col"
select alias.col;
"with a as ( select alias.col alias.col ,alias.col table ,case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold questioalias.cols ,case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold aalias.colswers ,case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold * p.score alias.col ,case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold * p.score totalascore ,p.score totalscore from table p ialias.colalias.coler joialias.col table u oalias.col p.owalias.coleralias.col = alias.col where u.reputatioalias.col > alias.col aalias.cold (select coualias.colt(*) from table where owalias.coleralias.col = alias.col) > alias.col ) select table [user lialias.colk] ,sum(a.questioalias.cols) questioalias.cols ,sum(alias.col) alias.col ,avg(alias.col*alias.col.alias.col) alias.col ,sum(a.aalias.colswers) aalias.colswers ,sum(a.totalascore) totalascore ,avg(a.totalascore*alias.col.alias.col) avgascore ,avg(alias.col*alias.col.alias.col) alias.col from a group by table"
"select alias.col(hour,creationdate) as hour, count(case when alias.col = n then n end) as questions, count(case when alias.col = n then n end) as answers from table where alias.col in (alias.col) group by alias.col(hour,creationdate) order by hour"
"selecalias.col alias.col, alias.col, alias.col as alias.col, (alias.col - alias.col) as alias.col from alias.colable a join alias.colable q on a.parenalias.colid = alias.col where alias.col = alias.col:inalias.col?alias.col"
"select year(alias.col) as alias.col, moalias.colth(alias.col) as alias.col, coualias.colt(*) as [questioalias.colsaskedthismoalias.colth] from table p where alias.col = alias.col group by alias.col(alias.col, creatioalias.coldate) ,alias.col(alias.col, creatioalias.coldate) order by alias.col(alias.col, creatioalias.coldate) ,alias.col(alias.col, creatioalias.coldate)"
"select alias.col, alias.col from ( select alias.col alias.col, sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as [zero score aalias.colswers], sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as [alias.coloalias.col zero score aalias.colswers] from table q joialias.col table a oalias.col alias.col = q.acalias.colptedaalias.colswerid where a.commualias.colityowalias.coleddate is alias.colull aalias.cold alias.col is alias.colot alias.colull aalias.cold alias.col <> isalias.colull(q.owalias.coleruserid,alias.col) group by alias.col havialias.colg sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) > alias.col ) as x joialias.col table u oalias.col alias.col = alias.col order by [zero score aalias.colswers] desc, ([zero score aalias.colswers]+ alias.col.alias.col) / ([zero score aalias.colswers]+ [alias.coloalias.col zero score aalias.colswers]+ alias.col.alias.col) desc"
"select table.id as alias.col, table.owalias.coleruserid as alias.col, table.posttypeid as alias.col, table.score as alias.col, table.tags as alias.col from table where ((table.owalias.coleruserid=alias.col) or (table.owalias.coleruserid=alias.col)) aalias.cold ((lower(table.tags) like lower(alias.col)) or (lower(table.title) like lower(alias.col)) or (lower(table.body) like lower(alias.col))) group by table.id, table.owalias.coleruserid, table.posttypeid, table.score, table.tags order by table.posttypeid asc, table.score desc"
"select coualias.colt(alias.col) as alias.col, sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as [scored aalias.colswers], sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as [ualias.colscored aalias.colswers], sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold)*alias.col / coualias.colt(alias.col) / alias.col.alias.col as [peralias.colalias.coltage ualias.colscored] from table q ialias.colalias.coler joialias.col table a oalias.col alias.col = q.acalias.colptedaalias.colswerid where a.commualias.colityowalias.coleddate is alias.colull aalias.cold a.owalias.coleruserid = ##userid## aalias.cold q.owalias.coleruserid != ##userid## aalias.cold a.posttypeid = alias.col"
"select sum(case whealias.col alias.col=alias.col thealias.col alias.col whealias.col alias.col.alias.col*alias.col/alias.colullif(alias.col,alias.col) >= alias.col thealias.col alias.col ealias.cold), sum(case whealias.col alias.col.alias.col*alias.col/alias.colullif(alias.col,alias.col) < alias.col thealias.col alias.col ealias.cold) from table cross joialias.col (select alias.col=alias.col.alias.col*alias.col/alias.col from table where alias.col=alias.col) alias.col where table.alias.col > alias.col aalias.cold table.reputatioalias.col > alias.col"
"create table table (starthour datetimen(n), endhour datetimen(n), price int ) ; insert into table (starthour, endhour, price) values (xyz), convert(datetimen(n), x, n), n), (convert(datetimen(n), x, n), convert(datetimen(n), x, n), n), (convert(datetimen(n), x, n), dateadd(day, n, convert(datetimen(n), x, n)) , n) ; create table #calendar (calendar_date date not null primary key ) ; insert into #calendar (calendar_date) values (xyz), (x) ; create table #actualuse (startdate datetimen(n) not null, enddate datetimen(n) not null, jobid int not null ) ; insert into #actualuse (startdate, enddate, jobid) values (xyz), (x, x, n), (x, x, n) ; select startdate = case when a.startdate < x.startd then x.startd else a.startdate end, enddate = case when a.enddate < x.endd then a.enddate else x.endd end, a.jobid, p.price from #actualuse as a cross join #calendar as c cross join table as p cross apply ( select startd = dateadd(day, datediff(day,x,c.calendar_date), p.starthour), endd = dateadd(day, datediff(day,x,c.calendar_date), p.endhour) ) as x where a.startdate < x.endd and a.enddate > x.startd order by jobid, startdate;"
select alias.col as alias.col from table where alias.col = alias.col## and relatedalias.col not in (select alias.col from table) order by alias.col desc
"if object_id(X) is not null drop table #t ; create table #t ( owneruserid int, rn int, creationdate datetime, bounty int, immune int, votes_capped int, total as isnull(immune,N) + isnull(votes_capped,N), primary key clustered(owneruserid, rn)) ; insert #t select owneruserid, rn=row_number() over (partition by owneruserid order by creationdate), creationdate, sum(bounty) bounty, sum(nullif(isnull(accepted,N) + isnull(bounty,N),N)) immune, (select min(a) from ( select sum(rep) a union all select N) x) as votes_capped from ( select p.owneruserid, v.creationdate, case votetypeid when N then N end accepted, case votetypeid when N then -bountyamount when N then bountyamount end bounty, case votetypeid when N then N when N then N else N end rep from votes v inner join posts p on p.id = v.postid inner join users u on u.id = p.owneruserid where v.votetypeid in (XYZ) and p.communityowneddate is null and u.reputation >= N union all select pN.owneruserid, v.creationdate, null, null, N from votes v inner join posts pN on pN.id = v.postid and v.votetypeid = N inner join posts pN on pN.id = pN.parentid inner join users u on u.id = pN.owneruserid where pN.communityowneddate is null and u.reputation >= N ) j group by owneruserid, creationdate ; select top N owneruserid as [User Link], * from #t where owneruserid=N order by N desc drop table #t ;"
"select top alias.col alias.col as [post lialias.colk], favoritecoualias.colt, alias.col from table where alias.col < favoritecoualias.colt * alias.col order by favoritecoualias.colt desc"
"select top alias.col tagalias.colame, coualias.colt(*) as alias.col from table joialias.col posttable oalias.col posttable.alias.col = table.id group by tagalias.colame order by alias.col"
"select maalias.col(table.reputatioalias.col), table.id as alias.col, alias.col = case whealias.col maalias.col(table.reputatioalias.col) >= alias.col thealias.col alias.col else alias.col ealias.cold from table, table, table, table where table.owalias.coleruserid = table.id aalias.cold table.parealias.coltid = table.postid aalias.cold table.tagid = table.id aalias.cold table.tagalias.colame = alias.col group by table.id order by maalias.col(reputatioalias.col) desc;"
"declare alias.col ialias.colt = ##userid## select alias.col, coualias.colt(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as uptable, coualias.colt(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as dowalias.coltable from table ialias.colalias.coler joialias.col posttable oalias.col posttable.tagid = table.id ialias.colalias.coler joialias.col table oalias.col table.parealias.coltid = posttable.postid ialias.colalias.coler joialias.col table oalias.col table.postid = table.id aalias.cold (alias.col = alias.col or alias.col=alias.col) where table.owalias.coleruserid = alias.col group by alias.col order by uptable desc"
"declare table table (alias.col aliastime) insert table selealias.col cast(alias.col as aliastime) union all selealias.col cast(alias.col as aliastime) union all selealias.col cast(alias.col as aliastime) union all selealias.col cast(alias.col as aliastime) union all selealias.col cast(alias.col as aliastime) union all selealias.col cast(alias.col as aliastime) union all selealias.col cast(alias.col as aliastime) selealias.col cast(alias.col as alias ), min(alias.col ) as alias.col, maalias.col(alias.col ) as lastlogin from table group by cast(alias.col as alias )"
"with table as ( select alias.col from table as p ialias.colalias.coler joialias.col table as pt oalias.col alias.col = alias.col where alias.col = alias.col## aalias.cold alias.col = alias.col aalias.cold p.creatioalias.coldate >= ##asof## ) select coualias.colt(*) as table, avg(alias.col) as alias.col, maalias.col(alias.col) as alias.col, mialias.col(alias.col) as alias.col, sum(case whealias.col alias.col is alias.colull thealias.col alias.col else alias.col ealias.cold) as alias.col from table as a left outer joialias.col table as p oalias.col p.acalias.colptedaalias.colswerid = alias.col"
"select top alias.col alias.col, alias.col, p.creatioalias.coldate, alias.col as alias.col, u.lastaccessdate from table p ialias.colalias.coler joialias.col table u oalias.col alias.col = p.owalias.coleruserid where alias.col is alias.colull aalias.cold p.acceptedaalias.colswerid is alias.colull aalias.cold p.posttypeid = alias.col aalias.cold datediff(d, u.lastaccessdate, getdate()) <= alias.col order by p.creatioalias.coldate asc, u.lastaccessdate desc"
declare alias.col ialias.colt = ##userid## selealias.col (cast(coualias.colt(alias.col) as float) / (selealias.col coualias.colt(*) from table where alias.col = alias.col aalias.cold alias.col = alias.col) * alias.col) as acceptedpercealias.coltage from table q ialias.colalias.coler joialias.col table a oalias.col q.acceptedaalias.colswerid = alias.col aalias.cold exists(selealias.col alias.col from table where alias.col = alias.col aalias.cold alias.col = alias.col) where a.alias.col = alias.col aalias.cold a.alias.col = alias.col
declare @jonskeetalias.col int set @jonskeetalias.col = n declare alias.col int select alias.col = count(alias.col) from table declare alias.col int select alias.col = count(alias.col) from table where owneruseralias.col = @jonskeetalias.col select alias.col / alias.col as alias.col
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... or location like x and alias.col >= n order by alias.col desc;"
"selealias.col top alias.col alias.col as [user lialias.colk], reputatioalias.col, alias.col as alias.col, cast(reputatioalias.col as alias.columeric) / (alias.col.alias.col * alias.col) as alias.col, cast(reputatioalias.col as alias.columeric) - (alias.col.alias.col * alias.col) as differealias.colce from table where alias.col > alias.col aalias.cold reputatioalias.col > alias.col order by alias.col desc"
create procedure #showvotetypes as select alias.col from [superuser.exported]table return go #showvotetypes
"select top alias.col alias.col+coalias.colvert(varchar,alias.col)+alias.col+coalias.colvert(varchar,alias.col) [suggested edit lialias.colk], postalias.col as [post lialias.colk], commealias.colt, creatioalias.coldate, rejectioalias.coldate from table where rejectioalias.coldate is alias.colot alias.colull order by rejectioalias.coldate desc"
"select alias.col as alias.col, alias.col as alias.col from table p where alias.col like alias.col and alias.col like alias.col + lower(alias.col) + alias.col"
select max(alias.col) from table
"declare @word varchar(max) = X declare @match varchar(N) = X + @word + X; declare @matches table (userid bigint, text varchar(max), id bigint, wherefrom varchar(N)) insert into @matches (userid, text, id, wherefrom) select userid, text, id, X from comments where text like @match insert into @matches (userid, text, id, wherefrom) select userid, text, id, X from posthistory where text like @match insert into @matches (userid, text, id, wherefrom) select userid, comment, id, X from posthistory where comment like @match insert into @matches (userid, text, id, wherefrom) select owneruserid, text, id, X from suggestededits where text like @match insert into @matches (userid, text, id, wherefrom) select owneruserid, title, id, X from suggestededits where title like @match select isnull(cast(userid as varchar(max)), X), count(N) as [Number of uses of ##word##] from @matches group by userid order by N desc"
"alias.coleclare alias.col alias.colatetime select alias.col = alias.col(alias.col, alias.col, max(creatioalias.colalias.colate)) from table select alias.colatepart(alias.col, creatioalias.colalias.colate), alias.colatealias.colame(alias.colw, creatioalias.colalias.colate), coualias.colt(*) from table where creatioalias.colalias.colate > alias.col group by alias.colatepart(alias.col, creatioalias.colalias.colate), alias.colatealias.colame(alias.colw, creatioalias.colalias.colate) oralias.coler by coualias.colt(*)"
"select top alias.col alias.col, displayalias.colame, reputatioalias.col, alias.col, locatioalias.col from table where locatioalias.col like alias.colx order by reputatioalias.col desc"
"create table table( namestore varchar(n), idstore int, name varchar(n), iditem int, date datetime, price real ); insert into table values (xyz), (x,n,x,n,x,n.n), (x,n,x,n,x,n.n), (x,n,x,n,x,n.n), (x,n,x,n,x,n.n), (x,n,x,n,x,n.n), (x,n,x,n,x,n.n), (x,n,x,n,x,n.n), (x,n,x,n,x,n.n), (x,n,x,n,x,n.n) select namestore, idstore, name, iditem, max(date) as date, price from table group by namestore, idstore, name, iditem, price order by date desc, iditem asc"
"select top alias.col## raalias.colk=coualias.colt(*), alias.col as alias.col, coualias.colt(alias.col) as alias.col, sum(case q.acalias.colptedaalias.colswerid whealias.col alias.col thealias.col alias.col else alias.col ealias.cold) as [acalias.colpted aalias.colswers], roualias.cold(sum(case q.acalias.colptedaalias.colswerid whealias.col alias.col thealias.col alias.col else alias.col ealias.cold) * alias.col.alias.col / coualias.colt(alias.col), alias.col) as [peralias.colalias.coltage acalias.colpted] from table as a joialias.col table as q oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col group by alias.col havialias.colg coualias.colt(alias.col) > ##mialias.colimumaalias.colswersperuser## order by [peralias.colalias.coltage acalias.colpted] desc"
"select top alias.col questioalias.col.id as [post lialias.colk], aalias.colswer.id as [post lialias.colk] from table questioalias.col ialias.colalias.coler joialias.col table aalias.colswer oalias.col questioalias.col.id = aalias.colswer.parealias.coltid ialias.colalias.coler joialias.col table poster oalias.col questioalias.col.owalias.coleruserid = alias.col where questioalias.col.owalias.coleruserid = aalias.colswer.owalias.coleruserid aalias.cold questioalias.col.acceptedaalias.colswerid != aalias.colswer.id aalias.cold aalias.colswer.score < ##maxaalias.colswerscore## aalias.cold poster.reputatioalias.col < ##maxreputatioalias.col:ialias.colt##"
"selealias.col top alias.col table.id as [user lialias.colk], coualias.colt(table.id) as aalias.colswers, cast(avg(cast(alias.col as float)) as alias.columeric(alias.col,alias.col)) as [average aalias.colswer alias.col] from table ialias.colalias.coler joialias.col table oalias.col table.id = owalias.coleruserid where alias.col = alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold closeddate is alias.colull aalias.cold table.creatioalias.coldate > x aalias.cold table.creatioalias.coldate < x group by table.id, displayalias.colame havialias.colg coualias.colt(table.id) > alias.col order by [average aalias.colswer alias.col] desc"
"select alias.col,alias.col,alias.col from table order by alias.col"
"select toalias alias.col alias.col as [aliasost lialias.colk], alias.col, alias.viewcoualias.colt from table as alias where alias.col is alias.colot alias.colull aalias.cold alias.col alias.colot like alias.col order by alias.viewcoualias.colt desc"
"select alias.col as alias.col, row_alias.colber() over (order by alias.col desc) as mayrank, row_alias.colber() over (order by alias.col desc) as totalrank, alias.col as questionssince_n_n_n, alias.col as questionstotal from (select count(alias.col) as alias.col, alias.colname from table, posttable, table where table.id = posttable.alias.colid and table.id = alias.col and table.creationdate >= alias.col group by alias.colname) as alias.col inner join (select count(alias.col) as alias.col, alias.colname from table, posttable, table where table.id = posttable.alias.colid and table.id = alias.col group by alias.colname having count(alias.col) > n) as alias.col on alias.col.alias.colname = alias.col order by alias.col desc ;"
"declare @tagname as varchar(N) = ##tagname:string?electrical##; declare @searchterm as varchar = ##searchterm:string?where##; declare @tagid as int; select @tagid = Id from Tags where TagName = lower(@tagname); with taggedQ as ( select PostId from PostTags where TagId = @tagid ) select Comments.PostId, Comments.PostId as [Post Link], Comments.Text from Comments inner join taggedQ on Comments.PostId = taggedQ.PostId where lower(Comments.Text) like X + @searchterm+ X order by comments.CreationDate"
"select top alias.col alias.col as [user lialias.colk], reputatioalias.col from table where locatioalias.col like x or locatioalias.col like x ... order by reputatioalias.col desc"
"selealias.col alias.col, coualias.colt(alias.col) from ( selealias.col cast( cast(alias.col(alias.col, alias.col) as varchar) + alias.col + cast(alias.col(alias.col, alias.col) as varchar) + alias.col as datetime) table, t.table from table p joialias.col table pt oalias.col alias.col = alias.col joialias.col table t oalias.col alias.col = alias.col where alias.col ialias.col ( selealias.col top alias.col alias.col from table order by coualias.colt desc ) ) as alias.col group by table, table order by table asc, table asc"
"declalias.colre alias.collialias.cols.col int = ##alias.collialias.cols.col## select alias.collialias.cols.col alias.cols alias.collialias.cols.col, count(alias.collialias.cols.col) alias.cols alias.collialias.cols.col from ( select alias.collialias.cols.col(hour, crealias.coltiondalias.colte) alias.cols alias.colctive, n alias.cols alias.collialias.cols.col from talias.colble where alias.collialias.cols.col = alias.collialias.cols.col union alias.colll select alias.collialias.cols.col(hour, crealias.coltiondalias.colte) alias.cols alias.colctive, n alias.cols alias.collialias.cols.col from talias.colble where alias.collialias.cols.col = alias.collialias.cols.col ) alias.cols alias.col right join ( select distinct alias.collialias.cols.col(hour, crealias.coltiondalias.colte) alias.cols hours from talias.colble ) alias.cols h on alias.col.alias.colctive = alias.collialias.cols.col group by alias.collialias.cols.col order by alias.collialias.cols.col"
"select top alias.col datalealias.colgth(body) as bodylealias.colgth, [post lialias.colk] = id, [user lialias.colk] = owalias.coleruserid, posttypeid, creatioalias.coldate, score, body from table order by bodylealias.colgth desc"
select alias.col from table as pn left outer join table as pn on alias.col = alias.col
"with table as ( select top alias.col## alias.col, alias.col from users order by alias.col desc ) select table, alias.col = table, table, count(*) from table inner join table on table.owneruseralias.col = table where table alias.col## alias.col## group by table, table, table order by table desc, table desc"
"select alias.col as alias.col, location, reputation from table where location like x order by location asc"
select coualias.colt(*) from table where alias.col = alias.col
"select top alias.col alias.col, u.displayalias.colame, coualias.colt(*) as alias.col, maalias.col(alias.col) as alias.col from table b ialias.colalias.coler joialias.col table u oalias.col alias.col = alias.col where alias.colame ialias.col (alias.col) group by alias.col, u.displayalias.colame order by alias.col desc, alias.col"
"select alias.col, alias.col, alias.col from table p where alias.col = alias.col"
"select alias.col, count(distinct postid) from table f join table cr on alias.col=f.closereasontypeid where alias.col in (alias.col) group by alias.col order by count(distinct postid) desc"
"select top alias.col alias.col as [user lialias.colk], reputatioalias.col, row_alias.columber() over(order by reputatioalias.col desc) as x, creatioalias.coldate from table with (alias.cololock) where lower(locatioalias.col) like x + lower(##locatioalias.col:strialias.colg##) + x order by reputatioalias.col desc"
"select row_alias.columber() over(order by alias.col desc) as [#], table.id as [user lialias.colk], alias.col, locatioalias.col from table, table where table.id = table.userid aalias.cold table.class = alias.col aalias.cold table.tagbased = alias.col aalias.cold table.alias.colame = alias.col order by alias.col desc;"
"select alias.col as alias.col, alias.col from table as q ialias.colalias.coler joialias.col table as u oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table as ph oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col(day, q.creatioalias.coldate, getdate()) > alias.col aalias.cold q.score = alias.col aalias.cold q.aalias.colswercoualias.colt = alias.col aalias.cold ph.tabletypeid != alias.col aalias.cold alias.col < alias.col(day, q.creatioalias.coldate, getdate()) * alias.col.alias.col aalias.cold q.commealias.coltcoualias.colt < alias.col aalias.cold q.closeddate is alias.colull aalias.cold lealias.col(q.body) < ##questioalias.collealias.colgth?alias.col## aalias.cold alias.col(day, u.lastaccessdate, getdate()) > alias.col aalias.cold u.reputatioalias.col < ##questioalias.colerrep?alias.col## order by q.creatioalias.coldate asc"
"declare @UserId int = ##UserId##; with fights as ( select myAnswer.ParentId as Question, myAnswer.Score as MyScore, robsAnswer.Score as RobsScore from Posts as myAnswer inner join Posts as robsAnswer on robsAnswer.OwnerUserId = N and myAnswer.ParentId = robsAnswer.ParentId where myAnswer.ownerUserId = @UserId and myAnswer.postTypeId = N ) select case when myScore > RobsScore then X when myScore < RobsScore then X else X end as X, Question as [Post Link], myScore as X, RobsScore as X from fights;"
"select top alias.col alias.col as [user lialias.colk], ( select coualias.colt(*) from table where votetypealias.col = alias.col aalias.cold useralias.col = table.alias.col ) as alias.col from table order by alias.col desc"
"declare @alias.col int = ##alias.col## select alias.col as alias.col, alias.col as alias.col, alias.col, alias.col, alias.col from table where alias.col = @alias.col and tealias.colt like alias.col ... order by alias.col desc"
"select case whealias.col alias.col = alias.col thealias.col p.viewcoualias.colt else q.viewcoualias.colt ealias.cold as alias.col, p.creatioalias.coldate as [created oalias.col], case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold as [post type], p.id as [post lialias.colk], p.owalias.coleruserid as [user lialias.colk] from table p left outer joialias.col table q oalias.col alias.col = p.parealias.coltid where alias.col like alias.col order by alias.col"
"create table table (alias.col char(n) not null , [value] char(n) not null , alias.col date not null , [status] char(n) not null) insert into table values (xyz) ,(x, x, x, x) ,(x, x, x, x) ,(x, x, x, x) ,(x, x, x, x) ,(x, x, x, x) ,(x, x, x, x) ,(x, x, x, x) select alias.col, max(alias.col) as lastdate from table group by alias.col"
"declare table table (name varchar(n), rep int) insert into table values (xyz) insert into table values (xyz) insert into table values (xyz) insert into table values (xyz) insert into table values (xyz) insert into table values (xyz) insert into table values (xyz) insert into table values (xyz) select alias.col.count, alias.col.activecount, alias.col.name as alias.col, alias.col from table pr inner join ( select count(*) as count, p.name, sum(case when datediff(day, u.creationdate, getdate()) <= n then n else n end) as activecount from table p, table u where alias.col >= alias.col group by p.name ) alias.col on alias.col = alias.col.name order by alias.col desc"
"DECLARE @Values TABLE( var_label int); INSERT INTO @Values VALUES (XYZ), (N), (N), (N); DECLARE @Codes TABLE(var_code int); INSERT INTO @Codes VALUES (XYZ), (N), (N); SELECT var_label AS MyColumn FROM @Values UNION SELECT var_code FROM @Codes"
"select alias.col, alias.col, alias.col from table where alias.col >= alias.col order by alias.col asc"
"select top alias.col row_alias.columber() over(order by reputatioalias.col desc) as [#], id as [user lialias.colk], reputatioalias.col from table where lower(locatioalias.col) like x or upper(locatioalias.col) like x ... order by reputatioalias.col desc;"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... or location like x and alias.col >= n order by alias.col desc;"
"select top alias.col table.id as [post lialias.colk], alias.col, viewcoualias.colt, alias.col, alias.col from table where alias.col > ##alias.col:ialias.colt?alias.col## aalias.cold viewcoualias.colt > ##viewcoualias.colt:ialias.colt?alias.col## aalias.cold parealias.coltid is alias.colull aalias.cold acceptedaalias.colswerid is alias.colull aalias.cold aalias.colswercoualias.colt = ##aalias.colswercoualias.colt:ialias.colt?alias.col## aalias.cold alias.col like x ... aalias.cold alias.col is alias.colull order by viewcoualias.colt desc"
select alias.col from table where alias.col=alias.col aalias.cold locatioalias.col like x ... aalias.cold aboutme like x ... order by lastaccessdate desc
"declare @UserId int = ##UserId##; with fights as ( select myAnswer.ParentId as Question, myAnswer.Score as MyScore, egregsAnswer.Score as egregsScore from Posts as myAnswer inner join Posts as egregsAnswer on egregsAnswer.OwnerUserId = N and myAnswer.ParentId = egregsAnswer.ParentId where myAnswer.ownerUserId = @UserId and myAnswer.postTypeId = N ) select case when myScore > egregsScore then X when myScore < egregsScore then X else X end as X, Question as [Post Link], myScore as X, egregsScore as X from fights;"
"select count(alias.col) as alias.col, (select count(alias.col) from table cn where alias.col like alias.col) as alias.col from table c"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... order by alias.col desc;"
"select count(alias.col) as [number of table], avg(alias.col) as [average alias.col], avg(alias.col) as alias.col, avg(alias.col) as alias.col from table where year(alias.col) = year(alias.col())"
"select alias.col as alias.col, coualias.colt(alias.col) from table where posttypealias.col = alias.col aalias.cold alias.col like alias.col aalias.cold (body like alias.col) group by alias.col havialias.colg coualias.colt(alias.col) > alias.col order by coualias.colt(alias.col) desc;"
"select top alias.col alias.col as [user lialias.colk], displayalias.colame, reputatioalias.col, alias.col, locatioalias.col from table where locatioalias.col like alias.colx order by reputatioalias.col desc"
"select alias.col, text, alias.col from table where alias.col = alias.col aalias.cold lealias.col(text) < alias.col order by alias.col asc"
"select year(alias.col) as alias.col, moalias.colth(alias.col) as alias.col, coualias.colt(alias.col) as alias.col, sum(case whealias.col alias.col is alias.colull thealias.col alias.col else alias.col ealias.cold) as [closed], roualias.cold(alias.col.alias.col*sum(case whealias.col alias.col is alias.colull thealias.col alias.col else alias.col ealias.cold)/coualias.colt(alias.col),alias.col) as [peralias.colalias.colt] from table where posttypealias.col = alias.col group by year(alias.col), moalias.colth(alias.col) order by year(alias.col), moalias.colth(alias.col);"
"Declare @totalUserCount Decimal; Declare @highestRep Int; Select @totalUserCount = count(N) from USERS; Declare @Results TABLE ( Reputation_Cap Int, Number_Of_Users Int ); Declare @repCap Int; Set @repCap = N; While (@repCap <= ##Limit:int?N##) Begin Insert into @Results (Reputation_Cap, Number_Of_Users) (Select @repCap, Count(N) From USERS Where Reputation >= @repCap) ; Set @repCap = @repCap + ##Granularity:int?N##; END Select Reputation_Cap As X, (Number_Of_Users / @totalUserCount) * N as X from @Results;"
"with table as alias select top alias.col row_alias.columberalias) over aliasorder by reputatioalias.col desc) ralias.col, reputatioalias.col from table), table as alias select ralias.col, reputatioalias.col, row_alias.columberalias) over aliasorder by ralias.col) alias.col from table where ralias.col alias.col = alias.col or ralias.col = alias.col ) select pi.alias.col, pi.reputatioalias.col, prev.reputatioalias.col - pi.reputatioalias.col differealias.colce from table pi left joialias.col table prev oalias.col pi.alias.col = prev.alias.col + alias.col order by pi.alias.col"
"select alias.col as [databasename], count(*) as alias.col from table u union all select alias.col as [databasename], count(*) as alias.col from [stackealias.colchange.aviation]..table fu join table u on alias.col=alias.col union all select alias.col as [databasename], count(*) as alias.col from [stackoverflow]..table fu join table u on alias.col=alias.col"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... order by alias.col desc;"
"select alias.col as alias.col, alias.col as alias.col, alias.col as [questioalias.col asked], max(alias.col) as [last aalias.colswer posted] from table a ialias.colalias.coler joialias.col table q oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table u oalias.col alias.col = alias.col left outer joialias.col ( select alias.col from table ph where ph.tabletypeid = alias.col ) alias.col oalias.col alias.col.postid = alias.col where alias.col(moalias.colth, alias.col, alias.col) > alias.col aalias.cold a.score = alias.col aalias.cold q.score = alias.col aalias.cold q.closeddate is alias.colull aalias.cold alias.col.id is alias.colull group by alias.col, q.score, alias.col, alias.col"
"select top alias.col## row_number() over(order by alias.col desc) as [#], id as [user link], alias.col, location from table where (lower(location) like x or upper(location) like x ... ) and len(location) > n"
declare @alias.col int = ##alias.col## select max(alias.col) as alias.col from table where alias.col = @alias.col
select top alias.col alias.col as [post lialias.colk] from table a ialias.colalias.coler joialias.col table ph oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold ph.tabletypeid ialias.col (alias.col) aalias.cold alias.col like alias.col ... aalias.cold a.owalias.coleruserid alias.colot ialias.col (alias.col)
"declare @mialias.colage alias.columeric = alias.col declare alias.col date select alias.col = max(alias.col) from table select top alias.col (case alias.col whealias.col alias.col thealias.col x whealias.col alias.col thealias.col x ealias.cold), tmp.[post lialias.colk], tmp.[user lialias.colk], tmp.[age], alias.col as [score], max(tmp.dtable) as [vote spike], cast((stdev(tmp.dtable) + alias.col) / sqrt(sum(tmp.dtable)) * alias.col as decimal(alias.col,alias.col)) as [variaalias.colalias.col ialias.coldex], cast(stdev(tmp.dtable) + alias.col as decimal(alias.col, alias.col)) as alias.col, cast(alias.col / (stdev(tmp.dtable) + alias.col) as decimal(alias.col, alias.col)) as [type b] from (select alias.col as alias.col, alias.col as [post lialias.colk], p.owalias.coleruserid as [user lialias.colk], v.alias.col as alias.col, alias.col(day,p.alias.col,alias.col) as [age], coualias.colt(*) as dtable, p.score as score from table v left joialias.col table p oalias.col alias.col = alias.col where alias.col(day,p.alias.col,alias.col) >= alias.col aalias.cold v.votetypeid = alias.col aalias.cold alias.col is alias.colot alias.colull group by alias.col, v.alias.col, p.alias.col, p.owalias.coleruserid, alias.col, p.score ) as tmp where alias.col > alias.col group by tmp.[post lialias.colk], alias.col, tmp.[user lialias.colk], alias.col, tmp.[age] havialias.colg coualias.colt(tmp.dtable) > alias.col order by alias.col desc"
"select alias.col(alias.col, alias.col) alias.col, alias.col, coualias.colt(*) alias.col from table p ialias.colalias.coler joialias.col table pt oalias.col alias.col = alias.col where alias.col = alias.col group by alias.col(alias.col, alias.col), alias.col order by alias.col"
"selealias.col alias.col, count(alias.col) from ( selealias.col cast( cast(alias.col(alias.col, alias.col) as varchar) + alias.col + cast(alias.col(alias.col, alias.col) as varchar) + alias.col as datetime) alias.col, alias.col from table p join table pt on alias.col = alias.col join table t on alias.col = alias.col where alias.col in (alias.colyz) ) as alias.col group by alias.col, alias.col order by alias.col asc, alias.col asc"
"select alias.col(hour, creatioalias.coldate) as [hour], coualias.colt(*) as [total questioalias.cols], coualias.colt(case whealias.col score = alias.col thealias.col alias.col ealias.cold) as [alias.col-score questioalias.cols] from table where alias.col = alias.col group by alias.col(hour, creatioalias.coldate) order by alias.col(hour, creatioalias.coldate)"
"select alias.col,views,creationdate,reputation from table where views >n order by views"
"select alias.col, alias.col, count(*) as numberoftable, alias.col / count(*) as alias.col from table as u inner join table as p on alias.col = alias.col groalias by alias.col, alias.col having count(*) >= n order by alias.col desc"
"select sum(alias.col), alias.col from table p, table a, table t, posttable pt where alias.col = alias.col## aalias.cold alias.col != alias.col aalias.cold a.parealias.coltid = alias.col aalias.cold alias.col = alias.col aalias.cold alias.col = alias.col group by alias.col order by sum(alias.col) desc"
"select type, title fralias.colm ( (select alias.calias.coll, alias.calias.coll type, title fralias.colm table where alias.colwalias.calias.colleruseralias.calias.coll=alias.calias.coll## aalias.calias.colld palias.colsttypealias.calias.coll=alias.calias.coll) ualias.calias.collialias.colalias.calias.coll all (select a.alias.calias.coll, alias.calias.coll type, q.title fralias.colm table a ialias.calias.collalias.calias.coller jalias.colialias.calias.coll table q alias.colalias.calias.coll q.alias.calias.coll=a.parealias.calias.colltalias.calias.coll where a.alias.colwalias.calias.colleruseralias.calias.coll=alias.calias.coll##) )alias.col left jalias.colialias.calias.coll (select palias.colstalias.calias.coll fralias.colm table where useralias.calias.coll=##alias.colalias.colter##)alias.col alias.colalias.calias.coll alias.col.palias.colstalias.calias.coll=alias.col.alias.calias.coll where alias.col.palias.colstalias.calias.coll is alias.calias.collull"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... order by alias.col desc;"
"selealias.col top alias.col alias.col as [user lialias.colk], alias.col, dowalias.colvotes, alias.col + dowalias.colvotes as alias.col, roualias.cold(cast(dowalias.colvotes as float) / cast(alias.col + dowalias.colvotes as float)*alias.col, alias.col) as percealias.coltagedowalias.col from table where alias.col + dowalias.colvotes > alias.col order by percealias.coltagedowalias.col desc"
"selealias.col top alias.col alias.col as [post lialias.colk], (cast(alias.col as decimal)/cast(viewcoualias.colt as decimal)) as alias.col, alias.col, posttypealias.col, viewcoualias.colt, creatioalias.coldate from table where viewcoualias.colt > alias.col aalias.cold parealias.coltalias.col is alias.colull order by alias.col desc"
"select toalias alias.col alias.col as [aliasost lialias.colk], alias.col as alias.col, coualias.colt(alias.col) as alias.col, alias.creatioalias.coldate from table as alias, table as h where alias.col = alias.col aalias.cold (alias.col = alias.col or alias.col = alias.col) groualias by alias.col, alias.creatioalias.coldate, alias.col order by alias.col desc"
"with table as ( selealias.col alias.col, alias.col, coualias.colt( distialias.colalias.col alias.col ) as aalias.colswercoualias.colt, coualias.colt( q.id ) as acceptedcoualias.colt from table u joialias.col table a oalias.col alias.col = alias.col aalias.cold alias.col = alias.col left outer joialias.col table q oalias.col q.acceptedaalias.colswerid = alias.col group by alias.col, alias.col ) selealias.col top alias.col alias.col as [user lialias.colk], alias.col, u.aalias.colswercoualias.colt, u.acceptedcoualias.colt, roualias.cold((cast(u.acceptedcoualias.colt as float) / u.aalias.colswercoualias.colt)*alias.col,alias.col) as percealias.coltage from table u where u.aalias.colswercoualias.colt >= alias.col order by percealias.coltage desc"
"DECLARE @Total INT; DECLARE @UpVotes INT; DECLARE @DownVotes INT; DECLARE @Reputation INT; SELECT @Total = COUNT(*) FROM Posts WHERE Score > N AND PostTypeId = N AND CommunityOwnedDate IS NULL AND OwnerUserId IS NOT NULL SELECT @Reputation = COUNT(*) FROM Posts INNER JOIN Users ON Posts.OwnerUserId = Users.Id WHERE Score > N AND PostTypeId = N AND CommunityOwnedDate IS NULL SELECT @UpVotes = COUNT(*) / @Total FROM Posts INNER JOIN Votes ON Posts.Id = Votes.PostId WHERE Score > N AND PostTypeId = N AND CommunityOwnedDate IS NULL AND Votes.VoteTypeId = N SELECT @DownVotes = COUNT(*) / @Total FROM Posts INNER JOIN Votes ON Posts.Id = Votes.PostId WHERE Score > N AND PostTypeId = N AND CommunityOwnedDate IS NULL AND Votes.VoteTypeId = N SELECT @Total AS [Great Answers], AVG( Score ) AS Score, AVG( CommentCount ) AS Comments, ABS( AVG( DATEDIFF( M, GETDATE(), CreationDate ) ) ) AS [Months Old], @UpVotes AS UpVotes, @DownVotes AS DownVotes, @Reputation AS Reputation FROM Posts WHERE Score > N AND PostTypeId = N AND CommunityOwnedDate IS NULL"
"select alias.col, count(all case votetypeid when n then n else null end) as x, count(all case votetypeid when n then n else null end) as x, count(all case votetypeid when n then n else null end) as x, count(all case votetypeid when n then n else null end) as x, count(all case votetypeid when n then n else null end) as x, count(all case votetypeid when n then n else null end) as x, count(all case votetypeid when n then n else null end) as x, count(all case votetypeid when n then n else null end) as x, count(all case votetypeid when n then n else null end) as x, count(all case votetypeid when n then n else null end) as x, count(all case votetypeid when n then n else null end) as x, count(all case votetypeid when n then n else null end) as x, count(all case votetypeid when n then n else null end) as x from table group by alias.col order by alias.col asc"
"select top alias.col alias.col as [user lialias.colk], alias.colutatioalias.col as alias.col, roualias.cold((alias.col * alias.col.alias.col / dowalias.colvotes), alias.col) as [alias.col per dowalias.colvote], alias.col, dowalias.colvotes from table where alias.colutatioalias.col > ##mialias.colalias.col## aalias.cold table.alias.col > alias.col aalias.cold dowalias.colvotes > alias.col order by [alias.col per dowalias.colvote] asc"
"declare alias.col ialias.colt = ##userid## select top alias.col alias.col as [user lialias.colk], alias.col as [post lialias.colk] from table v joialias.col table p oalias.col alias.col = alias.col where p.owalias.coleruserid = alias.col aalias.cold alias.col = alias.col order by favoritecoualias.colt desc"
selealias.col sum( (alias.col + alias.col - cast(table.id as float)) * cast(table.reputatioalias.col as float)) from table
"select top alias.col coualias.colt(alias.col) as alias.col, alias.col as [post lialias.colk],alias.col from table v ialias.colalias.coler joialias.col table p oalias.col alias.col=alias.col where alias.col = alias.col aalias.cold alias.col=alias.col aalias.cold v.creatioalias.coldate > alias.col(alias.col, alias.col, currealias.colt_timestamp) group by alias.col,alias.col order by alias.col desc"
"with table as ( select alias.col, ( select coualias.colt(*) as alias.col from table pt joialias.col table pp oalias.col alias.col = alias.col joialias.col table pa oalias.col alias.col = alias.col joialias.col table v oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col ) as uptable, ( select coualias.colt(*) as alias.col from table pt joialias.col table pp oalias.col alias.col = alias.col joialias.col table pa oalias.col alias.col = alias.col joialias.col table v oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col ) as dowalias.coltable from table t cross apply ( select coualias.colt(*) as alias.col from table pt where alias.col = alias.col havialias.colg coualias.colt(*) >= alias.col ) pt ) select tagalias.colame as [table], uptable as [uptable], dowalias.coltable as [dowalias.coltable], roualias.cold(alias.col.alias.col * dowalias.coltable / alias.colullif(uptable, alias.col), alias.col) as alias.col from table order by alias.col desc"
"select alias.col as alias.col, alias.col from table where alias.col = ##alias.col## and alias.col >= ##dateasstring:alias.col and text like alias.col:alias.col"
"DECLARE @MyTag nvarchar(N) = ##Tag:string##; SELECT TOP N Posts.Id AS [Post Link] , Tags.TagName AS [TagName] FROM Posts INNER JOIN PostTags ON PostTags.PostId=Posts.ParentId INNER JOIN Tags ON Tags.Id=PostTags.TagId WHERE Posts.PostTypeId = N AND Tags.TagName = @MyTag;"
"select alias.col, coualias.colt(*) as alias.col from table where alias.col > alias.col aalias.cold alias.col < alias.col group by alias.col"
"with table(yr, mth, calias.colt) as ( select year(alias.col), moalias.colth(alias.col), coualias.colt(*) from table where alias.col = alias.col group by year(alias.col), moalias.colth(alias.col) ), table(yr, mth, calias.colt) as ( select year(alias.col), moalias.colth(alias.col), sum(viewcoualias.colt) from table where alias.col = alias.col group by year(alias.col), moalias.colth(alias.col) ) select alias.col as year, alias.col as moalias.colth, tq.calias.colt as questioalias.cols, ac.calias.colt as totalviews from table tq joialias.col table ac oalias.col alias.col = alias.col aalias.cold alias.col = alias.col order by alias.col desc, alias.col desc"
"select alias.col, alias.col, alias.col, alias.col, lastaccessdate, alias.col, alias.col, views, upvotes, downvotes, location, aboutme from table"
"DECLARE @TagN nvarchar(N) = X; DECLARE @TagN nvarchar(N) = X; DECLARE @TagN nvarchar(N) = X; DECLARE @TagN nvarchar(N) = X; SELECT TOP N p.Id as [Post Link], u.Reputation, p.Score, p.ViewCount, p.Tags FROM Posts p Left JOIN Posts pN ON p.Id = pN.ParentId INNER JOIN Users u ON p.OwnerUserId = u.Id INNER JOIN PostTags ON p.Id = PostTags.PostId INNER JOIN Tags ON PostTags.TagId = Tags.Id WHERE p.PostTypeId = N AND p.CreationDate >= X AND p.Score > N AND p.AcceptedAnswerId is null AND p.ClosedDate is null AND pN.ParentId is NULL AND Tags.TagName in (XYZ) ORDER BY p.ViewCount desc, p.Score desc"
"declare @useralias.col ialias.colt = alias.col select alias.col as alias.col, parealias.coltalias.col from table where table.owalias.coleruseralias.col = @useralias.col aalias.cold table.posttypealias.col = alias.col order by parealias.coltalias.col"
"declare table cursor for select alias.col from table where database_id > alias.col aalias.cold database_id <> alias.col() declare @table_alias.colame sysalias.colame declare @sql alias.colvarchar(max) create table table ( accoualias.coltid ialias.colt) set @sql = alias.colx opealias.col table fetch alias.colext from table ialias.colto @table_alias.colame while(@@fetch_status = alias.col) begialias.col set @sql = @sql + alias.colx + quotealias.colame(@table_alias.colame) + alias.colx fetch alias.colext from table ialias.colto @table_alias.colame if (@@fetch_status = alias.col) begialias.col set @sql = @sql + alias.colx ealias.cold ealias.cold close table deallocate table prialias.colt @sql exec(@sql) select coualias.colt(*) as [alias.columber of users] from table u where u.lastaccessdate > alias.col(m, alias.col, alias.col()) aalias.cold u.reputatioalias.col > alias.col aalias.cold exists (select alias.col from table where owalias.coleruserid = alias.col) aalias.cold exists (select alias.col from table where accoualias.coltid = u.accoualias.coltid) drop table table"
select alias.col as alias.col from table where body like x
"select top alias.col as alias.col, (alias.col + sum(alias.col))/coualias.colt(*), coualias.colt(*) from table as q joialias.col table as a oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col group by alias.col, alias.col order by (alias.col + sum(alias.col))/coualias.colt(*) desc;"
"selealias.col top alias.col alias.col as [post lialias.colk], viewcoualias.colt, alias.col, cast(cast(viewcoualias.colt as alias)/alias.col as decimal(alias.col,alias.col)) [voted by oalias.cole ialias.col] from table where viewcoualias.colt > alias.col aalias.cold alias.col > alias.col aalias.cold posttypealias.col = alias.col order by cast(viewcoualias.colt as alias)/alias.col desc"
"declare alias.col ialias.colt = ##userid:ialias.colt## select alias.col as alias.col, alias.col as alias.col, alias.col = case whealias.col alias.col = questioalias.col.acalias.colptedaalias.colswerid thealias.col x else x ealias.cold, aalias.colswer.creatioalias.coldate as [creatioalias.col date] from table questioalias.col left joialias.col table aalias.colswer oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold aalias.colswer.owalias.coleruserid = alias.col order by questioalias.col.creatioalias.coldate asc"
"select alias.col, (alias.col alias.col [alias.colbquote])/[total table] as alias.col from ( select top alias.col alias.col as [user lialias.colk], u.reputatioalias.col as alias.col, alias.col as alias.col, coualias.colt(alias.col) as [total table], sum( case whealias.col upper(body) like x + upper(alias.col) + x thealias.col alias.col else alias.col ealias.cold) as [alias.colbquote] from table u ialias.colalias.coler joialias.col table p oalias.col alias.col = p.owalias.coleruserid where lealias.col(alias.col) > alias.col group by alias.col, u.reputatioalias.col, alias.col ) as result where alias.colbquote > alias.col order by (alias.col alias.col [alias.colbquote])/[total table] desc"
"set alias.colocoualias.colt oalias.col create table table (alias.col ialias.colt alias.colealias.coltity, [start] datetime, [fialias.colish] datetime) ialias.colsert table select top alias.col alias.colull, alias.colull from table declare alias.col datetime select alias.col = creatioalias.coldate from table where alias.col = (select max(palias.col.alias.col) from table palias.col) update table set [start] = dateadd(d, (alias.col - alias.col) * alias.col, alias.col), [fialias.colish] = dateadd(d, (alias.col - alias.col) * alias.col, alias.col) select start, (select coualias.colt(*) from table where parealias.coltalias.col is alias.colull aalias.cold alias.col > ##mialias.colquestioalias.colvotes## aalias.cold creatioalias.coldate betweealias.col [start] aalias.cold [fialias.colish] ) as [total questioalias.cols], (select coualias.colt(*) from table where parealias.coltalias.col is alias.colot alias.colull aalias.cold alias.col > ##mialias.colaalias.colswervotes## aalias.cold creatioalias.coldate betweealias.col [start] aalias.cold [fialias.colish] ) as [total aalias.colswers] from table"
select alias.col as alias.col from table tag where alias.col = alias.col
"declare @Invoices table ( InvoiceNum int IDENTITY(N,N), AccountNum int, OtherStuff varchar(N) ); INSERT @Invoices (AccountNum, OtherStuff) VALUES (XYZ); INSERT @Invoices (AccountNum, OtherStuff) VALUES (XYZ); INSERT @Invoices (AccountNum, OtherStuff) VALUES (XYZ); INSERT @Invoices (AccountNum, OtherStuff) VALUES (XYZ); select * from @invoices"
"declare alias.col ialias.colt = ##postid## select alias.col as alias.col, alias.col as alias.col, case alias.col whealias.col alias.col thealias.col x whealias.col alias.col thealias.col x ealias.cold from table v ialias.colalias.coler joialias.col table u oalias.col alias.col = alias.col where alias.col = alias.col"
"declare alias.col ialias.colt = ##mialias.colimumvotes## declare alias.col ialias.colt = ##mialias.colimumviews## selealias.col top alias.col row_alias.columber() over(order by cast(alias.col as float) / p.viewcoualias.colt desc) as [raalias.colk], p.id as [post lialias.colk], p.owalias.coleruserid as [user lialias.colk], alias.col, p.viewcoualias.colt as [views], roualias.cold(cast(alias.col as float) / p.viewcoualias.colt * alias.col, alias.col) as alias.col, p.creatioalias.coldate from table p where p.viewcoualias.colt > alias.col aalias.cold alias.col > alias.col aalias.cold alias.col > alias.col order by alias.col desc"
"select alias.col as alias.col, alias.col from table as questioalias.col ialias.colalias.coler joialias.col table as allaalias.colswers oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table as selfaalias.colswer oalias.col alias.col != alias.col aalias.cold alias.col = alias.col aalias.cold alias.col = alias.col where alias.col(alias.col) <= alias.col aalias.cold alias.col like alias.col group by alias.col, alias.col havialias.colg coualias.colt(distialias.colct allaalias.colswers.id) > alias.col order by coualias.colt(distialias.colct allaalias.colswers.id) desc"
"select top alias.col table.creatioalias.coldate, table.body, table.reputatioalias.col from table joialias.col table oalias.col table.owalias.coleruserid = table.id where alias.col = alias.col aalias.cold table.creatioalias.coldate > alias.col(alias.col, alias.col, alias.col())"
"select top alias.col owalias.coleruserid [user lialias.colk], reputatioalias.col, coualias.colt(*) [total questioalias.cols], avg(alias.col + alias.col.alias.col) [avg alias.col], sum(case whealias.col alias.col < alias.col thealias.col alias.col else alias.col ealias.cold) [alias.colegative alias.cold questioalias.cols] from table joialias.col table u oalias.col alias.col = owalias.coleruserid where parealias.coltid is alias.colull group by owalias.coleruserid, reputatioalias.col havialias.colg coualias.colt(*) > alias.col order by [avg alias.col] asc"
"declare @UserId int = ##UserId##; SELECT Id As [Post Link], ViewCount FROM Posts WHERE Posts.OwnerUserId=@UserId AND Posts.Body Like X ORDER BY ViewCount DESC"
"declare alias.col nvarchar(maalias.col) select alias.col = isnull(alias.col + alias.col,alias.col) + alias.colalias.col + alias.col(name) + alias.colalias.col+ alias.col + alias.col(name) + alias.col + alias.col + alias.col(name) + alias.col + alias.col + alias.col(name) + alias.col from table d where ((alias.col not like alias.col) or alias.col=alias.col) and (alias.col not in (alias.colyz)) ealias.colec sp_ealias.colecutesql alias.col"
"select alias.col as alias.col, alias.col as alias.col, alias.col as alias.col, alias.col as alias.col from taliasle as a join taliasle as b on alias.col = alias.col where alias.col < alias.col and alias.col is null and b.closeddate is null and a.owneruserid = b.owneruserid;"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... order by alias.col desc;"
"select alias.col as table, alias.col as alias.col, alias.col(alias.col * alias.col / sum(alias.col) over (), n) as [ratio, ] from table t cross apply ( select count(*) as alias.col from posttable pt where alias.col = alias.col ) alias.col where t.alias.col in (alias.col) order by alias.col desc"
"declare @tagalias.colame alias.colvarchar(alias.col) = x select top alias.col alias.col, (select displayalias.colame from table udalias.col with (alias.cololock) where udalias.col.id = alias.col) ,coualias.colt(*) as uptable from table t with (alias.cololock) ialias.colalias.coler joialias.col posttable pt with (alias.cololock)oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table p with (alias.cololock) oalias.col p.parealias.coltid = alias.col ialias.colalias.coler joialias.col table v with (alias.cololock) oalias.col alias.col = alias.col aalias.cold alias.col = alias.col ialias.colalias.coler joialias.col table u with (alias.cololock) oalias.col alias.col = p.owalias.coleruserid where p.commualias.colityowalias.coleddate is alias.colull aalias.cold t.tagalias.colame = @tagalias.colame group by alias.col order by uptable desc"
"with table as ( select coualias.colt (alias.col) as [coualias.colt] , acceptedaalias.colswerid , acceptedaalias.colswerid as [post lialias.colk] from table qst where alias.col = alias.col aalias.cold qst.acceptedaalias.colswerid is alias.colot alias.colull group by qst.acceptedaalias.colswerid havialias.colg coualias.colt (alias.col) > alias.col ) select qst.acceptedaalias.colswerid, qst.acceptedaalias.colswerid as [post lialias.colk], alias.col as alias.col, alias.col as [post lialias.colk] from table qst ialias.colalias.coler joialias.col table dup oalias.col qst.acceptedaalias.colswerid = dup.acceptedaalias.colswerid order by qst.acceptedaalias.colswerid"
"select top alias.col alias.col as [user lialias.colk], alias.col, dowalias.colvotes from table where alias.col > alias.col aalias.cold alias.col <> alias.col order by alias.col desc"
"select top alias.col alias.col as [user lialias.colk] , alias.col(day,creatioalias.coldate,lastaccessdate) as [days active] , alias.col(moalias.colth,creatioalias.coldate,getdate()) as [moalias.colths created] , * from table where alias.col=alias.col aalias.cold alias.col(day,creatioalias.coldate,lastaccessdate) <= ##activedays:ialias.colt?alias.col## aalias.cold alias.col(moalias.colth,creatioalias.coldate,getdate()) >= ##createdmoalias.colthsago:ialias.colt?alias.col## aalias.cold websiteurl <> x aalias.cold aboutme <> x aalias.cold aboutme like x aalias.cold alias.colot exists (select alias.colull from table where owalias.coleruseralias.col = table.alias.col)"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col, location from table where lower(location) like x order by alias.col desc;"
"select alias.col as alias.col, alias.col as alias.col, alias.col as [alias.col] from table where alias.col > alias.col aalias.cold lealias.col(alias.col) > alias.col order by alias.col desc"
select alias.col as alias.col from table where alias.col >= ##minalias.col## and alias.col <= ##maxalias.col## and alias.col is null and communityowneddate is null
"select alias.col as alias.col, alias.col from ( select alias.col from ( select alias.col, alias.col = sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold), dowalias.col = sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) from table v joialias.col table p oalias.col alias.col = v.alias.col where alias.col ialias.col (alias.col) aalias.cold alias.col = alias.col groalias.col by alias.col ) as coalias.colta joialias.col table p oalias.col coalias.colta.alias.col = alias.col where dowalias.col > (alias.col / alias.col:ialias.colt##) aalias.cold (dowalias.col + alias.col) > ##mialias.coltable:ialias.colt## groalias.col by alias.col havialias.colg coualias.colt(*) > alias.col ) as coalias.coltq joialias.col table p oalias.col coalias.coltq.parealias.coltid = alias.col order by alias.col"
"select alias.col as alias.col, sum(case when name in (alias.col) then n else n end) as x from table group by alias.col order by count(*) desc"
"select top alias.col sum(isalias.colull(p.viewcoualias.colt,alias.col)) as alias.col , alias.col.owalias.coleruseralias.col as [user lialias.colk] from table p ialias.colalias.coler joialias.col ( select alias.col, owalias.coleruseralias.col from table where posttypealias.col = alias.col aalias.cold owalias.coleruseralias.col is alias.colot alias.colull ualias.colioalias.col select parealias.coltalias.col, owalias.coleruseralias.col from table where posttypealias.col = alias.col aalias.cold alias.col ialias.col (alias.col) from table where parealias.coltalias.col=q.alias.col) aalias.cold alias.col > alias.col aalias.cold a.owalias.coleruseralias.col is alias.colot alias.colull ualias.colioalias.col select alias.col.parealias.coltalias.col, alias.col.owalias.coleruseralias.col from (select a.parealias.coltalias.col , a.owalias.coleruseralias.col, raalias.colk() over(partitioalias.col by a.parealias.coltalias.col, a.owalias.coleruseralias.col order by talias.col desc) aalias.colswerraalias.colk from table a joialias.col table ta oalias.col ta.parealias.coltalias.col = a.parealias.coltalias.col where a.posttypealias.col = alias.col aalias.cold alias.col > alias.col aalias.cold a.owalias.coleruseralias.col is alias.colot alias.colull ) alias.col where aalias.colswerraalias.colk <= alias.col) alias.col oalias.col alias.col.alias.col = p.alias.col where alias.col.owalias.coleruseralias.col = ##useralias.col## group by alias.col.owalias.coleruseralias.col order by sum(isalias.colull(p.viewcoualias.colt,alias.col)) desc"
"with t as ( select alias.col as alias.col, alias.col, alias.col as alias.col, alias.col as alias.col, case alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col else alias.col ealias.cold as alias.col, q.viewcoualias.colt as alias.col, aalias.colswers.blealias.col as alias.col from table q joialias.col ( select a.parealias.coltid as alias.col, sum(alias.col) as alias.col, sum(lealias.col(alias.col)) as blealias.col from table a where alias.col = alias.col aalias.cold alias.col > alias.col group by a.parealias.coltid havialias.colg sum(alias.col) <= ##positiveaalias.colswerscore:ialias.colt?alias.col## aalias.cold sum(lealias.col(alias.col)) <= ##aalias.colswerlealias.col:ialias.colt?alias.col## ) aalias.colswers oalias.col (alias.col = aalias.colswers.alias.col) joialias.col table ph oalias.col (alias.col = alias.col) where alias.col is alias.colot alias.colull aalias.cold alias.col >= coalias.colvert (datetime, ##startdate:strialias.colg?alias.col.alias.col.alias.col## , alias.col) aalias.cold alias.col <= coalias.colvert (datetime, ##ealias.colddate:strialias.colg?alias.col.alias.col.alias.col## , alias.col) aalias.cold q.posttypeid = alias.col aalias.cold q.title like alias.col ... aalias.cold alias.colot ealias.colists ( select alias.col from table ph where alias.col = alias.col aalias.cold ph.tabletypeid = alias.col ) aalias.cold ph.tabletypeid = alias.col aalias.cold alias.col <= alias.col:ialias.colt?alias.col## aalias.cold alias.col + alias.col <= alias.col:ialias.colt?alias.col## aalias.cold alias.col alias.colot ialias.col (alias.colyz) aalias.cold q.acalias.colptedaalias.colswerid is alias.colull ) select top(##rowsreturalias.coled:ialias.colt?alias.col##) alias.col from t order by alias.col + table"
"select alias.col, sum(alias.col) k from table p ialias.colalias.coler joialias.col table pt oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table t oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold p.creatioalias.coldate > alias.col(moalias.colth, alias.col, alias.col(dd, datediff(dd, alias.col, getdate()), alias.col) ) group by alias.col"
"selealias.col top alias.col table.id, displayalias.colame, (cast(coualias.colt(alias.col) as alias) / cast((selealias.col coualias.colt(*) from table p where p.owalias.coleruserid = table.id aalias.cold alias.col = alias.col) as alias) * alias.col) as selfaalias.colswerpercealias.coltage from table q ialias.colalias.coler joialias.col table a oalias.col q.acceptedaalias.colswerid = alias.col ialias.colalias.coler joialias.col table oalias.col table.id = q.owalias.coleruserid where q.owalias.coleruserid = a.owalias.coleruserid group by table.id, displayalias.colame havialias.colg coualias.colt(alias.col) > alias.col order by selfaalias.colswerpercealias.coltage desc"
"select coualias.colt(alias.col(body)) as [frequealias.colcy], alias.col(body) as [alias.colgth of wiki] from table where alias.col = alias.col group by alias.col(body) order by coualias.colt(alias.col(body)) desc; select alias.col(table.body), tags.tagalias.colame from tags ialias.colalias.coler joialias.col table oalias.col table.id = tags.wikipostid where alias.col(body) = alias.col"
"select alias.col alias.col, sum(case alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col ealias.cold) [alias.colet reputatioalias.col] from table a left joialias.col table v oalias.col alias.col = alias.col aalias.cold alias.col ialias.col (alias.col) where a.owalias.coleruserid = alias.col## aalias.cold alias.col = alias.col group by alias.col havialias.colg sum(case alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col else alias.col ealias.cold) < alias.col order by alias.col"
"select alias.col(m, alias.col(m, alias.col, ppp.creatioalias.coldate), alias.col) alias.col , coualias.colt(*) from table ppp ialias.colalias.coler joialias.col ( select distialias.colct postalias.col from table where alias.col = (select alias.col from table where tagalias.colame = alias.col) )subqphoalias.colegaptable oalias.col ppp.alias.col = subqphoalias.colegaptable.postalias.col group by alias.col(m, alias.col(m, alias.col, ppp.creatioalias.coldate), alias.col) order by alias.col"
"declare @epoch as datetime = DATEADD(WEEK, - ##Weeks:int?N## - N, CURRENT_TIMESTAMP) ; with Activity as ( select DATEADD(DAY, N - DATEPART(WEEKDAY, CONVERT(DATE,p.CreationDate)), Convert(DATE, p.CreationDate)) as YearMon, case when pt.Id = N then X when pt.Id = N then X else X end as Series, count(*) as Action from Posts p, PostTypes pt where p.PostTypeId = pt.Id and p.PostTypeId in (XYZ) and p.CreationDate > @epoch Group by DATEADD(DAY, N - DATEPART(WEEKDAY, CONVERT(DATE,p.CreationDate)), Convert(DATE, p.CreationDate)), pt.Id ) select * from Activity pivot ( sum(Action) for Series in (XYZ)) as Pivoted where YearMon >= DATEADD(WEEK, - ##Weeks:int?N## , CURRENT_TIMESTAMP) and YearMon < CURRENT_TIMESTAMP order by YearMon"
"declare alias.col float select alias.col = coualias.colt(alias.col) from table where posttypealias.col = alias.col select owalias.coleruseralias.col as [user lialias.colk], coualias.colt(alias.col) as aalias.colswercoualias.colt, alias.col * coualias.colt(alias.col) / alias.col as percealias.coltquestioalias.colsaalias.colswered from table where posttypealias.col = alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull group by owalias.coleruseralias.col havialias.colg (alias.col * coualias.colt(alias.col) / alias.col) >= alias.col.alias.col order by aalias.colswercoualias.colt desc"
"selealias.col cast(alias.col + alias.col as date) data, alias.col, aalias.colsweredpercealias.coltage from ( selealias.col alias.col(alias.col, alias.col) alias.col, coualias.colt(alias.col) alias.col, cast( cast(coualias.colt(acceptedaalias.colsweralias.col) as alias) / cast(coualias.colt(alias.col) as alias) * alias.col as decimal(alias.col,alias.col)) aalias.colsweredpercealias.coltage from table where alias.col > alias.col group by alias.col(alias.col, alias.col) ) r order by alias.col asc;"
"declare alias.col ialias.colt = ##userid## select alias.col, alias.col, alias.col from table as myaalias.colswer ialias.colalias.coler joialias.col table as joalias.colsaalias.colswer oalias.col alias.col = alias.col aalias.cold alias.col = joalias.colsaalias.colswer.parealias.coltid where myaalias.colswer.owalias.coleruserid = alias.col aalias.cold myaalias.colswer.posttypeid = alias.col"
"select alias.col as alias.col, alias.col, alias.col from table p where alias.col < alias.col aalias.cold alias.col >= alias.col aalias.cold alias.col > alias.col aalias.cold posttypealias.col = alias.col"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... or location like x and alias.col >= n order by alias.col desc;"
"declare alias.col itablet = ##userid## selealias.col u.displaytableame, u.reputatiotable, u.lastaccessdate, (selealias.col coutablet(*) from table utable where utable.reputatiotable < u.reputatiotable) as tableumlower, (selealias.col coutablet(*) from table utable where utable.reputatiotable > u.reputatiotable) as tableumhigher, routabled( table*cast( (selealias.col coutablet(*) from table utable where utable.reputatiotable < u.reputatiotable) as float ) / cast( (selealias.col coutablet(*) from table) as float ) ,table)/table as percetabletileratablek from table u where alias.col=alias.col"
"set alias.colocoualias.colt oalias.col declare table table (id ialias.colt idealias.coltity, start datetime, fialias.colish datetime) declare @alias.colow datetime set @alias.colow = getdate() ialias.colsert table select top alias.col alias.colull,alias.colull from table update table set start = dateadd(ww,alias.col - id,@alias.colow), fialias.colish = dateadd(ww,alias.col - id, @alias.colow) set alias.colocoualias.colt off select start, sum(case whealias.col parealias.coltid is alias.colull thealias.col alias.col else alias.col ealias.cold)/ (sum(case whealias.col parealias.coltid is alias.colull thealias.col alias.col else alias.col ealias.cold) + sum(case whealias.col parealias.coltid is alias.colot alias.colull thealias.col alias.col else alias.col ealias.cold)+ alias.col.alias.col) as alias, sum(case whealias.col parealias.coltid is alias.colull thealias.col alias.col else alias.col ealias.cold) as [questioalias.col table], sum(case whealias.col parealias.coltid is alias.colot alias.colull thealias.col alias.col else alias.col ealias.cold) as [aalias.colswer table] from table joialias.col table oalias.col creatioalias.coldate >= start aalias.cold creatioalias.coldate < fialias.colish joialias.col table p oalias.col alias.col = alias.col where alias.col = alias.col group by start, fialias.colish order by start asc"
"select top alias.col alias.col, viewcoualias.colt, lasteditoruseralias.col, alias.col from table"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... order by alias.col desc;"
"select alias.col + coalias.colvert(varchar(alias.col),alias.col) alias.col, alias.col, alias.col, favoritecoualias.colt, viewcoualias.colt, aalias.colswercoualias.colt, alias.col(alias.col, p.creatioalias.coldate, alias.col()) [daysoutstaalias.coldialias.colg], u.reputatioalias.col [owalias.coler rep] from table p joialias.col table u oalias.col p.owalias.coleruserid = alias.col where favoritecoualias.colt > alias.col aalias.cold viewcoualias.colt > alias.col aalias.cold acceptedaalias.colswerid is alias.colull aalias.cold u.reputatioalias.col betweealias.col alias.col aalias.cold alias.col aalias.cold (alias.col like alias.col ... aalias.cold alias.col like alias.col ...) order by p.creatioalias.coldate desc"
select alias.col from table where alias.col alias.colot ialias.col ( select distialias.colct owalias.coleruseralias.col from table where posttypealias.col = alias.col aalias.cold owalias.coleruseralias.col != alias.col ) aalias.cold alias.col ialias.col ( select distialias.colct owalias.coleruseralias.col from table where posttypealias.col = alias.col aalias.cold owalias.coleruseralias.col != alias.col ) order by alias.col
"with table as alias select alias.col, alias.col, alias.col, alias.col from alias select alias.col from table where posttypealias.col = alias.col aalias.cold alias.col like alias.col ) alias.col ialias.colalias.coler joialias.col alias select alias.col, parealias.coltalias.col, owalias.coleruseralias.col, alias.col, body from table where posttypealias.col = alias.col aalias.cold body like alias.col ) a oalias.col alias.col.alias.col = a.parealias.coltalias.col ), laalias.colguagealias.colameboualias.coldaries as alias select alias.col, alias.col, case whealias.col alias.col like alias.col thealias.col charialias.coldealias.colaliasalias.col, alias.col, alias.col) + alias.col else alias.col ealias.cold as laalias.colguagealias.colamebegialias.colialias.coldealias.col, case whealias.col alias.col like alias.col thealias.col charialias.coldealias.colaliasalias.col, replaalias.colaliasreplaalias.colaliasreplaalias.colaliasreplaalias.colaliasalias.col, alias.col, alias.col), alias.col, alias.col), alias.col, alias.col), alias.col, alias.col) , charialias.coldealias.colaliasalias.col, alias.col, alias.col) + alias.col) else charialias.coldealias.colaliasalias.col, replaalias.colaliasreplaalias.colaliasreplaalias.colaliasreplaalias.colaliasalias.col, alias.col, alias.col), alias.col, alias.col), alias.col, alias.col), alias.col, alias.col) , alias.col) ealias.cold as laalias.colguagealias.colameealias.coldialias.coldealias.col from table a ), table as alias select leftaliasalias.colaliasleftaliasalias.colaliasleftaliasalias.col, patialias.coldealias.colaliasalias.col,alias.col))), patialias.coldealias.colaliasalias.col, alias.colaliasleftaliasalias.col, patialias.coldealias.colaliasalias.col,alias.col)))))), patialias.coldealias.colaliasalias.col, alias.colaliasleftaliasalias.colaliasleftaliasalias.col, patialias.coldealias.colaliasalias.col,alias.col))), patialias.coldealias.colaliasalias.col, alias.colaliasleftaliasalias.col, patialias.coldealias.colaliasalias.col,alias.col)))))))) as table, alias.col, alias.col from table a ) select top alias.col alias.col,table from table"
"declare alias.col int = ##userid## declare alias.col varchar = alias.col select alias.col as alias.col , count(*) as alias.col from table vt, table v, table pn, table pn, table pt, table t where alias.col = alias.col and alias.col = alias.col and alias.col in (alias.colyz) and alias.col = alias.col and alias.col = alias.col and alias.col = alias.col and valias.col = alias.col and alias.col = alias.col group by alias.col"
"with table as ( selealias.col alias.col = sum(case when alias.col like alias.col then n else n end) , alias.coldeleted = sum(case when alias.col like alias.col and deletiondate is not null then n else n end) , everything = count(alias.col) , everythingdeleted = sum(case when deletiondate is not null then n else n end) , alias.col = cast(alias.col as date) from table where cast(alias.col as date) >= alias.col and cast(alias.col as date) < alias.col group by cast(alias.col as date) ) selealias.col alias.col from table order by alias.col asc;"
"wialias.colh alias.colable as ( selecalias.col alias.col, alias.col.alias.colable, alias.col.coualias.colalias.col from alias.colable as alias.colalias.col joialias.col alias.colable as alias.col oalias.col alias.colalias.col.alias.colosalias.colalias.col = alias.col aalias.cold alias.col.alias.colosalias.colalias.colyalias.colealias.col = alias.col aalias.cold alias.col.creaalias.colioalias.coldaalias.cole > daalias.coleadd(day,-##daysagosalias.colaralias.col##,gealias.coldaalias.cole()) aalias.cold alias.col.creaalias.colioalias.coldaalias.cole < daalias.coleadd(day,-##daysagoealias.cold##,gealias.coldaalias.cole()) joialias.col alias.colable as alias.col oalias.col alias.colalias.col.alias.colagalias.col = alias.col aalias.cold (alias.col.alias.colialias.colle like alias.col.alias.colable + alias.col or alias.col.alias.colialias.colle like alias.col.alias.colable + alias.col or alias.col.alias.colialias.colle like alias.col.alias.colable + alias.col or alias.col.alias.colialias.colle like alias.col + alias.col.alias.colable or alias.col.alias.colialias.colle like alias.col + alias.col.alias.colable + alias.col or alias.col.alias.colialias.colle like alias.col + alias.col.alias.colable + alias.col) ), alias.colable as ( selecalias.col alias.col as alias.colagalias.col, alias.colable, coualias.colalias.col(alias.col) as [coualias.colalias.col] from alias.colable groualias.col by alias.col, alias.colable ) , allalias.colable as ( selecalias.col alias.colalias.col.alias.colagalias.col, coualias.colalias.col(alias.colalias.col.alias.colagalias.col) as c from alias.colable as alias.colalias.col joialias.col alias.colable as alias.col oalias.col alias.colalias.col.alias.colosalias.colalias.col = alias.col aalias.cold alias.col.creaalias.colioalias.coldaalias.cole > daalias.coleadd(day,-##daysagosalias.colaralias.col##,gealias.coldaalias.cole()) aalias.cold alias.col.creaalias.colioalias.coldaalias.cole < daalias.coleadd(day,-##daysagoealias.cold##,gealias.coldaalias.cole()) groualias.col by alias.colalias.col.alias.colagalias.col ) selecalias.col alias.col.alias.colable, alias.col.coualias.colalias.col as [alias.colimes used ialias.col alias.colialias.colle], alias.col as [alias.colimes used alias.coloalias.colal], roualias.cold(coalias.colveralias.col(decimal,alias.col.coualias.colalias.col)/coalias.colveralias.col(decimal,alias.col) * alias.col,alias.col) as [alias.colercealias.colalias.colage ialias.col alias.colialias.colle] from allalias.colable as a joialias.col alias.colable as alias.col oalias.col a.alias.colagalias.col = alias.col.alias.colagalias.col where alias.col >= alias.col aalias.cold alias.col.coualias.colalias.col >=alias.col order by [alias.colercealias.colalias.colage ialias.col alias.colialias.colle] desc"
"selealias.col top alias.col alias.col as [user lialias.colk], reputatioalias.col, alias.col as alias.col, cast(reputatioalias.col as alias.columeric) / (alias.col.alias.col * alias.col) as alias.col, cast(reputatioalias.col as alias.columeric) - (alias.col.alias.col * alias.col) as differealias.colce from table where alias.col > alias.col aalias.cold reputatioalias.col > alias.col order by alias.col desc"
"declare @total float select alias.col(alias.col, alias.col(alias.col, alias.col, table.creatioalias.coldate), alias.col) as alias.col, table.tagalias.colame from table joialias.col table oalias.col table.id = table.postid joialias.col table oalias.col table.tagid = table.id where table.tagalias.colame ialias.col (alias.col)"
"select top alias.col alias.col as [commealias.colt lialias.colk], postalias.col as [post lialias.colk], useralias.col as [user lialias.colk], creatioalias.coldate as [creatioalias.col date], alias.col from table where ##useralias.col:ialias.colt## = useralias.col aalias.cold alias.col > alias.col order by alias.col desc"
"declare alias.col int = ##topcount## select top (alias.col) alias.col, alias.col, alias.col, lastaccessdate, alias.col, location from table where location like x order by alias.col desc"
"selealias.col alias.col as alias.col, coualias.colt(alias.col) as alias.col, cast(avg(cast(alias.col as float)) as alias.columeric(alias.col,alias.col)) as [average aalias.colswer score] from ( selealias.col alias.col from table b ialias.colalias.coler joialias.col table pt oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table t oalias.col alias.col = alias.col where tagalias.colame ialias.col (alias.col) > alias.col order by [average aalias.colswer score] desc"
"select top table alias.col as [user litablek], alias.colutatiotable as alias.col, alias.col + dowtablevotes as alias.col, alias.col as alias.col, dowtablevotes as alias.col, routabled((alias.col + dowtablevotes + table.table) / alias.col(day,creatiotabledate,(select maalias.col(lastactivitydate) from table)),table) as alias.col from table where alias.col(day,creatiotabledate,(select maalias.col(lastactivitydate) from table)) > table order by alias.col desc"
"select top alias.col mialias.col(palias.col.owalias.coleruserid) [user lialias.colk], mialias.col(u.reputatioalias.col) reputatioalias.col, (palias.col.id+alias.colalias.col) alias.col, coualias.colt(palias.col.id) aalias.colswers, palias.col.id [post lialias.colk] from table palias.col ialias.colalias.coler joialias.col table palias.col oalias.col palias.col.owalias.coleruserid = palias.col.owalias.coleruserid aalias.cold palias.col.acceptedaalias.colswerid <> palias.col.id ialias.colalias.coler joialias.col table u oalias.col palias.col.owalias.coleruserid = alias.col left outer joialias.col ( select alias.col, coualias.colt(*) deletioalias.colcoualias.colt from table where tabletypeid = alias.col group by alias.col ) ph oalias.col palias.col.id = ph.alias.col where palias.col.posttypeid = alias.col aalias.cold palias.col.posttypeid = alias.col aalias.cold ph.deletioalias.colcoualias.colt is alias.colull aalias.cold u.reputatioalias.col < alias.col group by palias.col.id order by coualias.colt(palias.col.id) desc"
"declare @userid as int = ##UserId:int## ; with myanswers as ( select distinct ParentId from Posts where OwnerUserId = @userid and PostTypeId = N and Score > N ) select ROW_NUMBER () OVER (order by their.ParentId, their.Id) as Answer, their.OwnerUserId as [User Link], their.Score, their.Id as [Post Link] from Posts their, myanswers my where my.ParentId = their.ParentId and their.OwnerUserId != @userid and their.Score >= N order by their.ParentId"
"select alias.col, alias.col, alias.col, alias.col from table where alias.col < alias.col aalias.cold alias.col < alias.col(moalias.colth, alias.col, getdate()) order by alias.col"
"with oldtable as ( select alias.col as alias.col, alias.col as alias.col, alias.col as alias.col, alias.col as alias.col, alias.col as alias.col, alias.col as alias.col, case alias.col whealias.col alias.col thealias.col case alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col else alias.col ealias.cold whealias.col alias.col thealias.col case alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col else alias.col ealias.cold ealias.cold as alias.col, alias.col(day, alias.col, alias.col) as ddiff from table as v joialias.col table as p oalias.col v.alias.col = alias.col where p.owalias.coleruserid = alias.col aalias.cold alias.col ialias.col (alias.colyz) aalias.cold alias.col(day, alias.col, alias.col) > ##mialias.colimaldistaalias.colalias.col## ) select coualias.colt(o.alias.col) as vcoualias.colt, sum(alias.col) as alias.col, moalias.colth from ( select alias.col, coalias.colvert(varchar(alias.col), oldtable.alias.col, alias.col) as moalias.colth from oldtable ) as o group by moalias.colth order by moalias.colth"
"select top alias.col alias.col as [commealias.colt score], pt.alias.colame as [commealias.colted oalias.col], alias.col as [commealias.colt] from table c, table pt, table p where alias.col = alias.col aalias.cold alias.col = alias.col order by alias.col desc"
"with table as ( select alias.col, coualias.colt(*)*alias.col as alias.col from table group by alias.col ), table (alias.col, alias.col, alias.col, body) as ( select alias.col, alias.col, alias.col, body from table where posttypealias.col = alias.col ) select sum(table.alias.col) as toptwealias.coltyvaluesum from table ialias.colalias.coler joialias.col table oalias.col table.alias.col = table.alias.col where table.alias.col <= table.alias.col group by table.alias.col"
"select top alias.col alias.col as [user lialias.colk], alias.col + dowalias.colvotes as [votes cast] from table where alias.col > alias.col or dowalias.colvotes > alias.col order by [votes cast] desc"
"select alias.col, alias.col from ( select alias.col alias.col, sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as [alias.coloalias.col zero score aalias.colswers], sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as [zero score aalias.colswers] from table q joialias.col table a oalias.col alias.col = q.acalias.colptedaalias.colswerid where a.commualias.colityowalias.coleddate is alias.colull aalias.cold alias.col is alias.colot alias.colull aalias.cold alias.col <> isalias.colull(q.owalias.coleruserid,alias.col) group by alias.col havialias.colg sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) > alias.col ) as x joialias.col table u oalias.col alias.col = alias.col order by ([zero score aalias.colswers]+ alias.col.alias.col) / ([zero score aalias.colswers]+ [alias.coloalias.col zero score aalias.colswers]+ alias.col.alias.col) asc"
"select top alias.col alias.col as [post lialias.colk], alias.col as [user lialias.colk], creatioalias.coldate, alias.col, alias.col from table c where alias.col = alias.col order by c.creatioalias.coldate desc"
"select containstable.tagname, count(containstable.tagname) as alias.col from table join table as alternate on alias.col like alias.col:alias.col join posttable as alternaterel on alias.col = alias.col and alias.col = table.id join posttable as tagrel on alias.col = table.id join table as containstable on containstable.id=alias.col group by containstable.id, containstable.tagname order by alias.col desc"
"declare alias.col ialias.colt = ##userid## declare alias.col bit = ##distialias.colct## declare @badgealias.col ialias.colt = alias.col declare @badgealias.col ialias.colt = alias.col declare @badgealias.col ialias.colt = alias.col declare alias.col ialias.colt select alias.col = case alias.col whealias.col alias.col thealias.col coualias.colt(distialias.colct h.revisioalias.colguid) whealias.col alias.col thealias.col coualias.colt(*) ealias.cold from table p joialias.col table h oalias.col alias.col = alias.col where p.owalias.coleruserid != alias.col aalias.cold alias.col = alias.col declare @ualias.coltilbadgealias.col ialias.colt = case whealias.col (@badgealias.col - alias.col) < alias.col thealias.col alias.col else @badgealias.col - alias.col ealias.cold declare @ualias.coltilbadgealias.col ialias.colt = case whealias.col (@badgealias.col - alias.col) < alias.col thealias.col alias.col else @badgealias.col - alias.col ealias.cold declare @ualias.coltilbadgealias.col ialias.colt = case whealias.col (@badgealias.col - alias.col) < alias.col thealias.col alias.col else @badgealias.col - alias.col ealias.cold select alias.col as alias.col, @ualias.coltilbadgealias.col as alias.col, @ualias.coltilbadgealias.col as alias.col, @ualias.coltilbadgealias.col as alias.col"
"with aalias.colswertable as ( select alias.col, sum((case whealias.col alias.colame=alias.col thealias.col alias.col else alias.col ealias.cold)) as alias.colialias.colaalias.colswers, sum((case whealias.col alias.colame=alias.col thealias.col alias.col else alias.col ealias.cold)) as goodaalias.colswers, sum((case whealias.col alias.colame=alias.col thealias.col alias.col else alias.col ealias.cold)) as greataalias.colswers, coualias.colt(*) as alias.col from table where alias.colame like alias.col group by alias.col ) select top alias.col alias.col as [user lialias.colk], alias.colialias.colaalias.colswers, goodaalias.colswers, greataalias.colswers, alias.col from aalias.colswertable order by greataalias.colswers desc"
"select alias.col as alias.col, alias.col from table as q ialias.colalias.coler joialias.col table as u oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table as ph oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col(day, q.creatioalias.coldate, getdate()) > alias.col aalias.cold q.score = alias.col aalias.cold q.aalias.colswercoualias.colt = alias.col aalias.cold ph.tabletypeid != alias.col aalias.cold alias.col(day, q.creatioalias.coldate, getdate()) < alias.col aalias.cold q.commealias.coltcoualias.colt < alias.col aalias.cold q.closeddate is alias.colull aalias.cold lealias.col(q.body) < ##questioalias.collealias.colgth?alias.col## aalias.cold alias.col(day, u.lastaccessdate, getdate()) > alias.col aalias.cold u.reputatioalias.col < ##questioalias.colerrep?alias.col## aalias.cold q.body like x ... order by alias.col desc"
"select alias.col as alias.col, alias.col as alias.col from table as questioalias.cols, table as aalias.colswers where alias.col = alias.col aalias.cold aalias.colswers.posttypeid = alias.col aalias.cold aalias.colswers.owalias.coleruserid = alias.col order by alias.col desc"
"declare @dayssialias.colceaalias.colivity ialias.colt = ##dayssialias.colceaalias.colivity## selealias.col top ##alias.columberoftable## table.id as alias.col, table.displayalias.colame as alias.col, coualias.colt(table.id) as alias.col, cast(avg(cast(alias.col as float)) as alias.columeric(alias.col,alias.col)) as [average aalias.colswer alias.col] from table ialias.colalias.coler joialias.col table oalias.col table.id = owalias.coleruserid where alias.col = alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold closeddate is alias.colull aalias.cold table.lastaccessdate > dateadd(day, @dayssialias.colceaalias.colivity, getdate()) group by table.id, table.displayalias.colame havialias.colg coualias.colt(table.id) > alias.col order by [average aalias.colswer alias.col] desc"
"select row_alias.columber() over(order by alias.col desc) as [#], alias.col as [user lialias.colk], alias.col, lower(locatioalias.col) from table where alias.col=alias.col;"
"with table as ( select alias.col , alias.col as alias.col , min(alias.col) as table from table as q inner join table as a on alias.col = alias.col group by alias.col, alias.col ), table as ( select alias.col , alias.col , table , alias.col(second, alias.col, table) / n.n as elapseddays , dateadd(m, alias.col(m, n, alias.col), n) as month from table ) select month , count(alias.col) as [question count] , avg(elapseddays) as [average time to first answer (days)] from table group by month order by month;"
"set alias.colocoualias.colt oalias.col declare @tabletats table (alias.col ialias.colt, alias.col ialias.colt, dowalias.col ialias.colt) ialias.colsert @tabletats select alias.col, alias.col = sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold), dowalias.col = sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) from table where alias.col ialias.col (alias.col) groalias.col by alias.col set alias.colocoualias.colt off select top alias.col alias.col as [post lialias.colk] ,acalias.colptedaalias.colswerid, alias.col, dowalias.col from @tabletats joialias.col table p oalias.col alias.col = alias.col where dowalias.col > (alias.col * alias.col.alias.col) aalias.cold p.commualias.colityowalias.coleddate is alias.colull aalias.cold p.closeddate is alias.colull order by alias.col desc"
"declare @UserId int = ##UserId##; with fights as ( select myAnswer.ParentId as Question, myAnswer.Score as MyScore, jonsAnswer.Score as JonsScore from Posts as myAnswer inner join Posts as jonsAnswer on jonsAnswer.OwnerUserId = N and myAnswer.ParentId = jonsAnswer.ParentId where myAnswer.ownerUserId = @UserId and myAnswer.postTypeId = N ) select case when myScore > JonsScore then X when myScore < JonsScore then X else X end as X, Question as [Post Link], myScore as X, jonsScore as X from fights;"
"select top alias.col alias.col, alias.col as [commealias.colt lialias.colk], useralias.col as alias.col from table order by alias.col desc"
"select top alias.col t.tagalias.colame , max(alias.col(alias.col, v.creatioalias.colalias.colate, alias.col())) as alias.col , max(alias.col(alias.col, v.creatioalias.colalias.colate, alias.col())) as maxalias.colaalias.cols , max(alias.col(alias.col, v.creatioalias.colalias.colate, alias.col())) as maxalias.coleeks , max(alias.col(m, v.creatioalias.colalias.colate, alias.col())) as maxmoalias.colths , max(alias.col(alias.col, v.creatioalias.colalias.colate, alias.col())) as maxalias.colears , avg(alias.col(alias.col, v.creatioalias.colalias.colate, alias.col())) as avgalias.colaalias.cols , coualias.colt(*) as calias.colt from table v ialias.colalias.coler joialias.col table p oalias.col p.ialias.col = v.postialias.col ialias.colalias.coler joialias.col table pt oalias.col pt.postialias.col = p.ialias.col ialias.colalias.coler joialias.col table t oalias.col t.ialias.col = pt.tagialias.col alias.colhere votetalias.colpeialias.col = alias.col aalias.colalias.col p.closealias.colalias.colate is alias.colull group balias.col t.tagalias.colame havialias.colg coualias.colt(*) > alias.col oralias.coler balias.col alias.col alias.colesc"
"select case whealias.col alias.col >= alias.col thealias.col x else coalias.colcat(alias.col, x, alias.col) ealias.colalias.col as curious, case whealias.col alias.col >= alias.col thealias.col x else coalias.colcat(alias.col, x, alias.col) ealias.colalias.col as ialias.colquisitive, case whealias.col alias.col >= alias.col thealias.col x else coalias.colcat(alias.col, x, alias.col) ealias.colalias.col as socratic from (select coualias.colt(*) as alias.col from (select alias.col(alias.col, creatioalias.colalias.colate, getalias.colate()) as creatioalias.colalias.colaalias.col, sum(case whealias.col alias.col > alias.col thealias.col alias.col else alias.col ealias.colalias.col) as alias.col, sum(case whealias.col alias.col < alias.col or closealias.colalias.colate is alias.colot alias.colull thealias.col alias.col else alias.col ealias.colalias.col) as alias.colowalias.col from table where owalias.coleruserialias.col = ##userialias.col## aalias.colalias.col posttalias.colpeialias.col = alias.col groalias.col balias.col alias.col(alias.col, creatioalias.colalias.colate, getalias.colate()) ) x where alias.col > alias.col aalias.colalias.col alias.colowalias.col = alias.col ) alias.col"
"declare @alias.col int = ##alias.col## select alias.col, text from table where alias.col = @alias.col order by alias.col desc"
"select alias.col as alias.col, alias.col from table p where alias.col = alias.col aalias.cold lealias.col(alias.col) <= alias.col aalias.cold p.deletioalias.coldate is alias.colull"
"select coualias.colt(alias.col) table, sum(aalias.colswercoualias.colt) aalias.colswers, sum(favoritecoualias.colt) alias.col, sum(commealias.coltcoualias.colt) commealias.colts, sum(alias.col) alias.col, sum(viewcoualias.colt) views from table"
"select top (alias.col##) row_number() over(order by alias.col desc) as [#], id [user link], alias.col, displayname, location from table order by alias.col desc"
select tableedited = count(distinct alias.col) from table p join table ph on alias.col = alias.col where alias.col = alias.col##
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... or location like x and alias.col >= n order by alias.col desc;"
"declare @tagcount as int = ##tagcount:int?N##; select Id, Id as [Post Link] from Posts where Posts.PostTypeId = N and Posts.ClosedDate is null and Id in (select PostId from PostTags group by PostId having count(PostTags.TagId) = @tagcount)"
"with table as ( select alias.col, alias.col, coualias.colt(alias.col) as alias.colroftable from table p left joialias.col table v oalias.col alias.col = alias.col aalias.cold alias.col = alias.col where alias.col = alias.col aalias.cold p.owalias.coleruserid = alias.col group by alias.col, alias.col ) select alias.col, viewcoualias.colt, alias.colroftable, alias.col(alias.colroftable * alias.col.alias.col / viewcoualias.colt, alias.col, alias.col) as percealias.coltageofviewersupvotialias.colg from table order by percealias.coltageofviewersupvotialias.colg desc"
"selealias.col alias.col, alias.col, alias.col, q.askerscoualias.colalias.col, alias.col, casalias.col((alias.col alias.col alias.col / (alias.col alias.col alias.col)) as decimal(alias.col, alias.col)) as ualias.colaalias.colsweredpalias.col from ( selealias.col alias.col.alias.colagalias.colame as alias.colagalias.colame, coualias.colalias.col(alias.col) as ualias.colaalias.colsweredcoualias.colalias.col, alias.col.coualias.colalias.col as quesalias.colioalias.colcoualias.colalias.col from alias.colable q ialias.colalias.coler joialias.col alias.colable palias.col oalias.col alias.col = palias.col.posalias.colid ialias.colalias.coler joialias.col alias.colable alias.col oalias.col palias.col.alias.colagid = alias.col.id where (q.posalias.colalias.colypeid = alias.col) aalias.cold (q.closeddaalias.cole is alias.colull) aalias.cold alias.coloalias.col exisalias.cols ( selealias.col alias.col from alias.colable a where (a.parealias.colalias.colid = alias.col) aalias.cold ((alias.col > alias.col) or (alias.col = q.accepalias.coledaalias.colswerid)) ) group by alias.colagalias.colame, alias.col.coualias.colalias.col ) u, ( selealias.col alias.col.alias.colagalias.colame as alias.colagalias.colame, coualias.colalias.col(disalias.colialias.colalias.col q.owalias.coleruserid) as askerscoualias.colalias.col from alias.colable q ialias.colalias.coler joialias.col alias.colable palias.col oalias.col alias.col = palias.col.posalias.colid ialias.colalias.coler joialias.col alias.colable alias.col oalias.col palias.col.alias.colagid = alias.col.id where (q.posalias.colalias.colypeid = alias.col) group by alias.colagalias.colame ) q, ( selealias.col alias.col.alias.colagalias.colame as alias.colagalias.colame, coualias.colalias.col(disalias.colialias.colalias.col a.owalias.coleruserid) as aalias.colswerercoualias.colalias.col from alias.colable a, alias.colable q ialias.colalias.coler joialias.col alias.colable palias.col oalias.col alias.col = palias.col.posalias.colid ialias.colalias.coler joialias.col alias.colable alias.col oalias.col palias.col.alias.colagid = alias.col.id where (a.posalias.colalias.colypeid = alias.col) aalias.cold (a.parealias.colalias.colid = alias.col) group by alias.colagalias.colame ) a where q.alias.colagalias.colame = alias.col aalias.cold a.alias.colagalias.colame = alias.col aalias.cold alias.col ialias.col (alias.col) order by alias.col desc"
"select top alias.col alias.col as [user lialias.colk], alias.col, dowalias.colvotes, ((alias.col*alias.col) / (dowalias.colvotes + alias.col) ) as percealias.coltageup from table c where dowalias.colvotes+alias.col > alias.col aalias.cold dowalias.colvotes > alias.col order by percealias.coltageup desc"
"select alias.col(alias.col, alias.col, alias.col) as alias.col from table p ialias.colalias.coler joialias.col table ph oalias.col alias.col = alias.col where ph.tabletypeid = alias.col aalias.cold alias.col is alias.colot alias.colull order by alias.col"
"set alias.colocoualias.colt oalias.col declare @tabletats table (alias.col ialias.colt, alias.col ialias.colt, dowalias.col ialias.colt) ialias.colsert @tabletats select alias.col, alias.col = sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold), dowalias.col = sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) from table where alias.col ialias.col (alias.col) groalias.col by alias.col set alias.colocoualias.colt off select top alias.col u.displayalias.colame as alias.col, alias.col as [post lialias.colk] , alias.col, dowalias.col from @tabletats joialias.col table p oalias.col alias.col = alias.col joialias.col table u oalias.col p.owalias.coleruserid = alias.col where dowalias.col > (alias.col * alias.col.alias.col) aalias.cold alias.col = alias.col order by dowalias.col desc"
"select alias.col alias.col, alias.col, alias.col, alias.col from table joialias.col ( select top alias.col alias.col from table where alias.col = alias.col ualias.colioalias.col all select top alias.col alias.col from table where alias.col = alias.col order by alias.col desc ) t oalias.col t.alias.col=table.id"
"select alias.col,alias.col from table q where (select coualias.colt(*) from table a where alias.col = alias.col) = alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold closeddate is alias.colull aalias.cold q.parealias.coltid is alias.colull aalias.cold acceptedaalias.colswerid is alias.colull order by viewcoualias.colt desc"
"select avg(alias.col(alias.col)) as averagealias.colgth, avg(alias.col) as alias.col, avg(alias.col) + alias.col(alias.col) as alias.col, avg(alias.col) - alias.col(alias.col) as alias.col, avg(alias.col) as ualias.colalias.col, avg(alias.col) + alias.col(alias.col) as ualias.colalias.col, avg(alias.col) - alias.col(alias.col) as ualias.colalias.col from table q ialias.colalias.coler joialias.col table aa oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table au oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table at oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold alias.col(alias.col) <= alias.col aalias.cold alias.col(alias.col) <= alias.col aalias.cold alias.col(alias.col) <= alias.col aalias.cold alias.col = q.acceptedaalias.colswerid aalias.cold alias.col != q.acceptedaalias.colswerid group by roualias.cold(alias.col(alias.col), alias.col) order by roualias.cold(alias.col(alias.col), alias.col)"
"selealias.col alias.col = alias.col, alias.col = alias.col(cast(alias.col as float)/cast(alias.col as float),alias.col), alias.col, views = alias.col, alias.col = vt.alias.colame, p.creatioalias.coldate from table p joialias.col table v oalias.col alias.col = alias.col joialias.col table vt oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold viewcoualias.colt > alias.col aalias.cold p.creatioalias.coldate > alias.col order by alias.col desc, p.creatioalias.coldate, vt.alias.colame"
"select top alias.col:ialias.colt?alias.col alias.col as alias.col, alias.col, coualias.colt (distialias.colct alias.col) as alias.col from table ph, table p where alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold lealias.col(alias.col(text)) > alias.col group by alias.col, alias.col order by alias.col desc"
"select top alias.col owalias.coleruserid as [user lialias.colk], coualias.colt(*) as challealias.colgecoualias.colt, sum(alias.col) as totalalias.col from table where alias.col=alias.col aalias.cold owalias.coleruserid != alias.col group by owalias.coleruserid order by totalalias.col desc"
"select name, count(*) from table group by name"
"select year(alias.col) year, moalias.colth(alias.col) moalias.colth, coualias.colt(*) questioalias.cols from table where alias.col = alias.col aalias.cold alias.col >= alias.col group by year(alias.col), moalias.colth(alias.col) order by year(alias.col), moalias.colth(alias.col)"
"declare @alias.col int = ##alias.col## select count(*) as alias.col, alias.col from table where alias.col = @alias.col group by alias.col order by alias.col desc"
"declare @alias.col int = ##alias.col## select alias.col, text from table where alias.col = @alias.col order by alias.col desc"
select alias.col from table as alias left join table as u on alias.col = alias.col where alias.col = ##alias.col##
"Declare @MinQuestioncount int SET @MinQuestioncount = ##MinQuestionCount:int##; WITH q AS ( SELECT t.*, ( SELECT COUNT(*) AS cnt FROM posttags pt JOIN posts pp ON pp.id = pt.postid JOIN posts pa ON pa.parentid = pp.id JOIN votes v ON v.postid = pa.id WHERE pt.tagid = t.id AND v.votetypeid = N ) AS upvotes, ( SELECT COUNT(*) AS cnt FROM posttags pt JOIN posts pp ON pp.id = pt.postid JOIN posts pa ON pa.parentid = pp.id JOIN votes v ON v.postid = pa.id WHERE pt.tagid = t.id AND v.votetypeid = N ) AS downvotes, pt.cnt FROM Tags t CROSS APPLY ( SELECT COUNT(*) AS cnt FROM PostTags pt WHERE pt.tagid = t.id HAVING COUNT(*) >= @MinQuestioncount ) pt ) SELECT tagname AS [Tags], cnt as TagSize, upvotes AS [Upvotes], downvotes AS [Downvotes], ROUND(N.N * downvotes / NULLIF(upvotes, N), N) AS [D/U ratio] FROM q ORDER BY N DESC"
"selealias.col alias.col + cast(alias.col as alias.colvarchar) + alias.col as alias.col, body, * from table where posttypealias.col = alias.col aalias.cold lealias.col(body) < alias.col order by lealias.col(body) asc"
"select top alias.col alias.col, displayalias.colame, reputatioalias.col, alias.col, locatioalias.col from table where locatioalias.col like alias.colx order by reputatioalias.col desc"
"select alias.col, alias.col, alias.col, alias.col from table as alias left outer joialias.col table as k oalias.col alias.col = alias.col where alias.col ialias.col (alias.col##) aalias.cold alias.col=alias.col"
declare @alias.col nvarchar(n) = alias.col select sum(case when table.table like alias.col then n else n end) from table inner join table on table.tagid = table.id inner join table on table.postid = table.id where alias.col = @alias.col;
select alias.col from table where body like xxx;
"with table as ( selealias.col alias.col, alias.col, coualias.colt( distialias.colalias.col alias.col ) as aalias.colswercoualias.colt, coualias.colt( q.id ) as acceptedcoualias.colt from table u joialias.col table a oalias.col alias.col = alias.col aalias.cold alias.col = alias.col left outer joialias.col table q oalias.col q.acceptedaalias.colswerid = alias.col group by alias.col, alias.col ) selealias.col top alias.col alias.col as [user lialias.colk], alias.col, u.aalias.colswercoualias.colt, u.acceptedcoualias.colt, roualias.cold((cast(u.acceptedcoualias.colt as float) / u.aalias.colswercoualias.colt)*alias.col,alias.col) as percealias.coltage from table u where u.aalias.colswercoualias.colt >=alias.col order by percealias.coltage desc"
"select top alias.col alias.col as [post lialias.colk], alias.col, alias.col, alias.col, body, acceptedaalias.colsweralias.col from table where (alias.col like alias.col) or (body like alias.col);"
"selealias.col alias.col, alias.col, alias.col, alias.col, alias.col + cast(alias.col as varchar) from table where alias.col like alias.col + alias.col:alias.col + alias.col and alias.col not like alias.col + alias.col:alias.col + alias.col order by alias.col desc"
"select alias.col, alias.col as alias.col, body from table where alias.col=alias.col:alias.col aalias.cold posttypealias.col=alias.col order by alias.col asc"
"declare @alias.col alias.colnt = n whalias.colle @alias.col < n begalias.coln set @alias.col = @alias.col + n select @alias.col, u.alias.cold as [user lalias.colnk] , sum(valias.colewcount) as [total valias.colews], sum(alias.col) as alias.col from table p alias.colnner joalias.coln table u on u.alias.cold = p.owneruseralias.cold where u.alias.cold=@alias.col and p.creatalias.colondate between x and x group by u.alias.cold end"
"with table as ( select alias.col from table ) select alias.col, coualias.colt(case whealias.col closereasoalias.coltypeid = alias.col thealias.col alias.col ealias.cold) from table ualias.colioalias.col all select alias.col, coualias.colt(case whealias.col closereasoalias.coltypeid = alias.col thealias.col alias.col ealias.cold) from table ualias.colioalias.col all select alias.colalias.col, coualias.colt(case whealias.col closereasoalias.coltypeid = alias.col thealias.col alias.col ealias.cold) from table ualias.colioalias.col all select alias.col, coualias.colt(case whealias.col closereasoalias.coltypeid = alias.col thealias.col alias.col ealias.cold) from table ualias.colioalias.col all select alias.col, coualias.colt(case whealias.col closereasoalias.coltypeid = alias.col thealias.col alias.col ealias.cold) from table ualias.colioalias.col all select alias.col, coualias.colt(alias.col) from table;"
"select coualias.colt(*) as alias.col, coualias.colt(alias.col) as alias.col from table p ialias.colalias.coler joialias.col table ph oalias.col alias.col = alias.col where ph.tabletypeid = alias.col"
"DECLARE @TableName TABLE(reviewer int, reviewee int); INSERT INTO @Tablename VALUES (XYZ), (N, N), (N, N), (N, N); DECLARE @revieweeID INT = N; DECLARE @reviewerID INT = N; ;WITH CTE AS ( SELECT reviewer, reviewee, N AS Level FROM @TableName WHERE reviewee = @revieweeID UNION ALL SELECT p.reviewer, p.reviewee, c.Level + N FROM CTE c INNER JOIN @TableName p ON c.reviewee = p.reviewer ) SELECT * FROM CTE ;"
"declare alias.col int = ##userid## select distinct ph.comment, ph.text from table ph where alias.col = alias.col and ph.tabletypeid in (alias.col) and alias.col not in (select alias.col from table p where alias.col = alias.col)"
"select alias.col(table) [table (alias.col)] , alias.col [total alias.col (alias.col)] from ( select alias.col alias.col, coualias.colt(*) table from table where alias.colutatioalias.col >= alias.col ualias.colioalias.col all select alias.col, coualias.colt(*) from table where alias.colutatioalias.col >= alias.col ualias.colioalias.col all select alias.col, coualias.colt(*) from table where alias.colutatioalias.col >= alias.col ualias.colioalias.col all select alias.col, coualias.colt(*) from table where alias.colutatioalias.col >= alias.col ualias.colioalias.col all select alias.col, coualias.colt(*) from table where alias.colutatioalias.col >= alias.col ualias.colioalias.col all select alias.col, coualias.colt(*) from table where alias.colutatioalias.col >= alias.col ualias.colioalias.col all select alias.col, coualias.colt(*) from table where alias.colutatioalias.col >= alias.col ualias.colioalias.col all select alias.col, coualias.colt(*) from table where alias.colutatioalias.col >= alias.col ualias.colioalias.col all select alias.col, coualias.colt(*) from table where alias.colutatioalias.col >= alias.col ualias.colioalias.col all select alias.col, coualias.colt(*) from table where alias.colutatioalias.col >= alias.col ualias.colioalias.col all select alias.col, coualias.colt(*) from table where alias.colutatioalias.col >= alias.col ualias.colioalias.col all select alias.col, coualias.colt(*) from table where alias.colutatioalias.col >= alias.col ualias.colioalias.col all select alias.col, coualias.colt(*) from table where alias.colutatioalias.col >= alias.col ualias.colioalias.col all select alias.col, coualias.colt(*) from table) x"
"declare @t table ( alias.col int, name varchar(n) ) insert into @t (alias.col, name) select alias.col,alias.col from table where alias.col like alias.col or alias.col like alias.col or alias.col like alias.col or alias.col like alias.col or alias.col like alias.col or alias.col like alias.col or alias.col like alias.col or alias.col like alias.col or alias.col like alias.col or alias.col like alias.col or alias.col like alias.col or alias.col like alias.col or alias.col like alias.col or alias.col like alias.col or alias.col like alias.col or alias.col like alias.col or alias.col like alias.col or alias.col like alias.col or alias.col like alias.col or alias.col like alias.col or alias.col like alias.col; begin print alias.col print alias.col end select * from @t;"
"select alias.col alias.col, count(*) alias.col, (select count(*) from table where alias.col <= alias.col) alias.col from table where alias.col <= alias.col and alias.col is not null union all select alias.col, count(*), (select count(*) from table where alias.col > alias.col) from table where alias.col > alias.col and alias.col is not null union all select alias.col, count(*), (select count(*) from table) from table where alias.col is not null"
"set alias.colocoualias.colt oalias.col declare alias.col datetime select alias.col = max(alias.col) from table declare @igalias.coloredays alias.columeric = alias.col declare @mialias.colagedays alias.columeric = @igalias.coloredays * alias.col declare alias.col ialias.colt = ##userid## declare @tabletats table (alias.col ialias.colt, alias.col ialias.colt, dowalias.col ialias.colt, alias.col datetime) ialias.colsert @tabletats select alias.col, alias.col = sum(case whealias.col alias.col = alias.col thealias.col case whealias.col p.parealias.coltid is alias.colull thealias.col alias.col else alias.col ealias.cold else alias.col ealias.cold), dowalias.col = sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold), p.alias.col from table v joialias.col table p oalias.col alias.col = alias.col where v.alias.col ialias.col (alias.col) aalias.cold owalias.coleruserid = alias.col aalias.cold p.commualias.colityowalias.coleddate is alias.colull aalias.cold alias.col(day, p.alias.col, v.alias.col) > @igalias.coloredays aalias.cold alias.col(day, p.alias.col, alias.col) > @mialias.colagedays groalias.col by alias.col, p.alias.col, p.parealias.coltid set alias.colocoualias.colt off select top alias.col alias.col as [post lialias.colk], coalias.colvert(decimal(alias.col,alias.col), alias.col - dowalias.col)/(alias.col(day, vs.alias.col, alias.col) - @igalias.coloredays) as [passive rep per day], (alias.col - dowalias.col) as [passive rep], alias.col as [passive alias.col reputatioalias.col], dowalias.col as [passive dowalias.col reputatioalias.col], alias.col(day, vs.alias.col, alias.col) - @igalias.coloredays as [days coualias.colted] from @tabletats vs order by [passive rep per day] desc"
"declare @alias.col int = ##alias.col## select alias.col, text from table where alias.col = @alias.col group by alias.col, text order by alias.col desc"
"select distinct alias.col, u.displayname from table u inner join table p on alias.col = alias.col inner join table v on alias.col = alias.col group by alias.col, u.displayname, alias.col having count(*) >= n"
"select top alias.col table.tagalias.colame as talias.col, coualias.colt(*) as tagcoualias.coltalias.col from table ialias.colalias.coler joialias.col table oalias.col table.postid = table.id ialias.colalias.coler joialias.col table oalias.col table.id = table.tagid where alias.col(year, table.creatioalias.coldate) = alias.col aalias.cold alias.col(moalias.colth, table.creatioalias.coldate) = alias.col group by table.tagalias.colame ualias.colioalias.col select table.tagalias.colame as talias.col, coualias.colt(*) as tagcoualias.coltalias.col from table ialias.colalias.coler joialias.col table oalias.col table.postid = table.id ialias.colalias.coler joialias.col table oalias.col table.id = table.tagid where alias.col(year, table.creatioalias.coldate) = alias.col aalias.cold alias.col(moalias.colth, table.creatioalias.coldate) = alias.col group by table.tagalias.colame"
"select top alias.col row_alias.columber() over(order by reputatioalias.col desc) as [#], id as [user lialias.colk], reputatioalias.col, locatioalias.col from table where lower(locatioalias.col) like x or upper(locatioalias.col) like x ... or locatioalias.col like x aalias.cold reputatioalias.col >= alias.col order by reputatioalias.col desc;"
"with goldtagtable as (select max(table.alias.col) as alias.col from table inner join table t on alias.col = name group by useralias.col, name having count(*) > n ) select name, [useralias.col] as alias.col, alias.col as alias.col from table inner join goldtagtable g on g.alias.col = table.alias.col where name in (alias.col) or g.alias.col is null order by alias.col desc"
"with table as ( select alias.col from table where alias.col = ##oalias.col## ) , table as ( select p.postalias.col as postalias.col from posttable p joialias.col table i oalias.col i.alias.col = p.tagalias.col ) , alias.col as ( select coualias.colt(*) as alias.col from table ) , otable as ( select t.alias.col as alias.col, coualias.colt(*) as alias.col from posttable p joialias.col table t oalias.col t.alias.col = p.tagalias.col joialias.col table i oalias.col i.postalias.col = p.postalias.col where t.alias.col <> ##oalias.col## group by t.alias.col ) select o.alias.col as alias.colame, alias.col * o.alias.col / c.alias.col as alias.col from otable o cross joialias.col alias.col c where c.alias.col / o.alias.col > alias.col order by o.alias.col desc"
"select distinct cast(alias.col as date) as [activedate] , ownertable from ( select alias.col , ownertable from table union select lasteditdate , table from table union select alias.col , table from table ) data"
"declare @alias.colalias.col ialias.colt = ##alias.colalias.col## declare @alias.colalias.col ialias.colt = ##alias.colalias.col## select top alias.col with ties text, userdisplayalias.colame, alias.col [post lialias.colk], score, coualias.colt(*) over (partitioalias.col by score) as alias.columbersamescore from table where alias.col = @alias.colalias.col or alias.col = @alias.colalias.col order by alias.col desc"
"selealias.col (alias.col + cast(alias.col as varchar(alias.col)) + alias.col + cast(alias.col as varchar(alias.col)) + alias.col + cast(alias.col as varchar(alias.col)) + alias.col + reply.tealias.colt) as [tealias.colt], (selealias.col top alias.col previous.tealias.colt from table previous where alias.col = alias.col aalias.cold alias.col < alias.col order by alias.col desc) as [reply to], reply.creatioalias.coldate as [date], reply.score as [score] from table reply where reply.useralias.col = alias.col aalias.cold reply.tealias.colt like alias.col order by reply.creatioalias.coldate asc"
"select row_number() over(order by alias.col desc) as position ,displayname ,alias.col ,age ,websiteurl ,aboutme ,x + convert(varchar(n), id) as profileurl from table(nolock) where upper(location) like nx or location like nx or location like nx or upper(location) like nx or location like nx or upper(location) like nx or upper(location) like nx or location like nx or upper(location) like nx or location like nx order by alias.col desc"
"selealias.col alias.col, coualias.colt(alias.col) from ( selealias.col cast( cast(alias.col(alias.col, alias.col) as varchar) + alias.col + cast(alias.col(alias.col, alias.col) as varchar) + alias.col as datetime) table, t.table from table p joialias.col table pt oalias.col alias.col = alias.col joialias.col table t oalias.col alias.col = alias.col where alias.col ialias.col ( selealias.col top alias.col alias.col from table order by coualias.colt desc ) ) as alias.col group by table, table order by table asc, table asc"
"select alias.col, coualias.colt(alias.col) as alias.col from ( select t.table from table p joialias.col table pt oalias.col alias.col = alias.col joialias.col table t oalias.col alias.col = alias.col where alias.col ialias.col ( select top alias.col alias.col from table order by coualias.colt asc ) ) as x group by table order by alias.col desc, table asc"
"declare @tagalias.colame alias.colvarchar(alias.col) = x select top alias.col alias.col, (select displayalias.colame from table udalias.col with (alias.cololock) where udalias.col.id = alias.col) ,coualias.colt(*) as uptable from table t with (alias.cololock) ialias.colalias.coler joialias.col posttable pt with (alias.cololock)oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table p with (alias.cololock) oalias.col p.parealias.coltid = alias.col ialias.colalias.coler joialias.col table v with (alias.cololock) oalias.col alias.col = alias.col aalias.cold alias.col = alias.col ialias.colalias.coler joialias.col table u with (alias.cololock) oalias.col alias.col = p.owalias.coleruserid where p.commualias.colityowalias.coleddate is alias.colull aalias.cold t.tagalias.colame = @tagalias.colame group by alias.col order by uptable desc"
"select convert(date, alias.col) as alias.col, count(*) as [table created] from table p where alias.col in (alias.col) order by convert(date, alias.col)"
"declare @latest_date datetime = (select max(alias.col) from table) - n; declare @min_q int = ##minimumnumberoftaggedquestions:int##; with tagcounts as ( select qt.tagid, sum(case when q.score >= n then n else n end) goodq, count(*) allq from posttags qt join table q on q.id = qt.postid where q.posttypeid = n and q.closeddate is null and q.alias.col >= @latest_date group by qt.tagid having count(*) >= @min_q ), tagpercentages as ( select tagid, cast(goodq as numeric) / cast(allq as numeric) * n [], goodq, allq from tagcounts ) select top n t.tagname, cast(p.[] as decimal(n, n)) [], p.goodq, p.allq from tagpercentages p join tags t on p.tagid = t.id order by p.[] desc;"
"select alias.col, table.count as alias.col, sum(table.alias.col) as alias.col, table.count + sum(table.alias.col) as alias.col, sum(alias.col) + (select sum(a.alias.col) from table a where alias.col = table.id group by alias.col) from table inner join table on table.table like alias.col + table.alias.col + alias.col group by table.alias.col, table.count, table.id order by alias.col desc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x order by alias.col desc;"
"select alias.col alias.col, alias.col, alias.col from table p ialias.colalias.coler joialias.col table u oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table q oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col >= alias.col(alias.col, alias.col, alias.col()) aalias.cold alias.col is alias.colull aalias.cold q.aalias.colswercoualias.colt < alias.col aalias.cold q.commualias.colityowalias.coleddate is alias.colot alias.colull order by alias.col desc"
"declare alias.col ialias.colt = ##userid## declare @badgealias.col ialias.colt = alias.col declare @badgealias.col ialias.colt = alias.col declare @badgealias.col ialias.colt = alias.col declare @edittitle ialias.colt = alias.col declare @editbody ialias.colt = alias.col declare alias.col ialias.colt = alias.col declare alias.col ialias.colt = alias.col declare alias.col ialias.colt select alias.col = coualias.colt(*) from table p joialias.col table h oalias.col alias.col = alias.col where alias.col != alias.col aalias.cold alias.col = alias.col aalias.cold h.tabletypeid ialias.col (alias.col) aalias.cold (select coualias.colt(*) from table halias.col where alias.col = alias.col aalias.cold halias.col.tabletypeid = alias.col) - (select coualias.colt(*) from table halias.col where alias.col = alias.col aalias.cold halias.col.tabletypeid = alias.col) >= alias.col declare @ualias.coltilbadgealias.col ialias.colt = case whealias.col (@badgealias.col - alias.col) < alias.col thealias.col alias.col else @badgealias.col - alias.col ealias.cold declare @ualias.coltilbadgealias.col ialias.colt = case whealias.col (@badgealias.col - alias.col) < alias.col thealias.col alias.col else @badgealias.col - alias.col ealias.cold declare @ualias.coltilbadgealias.col ialias.colt = case whealias.col (@badgealias.col - alias.col) < alias.col thealias.col alias.col else @badgealias.col - alias.col ealias.cold select alias.col as alias.col, @ualias.coltilbadgealias.col as alias.col, @ualias.coltilbadgealias.col as alias.col, @ualias.coltilbadgealias.col as alias.col"
"selealias.col alias.col = right(alias.col*alias.col,alias.col) + alias.col + right(alias.col*alias.col,alias.col) + alias.col, rate_of_alias.colero_score_aalias.colswers = alias.col(alias.col.alias.col*sum(alias.col)/sum(alias.col), alias.col,alias.col), maalias.col_questioalias.cols_per_alias.col = maalias.col(alias.col) from ( selealias.col alias.col, [post lialias.colk] = alias.col, alias.col = questioalias.colcoualias.colt, alias.col = alias.colerovotecoualias.colt, [] = alias.colerovotecoualias.coltrate, alias.colerovoteraalias.colk = raalias.colk() over (order by alias.colerovotecoualias.coltrate desc), alias.colviewraalias.colk = raalias.colk() over (order by viewcoualias.colt desc), alias.col = alias.coltile(alias.col) over (order by viewcoualias.colt) from ( selealias.col alias.col, alias.col = maalias.col(alias.col), viewcoualias.colt = sum(viewcoualias.colt), questioalias.colcoualias.colt = sum(questioalias.colcoualias.colt), alias.colerovotecoualias.colt= sum(alias.colerovotecoualias.colt), alias.colerovotecoualias.coltrate = cast(alias.col.alias.col*sum(alias.colerovotecoualias.colt)/sum(questioalias.colcoualias.colt) as alias.columeric(alias.col,alias.col)) from ( selealias.col alias.col = subalias.colialias.colg(alias.cols, v.alias.columber+alias.col, charialias.coldealias.col(alias.col, alias.cols, v.alias.columber+alias.col)-v.alias.columberalias.col), viewcoualias.colt, questioalias.colcoualias.colt, alias.colerovotecoualias.colt, alias.col from ( selealias.col q.alias.cols, sum(q.viewcoualias.colt) viewcoualias.colt, coualias.colt(*) questioalias.colcoualias.colt, coualias.colt(case whealias.col alias.col=alias.col thealias.col alias.col ealias.cold) alias.colerovotecoualias.colt, maalias.col(q.id) as alias.col from (selealias.col alias.col=alias.col:ialias.colt##, _moalias.colth=##moalias.colth:ialias.colt##) alias.col ialias.coler joialias.col table q oalias.col alias.col=alias.col ialias.coler joialias.col table a oalias.col alias.col = q.acalias.colptedaalias.colswerid where q.creatioalias.coldate >= cast(alias.col*alias.col+_moalias.colth*alias.col+alias.col as char(alias.col)) aalias.cold q.creatioalias.coldate < alias.col(m,alias.col,cast(alias.col*alias.col+_moalias.colth*alias.col+alias.col as char(alias.col))) group by q.alias.cols) q ialias.coler joialias.col mastertable v oalias.col alias.col=alias.col aalias.cold subalias.colialias.colg(alias.cols, v.alias.columber, alias.col) = alias.col ) alias.col group by alias.col ) y where questioalias.colcoualias.colt >=alias.col ) alias.col group by alias.col order by alias.col"
"select alias.col as alias.col, location, alias.col ,alias.col from table where alias.col like alias.col order by alias.col desc"
"select alias.col, alias.col, alias.col, alias.col from table where location=alias.col order by alias.col desc"
"select top alias.col row_alias.columber() over(order by reputatioalias.col desc) as [#], id, displayalias.colame, reputatioalias.col, websiteurl, locatioalias.col from table where locatioalias.col like alias.colx order by reputatioalias.col desc"
select alias.col from table where alias.col = alias.col;
"DECLARE @max_body_len INT = ##MaxBodyLength:INT?N##; DECLARE @max_excerpt_len INT = ##MaxExcerptLength:INT?N##; DECLARE @min_body_len INT = ##MinBodyLength:INT?N##; DECLARE @min_excerpt_len INT = ##MinExcerptLength:INT?N##; SELECT Count, t.TagName, COALESCE(LEN(pe.Body),N) AS [Excerpt length], COALESCE(LEN(pw.Body),N) AS [Wiki length], ExcerptPostId AS [Post Link], pe.CreationDate FROM Tags t LEFT JOIN Posts pe ON pe.Id = t.ExcerptPostId LEFT JOIN Posts pw ON pw.Id = t.WikiPostId WHERE (@max_body_len = N AND @max_excerpt_len = N AND @min_body_len = N AND @min_excerpt_len = N) OR (WikiPostId IS NULL AND (@max_excerpt_len <> N OR @max_body_len <> N)) OR LEN(pe.Body) < NULLIF(@max_excerpt_len,N) OR LEN(pw.Body) < NULLIF(@max_body_len,N) OR LEN(pe.Body) > NULLIF(@min_excerpt_len,N) OR LEN(pw.Body) > NULLIF(@min_body_len,N) ORDER BY Count DESC, COALESCE(LEN(pe.Body),N) ASC, COALESCE(LEN(pw.body),N) ASC, t.TagName"
"select row_number() over (order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or lower(location) like x ... order by alias.col desc"
"select table.id as alias.col, table.score from table where table.tags = alias.col aalias.cold alias.col = alias.col aalias.cold table.id alias.colot ialias.col ( select commealias.colts.postid from commealias.colts ) order by table.score desc;"
"set alias.colocoualias.colt oalias.col declare alias.col date select alias.col = alias.col() select top alias.col alias.col as [user lialias.colk], reputatioalias.col, alias.col, reputatioalias.col/alias.col as repperalias.col from (select alias.col, reputatioalias.col, alias.col(day, creatioalias.coldate, alias.col) as alias.col from table where reputatioalias.col > alias.col ) as ratedtable order by repperalias.col desc"
"select top alias.col alias.col as [post lialias.colk], alias.col as [user lialias.colk], u.reputatioalias.col, alias.col as alias.col, lealias.col(alias.col) as bodylealias.colgth from table p ialias.colalias.coler joialias.col table u oalias.col alias.col = p.owalias.coleruserid where alias.col=alias.col aalias.cold alias.col < alias.col aalias.cold u.reputatioalias.col < alias.col aalias.cold alias.col is alias.colull aalias.cold alias.colot exists (select alias.col from table ph where alias.col = alias.col aalias.cold ph.tabletypeid = alias.col) order by bodylealias.colgth"
"select alias.col, body from table where alias.col != alias.col and patindealias.col(alias.col, body) > n"
select count(*) as alias.col from table q inner join table a on alias.col=alias.col where alias.col=alias.col##
"with avalias.coltable as ( selealias.col alias.col , alias.col from table where alias.col >= alias.col ), table as ( selealias.col avg(alias.col) as μ from avalias.coltable ), table as ( selealias.col coualias.colt(alias.col) as alias.col , μ , alias.col(alias.col) as σ , avg(power(cast(alias.col - μ as float), alias.col)) as μalias.col from avalias.coltable, table group by μ ) selealias.col μalias.col / power(σ, alias.col) as skewalias.coless from table"
"selealias.col top alias.col alias.col, u.displayalias.colame, mialias.col(u.reputatioalias.col) as reputatioalias.col, sum(lealias.col(alias.col)) as totallealias.colgth, coualias.colt(*) as totaltable, avg(lealias.col(alias.col)) as avgpostlealias.colgth, (cast(sum(lealias.col(alias.col)) as float) / cast(mialias.col(u.reputatioalias.col) as float)) as postlealias.colgthperreputatioalias.col from table p ialias.colalias.coler joialias.col table u oalias.col alias.col = p.owalias.coleruserid where alias.col = alias.col aalias.cold u.reputatioalias.col > alias.col group by alias.col, u.displayalias.colame order by postlealias.colgthperreputatioalias.col desc"
"select alias.col , sum(alias.col) as alias.col from ( select alias.col , coualias.colt(*) as alias.col from table v ialias.colalias.coler joialias.col table p oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col is alias.colull group by alias.col ) as rawalias.col group by alias.col order by alias.col desc"
"select alias.col as alias.col, case alias.col whealias.col alias.col thealias.col x whealias.col alias.col thealias.col x else x ealias.cold as x, case pf.votetypeid whealias.col alias.col thealias.col x whealias.col alias.col thealias.col x else x ealias.cold as x, coualias.colt(alias.col) as votecoualias.colt, coalesalias.col (p.viewcoualias.colt, pp.viewcoualias.colt) as viewcoualias.colt from table pf left joialias.col table p oalias.col (alias.col = alias.col) left joialias.col table pp oalias.col (palias.col = p.parealias.coltid) where p.owalias.coleruserid = alias.col## aalias.cold pf.isaalias.coloalias.colymous = alias.col group by alias.col, alias.col, pf.votetypeid, p.viewcoualias.colt, pp.viewcoualias.colt order by votecoualias.colt desc"
"declare @agedays alias.columeric = ##days## declare @lastdate datetime set @lastdate = (select max(alias.col) from table) select top alias.col (case table.posttypeid whealias.col alias.col thealias.col x whealias.col alias.col thealias.col x ealias.cold), table.id as x, [age] = alias.col(day,table.alias.col,@lastdate), table.owalias.coleruserid as x, alias.col = sum(case whealias.col votetypeid = alias.col thealias.col alias.col whealias.col votetypeid = alias.col thealias.col alias.col ealias.cold), [currealias.colt score] = table.score from table ialias.colalias.coler joialias.col table oalias.col table.id = table.postid where alias.col(day,table.alias.col,table.alias.col) <= @agedays group by table.id, table.owalias.coleruserid, table.posttypeid, table.score, table.alias.col order by alias.col desc"
"select top alias.col alias.col as [post lialias.colk], favoritecoualias.colt, alias.col from table order by favoritecoualias.colt desc"
"declare @tagn nvarchar(n) = ##tagn:string?ruby-on-alias.col declare @tagn nvarchar(n) = ##tagn:string?django## declare @tagn nvarchar(n) = ##tagn:string?pythonn.x## declare @weeks int = ##weeks:int?n## select alias.col(week, datediff(week, n, alias.col), n) week, alias.col, count(*) from table pt join table q on alias.col=alias.col join table t on alias.col=alias.col where alias.col in (alias.col) and alias.col between alias.col(ww, -@weeks, getdate()) and alias.col(ww, n, getdate()) group by alias.col(week, datediff(week, n, alias.col), n), alias.col order by alias.col(week, datediff(week, n, alias.col), n)"
"declare @alias.col int = ##alias.col## select count(*) as alias.col, alias.col from table where alias.col = @alias.col group by alias.col order by alias.col desc"
"select alias.col as alias.col, alias.col, alias.col as alias.col, alias.col as alias.col, alias.col as alias.col from table a ialias.colalias.coler joialias.col table q oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table u oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold alias.col(moalias.colth, alias.col, alias.col) > alias.col aalias.cold alias.col(day, alias.col, alias.col) < alias.col aalias.cold alias.col > alias.col aalias.cold alias.col > alias.col order by alias.col desc"
"select alias.col, coualias.colt(*) from table t left joialias.col posttable pt oalias.col alias.col = alias.col left joialias.col table p oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col < alias.col aalias.cold p.viewcoualias.colt < alias.col aalias.cold ( p.aalias.colswercoualias.colt < alias.col or p.aalias.colswercoualias.colt is alias.colull ) group by alias.col order by alias.col desc"
declare @alias.col int = ##alias.col## select count(*) from ( select alias.col from table ph where tabletypeid in (alias.col) and alias.col not in ( select alias.col from table p where alias.col = alias.col ) and alias.col = @alias.col group by alias.col ) as alias
"select distinct table.id [user link], table.reputation from table join table on table.owneruserid = table.id where table.location like alias.col and table.tags like alias.col order by table.reputation desc"
"DECLARE @UserId int = ##UserId## ; with foo(ParentID) as ( select ParentId from Posts where OwnerUserId = @UserID ) select Id as [Post Link], Title, body from Posts where OwnerUserId = @UserID OR Id in (select * from foo) or ParentId in (select * from foo);"
"select alias.col as alias.col, alias.col as alias.col, alias.col as [alias.col], alias.col as alias.col from table where alias.col not like alias.col and alias.col not like alias.col and alias.col not like alias.col and alias.col not like alias.col and alias.col not like alias.col and alias.col not like alias.col and alias.col not like alias.col and alias.col not like alias.col and alias.col not like alias.col and alias.col not like alias.col and alias.col not like alias.col and alias.col not like alias.col and alias.col not like alias.col and alias.col not like alias.col and alias.col not like alias.col and alias.col not like alias.col and alias.col not like alias.col and alias.col not like alias.col and alias.col not like alias.col and alias.col not like alias.col and alias.col not like alias.col and alias.col is null order by alias.col desc"
declare alias.col ialias.colt = ##year## declare @moalias.colth ialias.colt = ##moalias.colth## select coualias.colt(alias.col) from table p where alias.col = alias.col aalias.cold year(p.creatioalias.coldate) = alias.col aalias.cold moalias.colth(p.creatioalias.coldate) = @moalias.colth
select alias.col from table q where alias.col = alias.col ;
"select alias.col, alias.col, tealias.colt, alias.col as alias.col from table where alias.col = alias.col aalias.cold upper(tealias.colt) like alias.col order by alias.col"
"selealias.col avg(cast(alias.col(alias.col, -floor(alias.col(alias.col, alias.col))) as bigialias.colt)) as useralias.col, avg(cast(table.score as float)) as averagequestioalias.colscore from table ialias.colalias.coler joialias.col table oalias.col (table.id = table.owalias.coleruserid) where alias.col = alias.col aalias.cold alias.col < alias.col group by alias.col(alias.col, -floor(alias.col(alias.col, alias.col))) order by useralias.col"
"select alias.col as alias.col, body, score from table where alias.col(body) < n"
"select top alias.col questioalias.col.id, questioalias.col.id as [post lialias.colk], table.lastaccessdate, questioalias.col.aalias.colswercoualias.colt from table as questioalias.col joialias.col table oalias.col questioalias.col.owalias.coleruserid = table.id where questioalias.col.acceptedaalias.colswerid is alias.colull aalias.cold alias.colot exists (select alias.col from table as aalias.colswer where aalias.colswer.parealias.coltid = questioalias.col.id aalias.cold aalias.colswer.score > alias.col) aalias.cold questioalias.col.posttypeid = alias.col aalias.cold questioalias.col.closeddate is alias.colull aalias.cold datediff( day, table.lastaccessdate, getdate() ) < alias.col order by questioalias.col.id asc"
"selealias.col top alias.col table.id as [user lialias.colk], coualias.colt(table.id) as aalias.colswers, cast(avg(cast(alias.col as float)) as alias.columeric(alias.col,alias.col)) as [average aalias.colswer alias.col] from table ialias.colalias.coler joialias.col table oalias.col table.id = owalias.coleruserid where alias.col = alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold closeddate is alias.colull group by table.id, displayalias.colame havialias.colg coualias.colt(table.id) > alias.col order by [average aalias.colswer alias.col] desc"
"select alias.col as alias.col, alias.col(body) as alias.colgth from table where posttypealias.col=alias.col order by alias.col(body) asc"
"select alias.col as alias.col, alias.col from table where body like x collate sql_latinn_general_cpn_ci_as and body like x collate sql_latinn_general_cpn_ci_as"
"declare alias.col int = ##userid## select distinct alias.col as [post link], alias.col from table p join table c on alias.col = alias.col where alias.col = alias.col and not alias.col = alias.col and alias.col like alias.col"
select top alias.col table.id as [post lialias.colk] from table joialias.col table oalias.col table.owalias.coleruserid=table.id where table.body like alias.col + table.displayalias.colame + alias.col
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x order by alias.col desc;"
"select avg(alias.col(body)) as averagealias.colgth, avg(cast(score as float)/viewcoualias.colt) as questioalias.colscore, avg(cast(score as float)/viewcoualias.colt) + stdev(cast(score as float)/viewcoualias.colt) as plusoalias.colesigma, avg(cast(score as float)/viewcoualias.colt) - stdev(cast(score as float)/viewcoualias.colt) as mialias.colusoalias.colesigma from table where alias.col = alias.col aalias.cold alias.col(body) <= alias.col group by roualias.cold(alias.col(body), alias.col) order by roualias.cold(alias.col(body), alias.col)"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... order by alias.col desc;"
"select alias.col,alias.col,parealias.coltalias.col,owalias.coleruseralias.col from table where owalias.coleruseralias.col = alias.col;"
"select alias.col as alias.col, alias.col, alias.col as alias.col, case whealias.col alias.col is alias.colot alias.colull thealias.col x else alias.colull ealias.cold as wiki, alias.col as closed, q.lastactivitydate as [last active], q.owalias.coleruseralias.col as [user lialias.colk] from table q where alias.col = alias.col aalias.cold alias.col < alias.col aalias.cold alias.col is alias.colot alias.colull aalias.cold q.acalias.colptedaalias.colsweralias.col is alias.colull aalias.cold (alias.col is alias.colull or alias.col = alias.col or alias.colot exists ( select alias.col from table a where a.posttypealias.col = alias.col aalias.cold a.parealias.coltalias.col = alias.col aalias.cold alias.col > alias.col) )"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... or location like x and alias.col >= n order by alias.col desc;"
"with tablewithlialias.colks as ( select alias.col, posttypealias.col, alias.col, alias.col, substrialias.colg( body, alias.col(alias.col, body) + alias.col, alias.col(alias.col, substrialias.colg(body, alias.col(alias.col, body) + alias.col, alias.col) ) - alias.col ) host from table where alias.col(alias.col, body) > alias.col ) select top alias.col coualias.colt(alias.col) coualias.coltpost, sum(case posttypealias.col whealias.col alias.col thealias.col alias.col else alias.col ealias.cold) coualias.coltq, sum(case posttypealias.col whealias.col alias.col thealias.col alias.col else alias.col ealias.cold) coualias.colta, sum(alias.col) sumalias.col, host from tablewithlialias.colks group by host order by coualias.colt(alias.col) desc"
select top alias.col?alias.col alias.col as alias.col from table where posttypealias.col = alias.col order by alias.colewalias.col()
"select top alias.col alias.col [post lialias.colk], alias.col, p.owalias.coleruserid [user lialias.colk] from table p where alias.col = alias.col order by alias.col desc"
"select top alias.col alias.col, displayalias.colame, reputatioalias.col, alias.col, locatioalias.col from table where (locatioalias.col like alias.colx or locatioalias.col like alias.colx) aalias.cold ((aboutme is alias.colot alias.colull aalias.cold aboutme != x) or (alias.col is alias.colot alias.colull aalias.cold alias.col != x)) order by reputatioalias.col desc"
"select alias.col alias.col, alias.col, coualias.colt(*) as alias.col from table joialias.col table u oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold table.creatioalias.coldate = alias.col(moalias.colth,alias.col, alias.col(moalias.colth, datediff(moalias.colth,alias.col,getdate()), alias.col) ) group by alias.col, alias.col havialias.colg coualias.colt(*) > ##mialias.colaalias.colswers## order by alias.col desc"
"declare @myuseralias.col int = ##useralias.col:int## declare alias.col nvarchar(n) = ##posttext:string## select alias.col = upper(alias.col) select alias.col as alias.col, alias.col as [alias.col], alias.col as alias.col, alias.col from table where owneruseralias.col = @myuseralias.col and posttypealias.col in (alias.col) and upper(body) like x + alias.col + x order by alias.col desc"
"select top alias.col table.id, table.alias.col from table where (alias.col < alias.col or alias.col is alias.colot alias.colull) aalias.cold alias.col = alias.col aalias.cold table.id alias.colot ialias.col ( select commealias.colts.postid from commealias.colts ) order by table.id desc;"
"declare @alias.col int = ##alias.col## select count(*) as alias.col, alias.col from table where alias.col = @alias.col group by alias.col order by alias.col desc"
"declare @alias.col int = ##alias.col## select alias.col as alias.col, alias.col from table where alias.col = @alias.col order by alias.col desc"
"selealias.col un.emailhash, count(alias.col) as alias.col, sum(alias.col) as alias.col, maalias.col(alias.col) as alias.col, sum(alias.col) - maalias.col(alias.col) as alias.col, ( selealias.col cast(alias.col as varchar) + alias.col + alias.col + alias.col + cast(alias.col as varchar) + alias.col from table un where un.emailhash = un.emailhash order by alias.col desc for alias.colml path (alias.col)) as idsandnames from table un where un.emailhash is not null group by un.emailhash having count(alias.col) > n and sum(alias.col) >= n and maalias.col(alias.col) < sum(alias.col) * n.n order by alias.col desc"
"select case whealias.col alias.col >= alias.col thealias.col x else coalias.colcat(alias.col, x, alias.col) ealias.colalias.col as curious, case whealias.col alias.col >= alias.col thealias.col x else coalias.colcat(alias.col, x, alias.col) ealias.colalias.col as ialias.colquisitive, case whealias.col alias.col >= alias.col thealias.col x else coalias.colcat(alias.col, x, alias.col) ealias.colalias.col as socratic from (select coualias.colt(*) as alias.col from (select alias.col(alias.col, creatioalias.colalias.colate, getalias.colate()) as creatioalias.colalias.colaalias.col, sum(case whealias.col alias.col > alias.col aalias.colalias.col closealias.colalias.colate is alias.colull thealias.col alias.col else alias.col ealias.colalias.col) as alias.col, sum(case whealias.col alias.col < alias.col or closealias.colalias.colate is alias.colot alias.colull thealias.col alias.col else alias.col ealias.colalias.col) as alias.colowalias.col from table where owalias.coleruserialias.col = ##userialias.col## aalias.colalias.col posttalias.colpeialias.col = alias.col groalias.col balias.col alias.col(alias.col, creatioalias.colalias.colate, getalias.colate()) ) x where alias.col > alias.col aalias.colalias.col alias.colowalias.col = alias.col ) alias.col"
select alias.col
"declare alias.col ialias.colt = ##userid## select alias.col, alias.col - alias.col alias.col from ( select alias.col, table.alias.colame, coualias.colt(*) as table from table joialias.col posttable oalias.col posttable.tagid = table.id joialias.col table oalias.col table.parealias.coltid = posttable.postid aalias.cold table.posttypeid = alias.col joialias.col table oalias.col table.postid = table.id aalias.cold alias.col ialias.col (alias.col) joialias.col table oalias.col table.alias.col = table.id where table.owalias.coleruserid = alias.col group by alias.col, table.alias.colame )q pivot (sum(table) for alias.colame ialias.col (alias.col) )p where alias.col - alias.col > alias.col order by alias.col desc, alias.col"
"declare @alias.col int = ##alias.col## select count(*) as alias.col, alias.col from table where alias.col = @alias.col group by alias.col order by alias.col desc"
"selealias.col alias.col,alias.col,alias.col as alias.col, alias.col from table p where alias.col=alias.col aalias.cold alias.col like alias.col ... aalias.cold (alias.col like alias.col ...) aalias.cold alias.col > cast(alias.col as alias) aalias.cold alias.col < cast(alias.col as alias) order by alias.col desc"
"select alias.col, alias.col as alias.col, alias.col, alias.col, alias.col, us.lastaccessdate, alias.col from table us where location like x order by alias.col desc"
"select coualias.colt(*) as alias.col, floor(alias.col/alias.col)*alias.col+alias.col as views from table where alias.col = alias.col group by floor(alias.col/alias.col)*alias.col+alias.col order by views"
"select alias.col alias.col, max(alias.col) [last edited] from table c ialias.colalias.coler joialias.col table p oalias.col alias.col = alias.col aalias.cold alias.col = alias.col ialias.colalias.coler joialias.col table ph oalias.col alias.col = alias.col aalias.cold ph.tabletypeid ialias.col (alias.col) aalias.cold alias.col >= c.creatioalias.coldate where alias.col = alias.col## aalias.cold alias.col != alias.col## group by alias.col order by [last edited] desc"
"select alias.col as alias.col, row_alias.colber() over (order by alias.col desc) as mayrank, row_alias.colber() over (order by alias.col desc) as totalrank, alias.col as questionsinmay, alias.col as questionstotal from (select count(alias.col) as alias.col, alias.colname from table, posttable, table where table.id = posttable.alias.colid and table.id = alias.col and table.creationdate < alias.col and table.creationdate > alias.col group by alias.colname) as alias.col inner join (select count(alias.col) as alias.col, alias.colname from table, posttable, table where table.id = posttable.alias.colid and table.id = alias.col group by alias.colname having count(alias.col) > n) as alias.col on alias.col.alias.colname = alias.col order by alias.col desc ;"
"declare @alias.col int = ##alias.col## select alias.col as alias.col, alias.col, text, alias.col from table where alias.col = @alias.col order by alias.col desc"
select alias.col from table p inner join table u on alias.col = alias.col where alias.col = alias.col
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like lower(x) order by alias.col desc;"
"select coualias.colt(*) from table where alias.col=alias.col aalias.cold creatioalias.coldate < alias.col(moalias.colth, ##moalias.colths##, x)"
"with table as (select alias.col, alias.col, alias.col, alias.col from table where alias.col(alias.col)>alias.col) select alias.col, alias.col, alias.col as [tableost lialias.colk] from table where alias.col=(select m=mialias.col(alias.col) from table) order by alias.col"
select alias.col as alias.col from table where alias.col like alias.col
"select sum(alias.col) as alias.cols, sum(alias.col) as alias.cols from ( select alias.col, case whealias.col (select acalias.colptedaalias.colsweralias.col from table where alias.col = alias.col) = useralias.colaalias.colswers.alias.col thealias.col alias.col whealias.col (select acalias.colptedaalias.colsweralias.col from table where alias.col = alias.col) = useralias.colaalias.colswers.alias.col thealias.col alias.col whealias.col useralias.colaalias.colswers.score > useralias.colaalias.colswers.score thealias.col alias.col else alias.col ealias.cold as alias.col, case whealias.col (select acalias.colptedaalias.colsweralias.col from table where alias.col = alias.col) = useralias.colaalias.colswers.alias.col thealias.col alias.col whealias.col (select acalias.colptedaalias.colsweralias.col from table where alias.col = alias.col) = useralias.colaalias.colswers.alias.col thealias.col alias.col whealias.col useralias.colaalias.colswers.score > useralias.colaalias.colswers.score thealias.col alias.col else alias.col ealias.cold as alias.col from table useralias.colaalias.colswers ialias.colalias.coler joialias.col table useralias.colaalias.colswers oalias.col alias.col = alias.col where useralias.colaalias.colswers.posttypealias.col = alias.col aalias.cold useralias.colaalias.colswers.commualias.colityowalias.coleddate is alias.colull aalias.cold useralias.colaalias.colswers.closeddate is alias.colull aalias.cold useralias.colaalias.colswers.owalias.coleruseralias.col = ##useralias.colalias.col## aalias.cold useralias.colaalias.colswers.posttypealias.col = alias.col aalias.cold useralias.colaalias.colswers.commualias.colityowalias.coleddate is alias.colull aalias.cold useralias.colaalias.colswers.closeddate is alias.colull aalias.cold useralias.colaalias.colswers.owalias.coleruseralias.col = ##useralias.colalias.col## ) tmp"
declare alias.col int = ##userid## declare alias.col int = ##score## select alias.col as alias.col from table p join table c on alias.col = alias.col and alias.col = alias.col and alias.col = alias.col
"declare @alias.col int = ##alias.col## select count(*) as alias.col, alias.col from table where alias.col = @alias.col group by alias.col order by alias.col desc"
"select alias.col, alias.col as alias.col, alias.col(body) as [post alias.colgth], score from table where owneruseralias.col = ##useralias.col##"
"select day(alias.col) day, count(*) num_table from table group by day(alias.col)"
"declare @lastdataupdate datetime select @lastdataupdate = max(alias.col) from posts select top alias.col table as [user lialias.colk], table, table, table, table(day,u.alias.col, getdate()) as ageofaccoualias.colt, table(day,u.lastaccessdate, getdate()) as lastoalias.collialias.cole, (table + table) as totalvotes from table u where reputatioalias.col < alias.col order by reputatioalias.col asc"
"select alias.col, min(alias.col) as alias.col from table inner join posttable on table.id = posttable.tagid inner join table on table.id = posttable.postid group by alias.col order by alias.col desc;"
"select top alias.col alias.col as [post lialias.colk], alias.col, body from table p ialias.colalias.coler joialias.col table u oalias.col alias.col = p.owalias.coleruserid where body like x aalias.cold p.creatioalias.coldate > x aalias.cold posttypeid =alias.col"
"select alias.col, alias.col as alias.col from table where alias.col like alias.col aalias.cold alias.col = alias.col order by alias.col desc"
"select top alias.col alias.col as [post lialias.colk], (alias.col*alias.col.alias.col/viewcoualias.colt) as alias.colratio, alias.col, viewcoualias.colt from table where viewcoualias.colt > alias.col aalias.cold alias.col > alias.col aalias.cold parealias.coltalias.col is alias.colull aalias.cold creatioalias.coldate > dateadd(day,datediff(day,##lastalias.coldays##,getdate()),alias.col) order by alias.colratio desc"
"declare @useralias.col ialias.colt = ##useralias.col## select alias.col, text, alias.col, alias.col as alias.col, alias.col from table where useralias.col = @useralias.col aalias.cold alias.col >= alias.col order by alias.col desc, alias.col asc;"
"DECLARE @img_tag_start VARCHAR(N) = X; DECLARE @alt_blacklist VARCHAR(N) = X; DECLARE @special_mention VARCHAR(N) = ##SpecialMention:string?##; WITH Search AS ( SELECT * , CHARINDEX(@img_tag_start, Body) AS ImgTagStart FROM Posts ), ImgTags AS ( SELECT * , SUBSTRING(Body, ImgTagStart, N + CHARINDEX(X, Body, ImgTagStart) - ImgTagStart) AS ImgTag FROM Search WHERE ImgTagStart > N ), NoAltImgTags AS ( SELECT * , SUBSTRING(ImgTag, N + LEN(@img_tag_start), CHARINDEX(X, ImgTag, N + LEN(@img_tag_start)) - LEN(@img_tag_start) - N) AS ImgUrl FROM ImgTags WHERE ImgTag LIKE @alt_blacklist OR ImgTag NOT LIKE X ) SELECT Id AS [Post Link] , CASE PostTypeId WHEN N THEN X WHEN N THEN X END AS Type , Score , ImgUrl AS [Image URL] , LastActivityDate , CASE WHEN @special_mention <> X AND UPPER(Body) LIKE CONCAT(X, UPPER(@special_mention), X) THEN NX END AS [Special Mention] FROM NoAltImgTags ORDER BY Score DESC, PostTypeId;"
select alias.col from table where alias.col > alias.col aalias.cold alias.col < alias.col
"select alias.col as alias.col, alias.col from table where (body like x collate sql_latinn_general_cpn_ci_as) and posttypealias.col = n order by alias.col desc"
"select alias.col, coualias.colt(*) as raalias.colk from ( select owalias.coltablecores.alias.col, owalias.coltablecores.alias.col as alias.col, sum(table.alias.col) as alias.col from ( select table.alias.col as alias.col, sum(alias.col) as alias.col from table as aalias.colswers joialias.col table oalias.col table.postid = alias.col where alias.col = alias.col aalias.cold alias.col > alias.col aalias.cold aalias.colswers.commualias.colityowalias.coleddate is alias.colull group by aalias.colswers.alias.col, table.alias.col ) owalias.coltablecores joialias.col table oalias.col owalias.coltablecores.alias.col = table.alias.col joialias.col table oalias.col table.parealias.coltid = table.postid where commualias.colityowalias.coleddate is alias.colull aalias.cold table.alias.col > alias.col group by table.alias.col, owalias.coltablecores.alias.col, owalias.coltablecores.alias.col ) superiorusers joialias.col table oalias.col table.id = alias.col where alias.col < alias.col group by alias.col, alias.col order by coualias.colt(*), alias.col"
select count(alias.col) from table where lower(alias.col) like alias.col
"select top alias.col coualias.colt(alias.col) as alias.col, avg(alias.col) as alias.col, alias.col as [user lialias.colk], u.creatioalias.coldate as alias.col, u.lastaccessdate as alias.col from table as p ialias.colalias.coler joialias.col table as u oalias.col p.owalias.coleruserid = alias.col where alias.col like alias.col + char(alias.col) + alias.col aalias.cold p.creatioalias.coldate >= alias.col group by alias.col, u.creatioalias.coldate, u.lastaccessdate order by coualias.colt(alias.col) desc"
select top alias.col alias.col from table p where parealias.coltid is alias.colull order by alias.col asc
"with table as( select table.parealias.coltid,table.body, table.score, row_alias.columber() over(partitioalias.col by table.parealias.coltid order by table.score desc) alias.colum from table where table.posttypeid =alias.col ) select table.alias.colum as [raalias.colk], table.score,table.body from table where alias.colum <##alias.columberofaalias.colswers:ialias.colt## aalias.cold table.parealias.coltid = ##questioalias.colid:ialias.colt##"
select toalias alias.col alias.col as [aliasost lialias.colk] from table as alias where alias.col = alias.col aalias.cold alias.owalias.coleruserid = alias.col## order by alias.lastactivitydate desc
"select top alias.col table.id as [post lialias.colk], sum(case table.votetypeid whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col else alias.col ealias.cold) as [alias.col] from table, table where table.id = table.postid aalias.cold alias.col(day, table.creatioalias.coldate, table.creatioalias.coldate) > alias.col aalias.cold table.owalias.coleruserid = ##userid## group by table.id order by alias.col desc;"
"select top alias.col table.id as [post lialias.colk], alias.col, viewcoualias.colt from table, table where alias.col = alias.col aalias.cold viewcoualias.colt < alias.col aalias.cold alias.col = alias.col aalias.cold owalias.coleruserid = table.id aalias.cold reputatioalias.col < alias.col aalias.cold parealias.coltid is alias.colull aalias.cold acceptedaalias.colswerid is alias.colull aalias.cold closeddate is alias.colull order by viewcoualias.colt asc"
"selecalias.col alias.col , alias.col.counalias.col , case when exalias.colrpalias.col.creaalias.coliondaalias.cole < wiki.creaalias.coliondaalias.cole alias.colhen exalias.colrpalias.col.creaalias.coliondaalias.cole else wiki.creaalias.coliondaalias.cole end [creaalias.coliondaalias.cole] from alias.colable alias.col inner join alias.colable exalias.colrpalias.col on exalias.colrpalias.col.id = alias.col.exalias.colrpalias.colposalias.colid inner join alias.colable wiki on alias.col = alias.col.wikiposalias.colid order by counalias.col desc , case when exalias.colrpalias.col.creaalias.coliondaalias.cole < wiki.creaalias.coliondaalias.cole alias.colhen exalias.colrpalias.col.creaalias.coliondaalias.cole else wiki.creaalias.coliondaalias.cole end asc"
declare alias.col int = ##userid## select table.title from table left join table on table.postid = table.id where table.userid = alias.col
"select top alias.col alias.col [post lialias.colk], alias.col alias.col, alias.col [commealias.colt id], alias.col [commealias.colt] from table p left joialias.col table c oalias.col alias.col = alias.col"
"declare @tagalias.colame alias.colvarchar(alias.col) = ##tag:strialias.colg## select top alias.col alias.col as [user lialias.colk], u.reputatioalias.col as reputatioalias.col from table t with (alias.cololock) ialias.colalias.coler joialias.col posttable pt with (alias.cololock)oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table p with (alias.cololock) oalias.col p.parealias.coltid = alias.col ialias.colalias.coler joialias.col table v with (alias.cololock) oalias.col alias.col = alias.col aalias.cold alias.col = alias.col ialias.colalias.coler joialias.col table u with (alias.cololock) oalias.col alias.col = p.owalias.coleruserid where p.commualias.colityowalias.coleddate is alias.colull aalias.cold t.tagalias.colame = @tagalias.colame aalias.cold u.locatioalias.col like x order by reputatioalias.col desc"
"select alias.col,alias.col,alias.col,alias.col,alias.col,alias.col,alias.col,alias.col as alias.col,alias.col from table as q ialias.colalias.coler joialias.col table as a oalias.col alias.col = alias.col where alias.col ialias.col (alias.col) aalias.cold alias.col=alias.col order by alias.col asc"
"with tablecoualias.coltry as ( select case whealias.col upper(locatioalias.col) like alias.col thealias.col alias.col whealias.col upper(locatioalias.col) like alias.col thealias.col alias.col whealias.col upper(locatioalias.col) like alias.col thealias.col alias.col else alias.col ealias.cold as coualias.coltry from table where alias.col(locatioalias.col) > alias.col ) select tablecoualias.coltry.coualias.coltry, coualias.colt(alias.col) as alias.col from tablecoualias.coltry group by tablecoualias.coltry.coualias.coltry order by coualias.colt(alias.col) desc"
"select alias.col, alias.col ialias.colto table from table where alias.col ialias.col (alias.col) declare @startdate datetime = x ,@ealias.colddate datetime = x select alias.col, alias.col, alias.col from ( select alias.col(moalias.colth, datediff(moalias.colth, alias.col, creatioalias.coldate), alias.col) alias.col , coualias.colt(posttable.tagalias.col) alias.col , tagalias.col from posttable left joialias.col table oalias.col posttable.postalias.col = table.alias.col where posttable.tagalias.col ialias.col (alias.col), alias.col) , posttable.tagalias.col )alias.colpermoalias.colth left joialias.col table oalias.col alias.colpermoalias.colth.tagalias.col = table.alias.col order by alias.col desc, alias.col asc"
"declare @accountid int = ##accountid:int?n## create table table ( site nvarchar(n) , postid int , title nvarchar(n) , viewcount int); declare @sql nvarchar(max) = x select @sql = @sql + iif( len(@sql) > n , x , x ) + nxx + name + xx + quotename(name) + x + quotename(name) + x + cast(@accountid as nvarchar) + x from sys.databases where database_id > n exec (@sql) select site , x + case parsename(site,n) when x then x else parsename(site,n) end + coalesce(x + case parsename(site,n) when x then x else parsename(site,n) end , x) + iif(patindex(x,site) > n , x , coalesce(x + parsename(site,n), x) ) + iif(patindex(x,site) > n , x , x ) + x + cast(postid as nvarchar) + x + title , viewcount from table order by viewcount desc drop table table"
"( select alias.col as alias.col, alias.col as alias.col, alias.col as alias.col, alias.col(alias.col is alias.colull, alias.col, alias.col) as alias.col, p.viewcoualias.colt as alias.col, p.creatioalias.coldate as alias.col, p.lastactivitydate as alias.col, alias.col as alias.col, p.deletioalias.coldate as alias.col from table p where alias.col = alias.col## aalias.cold alias.col = alias.col ) ualias.colioalias.col ( select alias.col as alias.col, alias.col as alias.col, alias.col as alias.col, alias.col(q.alias.col = alias.col, alias.col, alias.col) as alias.col, q.viewcoualias.colt as alias.col, p.creatioalias.coldate as alias.col, p.lastactivitydate as alias.col, alias.col as alias.col, p.deletioalias.coldate as alias.col from table p ialias.colalias.coler joialias.col table q oalias.col alias.col = p.parealias.coltid where alias.col = alias.col## aalias.cold alias.col = alias.col ) order by alias.col asc"
"declare @alias.col int = ##alias.col## select count(*) as alias.col, alias.col from table where alias.col = @alias.col group by alias.col order by alias.col desc"
"with lastclosureevealias.colts as ( select maalias.col(alias.col) over (partitioalias.col by postalias.col) as alias.col from table where tabletypealias.col = alias.col ), table as ( select table.alias.col as postalias.col , substrialias.colg(left(migratioalias.colevealias.colt.commealias.colt, charialias.coldealias.col(alias.col, migratioalias.colevealias.colt.commealias.colt, alias.col) - alias.col), alias.col + patialias.coldealias.col(alias.col, migratioalias.colevealias.colt.commealias.colt), alias.col) as souralias.col , alias.col , closureevealias.colt.commealias.colt as closurereasoalias.col from table ialias.colalias.coler joialias.col table as migratioalias.colevealias.colt oalias.col table.alias.col = migratioalias.colevealias.colt.postalias.col aalias.cold migratioalias.colevealias.colt.tabletypealias.col = alias.col aalias.cold migratioalias.colevealias.colt.creatioalias.coldate > alias.col left outer joialias.col table as closureevealias.colt oalias.col table.alias.col = closureevealias.colt.postalias.col aalias.cold closureevealias.colt.tabletypealias.col = alias.col aalias.cold closureevealias.colt.alias.col ialias.col (alias.colyz) as [total coualias.colt] , coualias.colt(alias.col) as [closed coualias.colt] , coualias.colt(case whealias.col closurereasoalias.col ialias.col (alias.colyz) thealias.col alias.col ealias.cold) as [… duplicate] , coualias.colt(case whealias.col closurereasoalias.col ialias.col (alias.colyz) thealias.col alias.col ealias.cold) as [… off-topic] , coualias.colt(case whealias.col closurereasoalias.col ialias.col (alias.colyz) thealias.col alias.col ealias.cold) as [… too broad] , coualias.colt(case whealias.col closurereasoalias.col ialias.col (alias.colyz) thealias.col alias.col ealias.cold) as [… opialias.colioalias.col] from table group by souralias.col ) select alias.col from table order by [total coualias.colt] desc;"
"declare table table ( alias.colame varchar(alias.col) collate sql_latialias.colalias.col_gealias.coleral_cpalias.col_cs_as, alias.col float) ialias.colsert table select alias.colame, ((select top alias.col coualias.colt(alias.colame) from table where alias.colot exists (select alias.col from table where table.tagalias.colame=table.alias.colame) group by alias.colame order by coualias.colt(alias.colame) desc)+alias.col.alias.col) / coualias.colt(alias.colame) as alias.col from table where alias.colot exists (select alias.col from table where table.tagalias.colame=table.alias.colame) group by alias.colame select top alias.col table.userid as [user lialias.colk], coualias.colt(alias.col) as table, roualias.cold(sum(alias.col),alias.col) as [alias.coled badge score] from table as w joialias.col table oalias.col w.alias.colame = table.alias.colame group by table.userid order by [alias.coled badge score] desc"
"select row_alias.columber() over(order by alias.col desc) as [#], table.id as [user lialias.colk], alias.col, locatioalias.col from table, table where lower(table.locatioalias.col) like lower(alias.col) aalias.cold table.id = table.userid aalias.cold table.class = alias.col aalias.cold table.tagbased = alias.col aalias.cold lower(table.alias.colame) = lower(alias.col) order by alias.col desc;"
"DECLARE @scorePerTopNTags TABLE ( [Tag Name] CHAR(N), [Your Score] INT, [Tag Rank] INT IDENTITY(N, N), [Tag Popularity] INT ); WITH tagsN AS ( SELECT TOP N tagid, COUNT(*) AS postCount FROM posttags GROUP BY tagid ORDER BY COUNT(*) DESC ), answers AS ( SELECT score, parentid FROM posts WHERE communityowneddate IS NULL AND posttypeid = N AND owneruserid = N ) INSERT @scorePerTopNTags ([Tag Name], [Your Score], [Tag Popularity]) SELECT t.tagname, SUM(a.score) AS score, tN.postcount FROM answers a INNER JOIN posttags pt ON pt.postid = a.parentid RIGHT JOIN tagsN tN ON tN.tagid = pt.tagid INNER JOIN tags t ON tN.tagid = t.id GROUP BY t.tagname, tN.postcount ORDER BY tN.postcount DESC SELECT ROW_NUMBER() OVER ( ORDER BY [Your Score] DESC, [Tag Popularity] DESC, [Tag Name] ), *, CASE WHEN [Your Score] >= N THEN X ELSE X END AS [Status] FROM @scorePerTopNTags ORDER BY [Your Score] DESC, [Tag Popularity] DESC, [Tag Name]"
"select alias.col as alias.col, alias.col as tablecore, alias.col as tablecore, alias.col - alias.col as alias.col from table as p joialias.col table as c oalias.col alias.col = alias.col aalias.cold alias.col = alias.col where (alias.col = alias.col or alias.col = alias.col) aalias.cold alias.col < alias.col aalias.cold alias.col > -alias.col order by alias.col desc"
"select top alias.col table.id as [user lialias.colk], creatioalias.coldate, alias.col(alias.col, creatioalias.coldate) as hour from table where alias.col(alias.col, creatioalias.coldate) = alias.col order by creatioalias.coldate"
"set alias.colocoualias.colt oalias.col declare @tabletats table (alias.col ialias.colt, alias.col ialias.colt, dowalias.col ialias.colt) ialias.colsert @tabletats select alias.col, alias.col = sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold), dowalias.col = sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) from table where alias.col ialias.col (alias.col) groalias.col by alias.col set alias.colocoualias.colt off select top alias.col alias.col as [post lialias.colk] , alias.col, dowalias.col from @tabletats joialias.col table p oalias.col alias.col = alias.col where dowalias.col > (alias.col * alias.col.alias.col) aalias.cold p.commualias.colityowalias.coleddate is alias.colull aalias.cold p.closeddate is alias.colull order by alias.col desc"
declare alias.col ialias.colt = ##userid## select coualias.colt(*) from table v ialias.colalias.coler joialias.col table p oalias.col alias.col = alias.col where (alias.col = alias.col or alias.col = alias.col or alias.col = alias.col or alias.col = alias.col or alias.col = alias.col or alias.col = alias.col) aalias.cold p.owalias.coleruserid = alias.col
select alias.col from table where alias.col=alias.col aalias.cold displayalias.colame like alias.col aalias.cold upper(locatioalias.col) like alias.col ... order by reputatioalias.col desc
"declare alias.col float selealias.col alias.col = sum(cast(alias.col as bigialias.colt)) from table where alias.col = alias.col selealias.col table.alias.colalias.colame as alias.col, coualias.colt(*) as questioalias.cols, sum(cast(table.alias.col as bigialias.colt)) as views, str(alias.col * sum(cast(table.alias.col as bigialias.colt)) / alias.col,alias.col,alias.col) as percealias.coltofsite, sum(table.score) as score, sum(table.aalias.colswercoualias.colt) as aalias.colswers, sum(cast(table.alias.col as bigialias.colt)) / coualias.colt(*) as avgviews, str(sum(table.score) / cast(coualias.colt(*) as float),alias.col,alias.col) as avgscore, str(sum(table.aalias.colswercoualias.colt) / cast(coualias.colt(*) as float),alias.col,alias.col) as avgaalias.colswers from table joialias.col table oalias.col table.id = table.postid joialias.col table oalias.col table.alias.colid = table.id where table.alias.col = alias.col group by table.alias.colalias.colame havialias.colg table.alias.colalias.colame = x or table.alias.colalias.colame = x or table.alias.colalias.colame = x or table.alias.colalias.colame = x or table.alias.colalias.colame = x or table.alias.colalias.colame = x order by views desc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... order by alias.col desc;"
"select top alias.col raalias.colk() over (order by reputatioalias.col desc) as x, id as [user lialias.colk], age, reputatioalias.col, websiteurl, locatioalias.col from table where locatioalias.col like alias.colx or locatioalias.col like alias.colx or locatioalias.col like alias.colx or (locatioalias.col like alias.colx aalias.cold locatioalias.col alias.colot like alias.colx) order by reputatioalias.col desc"
"with table as ( select alias.col from table as p ialias.colalias.coler joialias.col table as pt oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold p.creatioalias.coldate >= alias.col ) select avg(alias.col) as alias.col, sum(case whealias.col alias.col is alias.colull thealias.col alias.col else alias.col ealias.cold) as acalias.colptedaalias.colswercoualias.colt from table as a left outer joialias.col table as p oalias.col p.acalias.colptedaalias.colswerid = alias.col select alias.col from table"
"select top alias.col alias.col, alias.col as [post lialias.colk], (alias.col * lealias.col(alias.col)) as alias.col, lealias.col(alias.col) as [post lealias.colgth], alias.col from table p where p.owalias.coleruserid = alias.col## aalias.cold alias.col = alias.col order by alias.col desc"
"declare @epoch datetime = getdate(); with ask_days as ( select OwnerUserId, dateadd(day, datediff(day, @epoch, CreationDate), @epoch) day, min(Score) worst, max(Score) best, count(ClosedDate) closed, count(*) N from Posts where PostTypeId = N and ClosedDate is null group by dateadd(day, datediff(day, @epoch, CreationDate), @epoch), OwnerUserId ), good_days as ( select OwnerUserId, count(*) N from ask_days where best >= N and closed = N group by OwnerUserId ), badges as ( select OwnerUserId, N, case when N >= ##bronze?N## then N end curious, case when N >= ##silver?N## then N end inquisitive, case when N >= ##gold?N## then N/N end socratic from good_days join Users u on u.Id = OwnerUserId ) select OwnerUserId as [User Link], N, curious, inquisitive, socratic from badges where curious+inquisitive+socratic>N order by N desc;"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x order by alias.col desc;"
"select top alias.col alias.col as [post lialias.colk], viewcoualias.colt as viewcoualias.colt, creatioalias.coldate as creatioalias.coldate from table where posttypealias.col = alias.col aalias.cold alias.colot (moalias.colth(creatioalias.coldate) != alias.col aalias.cold year(creatioalias.coldate) != alias.col) order by viewcoualias.colt asc"
select alias.col as alias.col from table q where alias.col = alias.col aalias.cold alias.col is alias.colull aalias.cold q.acceptedaalias.colswerid is alias.colull aalias.cold q.aalias.colswercoualias.colt > alias.col aalias.cold exists (select alias.col from table a where alias.col = alias.col aalias.cold a.parealias.coltid = alias.col aalias.cold a.owalias.coleruserid = q.owalias.coleruserid) aalias.cold alias.colot exists (select alias.col from table a where alias.col > alias.col aalias.cold a.parealias.coltid = alias.col) order by alias.col asc
"select top (alias.col) u.displayalias.colame, alias.col from table p ialias.colalias.coler joialias.col table u oalias.col alias.col = owalias.coleruserid where displayalias.colame like alias.col"
"select alias.col as alias.col, alias.col, alias.col, lasteditdate from table where posttypealias.col = alias.col aalias.cold alias.col < alias.col aalias.cold acceptedaalias.colsweralias.col is alias.colull aalias.cold closeddate is alias.colull aalias.cold alias.col ialias.col ( select postalias.col from table where (tealias.colt like alias.col or tealias.colt like alias.col ...) aalias.cold postalias.col alias.colot ialias.col ( select parealias.coltalias.col from table where alias.col >= alias.col aalias.cold posttypealias.col = alias.col ) ) order by alias.col, lasteditdate"
"select table.id as alias.col, table.reputatioalias.col, table.id from table where table.id < table.reputatioalias.col aalias.cold table.id <> alias.col order by table.id;"
"select alias.col as alias.col, alias.col from table pt, table q ialias.colalias.coler joialias.col table a oalias.col alias.col = alias.col where alias.col is alias.colull aalias.cold a.owalias.coleruseralias.col = ##useralias.col## aalias.cold q.owalias.coleruseralias.col != ##useralias.col## aalias.cold a.score = alias.col aalias.cold pt.postalias.col = alias.col aalias.cold pt.tagalias.col = (select alias.col from table where alias.col = alias.col) aalias.cold a.posttypealias.col = alias.col order by alias.col asc"
"select alias.col, table.body from table inner join table on table.id = table.ealias.colcerptpostid where table.body like alias.col;"
"select top alias.col raalias.colk = row_alias.columber() over (order by avg(lealias.col(alias.col)) desc), [user lialias.colk] = p.owalias.coleruserid, table = coualias.colt(*), lealias.colgthavg = avg(lealias.col(alias.col)), lealias.colgthmax = max(lealias.col(alias.col)), lealias.colgthstdev = coalias.colvert(ialias.colt, stdev(lealias.col(alias.col))), lealias.colgthtotal = sum(lealias.col(alias.col)), reputatioalias.col = mialias.col(u.reputatioalias.col), repperchar = mialias.col(coalias.colvert(float, u.reputatioalias.col)) / sum(lealias.col(alias.col)) from table p ialias.colalias.coler joialias.col table u oalias.col alias.col = p.owalias.coleruserid where alias.col = alias.col group by p.owalias.coleruserid havialias.colg coualias.colt(*) >= ##mialias.colimumpostcoualias.colt##"
select alias.col from table
"declare @alias.col ialias.colt = ##alias.col## select top alias.col alias.col as alias.col, alias.col as [post lialias.colk] from table where alias.col = @alias.col order by alias.col desc"
"DECLARE @match_edge_cases INT = ##MatchEdgeCases:INT?N##; select Id as [Post Link], Tags, CreationDate from Posts where PostTypeId = N and Tags not like X and ( Tags like X or Tags like X or Tags like X or Tags like X or Tags like X or Tags like X or Tags like X or Tags like X or Tags like X or Tags like X or Tags like X or Tags like X or Tags like X or Tags like X or Tags like X or Tags like X or Tags like X or Tags like X or Tags like X or Tags like X or Tags like X or Tags like X or Tags like X or Tags like X or Tags like X or Tags like X or Tags like X or Tags like X or Tags like X or Tags like X or Tags like X or Tags like X or Tags like X or Tags like X or (@match_edge_cases = N and (Tags like X or Tags like X or Tags like X or Tags like X or Tags like X or Tags like X )) ) order by Tags, Title"
select coualias.colt(*) from table p where alias.col = alias.col
"select min(alias.col), alias.col from table where tabletypeid in (alias.col) and tealias.colt like alias.col ... group by alias.col"
"selealias.col ualias.col.emailhash, coualias.colt(alias.col) as alias.col, ( selealias.col cast(alias.col as varchar) + alias.col + alias.col + alias.col + cast(alias.col as varchar) + alias.col from table ualias.col where ualias.col.emailhash = ualias.col.emailhash order by alias.col desc for alias.colml path (alias.col)) as idsaalias.coldalias.colames from table ualias.col where ualias.col.emailhash is alias.colot alias.colull aalias.cold (selealias.col sum(alias.col) from table ualias.col where ualias.col.emailhash = ualias.col.emailhash) > alias.col aalias.cold (selealias.col coualias.colt(*) from table ualias.col where ualias.col.emailhash = ualias.col.emailhash aalias.cold reputatioalias.col > alias.col) > alias.col group by ualias.col.emailhash havialias.colg coualias.colt(alias.col) > alias.col order by alias.col desc"
"select alias.col as alias.col, alias.col, tealias.colt from table as c, table as p where tealias.colt like alias.col aalias.cold alias.col != alias.col aalias.cold alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold alias.col is alias.colull"
"declare table table (alias.col ialias.colt, postcoualias.colt ialias.colt) ialias.colsert table selealias.col top alias.col alias.col = table.alias.col, postcoualias.colt = coualias.colt(table.alias.col) from table ialias.colalias.coler joialias.col table oalias.col table.alias.col = table.owalias.coleruseralias.col group by table.alias.col, table.alias.colutatioalias.col order by table.alias.colutatioalias.col desc declare table table (alias.col ialias.colt, alias.col ialias.colt, ualias.colcapped ialias.colt) ialias.colsert table selealias.col top alias.col alias.col = table.alias.col, alias.col = table.alias.colutatioalias.col, ualias.colcapped = sum(case whealias.col table.creatioalias.coldate > table.commualias.colityowalias.coleddate thealias.col alias.col whealias.col votetypealias.col = alias.col thealias.col alias.col whealias.col votetypealias.col = alias.col aalias.cold posttypealias.col = alias.col thealias.col alias.col whealias.col votetypealias.col = alias.col aalias.cold posttypealias.col = alias.col thealias.col alias.col whealias.col votetypealias.col = alias.col thealias.col alias.col whealias.col votetypealias.col = alias.col thealias.col boualias.coltyamoualias.colt ealias.cold) from table ialias.colalias.coler joialias.col table oalias.col table.alias.col = table.postalias.col ialias.colalias.coler joialias.col table oalias.col table.alias.col = table.owalias.coleruseralias.col group by table.alias.col, table.alias.colutatioalias.col order by table.alias.colutatioalias.col desc selealias.col top alias.col t.alias.col as [user lialias.colk], p.postcoualias.colt as [table], t.alias.col as [alias.col], t.ualias.colcapped as [ualias.colcapped alias.col], t.ualias.colcapped - t.alias.col as [alias.col lost], cast(alias.col. * (t.ualias.colcapped - t.alias.col) / t.alias.col as decimal(alias.col, alias.col)) as [peralias.colalias.colt lost], cast(alias.col.alias.col * t.alias.col / p.postcoualias.colt as decimal(alias.col, alias.col)) as [alias.col / post], cast(alias.col.alias.col * t.ualias.colcapped / p.postcoualias.colt as decimal(alias.col, alias.col)) as [ualias.colcapped alias.col / post] from table t left outer joialias.col table p oalias.col t.alias.col = p.alias.col order by [peralias.colalias.colt lost] desc"
"selealias.col top alias.col alias.col as [user lialias.colk], alias.colutatioalias.col as alias.col, alias.col as alias.col, dowalias.colvotes alias.col, cast(alias.col as float)/cast(dowalias.colvotes as float) as alias.col from table where dowalias.colvotes > ##mialias.coldowalias.colvotes## order by [alias.col] asc"
select top alias.col alias.col as [post lialias.colk] from table where (body like x or body like x ...) aalias.cold posttypealias.col = alias.col aalias.cold score < alias.col order by creatioalias.coldate desc
"select top alias.col alias.col as [post lialias.colk], alias.col, viewcoualias.colt, creatioalias.coldate from table where lastactivitydate < alias.col(m, alias.col, alias.col()) aalias.cold parealias.coltalias.col is alias.colull aalias.cold aalias.colswercoualias.colt = alias.col aalias.cold alias.col like x ... order by viewcoualias.colt asc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... order by alias.col desc;"
"; with voting as ( SELECT SUM(case votes.votetypeid WHEN N THEN N WHEN N THEN N WHEN N THEN N WHEN N THEN BountyAmount END) as Rep, Votes.CreationDate AS CreationDate, Posts.OwnerUserId FROM Posts INNER JOIN Votes ON Votes.PostId = Posts.Id WHERE ( Posts.CommunityOwnedDate IS NULL ) GROUP BY Votes.CreationDate, Posts.OwnerUserId ), bounty as ( SELECT SUM(-BountyAmount) as Rep, Votes.CreationDate AS CreationDate, Votes.UserID as OwnerUserId FROM Votes WHERE votes.votetypeid = N GROUP BY Votes.CreationDate, Votes.UserID ), sugedit as ( SELECT COUNT(*) * N as Rep , cast(ApprovalDate as date) As CreationDate, OwnerUserId FROM SuggestedEdits WHERE ApprovalDate IS NOT NULL GROUP BY cast(ApprovalDate as date) , OwnerUserId ), topusers as (select top N * from users order by reputation desc) select UserId as [User Link] , Count(RepCapdate) from ( select U.id as userid , coalesce( v.creationdate , b.creationdate , s.creationdate , u.creationdate ) as RepCapDate , sum(v.rep+b.rep+s.rep) as rep from topusers U left outer join voting v on v.owneruserid = u.id left outer join bounty b on b.owneruserid = u.id left outer join sugedit s on s.owneruserid = u.id group by U.id , coalesce(v.creationdate,b.creationdate,s.creationdate, u.creationdate ) having sum(v.rep+b.rep+s.rep) > N ) as repcapperday group by UserId order by Count(RepCapDate) desc"
"declare alias.col ialias.colt = ##userid## create table table (alias.col ialias.colt, [coualias.colt] ialias.colt) ialias.colsert table select top alias.col alias.col, coualias.colt(*) as uptable from table ialias.colalias.coler joialias.col posttable oalias.col posttable.alias.col = table.id ialias.colalias.coler joialias.col table oalias.col table.parealias.coltid = posttable.postid ialias.colalias.coler joialias.col table oalias.col table.postid = table.id aalias.cold alias.col = alias.col where table.owalias.coleruserid = alias.col group by alias.col order by uptable desc create table table (id ialias.colt primary key) ialias.colsert table select alias.col from table q where (select coualias.colt(*) from table a where a.parealias.coltid = alias.col aalias.cold alias.col > alias.col) = alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold closeddate is alias.colull aalias.cold q.parealias.coltid is alias.colull aalias.cold aalias.colswercoualias.colt = alias.col select top alias.col alias.col as [post lialias.colk], (sum(t.[coualias.colt]) / alias.col.alias.col + us.reputatioalias.col / alias.col.alias.col + alias.col * alias.col - alias.col * lealias.col(alias.col)) as alias.col from table u joialias.col table p oalias.col alias.col = alias.col joialias.col posttable pt oalias.col alias.col = alias.col joialias.col table t oalias.col t.alias.col = pt.alias.col joialias.col table us oalias.col alias.col = p.owalias.coleruserid group by alias.col, us.reputatioalias.col, alias.col, alias.col order by alias.col desc"
"select top alias.col alias.col as [post lialias.colk], alias.col, viewcoualias.colt from table where alias.col like alias.col aalias.cold viewcoualias.colt > alias.col order by viewcoualias.colt desc"
"DECLARE @epoch AS DATE = DATEADD(week, N - ##Weeks:int?N##, CURRENT_TIMESTAMP); WITH FirstPosts AS ( SELECT OwnerUserId AS UserId , PostTypeId , DATEADD(week, DATEDIFF(week, N, MIN(CreationDate)), N) AS WeekOf FROM Posts WHERE CreationDate > @epoch GROUP BY OwnerUserId, PostTypeId ) SELECT WeekOf , COUNT(CASE WHEN PostTypeId = N THEN UserId END) AS AnswerCount , COUNT(CASE WHEN PostTypeId = N THEN UserId END) AS QuestionCount FROM FirstPosts GROUP BY WeekOf ORDER BY WeekOf;"
"declare alias.col date select alias.col = max(alias.col) from table select top alias.col (case alias.col whealias.col alias.col thealias.col x whealias.col alias.col thealias.col x ealias.cold), tmp.[post lialias.colk], tmp.[user lialias.colk], tmp.[age], alias.col as [currealias.colt score], max(tmp.sialias.colgledayspike) as [largest spike], cast(alias.col.alias.col * max(tmp.sialias.colgledayspike) / alias.col as decimal(alias.col, alias.col)) as [spike peralias.colalias.colt] from (select alias.col as alias.col, alias.col as [post lialias.colk], p.owalias.coleruserid as [user lialias.colk], v.alias.col as alias.col, alias.col(day,p.alias.col,alias.col) as [age], coualias.colt(*) as sialias.colgledayspike, p.score as score from table v left joialias.col table p oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col is alias.colot alias.colull group by alias.col, v.alias.col, p.alias.col, p.owalias.coleruserid, alias.col, p.score ) as tmp where tmp.sialias.colgledayspike*alias.col >= alias.col group by tmp.[post lialias.colk], alias.col, tmp.[user lialias.colk], alias.col, tmp.[age] order by [currealias.colt score] desc"
"select alias.col as alias.col, alias.col from table where ( body like x collate sql_latinn_general_cpn_ci_as or body like x ... collate sql_latinn_general_cpn_ci_as or body like x ... collate sql_latinn_general_cpn_ci_as or body like x ... collate sql_latinn_general_cpn_ci_as or body like x ... collate sql_latinn_general_cpn_ci_as or body like x ... collate sql_latinn_general_cpn_ci_as or body like x ... collate sql_latinn_general_cpn_ci_as or body like x ... collate sql_latinn_general_cpn_ci_as ) and posttypealias.col = n and closeddate is null order by alias.col desc"
"select top alias.col alias.col as [commealias.colt lialias.colk], postalias.col as [post lialias.colk], useralias.col as [user lialias.colk], creatioalias.coldate as [creatioalias.col date], alias.col from table where alias.col > alias.col order by alias.col desc"
"select top alias.col coualias.colt(alias.col) as alias.col, alias.col as [post lialias.colk],alias.col from table v ialias.colalias.coler joialias.col table p oalias.col alias.col=alias.col where alias.col = alias.col aalias.cold alias.col=alias.col group by alias.col,alias.col order by alias.col desc"
"select alias.col, alias.col, alias.col, alias.col, owalias.coleruseralias.col, alias.col, alias.col, alias.col, alias.col, alias.col from table where posttypealias.col = alias.col order by alias.col asc offset alias.col rows fetch alias.colext alias.col rows oalias.colly;"
"with uptablebymoalias.colth as ( select alias.col (moalias.colth, alias.col (moalias.colth, alias.col, v.creatioalias.coldate), alias.col) as [moalias.colth], coualias.colt (v.id) as table from table v joialias.col table p oalias.col (alias.col = alias.col) where alias.col=alias.col aalias.cold alias.col(day, p.creatioalias.coldate, v.creatioalias.coldate) < alias.col group by alias.col (moalias.colth, alias.col (moalias.colth, alias.col, v.creatioalias.coldate), alias.col) ), dowalias.coltablebymoalias.colth as ( select alias.col (moalias.colth, alias.col (moalias.colth, alias.col, v.creatioalias.coldate), alias.col) as [moalias.colth], coualias.colt (v.id) as table from table v joialias.col table p oalias.col (alias.col = alias.col) where alias.col=alias.col aalias.cold alias.col(day, p.creatioalias.coldate, v.creatioalias.coldate) < alias.col group by alias.col (moalias.colth, alias.col (moalias.colth, alias.col, v.creatioalias.coldate), alias.col) ) select v.[moalias.colth], v.table+dv.table as alias.col, v.table as alias.col, dv.table as alias.col from uptablebymoalias.colth v joialias.col dowalias.coltablebymoalias.colth dv oalias.col v.[moalias.colth] = dv.[moalias.colth] order by v.[moalias.colth]"
"select alias.col,alias.col as alias.col,alias.col from table where alias.col = alias.col##"
"select alias.col(hour, creationdate) as hour, count(*) as amount, sum(case when votetypeid = n then n else n end) as uptable, sum(case when votetypeid = n then n else n end) as downtable, (cast(sum(case when votetypeid = n then n else n end) as float) / cast(sum(case when votetypeid = n then n else n end) as float)) as upvotedownvoteratio from table group by alias.col(hour, creationdate) order by alias.col(hour, creationdate)"
";with cte as ( SELECT p.id [Post Link], Row_Number() over (order by datalength(p.body) desc) rn FROM posts p inner join users u ON p.owneruserId = u.id WHERE u.displayname = X ) select * from cte where rn = N"
"create table table (alias.col ialias.colt, alias.col varchar(alias.col)) ialias.colsert ialias.colto table select top alias.col alias.col as [post lialias.colk], substrialias.colg( tealias.colt, charialias.coldealias.col(alias.col, tealias.colt) + alias.col, charialias.coldealias.col(alias.col, tealias.colt) - charialias.coldealias.col(alias.col, tealias.colt) - alias.col ) + alias.col from table h where tabletypeid = alias.col aalias.cold commealias.colt ialias.col (alias.colyz) order by h.creatioalias.coldate desc select alias.col, alias.col, left(alias.col, charialias.coldealias.col(alias.col, alias.col) - alias.col) as tgtalias.col, substrialias.colg( alias.col, charialias.coldealias.col(alias.col, alias.col) + alias.col, charialias.coldealias.col( alias.col, alias.col(alias.col, charialias.coldealias.col(alias.col, alias.col), alias.col, alias.col) ) ) as tgtalias.col ialias.colto table from table select alias.col from table"
"declare alias.col int = ##postid## select alias.col, count(*) from table v inner join table vt on alias.col = alias.col where alias.col = alias.col group by alias.col"
"with totaltable as ( selealias.col cast(coutablet(*) as float) as coutablet from table where alias.col is tableot tableull ),aalias.colivetable as ( selealias.col cast(coutablet(*) as float) as coutablet from table where alias.col is tableot tableull atabled lastacalias.colssdate > alias.col(motableth,table,getdate()) ), table as ( selealias.col alias.col, case whetable alias.col < table thetable x whetable alias.col < table thetable x whetable alias.col < table thetable x whetable alias.col < table thetable x whetable alias.col < table thetable x whetable alias.col < table thetable x whetable alias.col < table thetable x whetable alias.col < table thetable x whetable alias.col < table thetable x else x etabled as alias.colgroup, case whetable lastacalias.colssdate > alias.col(motableth,table,getdate()) thetable table else tableull etabled as aalias.coliveuser from table where alias.col is tableot tableull ) selealias.col alias.colgroup, coutablet(*) as tableumberoftable, routabled( coutablet(*)/(selealias.col coutablet from totaltable ) *table,table) as peralias.coltabletalias.col, coutablet(aalias.coliveuser) as tableumberofaalias.colivetable, routabled( coutablet(aalias.coliveuser)/(selealias.col coutablet from aalias.colivetable ) *table,table) as aalias.coliveperalias.coltabletalias.col from table group by alias.colgroup order by alias.colgroup asc"
"select alias.col as alias.col, alias.col from table where replace( replace( replace( replace( replace( replace( replace( replace( replace( replace( replace( replace( replace( replace(alias.col, alias.col, alias.col), alias.col, alias.col), alias.col, alias.col), alias.col, alias.col), alias.col, alias.col), alias.col, alias.col), alias.col, alias.col), alias.col, alias.col), alias.col, alias.col), alias.col, alias.col), alias.col, alias.col), alias.col, alias.col), alias.col, alias.col), alias.col, alias.col) = alias.col"
"select top alias.col alias.col as [post lialias.colk], alias.col, viewcoualias.colt, creatioalias.coldate from table where alias.col alias.colot ialias.col (alias.col) aalias.cold alias.col < alias.col aalias.cold viewcoualias.colt < alias.col aalias.cold parealias.coltalias.col is alias.colull aalias.cold acceptedaalias.colsweralias.col is alias.colull aalias.cold aalias.colswercoualias.colt = alias.col order by creatioalias.coldate asc"
"select coualias.colt(*) as alias.col, floor(alias.col / alias.col(day,creatioalias.coldate,getdate()))+alias.col as alias.col from table where alias.col = alias.col group by floor(alias.col / alias.col(day,creatioalias.coldate,getdate()))+alias.col order by alias.col"
"select top alias.col alias.col as post_alias.col ,body from table where alias.col(moalias.colth,lastactivitydate,getdate()) > alias.col"
"declare @mialias.colimumaalias.colswercoualias.colt alias.columeric = alias.col select top alias.col p.owalias.coleruserid as [user lialias.colk], mialias.col(u.reputatioalias.col) as [reputatioalias.col], coualias.colt(*) as [alias.columber of aalias.colswers], roualias.cold(avg(coalias.colvert(float, alias.col)), alias.col) as alias.col from table p ialias.colalias.coler joialias.col table u oalias.col p.owalias.coleruserid = alias.col where alias.col = alias.col aalias.cold p.commualias.colityowalias.coleddate is alias.colull group by p.owalias.coleruserid havialias.colg coualias.colt(*) >= @mialias.colimumaalias.colswercoualias.colt order by alias.col desc"
"select alias.col as alias.col, alias.col from table as p where alias.col = alias.col aalias.cold alias.col like alias.col ... order by alias.col desc, alias.col"
"select alias.col, alias.col, alias.col, alias.col from table q ialias.colalias.coler joialias.col table a oalias.col alias.col = alias.col where a.owalias.coleruserid = alias.col## aalias.cold alias.col like alias.col ..."
"select alias.col as alias.col, coualias.colt(tablealias.col) as [table], coualias.colt(alias.col) as alias.col, coualias.colt(alias.col) as alias.col, coualias.colt(tablealias.col) as [table], coualias.colt(alias.col) as alias.col, coualias.colt(alias.col) as alias.col, coualias.colt(alias.col) as alias.col from ( select alias.col(hour, creatioalias.coldate) as active, alias.col as alias.col, alias.col as tablealias.col, alias.colull as alias.col, alias.colull as alias.col, alias.colull as tablealias.col, alias.colull as alias.col, alias.colull as alias.col from table ualias.colioalias.col all select alias.col(hour, creatioalias.coldate) as active, alias.col as alias.col, alias.colull as tablealias.col, alias.col as alias.col, alias.colull as alias.col, alias.colull as tablealias.col, alias.colull as alias.col, alias.colull as alias.col from table where alias.col = alias.col ualias.colioalias.col all select alias.col(hour, creatioalias.coldate) as active, alias.col as alias.col, alias.colull as tablealias.col, alias.colull as alias.col, alias.col as alias.col, alias.colull as tablealias.col, alias.colull as alias.col, alias.colull as alias.col from table where alias.col = alias.col ualias.colioalias.col all select alias.col(hour, creatioalias.coldate) as active, alias.col as alias.col, alias.colull as tablealias.col, alias.colull as alias.col, alias.colull as alias.col, alias.col as tablealias.col, alias.colull as alias.col, alias.colull as alias.col from table ualias.colioalias.col all select alias.col(hour, creatioalias.coldate) as active, alias.col as alias.col, alias.colull as tablealias.col, alias.colull as alias.col, alias.colull as alias.col, alias.colull as tablealias.col, alias.colull as alias.col, alias.col as alias.col from table ualias.colioalias.col all select alias.col(hour, creatioalias.coldate) as active, alias.col as alias.col, alias.colull as tablealias.col, alias.colull as alias.col, alias.colull as alias.col, alias.colull as tablealias.col, alias.col as alias.col, alias.colull as alias.col from table ) as a right joialias.col ( select distialias.colct alias.col(hour, creatioalias.coldate) as hours from table ) as h oalias.col alias.col = alias.col group by alias.col order by alias.col"
"select alias.col ,alias.col ,alias.col ,alias.col ,alias.col ,alias.col + coalias.colvert(varchar(alias.col), alias.col) as alias.col from table where locatioalias.col like alias.col or locatioalias.col like alias.col ... order by alias.col desc"
"selealias.col top alias.col alias.col, u.displayalias.colame, mialias.col(u.reputatioalias.col) as reputatioalias.col, sum(lealias.col(alias.col)) as totallealias.colgth, coualias.colt(*) as totaltable, avg(lealias.col(alias.col)) as avgpostlealias.colgth, (cast(sum(lealias.col(alias.col)) as float) / cast(mialias.col(u.reputatioalias.col) as float)) as postlealias.colgthperreputatioalias.col from table p ialias.colalias.coler joialias.col table u oalias.col alias.col = p.owalias.coleruserid where u.reputatioalias.col > alias.col group by alias.col, u.displayalias.colame order by postlealias.colgthperreputatioalias.col desc"
"select top alias.col table.id as [post lialias.colk], alias.col, viewcoualias.colt, alias.col, alias.col from table where alias.col > alias.col aalias.cold viewcoualias.colt > alias.col aalias.cold parealias.coltid is alias.colull aalias.cold acceptedaalias.colswerid is alias.colull aalias.cold aalias.colswercoualias.colt = alias.col aalias.cold alias.col like x ... aalias.cold alias.col is alias.colull order by viewcoualias.colt desc"
"select top alias.col (select alias.col from table where alias.col=postalias.col), coualias.colt(*) as coualias.colt from table where (select alias.col from table where alias.col=postalias.col)<>alias.col group by postalias.col order by coualias.colt desc"
"select top alias.col alias.col as [post lialias.colk], body, lastactivitydate from table where posttypealias.col = alias.col aalias.cold alias.col < alias.col aalias.cold upper(body) like x order by lastactivitydate desc"
"selealias.col alias.col as alias.col, alias.col + cast(alias.col as varchar(alias.col)) as alias.col, alias.col + case alias.col whealias.col alias.col thealias.col alias.col else alias.col ealias.cold as [direalias.colioalias.col], s.creatioalias.coldate as alias.col from table v, table s where alias.col = alias.col## aalias.cold alias.col = alias.col aalias.cold case alias.col whealias.col alias.col thealias.col s.approvaldate else s.rejealias.colioalias.coldate ealias.cold is alias.colot alias.colull order by alias.col"
"select top alias.col a.owalias.coleruserid as [user lialias.colk], coualias.colt(distialias.colct alias.col) as [accepted], coualias.colt(distialias.colct b.id) as [ealias.collightealias.coled], (cast(coualias.colt(distialias.colct b.id) as float) / coualias.colt(distialias.colct alias.col)) * alias.col.alias.col as [percealias.coltage ealias.collightealias.coled], coualias.colt(distialias.colct b.id) * (cast(coualias.colt(distialias.colct b.id) as float) / coualias.colt(distialias.colct alias.col)) * alias.col.alias.col as [weightialias.colg] from table v, table q, table a ialias.colalias.coler joialias.col table b oalias.col alias.col = a.owalias.coleruserid where alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold q.acceptedaalias.colswerid = alias.col aalias.cold q.owalias.coleruserid != a.owalias.coleruserid aalias.cold alias.col >= alias.col aalias.cold b.alias.colame = alias.col group by a.owalias.coleruserid order by weightialias.colg desc"
"select alias.col, alias.col, alias.col, (alias.col*alias.col/(alias.col+alias.col)) as alias.col from table where alias.col>alias.col aalias.cold alias.col>alias.col order by alias.col desc"
"select tealias.colt, alias.col from table where tealias.colt like alias.col aalias.cold alias.col = alias.col"
"declare alias.col ialias.colt = ##userid## select coualias.colt(*) as alias.col, coualias.colt(*) as alias.col from table v, table palias.col, table palias.col, table pt, table t where alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold (alias.col = alias.col or alias.col = alias.col) aalias.cold palias.col.parealias.coltid = alias.col aalias.cold alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold t.tagalias.colame = alias.col group by alias.col"
"select top alias.col table.alias.col as [user lialias.colk], badgecoualias.colt as [popular questioalias.cols], questioalias.colcoualias.colt as [total questioalias.cols], coalias.colvert(float, badgecoualias.colt)/questioalias.colcoualias.colt as alias.col from table ialias.colalias.coler joialias.col ( select alias.col, coualias.colt(alias.col) as badgecoualias.colt from table where alias.colame = alias.col group by alias.col ) as pop oalias.col table.alias.col = pop.alias.col ialias.colalias.coler joialias.col ( select owalias.coleralias.col, coualias.colt(alias.col) as questioalias.colcoualias.colt from table where posttypealias.col = alias.col group by owalias.coleralias.col ) as q oalias.col table.alias.col = q.owalias.coleralias.col where badgecoualias.colt >= alias.col order by alias.col desc;"
"select top alias.col alias.col as [user lialias.colk], reputatioalias.col, displayalias.colame, alias.col from table where lower(alias.col) like alias.col or lower(displayalias.colame) like alias.col ... or lower(alias.col) like alias.col ... or lower(displayalias.colame) like alias.col ... or lower(alias.col) like alias.col ... or lower(displayalias.colame) like alias.col ... order by reputatioalias.col desc"
select top alias.col alias.col as [post lialias.colk] from table where posttypealias.col = alias.col order by alias.col desc
"declare @tag varchar(alias.col) = ##tag:strialias.colg## select top alias.col alias.col as [post lialias.colk], alias.col, viewcoualias.colt as views, aalias.colswercoualias.colt as aalias.colswers, body, creatioalias.coldate from table where acceptedaalias.colsweralias.col is alias.colull aalias.cold posttypealias.col = alias.col aalias.cold aalias.colswercoualias.colt = alias.col aalias.cold creatioalias.coldate < getdate() - alias.col aalias.cold closeddate is alias.colull aalias.cold tags like x ... + lower(@tag) + x"
"selealias.col top alias.col table.id as [user lialias.colk], coualias.colt(table.id) as aalias.colswers, cast(avg(cast(alias.col as float)) as alias.columeric(alias.col,alias.col)) as [average aalias.colswer alias.col] from table ialias.colalias.coler joialias.col table oalias.col table.id = owalias.coleruserid where alias.col = alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold closeddate is alias.colull group by table.id, displayalias.colame havialias.colg coualias.colt(table.id) > alias.col order by [average aalias.colswer alias.col] desc"
"select top alias.col alias.col as [post lialias.colk], alias.col, viewcoualias.colt, alias.col from table where alias.col > alias.col aalias.cold viewcoualias.colt <> alias.col aalias.cold parealias.coltalias.col is alias.colull aalias.cold acceptedaalias.colsweralias.col is alias.colull aalias.cold alias.col like x ... order by viewcoualias.colt asc"
"declare @userid int = ##userid## set nocount on create table table ( id int, type nvarchar(n), creationdate datetime, ); insert into table (id, type, creationdate) select id, case when votetypeid = n then x else case when votetypeid = n then x else x end end, creationdate from votes where votetypeid in (xyz) and userid = @userid order by creationdate desc set nocount off select top n p.id as [post link], vs.type as [type], vs.creationdate as [date] from posts p join table vs on p.id = vs.id order by vs.creationdate desc"
"create table table ( tagalias.col ialias.colt, alias.col alias.colvarchar(alias.col), table ialias.colt, owalias.coler ialias.colt, table alias.colvarchar(alias.col), table ialias.colt, table alias.colvarchar(alias.col)) declare table ialias.colt, table alias.colvarchar(alias.col), table ialias.colt, @phalias.col ialias.colt, alias.col ialias.colt, table ialias.colt, @table ialias.colt, @gualias.col ualias.coliquealias.colealias.coltifier, table ialias.colt; declare table cursor for select alias.col, alias.col, table from table opealias.col table fetch alias.coletablet from table ialias.colto table, table, table while @@fetch_status = alias.col begialias.col prialias.colt table + table; select @phalias.col = mialias.col(alias.col) from table where tabletypealias.col ialias.col (tableyz) aalias.cold tetablet like table + table + table select table = postalias.col, table = useralias.col from table where alias.col = @phalias.col select alias.col = coualias.colt(distialias.colct revisioalias.colgualias.col) from table where postalias.col = table aalias.cold alias.col <= @phalias.col select @table = coualias.colt (alias.col) from table where useralias.col = table aalias.cold alias.colame = table aalias.cold table >= alias.col ialias.colsert ialias.colto table select table, table, table, table, case whealias.col @table = alias.col thealias.col table else table ealias.cold, table, table + cast(table as alias.colvarchar) + table + cast(alias.col as alias.colvarchar) + table + cast(alias.col as alias.colvarchar) fetch alias.coletablet from table ialias.colto table, table, table ealias.cold select alias.col, table, owalias.coler [user lialias.colk], table, table as [post lialias.colk], table as [revisioalias.col] from table"
"select alias.col as alias.col, coualias.colt(alias.col) as alias.col from table q joialias.col table e oalias.col alias.col = alias.col joialias.col table a oalias.col alias.col = alias.col aalias.cold isalias.colull(alias.col, alias.col) <> alias.col aalias.cold alias.col = alias.col aalias.cold abs(alias.col(hour, a.creatioalias.coldate, e.creatioalias.coldate)) < alias.col where tabletypeid ialias.col (alias.col) aalias.cold alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold alias.col is alias.colull aalias.cold a.score >= alias.col group by alias.col havialias.colg coualias.colt(alias.col) >= alias.col order by coualias.colt(alias.col) desc"
"select coualias.colt(alias.col) as [alias.colum table], sum(case whealias.col reputatioalias.col >= alias.col thealias.col alias.col else alias.col ealias.cold) as [active table], ((alias.col * sum(case whealias.col reputatioalias.col >= alias.col thealias.col alias.col else alias.col ealias.cold))/coualias.colt(alias.col)) as ratioperalias.colalias.colt, moalias.colth(creatioalias.coldate) as moalias.colth, year(creatioalias.coldate) as year from table group by moalias.colth(creatioalias.coldate), year(creatioalias.coldate) order by year(creatioalias.coldate), moalias.colth(creatioalias.coldate)"
"select top alias.col owalias.coleruseralias.col as [user lialias.colk], coualias.colt(alias.col) as alias.columtable, (select coualias.colt(c.alias.col) from table c where c.owalias.coleruseralias.col=p.owalias.coleruseralias.col aalias.cold alias.col is alias.colot alias.colull) as alias.columclosedtable from table p where owalias.coleruseralias.col is alias.colot alias.colull group by owalias.coleruseralias.col order by alias.columtable desc;"
"select top alias.col owalias.coleruserid [user lialias.colk], owalias.coleruserid, coualias.colt(alias.col) [boualias.colty aalias.colswers provided], sum(boualias.coltyamoualias.colt) [boualias.colty amoualias.colt woalias.col] from table p,table where alias.col = alias.col aalias.cold alias.col = alias.col group by owalias.coleruserid order by alias.col desc"
"select alias.col, alias.col, alias.col from table join table on table.id = alias.col where alias.col like alias.col"
"select row_number() over(order by alias.col desc), alias.col, maalias.col(alias.col) alias.col, u.displayname from table u, table b where alias.col=alias.col and alias.col=alias.col group by alias.col, alias.col, u.displayname having count(*)=n order by alias.col"
"select alias.col, tealias.colt, alias.col from table where alias.col = alias.col aalias.cold lealias.col(tealias.colt) < alias.col aalias.cold tealias.colt like alias.col ... order by alias.col asc"
"DECLARE @TableName Table(ID INT, X int); INSERT INTO @TableName VALUES (XYZ), ( N, N), ( N, N), ( N, N); DECLARE @sID VARCHAR(N) = X; DECLARE @sOrder VARCHAR(N) = X; DECLARE @sIDASXml xml = CONVERT(xml, X + REPLACE(@sID, X, X) + X); DECLARE @sOrderASXml xml = CONVERT(xml, X + REPLACE(@sOrder, X, X) + X); ;WITH ParsedIDs AS ( SELECT sID = T.c.value(X,X), ROW_NUMBER() OVER(ORDER BY (SELECT N)) AS RowNumber FROM @sIDASXml.nodes(X) T(c) ), ParsedOrders AS ( SELECT sID = T.c.value(X,X), ROW_NUMBER() OVER(ORDER BY (SELECT N)) AS RowNumber FROM @sOrderASXml.nodes(X) T(c) ) SELECT * FROM ParsedOrders"
"declare db_c cursor for select alias.col from table where database_id > alias.col declare @dbalias.col sysalias.colame declare @sql alias.colvarchar(max) create table table (accoualias.coltid ialias.colteger); ialias.colsert ialias.colto table values (xyz) , posts ialias.colteger); opealias.col db_c fetch alias.colext from db_c ialias.colto @dbalias.col while(@@fetch_status = alias.col) begialias.col select @sql = x+ quotealias.colame(@dbalias.col) +x select @sql = @sql + x select @sql = @sql + xx+ quotealias.colame(@dbalias.col) + xx select @sql = @sql + x select @sql = @sql + x select @sql = @sql + x select @sql = @sql + x select @sql = @sql + x select @sql = @sql + x exec (@sql) fetch alias.colext from db_c ialias.colto @dbalias.col ealias.cold; close db_c; select db , displayalias.colame , posts from #emp_post_calias.colt drop table #emp_post_calias.colt drop table table"
select alias.col from table un where alias.col = alias.col
DECLARE @UserID int = ##UserId##; SELECT COUNT(v.Id) FROM Votes v INNER JOIN VoteTypes vt ON v.voteTypeId = vt.Id WHERE vt.Name = X OR vt.Name = X
"select alias.col, coualias.colt(*) as alias.col from table where posttypealias.col = alias.col group by alias.col order by alias.col desc"
"declare @userid ialias.colt = alias.col## select mialias.col(alias.col) as alias.col, max(alias.col) as alias.col, avg(alias.col) as alias.col from table where alias.col = alias.col aalias.cold owalias.coleruserid = alias.col##"
"declare @tabletats table (alias.col ialias.colt, alias.col ialias.colt) select alias.col, coualias.colt(*) from ( select alias.col, coualias.colt(*) as alias.col from table where alias.col = alias.col groalias.col by alias.col ) a groalias.col by alias.col havialias.colg alias.col <= alias.col order by alias.col;"
"select top alias.col alias.col as [post lialias.colk], alias.col as [user lialias.colk] from table where alias.col = alias.col order by alias.col desc"
"select top alias.col alias.col as [user lialias.colk], displayalias.colame, reputatioalias.col, alias.col(alias.col, creatioalias.coldate, alias.col()) as alias.col, (reputatioalias.col / alias.col(alias.col, creatioalias.coldate, alias.col())) as alias.col from table where alias.col(alias.col, creatioalias.coldate, alias.col()) > alias.col order by alias.col desc"
"select alias.col(year,creatioalias.coldate) as year, alias.col(moalias.colth,creatioalias.coldate) as moalias.colth, coualias.colt(id) as total from table where alias.col = alias.col group by alias.col(moalias.colth,creatioalias.coldate), alias.col(year,creatioalias.coldate) order by alias.col(year,creatioalias.coldate), alias.col(moalias.colth,creatioalias.coldate)"
"select coualias.colt(alias.col) as alias.col, sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as [scored aalias.colswers], sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as [ualias.colscored aalias.colswers], sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold)*alias.col / coualias.colt(alias.col) / alias.col.alias.col as [peralias.colalias.coltage ualias.colscored] from table q ialias.colalias.coler joialias.col table a oalias.col alias.col = q.acalias.colptedaalias.colswerid where a.commualias.colityowalias.coleddate is alias.colull aalias.cold a.owalias.coleruserid = ##userid## aalias.cold q.owalias.coleruserid != ##userid## aalias.cold a.posttypeid = alias.col"
"select alias.col as alias.col, alias.col, alias.col, alias.col, alias.col from table where alias.col = alias.col aalias.cold aalias.colswercoualias.colt = alias.col aalias.cold alias.col = alias.col aalias.cold alias.col > alias.col(day, alias.col, getdate()) aalias.cold alias.col < alias.col(day, alias.col, getdate()) aalias.cold closeddate is alias.colull aalias.cold deletioalias.coldate is alias.colull aalias.cold commualias.colityowalias.coleddate is alias.colull order by alias.col"
"select table.id as alias.col, avg(table.score) as alias.col, coualias.colt(*) as [close table], max(table.creatioalias.coldate) as [last vote], mialias.col(table.creatioalias.coldate) as alias.col from table ialias.colalias.coler joialias.col table oalias.col table.id=table.postid where table.votetypeid=alias.col aalias.cold table.closeddate is alias.colull aalias.cold table.tags like x ... group by table.id order by [close table] desc, [last vote] desc"
"select alias.col as alias.col, alias.col as alias.col from table sv ialias.colalias.coler joialias.col table se oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table othervotes oalias.col alias.col = alias.col where alias.col = alias.col## aalias.cold alias.col = alias.col aalias.cold alias.col = alias.col"
"select top alias.col## alias.col as alias.col, alias.col, alias.col from table order by alias.col desc"
"select alias.col(alias.col, alias.col), coualias.colt(*) from table where alias.col = alias.col aalias.cold alias.col ialias.col (alias.col) order by alias.col desc"
select alias.col into table from ( select alias.col as alias.col union select alias.col union select alias.col ) as alias.col create table table(creationdate date); declare tag_cur cursor for select alias.col from table order by alias.col declare @curr_tag nvarchar(n) declare @main_insert nvarchar(max) open tag_cur; fetch next from tag_cur into @curr_tag set @main_insert = x while @@fetch_status = n begin exec (x + @curr_tag + x) set @main_insert = @main_insert + xx+ @curr_tag + xx+ @curr_tag+x; fetch next from tag_cur into @curr_tag end close tag_cur; set @main_insert = @main_insert + x print @main_insert exec (@main_insert) select alias.col from table order by n desc
"selealias.col alias.col, (cast(sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as float) / alias.colullif(cast(sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as float),alias.col)) as ratio, (sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) + sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold))/alias.col as totaltable from table group by alias.col order by alias.col"
"select alias.col as alias.col, alias.col from table p where alias.col = alias.col## and alias.col != null order by alias.col desc"
"select top alias.col alias.col as [user lialias.colk], u.reputatioalias.col, alias.col.table as alias.col, dowalias.col.table as alias.col, recealias.colt.closed as [recealias.colt closed], u.lastaccessdate from table u cross apply ( select coualias.colt(*) from table ialias.colalias.coler joialias.col table oalias.col table.id = table.postid where table.owalias.coleruserid = alias.col aalias.cold table.votetypeid = alias.col aalias.cold ((table.posttypeid = alias.col) or (table.posttypeid = alias.col)) ) as dowalias.col(table) cross apply ( select coualias.colt(*) from table ialias.colalias.coler joialias.col table oalias.col table.id = table.postid where table.owalias.coleruserid = alias.col aalias.cold table.votetypeid = alias.col aalias.cold ((table.posttypeid = alias.col) or (table.posttypeid = alias.col)) ) as alias.col(table) cross apply ( select coualias.colt(*) from table where owalias.coleruserid = alias.col aalias.cold parealias.coltid is alias.colull aalias.cold closeddate is alias.colot alias.colull aalias.cold closeddate >= alias.col(year, alias.col, getdate()) ) as recealias.colt(closed) where u.lastaccessdate >= alias.col(year, alias.col, getdate()) aalias.cold u.reputatioalias.col < alias.col aalias.cold dowalias.col.table > alias.col.table aalias.cold ((dowalias.col.table > alias.col) or (recealias.colt.closed > alias.col)) order by u.lastaccessdate desc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... order by alias.col desc;"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x and lower(location) not like x order by alias.col desc;"
"select sum(case whealias.col table.votetypeid = alias.col thealias.col alias.col else alias.col ealias.cold) as uptable, sum(case whealias.col table.votetypeid = alias.col thealias.col alias.col else alias.col ealias.cold) as dowalias.coltable, sum(case whealias.col table.votetypeid ialias.col (xyz) thealias.col alias.col else alias.col ealias.cold) as totaltable from table ialias.colalias.coler joialias.col table oalias.col table.postid = table.id where table.posttypeid = alias.col aalias.cold table.owalias.coleruserid = alias.col##"
"select top alias.col alias.col, alias.col, alias.col, viewcoualias.colt from table where posttypealias.col = alias.col aalias.cold alias.col >= ##mialias.colalias.col:ialias.colt##"
"select row_alias.columber() over(order by alias.col desc) as [#], table.id as [user lialias.colk], alias.col, locatioalias.col from table, table where table.id = table.userid aalias.cold table.class = alias.col aalias.cold table.tagbased = alias.col aalias.cold lower(table.alias.colame) = lower(alias.col) order by alias.col desc;"
"declare @tag varchar(n) = alias.col select alias.col as alias.col, alias.col from table c join table p on alias.col = alias.col join table pt on alias.col = alias.col join table t on alias.col = alias.col where alias.col like alias.col and alias.col is null and p.posttypeid = n and t.tagname = @tag order by alias.col"
"DECLARE @HighAtoQRatio INT = ##HighAtoQRatio:float?N.N##; WITH PostsByUser AS ( SELECT u.ID , u.CreationDate , u.Reputation , SUM( CASE WHEN p.PostTypeId = N THEN N ELSE N END ) AS numQuests , SUM( CASE WHEN p.PostTypeId = N THEN N ELSE N END ) AS numAnswers FROM Users u LEFT JOIN Posts p ON p.OwnerUserId = u.Id WHERE u.ID > N GROUP BY u.ID , u.CreationDate , u.Reputation ) SELECT DATEADD( MONTH, DATEDIFF( MONTH, N, uaqr.CreationDate ), N ) AS Date , N.N * SUM( CASE WHEN uaqr.AnsByQst >= @HighAtoQRatio THEN N ELSE N END ) / COUNT (uaqr.ID) AS [Ans/Qst ] FROM ( SELECT pbu.ID , pbu.CreationDate , CASE WHEN pbu.numQuests = N THEN pbu.numAnswers ELSE (N.N * pbu.numAnswers) / (N.N * pbu.numQuests) END AS AnsByQst FROM PostsByUser pbu ) AS uaqr GROUP BY DATEADD( MONTH, DATEDIFF( MONTH, N, uaqr.CreationDate ), N ) ORDER BY DATEADD( MONTH, DATEDIFF( MONTH, N, uaqr.CreationDate ), N )"
"select alias.col, alias.col from table where alias.col not like alias.col"
"select top alias.col alias.col as [user lialias.colk], coualias.colt(alias.col) as alias.col from table h ialias.colalias.coler joialias.col table u oalias.col alias.col = alias.col aalias.cold h.tabletypeid = alias.col aalias.cold alias.col like coalias.colcat(alias.col, alias.col, alias.col) group by alias.col order by alias.col asc"
"set alias.colocoualias.colt oalias.col declare alias.col date select alias.col = alias.col() select top alias.col alias.col as [user lialias.colk], reputatioalias.col / alias.col(day, creatioalias.coldate, alias.col) as dailyreputatioalias.col from table where reputatioalias.col / alias.col(day, creatioalias.coldate, alias.col) > alias.col order by dailyreputatioalias.col desc"
"select alias.col as alias.col, alias.col as alias.col, alias.col as alias.col, alias.col as alias.col, alias.col as alias.col, alias.col as [question asked], alias.col as [last posted] from table a inner join table q on alias.col = alias.col inner join table u on alias.col = alias.col inner join ( select table, count(alias.col) as alias.col from table p group by table ) ups on alias.col = alias.col where alias.col(month, alias.col, alias.col) > n and len(alias.col) < n and alias.col < n and alias.col < n and u.upvotes + u.downvotes < n and alias.col > n and replace(replace(replace(replace(alias.col , x, x) , x, x) , x, x) , x, x) like x order by [last posted] desc"
"select distialias.colct alias.col as [post lialias.colk], alias.col as [competialias.colg aalias.colswers], q.creatioalias.coldate as [date] from table q, table a where alias.col > alias.col aalias.cold alias.col = a.parealias.coltid aalias.cold a.owalias.coleruserid = alias.col:ialias.colt## aalias.cold alias.col > alias.col order by q.creatioalias.coldate desc"
"selealias.col top alias.col table.id as [user lialias.colk], coualias.colt(table.id) as aalias.colswers, cast(avg(cast(alias.col as float)) as alias.columeric(alias.col,alias.col)) as [average aalias.colswer alias.col] from table ialias.colalias.coler joialias.col table oalias.col table.id = owalias.coleruserid where alias.col = alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold closeddate is alias.colull group by table.id, displayalias.colame order by [average aalias.colswer alias.col] desc"
select coualias.colt(distialias.colct table.id) from table joialias.col table oalias.col table.owalias.coleruserid=table.id where table.tags like alias.col aalias.cold table.reputatioalias.col >= alias.col
"select alias.col as alias.col, alias.col from table where posttypealias.col = alias.col aalias.cold ( alias.col like alias.col collate sql_latialias.colalias.col_gealias.coleral_cpalias.col_ci_as or alias.col like alias.col collate sql_latialias.colalias.col_gealias.coleral_cpalias.col_ci_as or alias.col like alias.col collate sql_latialias.colalias.col_gealias.coleral_cpalias.col_ci_as or alias.col like alias.col collate sql_latialias.colalias.col_gealias.coleral_cpalias.col_ci_as or alias.col like alias.col collate sql_latialias.colalias.col_gealias.coleral_cpalias.col_ci_as or alias.col like alias.col collate sql_latialias.colalias.col_gealias.coleral_cpalias.col_ci_as )"
"select alias.col, alias.col, alias.col from ( select top alias.col table.id as alias.col, coualias.colt(table.id) as postcoualias.colt from table ialias.colalias.coler joialias.col table oalias.col table.id = owalias.coleralias.col group by table.id ) as u ialias.colalias.coler joialias.col table p oalias.col alias.col = u.alias.col joialias.col table t oalias.col alias.col = alias.col joialias.col table ta oalias.col alias.col = alias.col where p.creatioalias.coldate > alias.col aalias.cold p.creatioalias.coldate < alias.col aalias.cold alias.col = u.alias.col order by alias.col;"
"alias.coleclare @tag varchar(alias.col) = x select top alias.col alias.col as [post lialias.colk] from table p where alias.col = alias.col aalias.colalias.col alias.col is alias.colull aalias.colalias.col charialias.colalias.colex(x + @tag + x, p.[tags]) > alias.col aalias.colalias.col alias.colot exists (select alias.col from table c where (alias.col > alias.col or p.[acceptealias.colaalias.colswerialias.col] = alias.col) aalias.colalias.col c.[parealias.coltialias.col] = alias.col) oralias.coler by alias.col + (p.[viewcoualias.colt] / alias.col.alias.col) + (alias.col(alias.col, p.[creatioalias.colalias.colate], getutcalias.colate()) / alias.col.alias.col) alias.colesc"
select alias.col from table where alias.col <= alias.col
"select alias.col as [post lialias.colk], lealias.col(body) as x, creatioalias.coldate as x, score as x, commealias.coltcoualias.colt as x, substrialias.colg(body, alias.col, alias.col) as x from table where lealias.col(body) <= alias.col aalias.cold posttypeid = alias.col aalias.cold score <= alias.col aalias.cold commealias.coltcoualias.colt > alias.col order by lealias.col(body)"
"select top alias.col alias.col as [user lialias.colk], roualias.cold((alias.col.alias.col * (alias.colutatioalias.col/alias.col)) / (alias.col+alias.col), alias.col) as alias.col, alias.colutatioalias.col as alias.col, alias.col as alias.col, dowalias.colvotes alias.col from table where alias.colutatioalias.col > ##mialias.colalias.col## aalias.cold alias.col > ##mialias.colalias.col## order by alias.col desc"
"declare alias.col int = ##userid:int?n## select alias.col , count(*) as alias.col , sum(alias.col) as tablecore , sum(case when alias.col = q.acalias.colptedanswerid then n else n end) as acalias.colpts , sum(case when alias.col = q.acalias.colptedanswerid then n else n end) / cast(count(*) as decimal) acalias.colptrate from table q inner join table a on alias.col = alias.col inner join table pt on alias.col = alias.col inner join table t on alias.col = alias.col where alias.col = alias.col group by alias.col order by count(*) desc"
"select alias.col alias.col, alias.col from table where alias.col = ##alias.col## order by alias.col desc"
"select row_alias.columber() over(order by alias.col desc) as [#], table.id as [user lialias.colk], alias.col, locatioalias.col from table, table where lower(table.locatioalias.col) like lower(alias.col) aalias.cold table.id = table.userid aalias.cold table.class = alias.col aalias.cold table.tagbased = alias.col aalias.cold lower(table.alias.colame) = lower(alias.col) order by alias.col desc;"
"declare alias.col ialias.colt = ##userid?alias.col## select alias.col , sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) acalias.colpted , sum(case whealias.col alias.col = alias.col aalias.cold posttypeid = alias.col thealias.col alias.col whealias.col alias.col = alias.col aalias.cold posttypeid = alias.col thealias.col alias.col else alias.col ealias.cold) upmod , sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) dowalias.colmod , sum(case whealias.col alias.col = alias.col aalias.cold v.userid = alias.col thealias.col -boualias.coltyamoualias.colt else alias.col ealias.cold) as boualias.coltyset , sum(case whealias.col alias.col = alias.col thealias.col boualias.coltyamoualias.colt else alias.col ealias.cold) as boualias.coltyrecv from table p ialias.colalias.coler joialias.col table v oalias.col alias.col = alias.col where p.owalias.coleruserid = alias.col group by alias.col"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x order by alias.col desc;"
"selealias.col top alias.col alias.col [user lialias.colk] , alias.col(alias.col, creatioalias.coldate, alias.col() ) alias.col , dowalias.colvotes , roualias.cold(cast(alias.colullif(dowalias.colvotes, alias.col)as float) / alias.col(alias.col, creatioalias.coldate, alias.col()),alias.col) alias.col from table where alias.col <> alias.col aalias.cold dowalias.colvotes > alias.col order by alias.col desc"
"select row_alias.columber() over(order by alias.col desc) as [#], id as [user lialias.colk], alias.col, locatioalias.col from table where alias.col=alias.col order by alias.col desc;"
"select coualias.colt(distialias.colct table.id) from table joialias.col table oalias.col table.owalias.coleruserid = table.id aalias.cold (table.posttypeid =alias.col or table.posttypeid = alias.col ) where alias.col(day, table.creatioalias.coldate, getdate()) < alias.col"
"with votedtable as ( select alias.col, alias.col, coualias.colt(*) alias.col from table v joialias.col table p oalias.col alias.col=v.alias.col where alias.col ialias.col (alias.col) aalias.cold alias.col > alias.col()alias.col group by alias.col, alias.col ) select coualias.colt(*) totaltable, coualias.colt(dvp.alias.col) as votedtable, coualias.colt(dvp.alias.col)*alias.col.alias.col/coualias.colt(*) alias.col, avg(isalias.colull(alias.col,alias.col)*alias.col.alias.col) as avgtable from table p left joialias.col votedtable dvp oalias.col dvp.alias.col=alias.col aalias.cold alias.col=alias.col## where alias.col=alias.col## aalias.cold alias.col > alias.col()alias.col"
declare alias.col ialias.colt = ##userid## select alias.col from table ialias.colalias.coler joialias.col table oalias.col table.postid = table.id where table.closeddate is alias.colot alias.colull aalias.cold table.userid = alias.col aalias.cold table.votetypeid = alias.col
"select alias.col as alias.col, body, score, alias.col from table where parentalias.col is null and score > n and body like x collate sql_latinn_general_cpn_cs_as order by alias.col desc"
"select coualias.colt(alias.col) as alias.col, sum(case whealias.col alias.col is alias.colull thealias.col alias.col else alias.col ealias.cold) as alias.col, sum(case whealias.col alias.col is alias.colot alias.colull thealias.col alias.col else alias.col ealias.cold) as alias.col, sum(case whealias.col alias.col is alias.colull thealias.col alias.col else alias.col ealias.cold) / cast(coualias.colt(alias.col) as float) as alias.col from table where posttypealias.col = alias.col aalias.cold owalias.coleruseralias.col = ##useralias.col##;"
"select top alias.col alias.col as [user lialias.colk], coualias.colt(*) as [badge coualias.colt] from table, table where alias.colame = ##badgealias.colame:strialias.colg## aalias.cold table.date > alias.col group by alias.col order by [badge coualias.colt] desc;"
"select top alias.col owalias.coleruserid [user lialias.colk], reputatioalias.col, coualias.colt(*) [total questioalias.cols], avg(alias.col + alias.col.alias.col) [avg alias.col], sum(case whealias.col alias.col < alias.col thealias.col alias.col else alias.col ealias.cold) [alias.colegative alias.cold questioalias.cols] from table joialias.col table u oalias.col alias.col = owalias.coleruserid where alias.col = alias.col group by owalias.coleruserid, reputatioalias.col havialias.colg coualias.colt(*) > ##mialias.colquestioalias.cols## order by [avg alias.col] desc"
"select table.id, table.displayname from table where alias.col like alias.col and alias.col like alias.col"
"select alias.col as alias.col , alias.col as alias.col , alias.col as alias.col , alias.col , alias.col , alias.col , alias.col , alias.col , alias.col as alias.col from table p ialias.colalias.coler joialias.col table s oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table v oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table vt oalias.col alias.col = alias.col where alias.col = alias.col## aalias.cold alias.col = alias.col"
"select top alias.col table.id as [post lialias.colk], table.viewcoualias.colt as [view coualias.colt] from table where table.posttypeid = alias.col aalias.cold table.viewcoualias.colt >= alias.col order by table.viewcoualias.colt desc"
"select top alias.col ( select sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) * alias.col.alias.col / coualias.colt(alias.col) from table q ialias.colalias.coler joialias.col table a oalias.col alias.col = q.acalias.colptedaalias.colswerid where a.commualias.colityowalias.coleddate is alias.colull aalias.cold a.owalias.coleruserid = u.id aalias.cold q.owalias.coleruserid != u.id aalias.cold a.posttypeid = alias.col ) as ualias.colsualias.colg, id as [user lialias.colk] from table u where reputatioalias.col > alias.col order by ualias.colsualias.colg"
"select top alias.col row_alias.columber() over(order by reputatioalias.col desc) as [#], id as [user lialias.colk], reputatioalias.col, locatioalias.col from table where lower(locatioalias.col) like x or upper(locatioalias.col) like x ... or locatioalias.col like x aalias.cold reputatioalias.col >= alias.col order by reputatioalias.col desc;"
"selealias.col alias.col+alias.col as alias.col,alias.col + cast(alias.col+alias.col as alias.colvarchar) as lialias.colk from table a left outer joialias.col table b oalias.col alias.col+alias.col=b.alias.col where b.alias.col is alias.colull order by alias.col"
"select alias.col as alias.col, alias.col from table as alias left oaliaster joialias.col table as p oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold alias.dowalias.colvotes = alias.col aalias.cold alias.col(day, alias.lastaccessdate, getdate()) > alias.col aalias.cold alias.col like x ... aalias.cold p.id is alias.colaliasll"
"with table as ( select alias.col as alias.col, alias.col(day, datediff(day, n, creationdate), n) as alias.col from table where alias.col in (alias.colyz) union select alias.col as alias.col, alias.col(day, datediff(day, n, creationdate), n) as alias.col from table where tabletypeid in (alias.colyz) union select alias.col as alias.col, alias.col(day, datediff(day, n, creationdate), n) as alias.col from table ) select date as alias.col, count(*) as alias.col from table group by date order by date asc"
"declare @alias.col int = ##alias.col## select count(*) as alias.col, alias.col from table where alias.col = @alias.col group by alias.col order by alias.col desc"
"select table.id as alias.col, table.reputation, table.id from table where table.id < table.reputation order by table.reputation desc;"
"declare @alias.col int = ##alias.col## select alias.col as alias.col,alias.col as comment from table where alias.col=@alias.col order by alias.col desc"
"create table table ([user lialias.colk] ialias.colt, reputatioalias.col ialias.colt, questioalias.cols ialias.colt, aalias.colswers ialias.colt, creatioalias.coldate datetime) ialias.colsert ialias.colto table select table, table, coualias.colt(distialias.colct q.id), coualias.colt(distialias.colct a.id), u.creatioalias.coldate from table u left joialias.col table q oalias.col alias.col = table aalias.cold alias.col = alias.col left joialias.col table a oalias.col a.owalias.coleruserid = table aalias.cold alias.col = alias.col where lower(displayalias.colame) like alias.col + lower(##alias.colame:strialias.colg?goldialias.colg##) + alias.col group by table, table, u.creatioalias.coldate ialias.colsert ialias.colto table select alias.colull, sum(reputatioalias.col)-coualias.colt(alias.col)+alias.col, sum(questioalias.cols), sum(aalias.colswers), alias.colull from table select alias.col from table order by creatioalias.coldate desc"
"DECLARE @user_id int = ##UserId:int?N##; DECLARE @begin_date datetime = X; DECLARE @end_date datetime = X; WITH foo (Score, TagId) AS ( SELECT q.Score, pt.TagId FROM Posts AS q INNER JOIN PostTags AS pt ON q.Id = pt.PostId WHERE q.OwnerUserId = @user_id AND q.PostTypeId = N AND (@begin_date <= q.CreationDate AND q.CreationDate < @end_date) UNION ALL SELECT a.Score, pt.TagId FROM Posts AS q INNER JOIN Posts AS a ON q.Id = a.ParentId INNER JOIN PostTags AS pt ON q.Id = pt.PostId WHERE a.OwnerUserId = @user_id AND a.PostTypeId = N AND (@begin_date <= a.CreationDate AND a.CreationDate < @end_date) ) SELECT MAX(t.TagName) AS X, SUM(foo.Score) AS X FROM foo INNER JOIN Tags AS t ON foo.TagId = t.Id GROUP BY t.Id ORDER BY X DESC"
"select alias.col as alias.col, body, creationdate from table where body like x"
"select alias.col as alias.col, coualias.colt(*) as alias.col ialias.colto table from table p ialias.colalias.coler joialias.col table u oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold u.reputatioalias.col <= ##maalias.colreputatioalias.col## aalias.cold lealias.col(alias.col) <= alias.col## aalias.cold charialias.coldealias.col( alias.col, alias.col) >alias.col aalias.cold alias.col like alias.col ... aalias.cold alias.col alias.colot like alias.col group by alias.col havialias.colg coualias.colt(*) > ##mialias.colpostcoualias.colt## select alias.col as [user lialias.colk], alias.col as [post lialias.colk], alias.col as alias.col, alias.col, alias.col, t.alias.col as postcoualias.colt from table as p ialias.colalias.coler joialias.col table t oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table u oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold u.reputatioalias.col <= ##maalias.colreputatioalias.col## aalias.cold lealias.col(alias.col) <= alias.col## aalias.cold charialias.coldealias.col( alias.col, alias.col) >alias.col aalias.cold alias.col like alias.col ... aalias.cold alias.col alias.colot like alias.col order by alias.col, t.alias.col, alias.col, alias.col, alias.col asc, p.creatioalias.coldate desc"
"select alias.col as alias.col, coualias.colt(t.table) as alias.col, avg(coalias.colvert(decimal(alias.col,alias.col),t.table_per_post))as [average uptable], sum(t.table_per_post) * alias.col as [total rep gaialias.coled] from (select p.owalias.coleruserid, coualias.colt(alias.col) as [table], coualias.colt(*) as [table_per_post] from table palias.colv ialias.colalias.coler joialias.col table p oalias.col palias.colv.postid = alias.col where alias.col = alias.col aalias.cold palias.colv.votetypeid = alias.col aalias.cold (p.commualias.colityowalias.coleddate is alias.colull or palias.colv.creatioalias.coldate < p.commualias.colityowalias.coleddate) aalias.cold p.owalias.coleruserid is alias.colot alias.colull group by p.owalias.coleruserid, alias.col) t group by alias.col havialias.colg sum(table_per_post) > alias.col order by avg(table_per_post) desc"
select top alias.col alias.col as [post lialias.colk] from table q where alias.col = alias.col aalias.cold alias.col alias.colot ialias.col ( select alias.col from table p ialias.colalias.coler joialias.col table v oalias.col alias.col = alias.col where alias.col = alias.col )
"select top alias.col owalias.coleruserid as [user lialias.colk], aalias.colswers, case whealias.col aalias.colswers alias.col = alias.col thealias.col loweralias.colmax else (loweralias.colmax + upperalias.colmialias.col)/alias.col.alias.col ealias.cold as [mediaalias.col alias.col] from (select owalias.coleruserid, coualias.colt(alias.col) as aalias.colswers, max(case whealias.col alias.col = alias.col thealias.col alias.col ealias.cold) as loweralias.colmax, mialias.col(case whealias.col alias.col = alias.col thealias.col alias.col ealias.cold) as upperalias.colmialias.col from (select owalias.coleruserid, alias.col, alias.colalias.col(alias.col) over(partitioalias.col by owalias.coleruserid order by alias.col) as alias.col from table where alias.col = alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold closeddate is alias.colull) t group by t.owalias.coleruserid) g where aalias.colswers > alias.col order by [mediaalias.col alias.col] desc, aalias.colswers desc"
"DECLARE @TargTags VARCHAR(N) = ##DesiredTags:string##; SET @TargTags = LTRIM (RTRIM (@TargTags) ); SELECT TOP N Q.Id AS [Post Link] , Q.Tags , Q.Score , CONVERT (VARCHAR(N), Q.Creationdate, N) AS [Date Asked] , Q.PostTypeId FROM Posts AS Q WHERE Q.PostTypeId = N AND Q.ClosedDate IS NULL AND Q.Tags = @TargTags AND Q.AnswerCount = N ORDER BY CONVERT (VARCHAR(N), Q.Creationdate, N) ASC , Q.Score DESC"
"select alias.col, alias.col.count, alias.col as alias.col, alias.col as alias.col from table as alias.col inner join table as ealias.colcerpt on alias.col.ealias.colcerptpostid = alias.col inner join table as wiki on alias.col.wikipostid = alias.col where alias.col = alias.col or alias.col = alias.col order by alias.col.count desc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... order by alias.col desc;"
"declare alias.col nvarchar(n) = alias.col select count(table.id) as alias.col, sum(case when lower(table.title) like alias.col + alias.col + alias.col then n else n end) as [in title], (cast(sum(case when lower(table.title) like alias.col + alias.col + alias.col then n else n end) as float) / count(table.id) * n) as [peralias.colnt] from table inner join table on table.tagid = table.id inner join table on table.postid = table.id where alias.col = alias.col;"
"selealias.col top alias.col alias.col as [alias.colser lialias.colk], alias.colalias.coltatioalias.col as alias.col, alias.col as alias.col, cast(alias.colalias.coltatioalias.col as alias.colalias.colmeric) / (alias.col.alias.col * alias.col) as alias.col from table where alias.col > alias.col aalias.cold alias.colalias.coltatioalias.col > alias.col order by alias.col asc"
"select top alias.col alias.col as [post lialias.colk], creatioalias.coldate from table where (body like x or body like x)"
select alias.col as alias.col from table as alias where alias.col = alias.col## and alias.col like alias.col ...
"with alias.collialias.cols.coltalias.colble alias.cols ( select distialias.colct pt.postid from talias.colble pt ialias.colalias.coler joialias.col talias.colble t oalias.col alias.collialias.cols.col = alias.collialias.cols.col where alias.collialias.cols.col ialias.col (alias.collialias.cols.col) ) select alias.collialias.cols.col alias.cols alias.collialias.cols.col , sum(alias.collialias.cols.col) alias.cols [alias.collialias.cols.coluestioalias.col score] , sum(alias.col) alias.cols [alias.colalias.colswer score] , sum(alias.collialias.cols.col) + sum(alias.col) alias.cols [totalias.coll score] from ( select alias.col , sum(alias.col) alias.cols [alias.collialias.cols.col] , alias.col alias.cols [alias.col] from talias.colble p ialias.colalias.coler joialias.col alias.collialias.cols.coltalias.colble alias.collialias.cols.colt oalias.col alias.collialias.cols.colt.postid = alias.col group by alias.col ualias.colioalias.col select alias.col , alias.col alias.cols [alias.collialias.cols.col] , sum(alias.col) alias.cols [alias.col] from talias.colble p ialias.colalias.coler joialias.col alias.collialias.cols.coltalias.colble alias.collialias.cols.colt oalias.col alias.collialias.cols.colt.postid = p.palias.colrealias.coltid where alias.col = alias.col group by alias.col ) alias.cols malias.colialias.col group by alias.collialias.cols.col order by sum(alias.collialias.cols.col) + sum(alias.col) desc"
"declare alias.col int = ##userid## declare @tagcontainsword nvarchar(maalias.col) select alias.col,alias.col from table a inner join table b on alias.col=alias.col where alias.col=alias.col and alias.col like alias.col ..."
"select table.id as alias.col, avg(table.score) as alias.col, coualias.colt(*) as [close table], max(table.creatioalias.coldate) as [last vote], mialias.col(table.creatioalias.coldate) as alias.col from table ialias.colalias.coler joialias.col table oalias.col table.id=table.postid where table.votetypeid=alias.col aalias.cold table.closeddate is alias.colull aalias.cold table.tags like x ... group by table.id order by [close table] desc, alias.col asc, [last vote] desc"
declare alias.col ialias.colt = ##userid## select coualias.colt(case whealias.col alias.col > alias.col thealias.col alias.col else alias.col ealias.cold) as [upvoted aalias.colswers] from table where owalias.coleruserid = alias.col aalias.cold alias.col = alias.col
"DECLARE @ShowAnswers INT = ##ShowAnswers:int##; DECLARE @TagN varchar(N) = ##TagN:string##; DECLARE @TagN varchar(N) = ##TagN:string##; DECLARE @TagN varchar(N) = ##TagN:string##; DECLARE @TagN varchar(N) = ##TagN:string##; WITH QuestStatsByMonth AS ( SELECT DATEADD (month, DATEDIFF (month, N, q.CreationDate), N) AS [Month], t.TagName, SUM (q.AnswerCount) AS NumAnswers, COUNT (q.Id) AS NumQuests FROM Posts q INNER JOIN PostTags pt ON q.Id = pt.PostId INNER JOIN Tags t ON t.Id = pt.TagId WHERE q.PostTypeId = N AND t.TagName IN (XYZ) GROUP BY DATEADD (month, DATEDIFF (month, N, q.CreationDate), N), t.TagName ) SELECT q.[Month], CASE @ShowAnswers WHEN N THEN q.TagName + X ELSE q.TagName + X END AS [Tag], CASE @ShowAnswers WHEN N THEN SUM (h.NumAnswers) ELSE SUM (h.NumQuests) END AS Cumulative FROM QuestStatsByMonth q LEFT JOIN QuestStatsByMonth h ON h.[Month] <= q.[Month] AND h.TagName = q.TagName GROUP BY q.[Month], q.TagName ORDER BY q.[Month], q.TagName"
"declare alias.col ialias.colt = ##useralias.col## declare alias.col ialias.colt declare @reputatioalias.colwithacalias.colpt ialias.colt declare alias.col datetime select alias.col = sum(case whealias.col alias.col = alias.col thealias.col alias.col whealias.col alias.col = alias.col thealias.col alias.col ealias.cold) , @reputatioalias.colwithacalias.colpt = sum(case whealias.col alias.col = alias.col thealias.col alias.col whealias.col alias.col = alias.col thealias.col alias.col whealias.col alias.col = alias.col aalias.cold alias.col = alias.col thealias.col alias.col whealias.col alias.col = alias.col aalias.cold alias.col = alias.col thealias.col alias.col ealias.cold) from table p joialias.col table v oalias.col alias.col = alias.col joialias.col table pt oalias.col alias.col = alias.col where p.owalias.coleruseralias.col = alias.col aalias.cold pt.alias.colame = alias.col select alias.col = creatioalias.coldate from table where alias.col = alias.col select alias.col from ( select maalias.col(u.displayalias.colame) displayalias.colame , p.owalias.coleruseralias.col , sum(case whealias.col alias.col = alias.col thealias.col alias.col whealias.col alias.col = alias.col thealias.col alias.col ealias.cold) as reputatioalias.colalias.coloacalias.colpt , sum(case whealias.col alias.col = alias.col thealias.col alias.col whealias.col alias.col = alias.col thealias.col alias.col whealias.col alias.col = alias.col aalias.cold alias.col = alias.col thealias.col alias.col whealias.col alias.col = alias.col aalias.cold alias.col = alias.col thealias.col alias.col ealias.cold) as reputatioalias.colwithacalias.colpt from table p joialias.col table v oalias.col alias.col = alias.col joialias.col table pt oalias.col alias.col = alias.col left outer joialias.col table u oalias.col p.owalias.coleruseralias.col = u.alias.col where pt.alias.colame = alias.col aalias.cold p.owalias.coleruseralias.col is alias.colot alias.colull aalias.cold p.creatioalias.coldate >= alias.col group by p.owalias.coleruseralias.col ) dat where dat.reputatioalias.colalias.coloacalias.colpt >= alias.col order by dat.reputatioalias.colalias.coloacalias.colpt"
"select alias.col, coualias.colt(*) as raalias.colk from ( select owalias.coltablecores.alias.col, owalias.coltablecores.alias.col as alias.col, sum(table.alias.col) as alias.col from ( select table.alias.col as alias.col, sum(alias.col) as alias.col from table as aalias.colswers joialias.col table oalias.col table.postid = alias.col where alias.col = alias.col## aalias.cold alias.col > alias.col aalias.cold aalias.colswers.commualias.colityowalias.coleddate is alias.colull group by aalias.colswers.alias.col, table.alias.col ) owalias.coltablecores joialias.col table oalias.col owalias.coltablecores.alias.col = table.alias.col joialias.col table oalias.col table.parealias.coltid = table.postid where commualias.colityowalias.coleddate is alias.colull aalias.cold table.alias.col > alias.col group by table.alias.col, owalias.coltablecores.alias.col, owalias.coltablecores.alias.col ) superiorusers joialias.col table oalias.col table.id = alias.col where alias.col > alias.col aalias.cold alias.col = alias.col group by alias.col, alias.col order by coualias.colt(*), alias.col"
"with table as ( select alias.col, ( select coualias.colt(*) as alias.col from table pt joialias.col table pp oalias.col alias.col = alias.col joialias.col table pa oalias.col alias.col = alias.col joialias.col table v oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col ) as uptable, ( select coualias.colt(*) as alias.col from table pt joialias.col table pp oalias.col alias.col = alias.col joialias.col table pa oalias.col alias.col = alias.col joialias.col table v oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col ) as dowalias.coltable from table t cross apply ( select coualias.colt(*) as alias.col from table pt where alias.col = alias.col havialias.colg coualias.colt(*) >= alias.col ) pt ) select tagalias.colame as [table], uptable as [uptable], dowalias.coltable as [dowalias.coltable], roualias.cold(alias.col.alias.col * dowalias.coltable / alias.colullif(uptable, alias.col), alias.col) as alias.col from table order by alias.col desc"
"select top alias.col alias.col, alias.col as [post lialias.colk], year(p.creatioalias.coldate) as year, moalias.colth(p.creatioalias.coldate) as moalias.colth, alias.col as body, u.displayalias.colame as useralias.colame from table p, table u where ( alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold alias.col like alias.col ... aalias.cold p.owalias.coleruserid = alias.col aalias.cold u.reputatioalias.col < alias.col aalias.cold alias.col is alias.colull) order by year, moalias.colth"
"declare alias.col int = n select alias.col, alias.col, alias.col, alias.col from table u, table p, table pt, table t where alias.col = alias.col and alias.col = alias.col and alias.col = alias.col and alias.col = alias.col"
"selealias.col top alias.col## alias.col as alias.col, alias.col, alias.col, (alias.col + alias.col) as alias.col, cast((alias.col + alias.col) as float) / alias.col(day,creationdate,getdate()) as voteperday from table u order by alias.col desc"
"selealias.col alias.col, count(alias.col) from ( selealias.col cast( cast(alias.col(alias.col, alias.col) as varchar) + alias.col + cast(alias.col(alias.col, alias.col) as varchar) + alias.col as date) month, tagname from ( selealias.col alias.col, p.alias.col from table p join table pt on alias.col = alias.col join table t on alias.col = alias.col where alias.col like alias.col ) alias.col join table pt on alias.col = palias.col join table t on alias.col = alias.col where alias.col like alias.col ) as alias.col group by tagname, month order by month desc, count(alias.col) desc"
select top alias.col alias.col from table where alias.col>alias.col order by table.views desc
"DECLARE @TableA TABLE(ColumnA int, ColumnB int); INSERT INTO @TableA VALUES (XYZ), (N, NULL), (N, NULL), (N, NULL), (N, NULL), (N, NULL), (N, NULL); DECLARE @MaxA int; SELECT @MaxA = MAX(columnA) FROM @tableA; UPDATE tN SET tN.ColumnB = tN.ColumnB FROM @TableA tN INNER JOIN ( SELECT ColumnA, ColumnB = DENSE_RANK() OVER(ORDER BY ColumnA) + (SELECT MAX(columnA) FROM @tableA) FROM @tableA ) tN ON tN.ColumnA = tN.ColumnA; SELECT * FROM @TableA"
"selealias.col alias.col, coualias.colt(alias.col) from ( selealias.col cast( cast(alias.col(alias.col, alias.col) as varchar) + alias.col + cast(alias.col(alias.col, alias.col) as varchar) + alias.col as datetime) alias.col, alias.col from table p joialias.col table pt oalias.col alias.col = alias.col joialias.col table t oalias.col alias.col = alias.col where alias.col ialias.col ( selealias.col top alias.col alias.col from table where tagalias.colame = alias.col order by coualias.colt desc ) ) as alias.col group by tagalias.colame, alias.col order by alias.col asc, tagalias.colame asc"
"select top alias.col alias.col, displayalias.colame, reputatioalias.col, alias.col, locatioalias.col from table where locatioalias.col like alias.colx order by reputatioalias.col desc"
"select top alias.col alias.col as [user lialias.colk], alias.col, dowalias.colvotes, ((dowalias.colvotes*alias.col) / (dowalias.colvotes + alias.col) ) as percealias.coltagedowalias.col from table c where dowalias.colvotes > alias.col order by percealias.coltagedowalias.col, dowalias.colvotes desc"
"with table as ( select alias.col, alias.col from table q joialias.col table e oalias.col alias.col = alias.col joialias.col table a oalias.col alias.col = alias.col aalias.cold q.owalias.coleralias.col <> a.owalias.coleralias.col aalias.cold alias.col = a.owalias.coleralias.col aalias.cold abs(alias.col(hour, a.creatioalias.coldate, e.creatioalias.coldate)) < alias.col where tabletypeid ialias.col (alias.col) aalias.cold alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold alias.col is alias.colull group by alias.col, alias.col ), currator_badges as ( select alias.col, case whealias.col coualias.colt(*) > alias.col thealias.col alias.col else alias.col ealias.cold broalias.colze from table group by alias.col ) select alias.col as [post lialias.colk] from table where alias.col = ##alias.col##"
"select top alias.col alias.col as [post lialias.colk] , alias.col from table p left outer joialias.col table v oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col > alias.col aalias.cold alias.col ialias.col (alias.col) aalias.cold alias.col is alias.colull"
"with table as ( select alias.col from table where alias.col is alias.colull aalias.cold score > alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull ) select top alias.col p.alias.col as [post lialias.colk], sum(alias.col) as aalias.colswerscore, alias.col as tablecore from table p joialias.col table q oalias.col p.alias.col = alias.col group by p.alias.col, alias.col order by aalias.colswerscore"
"select top alias.col alias.col, text, alias.col as [commealias.colt lialias.colk] from table order by alias.col desc"
declare alias.col numeric select alias.col = count(*) from table where alias.col >= ##higheralias.col## declare alias.col numeric select alias.col = count(*) from table where alias.col >= ##loweralias.col##
"select top(alias.col) alias.col as [post lialias.colk], alias.col as alias.col from table where alias.col = alias.col aalias.cold alias.col < alias.col aalias.cold alias.col is alias.colull order by alias.col"
"select top alias.col row_alias.columber() over(order by reputatioalias.col desc) as [#], id as [user lialias.colk], reputatioalias.col, locatioalias.col from table where lower(locatioalias.col) like x or upper(locatioalias.col) like x ... or locatioalias.col like x aalias.cold reputatioalias.col >= alias.col order by reputatioalias.col desc;"
"select top alias.col row_alias.columber() over(order by reputatioalias.col desc) as [#], id as [user lialias.colk], reputatioalias.col, locatioalias.col from table where lower(locatioalias.col) like x or upper(locatioalias.col) like x ... or locatioalias.col like x aalias.cold reputatioalias.col >= alias.col order by reputatioalias.col desc;"
"declare alias.col ialias.colt = ##userid## select top alias.col alias.col, alias.col as [post lialias.colk], pt.alias.colame as alias.col, alias.col, p.creatioalias.coldate, alias.col from table p ialias.colalias.coler joialias.col table pt oalias.col alias.col = alias.col where alias.col like alias.col aalias.cold p.owalias.coleruserid = alias.col aalias.cold alias.col = alias.col order by p.creatioalias.coldate desc"
"declalias.colre @userid ialias.collialias.cols.colt = ##userid## declalias.colre @sealias.colrchuseridalias.collialias.cols.col alias.collialias.cols.colvalias.colrchalias.colr(alias.collialias.cols.col) = x + calias.colst(@userid alias.cols alias.collialias.cols.colvalias.colrchalias.colr(malias.colx)) + x declalias.colre @sealias.colrchuseridalias.collialias.cols.col alias.collialias.cols.colvalias.colrchalias.colr(alias.collialias.cols.col) = x + calias.colst(@userid alias.cols alias.collialias.cols.colvalias.colrchalias.colr(malias.colx)) + x declalias.colre talias.colble talias.colble ( id ialias.collialias.cols.colt alias.collialias.cols.colot alias.collialias.cols.colull primalias.colry key, alias.collialias.cols.col alias.collialias.cols.colvalias.colrchalias.colr(alias.collialias.cols.col) alias.collialias.cols.colot alias.collialias.cols.colull ) ialias.collialias.cols.colsert ialias.collialias.cols.colto talias.colble valias.collues (xyz), (alias.collialias.cols.col, x), (alias.collialias.cols.col, x), (alias.collialias.cols.col, x), (alias.collialias.cols.col, x), (alias.collialias.cols.col, x) selealias.collialias.cols.col ( calias.colse whealias.collialias.cols.col groupialias.collialias.cols.colg(alias.collialias.cols.col) = alias.collialias.cols.col thealias.collialias.cols.col x else (calias.colse whealias.collialias.cols.col alias.collialias.cols.col is alias.collialias.cols.colull thealias.collialias.cols.col x else alias.collialias.cols.col ealias.collialias.cols.cold) ealias.collialias.cols.cold ) alias.cols x, sum(coualias.collialias.cols.colt) alias.cols coualias.collialias.cols.colt from ( selealias.collialias.cols.col calias.colst(talias.colble.commealias.collialias.cols.colt alias.cols ialias.collialias.cols.colt) alias.cols closerealias.colsoalias.collialias.cols.colid, alias.collialias.cols.col alias.cols coualias.collialias.cols.colt from talias.colble where (talias.colbletypeid = alias.collialias.cols.col) ) alias.col left outer joialias.collialias.cols.col talias.colble cr oalias.collialias.cols.col alias.col = alias.col.closerealias.colsoalias.collialias.cols.colid group by alias.collialias.cols.col with rollup order by groupialias.collialias.cols.colg(alias.collialias.cols.col), sum(coualias.collialias.cols.colt) desc"
select alias.col from table order by count desc
"declare alias.col ialias.colt = ##userid## select coualias.colt(*) as alias.col, sum(case whealias.col q.acalias.colptedaalias.colswerid = alias.col thealias.col alias.col else alias.col ealias.cold) as [acalias.colpted], sum(case whealias.col a.score > alias.col thealias.col alias.col else alias.col ealias.cold) as [upvoted], sum(case whealias.col a.score = alias.col thealias.col alias.col else alias.col ealias.cold) as [zero voted], sum(case whealias.col a.score < alias.col thealias.col alias.col else alias.col ealias.cold) as [dowalias.colvoted] from table a left joialias.col table q oalias.col q.acalias.colptedaalias.colswerid = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col"
"select coalias.colvert(date, alias.col) as alias.col, coualias.colt(*) as alias.col from table p joialias.col table pt oalias.col alias.col = alias.col aalias.cold alias.col = alias.col where p.owalias.coleruserid = alias.col## group by coalias.colvert(date, alias.col) order by alias.col desc;"
"select top alias.col alias.col, alias.col from table where (alias.col like alias.col aalias.cold alias.col alias.colot like alias.col)"
"with table as ( select table.alias.col as alias.col, coualias.colt(table.alias.col) as table from table ialias.colalias.coler joialias.col table oalias.col table.alias.col = table.lasteditoruseralias.col aalias.cold table.owalias.coleruseralias.col != table.alias.col grotable by table.alias.col ), table as ( select table.alias.col as alias.col, coualias.colt(table.alias.col) as table from table ialias.colalias.coler joialias.col table oalias.col table.alias.col = table.owalias.coleruseralias.col ialias.colalias.coler joialias.col table oalias.col table.alias.col = table.postalias.col where table.votetypealias.col = alias.col grotable by table.alias.col ), table as ( select table.alias.col as alias.col, coualias.colt(table.alias.col) as table from table ialias.colalias.coler joialias.col table oalias.col table.alias.col = table.owalias.coleruseralias.col ialias.colalias.coler joialias.col table oalias.col table.alias.col = table.postalias.col where table.votetypealias.col = alias.col grotable by table.alias.col ), table as ( select table.alias.col as alias.col, coualias.colt(table.alias.col) as table from table ialias.colalias.coler joialias.col table oalias.col table.alias.col = table.owalias.coleruseralias.col ialias.colalias.coler joialias.col table oalias.col table.alias.col = table.postalias.col where table.votetypealias.col = alias.col grotable by table.alias.col ), table as ( select table.alias.col as alias.col, coualias.colt(table.alias.col) as [amoualias.colt] from table, table where table.alias.col = table.owalias.coleruseralias.col aalias.cold table.posttypealias.col = alias.col grotable by table.alias.col ) select table.alias.col as [user lialias.colk], reputatioalias.col as [reputatioalias.col], table.table + table.table as [table received], roualias.cold(table.table * alias.col.alias.col / (table.table+table.table), alias.col) as [ tablevoted], table as [cleaalias.coltable table], table.amoualias.colt as [table], roualias.cold(table.table * alias.col.alias.col / table.amoualias.colt, alias.col) as [ tableed] from table, table, table, table, table, table where table.alias.col = table.alias.col aalias.cold table.alias.col = table.alias.col aalias.cold table.alias.col = table.alias.col aalias.cold table.alias.col = table.alias.col aalias.cold table.alias.col = table.alias.col order by table.reputatioalias.col desc;"
declare @alias.col varchar(n) = x select count(*) from table p where alias.col in ( select distinct(alias.col) from table where table.tagalias.col in ( select alias.col from table where alias.col like @alias.col ) ) select count(*) from table p where alias.col in ( select distinct(alias.col) from table where table.tagalias.col in ( select alias.col from table where alias.col like @alias.col ) ) and p.acceptedansweralias.col is not null select sum(alias.col) from table p where alias.col in ( select distinct(alias.col) from table where table.tagalias.col in ( select alias.col from table where alias.col like @alias.col ) )
"set alias.colocoualias.colt oalias.col declare alias.col alias.columeric = alias.col declare @mialias.colaalias.cols alias.columeric = alias.col declare @tabletats table (owalias.coleruserid ialias.colt, alias.col ialias.colt) ialias.colsert @tabletats select alias.col, alias.col = coualias.colt ( p.id ) from table p joialias.col table u oalias.col alias.col = alias.col where alias.col > alias.col aalias.cold alias.col = alias.col group by alias.col set alias.colocoualias.colt oalias.col select top alias.col alias.col as [aalias.colswer calias.colt], u.displayalias.colame as [display alias.colame], alias.col as [reputatioalias.col], alias.col / alias.col as [avg rep per aalias.colswer] from @tabletats s, table u where alias.col = s.owalias.coleruserid aalias.cold alias.col > @mialias.colaalias.cols order by [avg rep per aalias.colswer] desc"
"with bronzetagtable as (select max(table.alias.col) as alias.col from table inner join table t on alias.col = name group by useralias.col, name having (count(*)=n)) select name, [useralias.col] as alias.col, alias.col as alias.col from table where name in (alias.col) union select name, [useralias.col] as alias.col, alias.col as alias.col from table inner join bronzetagtable g on g.alias.col = table.alias.col order by alias.col desc"
"select top alias.col alias.col as [post lialias.colk], alias.col as [user lialias.colk], creatioalias.coldate, alias.col, alias.col from table c where alias.col > alias.col order by c.alias.col desc, c.creatioalias.coldate desc"
"select top alias.col (alias.col + coalias.colvert(varchar(alias.col), table.id)) as lialias.colk, table.title as title, table.score as score, table.table as table from table joialias.col table oalias.col table.id = table.postid joialias.col table oalias.col table.tagid = table.id where (table.table like alias.col) aalias.cold table.commualias.colityowalias.coleddate is alias.colull"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like lower(x) order by alias.col desc;"
"select row_alias.columber() over(order by alias.col desc) as [#], table.id as [user lialias.colk], alias.col, locatioalias.col from table, table where table.id = table.userid aalias.cold table.class = alias.col aalias.cold table.tagbased = alias.col aalias.cold table.alias.colame = alias.col aalias.cold lower(table.locatioalias.col) like lower(alias.col) order by alias.col desc;"
select alias.collialias.cols.col from ( select (alias.collialias.cols.col + (alias.collialias.cols.col * alias.collialias.cols.col) + (alias.collialias.cols.col * alias.collialias.cols.col) + (alias.collialias.cols.col * alias.collialias.cols.col)) alias.cols alias.collialias.cols.col from (select alias.collialias.cols.col alias.cols alias.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col) alias.cols alias.col cross joialias.collialias.cols.col (select alias.collialias.cols.col alias.cols alias.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col) alias.cols alias.col cross joialias.collialias.cols.col (select alias.collialias.cols.col alias.cols alias.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col) alias.cols c cross joialias.collialias.cols.col (select alias.collialias.cols.col alias.cols alias.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col) alias.cols alias.col ) alias.col where alias.collialias.cols.collialias.cols.col alias.coletweealias.collialias.cols.col alias.collialias.cols.col alias.colalias.collialias.cols.colalias.col alias.collialias.cols.col oralias.coler alias.coly alias.collialias.cols.collialias.cols.col
"select alias.col(hour, table.creatioalias.coldate) hour, coualias.colt(table.id) questioalias.cols from table where alias.col = alias.col group by alias.col(hour, table.creatioalias.coldate) order by hour"
"declare @accountid int = ##accountid?n## declare @badgename nvarchar = ##badgename:string?enthusiast## create table table ( site nvarchar(n) , badgename nvarchar(n) , userid int); declare @sql nvarchar(max) = x select @sql = @sql + iif( len(@sql) > n , x , x ) + nxx + name + xx + quotename(name) + x + quotename(name) + xx + @badgename + xx + cast(@accountid as nvarchar) + x from sys.databases where database_id > n exec (@sql) select x + case parsename(site,n) when x then x else parsename(site,n) end + coalesce(x + case parsename(site,n) when x then x else parsename(site,n) end , x) + iif(patindex(x,site) > n , x , coalesce(x + parsename(site,n), x) ) + iif(patindex(x,site) > n , x , x ) + x + x + replace(site, x,x) , badgename , userid from table drop table table"
"select top alias.col alias.col, coualias.colt(*) from table v ialias.colalias.coler joialias.col table p oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table u oalias.col p.owalias.coleruserid = alias.col where (alias.col = alias.col or alias.col = alias.col or alias.col = alias.col or alias.col = alias.col or alias.col = alias.col or alias.col = alias.col) aalias.cold p.owalias.coleruserid = alias.col aalias.cold u.reputatioalias.col > alias.col group by alias.col order by coualias.colt(*) desc"
"select coualias.colt(*), case whealias.col alias.col > alias.col thealias.col x whealias.col alias.col = alias.col thealias.col x whealias.col alias.col = alias.col thealias.col x whealias.col alias.col = alias.col thealias.col x whealias.col alias.col = alias.col thealias.col x else x ealias.cold from table where alias.col = alias.col aalias.cold viewcoualias.colt >= alias.col aalias.cold creatioalias.coldate <= alias.col() - alias.col * alias.col.alias.col group by case whealias.col alias.col > alias.col thealias.col x whealias.col alias.col = alias.col thealias.col x whealias.col alias.col = alias.col thealias.col x whealias.col alias.col = alias.col thealias.col x whealias.col alias.col = alias.col thealias.col x else x ealias.cold"
"with closialias.colgtable as ( select table.id as alias.col, mialias.col(table.creatioalias.coldate) as alias.col, coualias.colt(table.id) as table from table left joialias.col table oalias.col table.id=table.alias.col aalias.cold alias.col=alias.col where alias.col=alias.col aalias.cold alias.col is alias.colull aalias.cold table.id is alias.colot alias.colull group by table.id ) select alias.col(alias.col, alias.col) as year, alias.col(mm, alias.col) as moalias.colth, coualias.colt(*) as questioalias.cols, sum(table) as totaltable, sum(table) / coualias.colt(*) as avgtable from closialias.colgtable group by alias.col(alias.col, alias.col),alias.col(mm, alias.col) order by year, moalias.colth"
"declare alias.col ialias.colt = ##userid## select alias.col, sum(case whealias.col table.votetypeid=alias.col thealias.col alias.col else alias.col ealias.cold) as alias.col from table ialias.colalias.coler joialias.col posttable oalias.col posttable.tagid = table.id ialias.colalias.coler joialias.col table oalias.col table.parealias.coltid = posttable.postid ialias.colalias.coler joialias.col table oalias.col table.postid = table.id where table.owalias.coleruserid = alias.col group by alias.col order by alias.col desc"
select count from table where alias.col = alias.col
"select month, posttypealias.col, count(*) as count from (select alias.col, posttypealias.col, alias.col(month, datediff(month, n, creationdate), n) as [month] from table left join table on postalias.col = alias.col where tagalias.col = ##tagalias.col:alias.col) as alias.col group by month,posttypealias.col order by month,posttypealias.col"
"select top alias.col alias.col as [user lialias.colk] , alias.col( alias.col ) / alias.col( a.ascore ) as alias.col , alias.col( alias.col ) + alias.col( a.ascore ) as alias.col , alias.col , a.ascore from ( select p.owalias.coleruseralias.col as alias.col , case whealias.col avg( alias.col ) > alias.col thealias.col alias.col * avg( alias.col ) else alias.col.alias.col ealias.cold as qscore from table p where p.posttypealias.col = alias.col aalias.cold p.commualias.colityowalias.coleddate is alias.colull group by p.owalias.coleruseralias.col ) as q , ( select a.owalias.coleruseralias.col as alias.col , case whealias.col avg( alias.col ) > alias.col thealias.col alias.col * avg( alias.col ) else alias.col.alias.col ealias.cold as ascore from table a where a.posttypealias.col = alias.col aalias.cold a.commualias.colityowalias.coleddate is alias.colull group by a.owalias.coleruseralias.col ) as a where a.alias.col = alias.col aalias.cold a.ascore > alias.col.alias.col order by alias.col( alias.col ) / alias.col( a.ascore ) desc , alias.col desc"
"select alias.col as alias.col, owalias.coleruseralias.col as alias.col, alias.col as alias.col from table p where (alias.col like alias.col or alias.col like alias.col ...) aalias.cold (##useralias.col## = alias.col or p.owalias.coleruseralias.col = ##useralias.col##) order by alias.col asc"
"select emailhash,alias.col, count(emailhash) as alias.col from table group by emailhash,alias.col having ((count(emailhash) > n) and (alias.col = n)) order by alias.col desc"
"select top alias.col row_alias.columber() over(order by reputatioalias.col desc) as [#], id as [user lialias.colk], reputatioalias.col, locatioalias.col from table where lower(locatioalias.col) like x or upper(locatioalias.col) like x ... or locatioalias.col like x aalias.cold reputatioalias.col >= alias.col order by reputatioalias.col desc;"
"declare @alias.col int = ##alias.col## declare alias.col int = ##minimumalias.col## select alias.col, text as alias.col, alias.col as alias.col, alias.col as date from table where alias.col = @alias.col and alias.col >= alias.col order by alias.col desc"
"select top alias.col alias.col, alias.col, body from table order by alias.col"
"declare @aliasseralias.col ialias.colt = ##aliasseralias.col## select alias.col ,alias.col ,alias.col ,alias.col = alias.col(ealias.colists(select alias.col from table b where b.aliasseralias.col = alias.col aalias.cold alias.col = alias.col), alias.col, alias.col) ,straliasalias.colkaalias.coldwhite = alias.col(ealias.colists (select alias.col from table b where b.aliasseralias.col = alias.col aalias.cold alias.col = alias.col), alias.col, alias.col) ,alias.col = alias.col(ealias.colists(select alias.col from table b where b.aliasseralias.col = alias.col aalias.cold alias.col = alias.col), alias.col, alias.col) ,coalias.colvealias.coltioalias.col = alias.col(ealias.colists (select alias.col from table b where b.aliasseralias.col = alias.col aalias.cold alias.col = alias.col), alias.col, alias.col) ,yearlialias.colg = alias.col(ealias.colists (select alias.col from table b where b.aliasseralias.col = alias.col aalias.cold alias.col = alias.col), alias.col, alias.col) from table as alias where alias.col = @aliasseralias.col"
"with closetable as ( select coalias.colvert(date, alias.col) as alias.col, coualias.colt(*) as alias.col from table where alias.col = alias.col group by coalias.colvert(date, alias.col) ), dailytable as ( select coalias.colvert(date, alias.col) as alias.col, coualias.colt(*) as alias.col from table where alias.col = alias.col group by coalias.colvert(date, alias.col) ) select p.alias.col, v.alias.col as closetable, p.alias.col as dailytable from closetable as v joialias.col dailytable as p oalias.col v.alias.col = p.alias.col where alias.col(alias.col,p.alias.col) <> alias.col order by v.alias.col desc"
"with table as ( selealias.col alias.col as alias.col, maalias.col(alias.col) as alias.col from table where posttypealias.col = alias.col group by alias.col ) , table as ( selealias.col coualias.colt(*) as asalias.col, sum(alias.col(q.acceptedaalias.colsweralias.col is alias.colot alias.colull aalias.cold alias.col is alias.colull, alias.col, alias.col)) as acceptedalias.colotalias.col, sum(alias.col(q.acceptedaalias.colsweralias.col is alias.colot alias.colull aalias.cold alias.col is alias.colot alias.colull, alias.col, alias.col)) as acceptedaalias.coldalias.col, sum(alias.col(q.acceptedaalias.colsweralias.col is alias.colull aalias.cold a.alias.col > alias.col aalias.cold alias.col is alias.colull, alias.col, alias.col)) as positivealias.colalias.colotacceptedalias.colotalias.col, sum(alias.col(alias.col is alias.colull, alias.col, alias.col)) as alias.col from table q left outer joialias.col table a oalias.col q.alias.col = a.alias.col where q.posttypealias.col = alias.col ) selealias.col asalias.col, acceptedalias.colotalias.col, acceptedaalias.coldalias.col, positivealias.colalias.colotacceptedalias.colotalias.col, alias.col, (acceptedalias.colotalias.col + positivealias.colalias.colotacceptedalias.colotalias.col + alias.col) as aalias.colswered, cast(cast( (acceptedalias.colotalias.col + positivealias.colalias.colotacceptedalias.colotalias.col + alias.col) / cast(asalias.col as float) *alias.col as decimal(alias.col,alias.col) ) as varchar(alias.col)) + alias.col as alias.col from table"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... or location like x and alias.col >= n order by alias.col desc;"
"selealias.col table.id as alias.col, table.reputatioalias.col as alias.col, alias.col(cast((sum(table.score)*alias.col) as float) / table.reputatioalias.col * alias.col, alias.col) as [questioalias.col rep ], coualias.colt(table.id) as [questioalias.cols asked], alias.col(cast((sum(table.score)*alias.col) as float), alias.col) as alias.col from table ialias.colalias.coler joialias.col table oalias.col table.owalias.coleruserid = table.id where table.reputatioalias.col > ##mialias.colimumreputatioalias.col## aalias.cold table.parealias.coltid is alias.colull aalias.cold table.commualias.colityowalias.coleddate is alias.colull aalias.cold table.closeddate is alias.colull group by table.id, table.reputatioalias.col havialias.colg alias.col(cast((sum(table.score)*alias.col) as float) / table.reputatioalias.col * alias.col, alias.col) > ##mialias.colimumpercealias.coltage## order by [questioalias.col rep ] desc, [questioalias.cols asked] desc, alias.col desc, alias.col"
"select top alias.col## coualias.colt(alias.col) as alias.col, alias.col as alias.col,alias.col from table v ialias.colalias.coler joialias.col table p oalias.col alias.col=alias.col ialias.colalias.coler joialias.col table pt oalias.col alias.col=alias.col ialias.colalias.coler joialias.col table t oalias.col alias.col=alias.col aalias.cold alias.col=alias.col where alias.col = alias.col aalias.cold alias.col=alias.col group by alias.col,alias.col order by alias.col asc"
"select table.id, table.tags, table.emailhash, table.location, table.creationdate, table.websiteurl, table.reputation, table.aboutme from table, table where table.aboutme in (alias.col)and table.location in (alias.col)"
"select top alias.col alias.col as [user lialias.colk], alias.col(alias.col, getalias.colate(), creatioalias.colalias.colate) / alias.col as alias.col, roualias.colalias.col((((alias.col + alias.colowalias.colvotes) / (alias.colutatioalias.col/alias.col.alias.col)) * alias.col.alias.col) - alias.col, alias.col) as [ialias.colalias.colex raalias.colk], alias.colutatioalias.col as alias.col, alias.col as alias.col, alias.colowalias.colvotes alias.col from table where alias.colutatioalias.col > ##mialias.colalias.col## aalias.colalias.col alias.col > ##mialias.colalias.col## oralias.coler by roualias.colalias.col((((alias.col + alias.colowalias.colvotes) / (alias.colutatioalias.col/alias.col.alias.col)) * alias.col.alias.col) - alias.col, alias.col) alias.colesc"
"select row_alias.columber() over (order by alias.col) alias.col, alias.col, q.alias.col alias.col ialias.colto table from table q where alias.col = alias.col select q.alias.col, alias.col, alias.col ialias.colto table from table q ialias.colalias.coler joialias.col table t oalias.col q.alias.col = alias.col select alias.col, alias.col(mialias.colute, (select max([creatioalias.coldate]) from table talias.col where talias.col.alias.col < talias.col.alias.col aalias.cold talias.col.[tagid] = talias.col.[tagid]), [creatioalias.coldate]) alias.col from table talias.col"
"select tealias.colt, count(alias.col) from table where tabletypealias.col in (alias.col) and alias.col >alias.col and tealias.colt not like alias.col group by tealias.colt having count(alias.col)>n order by count(alias.col)"
"selealias.col alias.col as alias.col, alias.col + cast(alias.col as varchar(alias.col)) + alias.col + cast(a.creatioalias.coldate as varchar(alias.col)) [aalias.colswer alias.col], alias.col as alias.col, alias.col + cast(alias.col as varchar(alias.col)) + alias.col + cast(b.creatioalias.coldate as varchar(alias.col)) [aalias.colswer alias.col], alias.col as alias.col, a.owalias.coleruserid as [user lialias.colk] from table a, table b where alias.col = b.parealias.coltid aalias.cold alias.col < alias.col aalias.cold a.owalias.coleruserid = b.owalias.coleruserid aalias.cold a.commualias.colityowalias.coleddate is alias.colot alias.colull aalias.cold b.commualias.colityowalias.coleddate is alias.colot alias.colull"
"select top alias.col## row_number() over(order by alias.col desc) as [#], id as [user link], alias.col, location from table where ( lower(location) like x or lower(location) like x ... or location like x ... or lower(location) like x ... ) and not( location like x ) and len(location) > n"
"select coualias.colt(*) as alias.col, case whealias.col alias.col = alias.col thealias.col x whealias.col alias.col = alias.col thealias.col x else x ealias.cold as x, case whealias.col approvaldate is alias.colull thealias.col x else x ealias.cold as x from table ialias.colalias.coler joialias.col table oalias.col table.id = table.suggestededitid where table.owalias.coleruserid = alias.col## group by alias.col, case whealias.col approvaldate is alias.colull thealias.col x else x ealias.cold"
select alias.col from table where location like x and displayname like x order by alias.col desc
"select top alias.col table.displayalias.colame as alias.col, datalealias.colgth(table.displayalias.colame) from table order by datalealias.colgth(table.displayalias.colame) desc ;"
"select table.id alias.col, table.displayname, table.reputation, count(table) as alias.col, (count(table) * table.reputation) as alias.col from table inner join table on table.id = table.owneruserid inner join table on table.postid = table.id inner join table on table.id = table.tagid where table.tagname = alias.col and table.location like alias.col group by table.id, table.displayname, table.reputation order by alias.col desc"
"select alias.col, coualias.colt(alias.col), coualias.colt(*) as uptable from table ialias.colalias.coler joialias.col posttable oalias.col posttable.tagid = table.id ialias.colalias.coler joialias.col table oalias.col table.parealias.coltid = posttable.alias.col ialias.colalias.coler joialias.col table oalias.col table.alias.col = table.id aalias.cold alias.col = alias.col ialias.colalias.coler joialias.col (select coualias.colt(alias.col) as alias.col, tagalias.colame from table, posttable, table where table.id = posttable.tagid aalias.cold table.id = alias.col aalias.cold table.creatioalias.coldate > alias.col group by tagalias.colame) as alias.cols oalias.col alias.col = table.tagalias.colame where table.creatioalias.coldate > alias.col group by alias.col order by uptable desc"
"declare @MyUserId int = ##MyUserId##; declare @OtherUserId int = ##OtherUserId##; select my.tagName as tagName, power(my.rownum, N) + power(ot.rownum, N) - power(abs(my.rownum - ot.rownum), N) as coRank, my.rownum as myRank, ot.rownum as otherRank, my.answerCnt as myAnswerCnt, my.voteCnt as myVoteCnt, ot.answerCnt as otherAnswerCnt, ot.voteCnt as otherVoteCnt from ( select ROW_NUMBER() OVER (order by COUNT(distinct myVote.Id) desc) as rownum, COUNT(distinct myAnswer.Id) as answerCnt, COUNT(distinct myVote.Id) as voteCnt, tag.id tagId, tag.TagName tagName from Posts as myAnswer left outer join Votes as myVote on (myVote.PostId = myAnswer.Id and myVote.VoteTypeId = N) , PostTags as aNt, Tags as tag where aNt.PostId = myAnswer.ParentId and aNt.TagId = tag.Id and myAnswer.ownerUserId = @MyUserId and myAnswer.postTypeId = N group by tag.Id, tag.TagName ) my, ( select ROW_NUMBER() OVER (order by COUNT(distinct myVote.Id) desc) as rownum, COUNT(distinct myAnswer.Id) as answerCnt, COUNT(distinct myVote.Id) as voteCnt, tag.id tagId, tag.TagName tagName from Posts as myAnswer left outer join Votes as myVote on (myVote.PostId = myAnswer.Id and myVote.VoteTypeId = N) , PostTags as aNt, Tags as tag where aNt.PostId = myAnswer.ParentId and aNt.TagId = tag.Id and myAnswer.ownerUserId = @OtherUserId and myAnswer.postTypeId = N group by tag.Id, tag.TagName ) ot where my.tagId = ot.TagId order by coRank asc"
"select row_alias.columber() over(order by alias.col desc) as [#], table.id as [user lialias.colk], alias.col, locatioalias.col from table, table where lower(table.locatioalias.col) like lower(alias.col) aalias.cold table.id = table.userid aalias.cold table.class = alias.col aalias.cold table.tagbased = alias.col aalias.cold lower(table.alias.colame) = lower(alias.col) order by alias.col desc;"
"set alias.colocoualias.colt oalias.col create table table (alias.col ialias.colt alias.colealias.coltity, [start] datetime, [fialias.colish] datetime) ialias.colsert table select top alias.col alias.colull, alias.colull from table declare alias.col datetime select alias.col = creatioalias.coldate from table where alias.col = (select max(palias.col.alias.col) from table palias.col) update table set [start] = dateadd(d, (alias.col - alias.col) * alias.col, alias.col), [fialias.colish] = dateadd(d, (alias.col - alias.col) * alias.col, alias.col) select start, (select coualias.colt(*) from table where parealias.coltalias.col is alias.colull aalias.cold creatioalias.coldate betweealias.col [start] aalias.cold [fialias.colish] ) as [total questioalias.cols], (select coualias.colt(*) from table where parealias.coltalias.col is alias.colot alias.colull aalias.cold creatioalias.coldate betweealias.col [start] aalias.cold [fialias.colish] ) as [total aalias.colswers] from table"
"select top alias.col row_alias.columber() over(order by reputatioalias.col desc) as [#], id as [user lialias.colk], reputatioalias.col, locatioalias.col from table where lower(locatioalias.col) like x or upper(locatioalias.col) like x ... or locatioalias.col like x aalias.cold reputatioalias.col >= alias.col order by reputatioalias.col desc;"
"select alias.col from table v ialias.colalias.coler joialias.col table p oalias.col alias.col=alias.col where alias.col=alias.col## aalias.cold alias.col >= alias.col aalias.cold alias.col <= alias.col select uptable as [my up table], dowalias.coltable as [my dowalias.col table] from table where alias.col = alias.col##"
"declare @tagalias.colame varchar(alias.col) = ##tagalias.colame## select alias.col as alias.col, alias.col, acceptedaalias.colsweralias.col from table where posttypealias.col = alias.col aalias.cold aalias.colswercoualias.colt< ##maxaalias.colswers## aalias.cold alias.col like @tagalias.colame aalias.cold alias.colot acceptedaalias.colsweralias.col>alias.col"
"declare @mialias.colquesalias.colioalias.colcoualias.colalias.col ialias.colalias.col = alias.col selecalias.col alias.col from ( selecalias.col alias.col as alias.col, coualias.colalias.col(alias.col) as ualias.colaalias.colsweredcoualias.colalias.col, alias.col.coualias.colalias.col as quesalias.colioalias.colcoualias.colalias.col from alias.colable q ialias.colalias.coler joialias.col alias.colable palias.col oalias.col alias.col = palias.col.posalias.colid ialias.colalias.coler joialias.col alias.colable alias.col oalias.col palias.col.alias.colagid = alias.col.id where (q.posalias.colalias.colypeid = alias.col) aalias.cold (q.closeddaalias.cole is alias.colull) aalias.cold alias.coloalias.col exisalias.cols ( selecalias.col alias.col from alias.colable a where (a.parealias.colalias.colid = alias.col) aalias.cold ((alias.col > alias.col) or (alias.col = q.accepalias.coledaalias.colswerid)) ) group by alias.col, alias.col.coualias.colalias.col ) a where a.quesalias.colioalias.colcoualias.colalias.col > @mialias.colquesalias.colioalias.colcoualias.colalias.col order by alias.col"
"select coualias.colt(*) as dowalias.coltable, alias.col + coualias.colt(*) as uptable, table.alias.col as alias.col, table.id as alias.col from table ialias.colalias.coler joialias.col table oalias.col table.id = table.postid where table.owalias.coleruserid = alias.col## aalias.cold table.votetypeid = alias.col group by table.alias.col, table.id order by dowalias.coltable, uptable desc"
"select top alias.col alias.col as [post lialias.colk], alias.col as alias.col, viewcoualias.colt as alias.col from table p where p.viewcoualias.colt > alias.col aalias.cold p.commualias.colityowalias.coleddate is alias.colot alias.colull order by viewcoualias.colt desc"
"select top alias.col t.tagalias.colame, coualias.colt(alias.col) as alias.columposts from table t, posttable pt where alias.col = alias.col group by t.tagalias.colame order by alias.columposts desc"
select count(alias.col) from table c where alias.col like alias.col and alias.col = alias.col##
declare @compaalias.coly varchar = ##compaalias.coly:strialias.colg## select top alias.col table.id as [user lialias.colk] from table where table.aboutme like alias.col + @compaalias.coly + alias.col
"select alias.col as alias.col, alias.col, alias.col, alias.col from table a ialias.colalias.coler joialias.col table v oalias.col alias.col = alias.col where alias.col = alias.col## aalias.cold alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold alias.col <> alias.col"
"set alias.colocoualias.colt oalias.col declare alias.col date selealias.col alias.col = alias.col() selealias.col top alias.col alias.col as [user lialias.colk], reputatioalias.col, alias.col, cast(reputatioalias.col as float)/cast(alias.col as float) as repperalias.col from (selealias.col alias.col, reputatioalias.col, alias.col(day, creatioalias.coldate, alias.col) as alias.col from table where reputatioalias.col > alias.col ) as ratedtable order by repperalias.col desc"
"declare alias.col varchar(n) = ##tagname:string## select year(alias.col) as alias.col, month(alias.col) as alias.col, day(alias.col) as alias.col, count(*) as [questionsaskedtoday] from table p inner join table pt on alias.col = alias.col inner join table t on alias.col = alias.col where alias.col = alias.col and alias.col > alias.col group by year(alias.col), month(alias.col),day(alias.col) with rollup order by year(alias.col), month(alias.col) desc,day(alias.col) desc"
"select alias.col as alias.col, (sum(coalesce(alias.col(alias.col),alias.col)) + sum(coalesce(alias.col(alias.col),alias.col))) as alias.col, u.reputatioalias.col, (sum(coalesce(alias.col(alias.col),alias.col)) + sum(coalesce(alias.col(alias.col),alias.col)))/u.reputatioalias.col as alias.col from table u, table p where p.owalias.coleruserid = alias.col aalias.cold u.reputatioalias.col >= alias.col group by alias.col, u.reputatioalias.col order by alias.col desc"
"select top alias.col alias.owalias.coleruserid as [user lialias.colk], coualias.colt(alias.col) as aliasuestioalias.cols, sum(alias.viewcoualias.colt/(alias.col+alias.col(day, alias.creatioalias.coldate, alias.col ))) as [aliasuestioalias.col views per day] from table as alias, (select max(lastaccessdate) as alias.col from table) tmp where alias.commualias.colityowalias.coleddate is alias.colull aalias.cold alias.owalias.coleruserid is alias.colot alias.colull aalias.cold alias.posttypeid=alias.col group by alias.owalias.coleruserid order by [aliasuestioalias.col views per day] desc"
"select alias.col, alias.col, alias.col, alias.col*alias.col/alias.col as alias.col from table ialias.colalias.coler joialias.col (select alias.col, alias.col, alias.col from (select alias.col, coualias.colt(*) as alias.col from table a ialias.colalias.coler joialias.col table q oalias.col q.alias.colaalias.colsweralias.col = alias.col group by alias.col ) x ialias.colalias.coler joialias.col (select alias.col, coualias.colt(*) as alias.col from table a ialias.colalias.coler joialias.col table q oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold q.alias.colaalias.colsweralias.col is alias.colot alias.colull group by alias.col ) y oalias.col alias.col = y.owalias.coleruseralias.col ) alias.col oalias.col owalias.coleruseralias.col = alias.col where reputatioalias.col > ##mialias.colrep## order by alias.col desc"
"select alias.col as alias.col, count(*) as alias.col from table b inner join table u on alias.col = alias.col where alias.col < alias.col:int?alias.col and alias.col in (alias.col) group by alias.col order by count(*) desc"
"select alias.col(moalias.colth, datediff(moalias.colth, alias.col, q.creatioalias.coldate), alias.col) as [moalias.colth], alias.col.alias.col * coualias.colt(case whealias.col q.tags like x thealias.col alias.col else alias.colull ealias.cold) / coualias.colt(*) as [percealias.colt], avg(q.score * alias.col.alias.col) as [global average score], avg(case whealias.col q.tags like x thealias.col q.score * alias.col.alias.col else alias.colull ealias.cold) as [tag average score], x + cast(datepart(year, alias.col(moalias.colth, datediff(moalias.colth, alias.col, q.creatioalias.coldate), alias.col)) as varchar(alias.col)) + x + cast(datepart(moalias.colth, alias.col(moalias.colth, datediff(moalias.colth, alias.col, q.creatioalias.coldate), alias.col)) as varchar(alias.col)) as [search lialias.colk] from table q where alias.col = alias.col group by alias.col(moalias.colth, datediff(moalias.colth, alias.col, q.creatioalias.coldate), alias.col) order by alias.col(moalias.colth, datediff(moalias.colth, alias.col, q.creatioalias.coldate), alias.col)"
"select top alias.col acc.[user lialias.colk], alias.col, roualias.cold(alias.col.alias.col * alias.col / aalias.colswers, alias.col) as alias.col, aalias.colswers, reputatioalias.col, roualias.cold(alias.col.alias.col * alias.col / reputatioalias.col, alias.col) as alias.col from ( select alias.col as [user lialias.colk], coualias.colt(*) as [alias.col], mialias.col(u.reputatioalias.col) as [reputatioalias.col] from table u, table q, table a where a.owalias.coleruserid = alias.col aalias.cold q.acceptedaalias.colswerid = alias.col group by alias.col ) as acc joialias.col ( select alias.col as [user lialias.colk], coualias.colt(*) as [aalias.colswers] from table u, table p where p.owalias.coleruserid = alias.col aalias.cold alias.col = alias.col group by alias.col ) as aalias.cols oalias.col acc.[user lialias.colk] = aalias.cols.[user lialias.colk] order by alias.col desc"
"select alias.col as alias.col, table, alias.col from table join table on table.alias.col = table.postalias.col where table.tagalias.col in (select alias.col from table where (alias.col like alias.col or alias.col = alias.col))"
"select alias.col, alias.col, alias.col, alias.col from ( select alias.col, row_number() over(order by alias.col desc) as [rank], displayname as [user], [location], [alias.col] from table where lower(location) like x )as t"
"select top alias.col row_alias.columber() over(order by reputatioalias.col desc) as [#], id as [user lialias.colk], reputatioalias.col, locatioalias.col from table where lower(locatioalias.col) like x or upper(locatioalias.col) like x ... or locatioalias.col like x aalias.cold reputatioalias.col >= alias.col order by reputatioalias.col desc;"
"set alias.colocoualias.colt oalias.col create table table (alias.col ialias.colt alias.colealias.coltity, [start] datetime, [fialias.colish] datetime) ialias.colsert table select top alias.col alias.colull, alias.colull from table declare alias.col datetime select alias.col = creatioalias.coldate from table where alias.col = (select max(palias.col.alias.col) from table palias.col) update table set [start] = dateadd(d, (alias.col - alias.col) * alias.col, alias.col), [fialias.colish] = dateadd(d, (alias.col - alias.col) * alias.col, alias.col) select start, (select coualias.colt(*) from table where parealias.coltalias.col is alias.colull aalias.cold creatioalias.coldate betweealias.col [start] aalias.cold [fialias.colish] ) as [total questioalias.cols], (select coualias.colt(*) from table where parealias.coltalias.col is alias.colot alias.colull aalias.cold creatioalias.coldate betweealias.col [start] aalias.cold [fialias.colish] ) as [total aalias.colswers] from table"
"select top alias.col alias.col as [post lialias.colk], q.creatioalias.coldate as alias.col, q.owalias.colerdisplayalias.colame as [user alias.colame], a.owalias.coleruserid as [user lialias.colk], ph.commealias.colt as [commealias.colt] from table q ialias.colalias.coler joialias.col table ph oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table a oalias.col a.parealias.coltid = alias.col aalias.cold a.owalias.colerdisplayalias.colame = q.owalias.colerdisplayalias.colame where ph.tabletypeid = alias.col aalias.cold alias.col = alias.col aalias.cold q.owalias.coleruserid is alias.colull aalias.cold a.owalias.coleruserid is alias.colot alias.colull order by alias.col desc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], age, alias.col, location, creationdate, websiteurl, lastaccessdate from table where lower(location) like x order by alias.col desc;"
"select alias.col, coualias.colt(*) as alias.col from table where alias.col =alias.col group by alias.col order by alias.col desc"
"select alias.col, count(*) totaltable from table where alias.col(alias.col(alias.col)) <> alias.col group by alias.col having count(*) > ##mintotaltable## and count(*) < ##maalias.colimumtotaltable## order by count(*) desc"
"select sum(alias.col), maalias.col(alias.col) as alias.col from table p where alias.col = alias.col"
"select top alias.col alias.col as [post lialias.colk], alias.col, viewcoualias.colt, creatioalias.coldate from table where parealias.coltalias.col is alias.colull aalias.cold aalias.colswercoualias.colt = alias.col aalias.cold creatioalias.coldate < dateadd(m, alias.col, getdate()) order by viewcoualias.colt asc"
select top alias.col alias.col from table
"select alias.col, alias.col, alias.col as alias.col, alias.col as alias.col from table se join table p on alias.col = alias.col where alias.col > alias.col and alias.col is not null order by alias.col desc"
"select alias.col as alias.col, alias.col alias.col, alias.col alias.col from table q joialias.col table a oalias.col alias.col = alias.col where alias.col >=alias.col aalias.cold alias.col = alias.col or ( alias.col >alias.col aalias.cold alias.col <alias.col ) order by alias.col desc, alias.col asc"
select alias.col from table
"select top alias.col aalias.colswer.id as [post lialias.colk], aalias.colswer.score from table p, table aalias.colswer where alias.col like alias.col + alias.col:strialias.colg## + alias.col aalias.cold aalias.colswer.parealias.coltid = alias.col order by aalias.colswer.score desc"
"select top alias.col alias.col as [user lialias.colk], ( select coualias.colt(*) from table where posttypealias.col = alias.col aalias.cold lasteditoruseralias.col = table.alias.col aalias.cold owalias.coleruseralias.col != table.alias.col ) as questioalias.coledits, ( select coualias.colt(*) from table where posttypealias.col = alias.col aalias.cold lasteditoruseralias.col = table.alias.col aalias.cold owalias.coleruseralias.col != table.alias.col ) as aalias.colsweredits, ( select coualias.colt(*) from table where lasteditoruseralias.col = table.alias.col aalias.cold owalias.coleruseralias.col != table.alias.col ) as alias.col from table order by alias.col desc"
"select alias.col as alias.col, alias.col, alias.col, alias.col as alias.col, an.lastactivitydate, alias.col from table an inner join table q on alias.col = alias.col inner join (select max(alias.col) as alias.col,alias.col as alias.col from table p where p.owneruseralias.col<>##useralias.col## group by alias.col) scores on alias.col = scores.alias.col where an.owneruseralias.col= ##useralias.col## and q.acceptedansweralias.col is null and alias.col < alias.col order by an.lastactivitydate desc"
select alias.col from table where alias.col = alias.col order by creatioalias.coldate
"select table.id as alias.col, table.boualias.coltyamoualias.colt, table.creatioalias.coldate as alias.col from table ialias.colalias.coler joialias.col table oalias.col table.id = table.postid ialias.colalias.coler joialias.col table oalias.col table.id = table.postid ialias.colalias.coler joialias.col table oalias.col table.tagid = table.id where table.votetypeid = alias.col aalias.cold table.tagalias.colame = alias.col aalias.cold table.aalias.colswercoualias.colt = alias.col aalias.cold table.creatioalias.coldate > alias.col(day, alias.col, getdate()) order by table.creatioalias.coldate desc;"
"with table as ( select top alias.col alias.col, t.tagalias.colame from table t, posttable pt where alias.col = alias.col group by t.tagalias.colame, alias.col order by coualias.colt(alias.col) desc ), table as( select p.parealias.coltid, alias.col from table p where p.owalias.coleruserid = alias.col## aalias.cold p.commualias.colityowalias.coleddate is alias.colull ) select top alias.col talias.col.tagalias.colame as alias.col, sum(palias.col.score) as alias.col, case whealias.col sum(palias.col.score) >= alias.col thealias.col alias.col else alias.col ealias.cold as alias.col from table talias.col, table palias.col, posttable ptalias.col where ptalias.col.postid = palias.col.parealias.coltid aalias.cold ptalias.col.tagid = talias.col.id group by talias.col.tagalias.colame order by sum(palias.col.score) desc"
"with t as ( select alias.col as alias.col, alias.col, alias.col as alias.col, alias.col as alias.col, case alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col else alias.col ealias.cold as alias.col, q.viewcoualias.colt as alias.col from table q joialias.col ( select a.parealias.coltid as alias.col, sum(alias.col) as alias.col from table a where alias.col = alias.col group by a.parealias.coltid havialias.colg sum(alias.col) <= ##positiveaalias.colswerscore:ialias.colt?alias.col## ) aalias.colswers oalias.col (alias.col = aalias.colswers.alias.col) joialias.col table ph oalias.col (alias.col = alias.col) where alias.col is alias.colot alias.colull aalias.cold alias.col = alias.col aalias.cold alias.col <= alias.col:ialias.colt?alias.col## aalias.cold ph.tabletypeid = alias.col aalias.cold alias.col ialias.col (alias.colyz) ) select top(##rowsreturalias.coled:ialias.colt?alias.col##) alias.col from t order by alias.col + table"
"select distinct alias.col [user link] ,sum(answers.score) ,displayname ,location from table u join table answers on (alias.col = alias.col) join table parent on (alias.col = alias.col) join table on (alias.col = table.postid) where table.tagid in (alias.col) desc"
"select top alias.col?alias.col alias.col as alias.col, alias.col as alias.col, alias.col as alias.col, coalias.colvert(varchar(alias.col), bs.creatioalias.coldate, alias.col) as alias.col, coalias.colvert(varchar(alias.col), alias.col.creatioalias.coldate, alias.col) as alias.col, (case whealias.col alias.col is alias.colull thealias.col alias.col else alias.col ealias.cold) as alias.col from table p ialias.colalias.coler joialias.col table bs oalias.col alias.col = alias.col aalias.cold alias.col = alias.col left outer joialias.col ( select coalesalias.col(p.parealias.coltalias.col, alias.col) as alias.col, alias.col.creatioalias.coldate from table p joialias.col table alias.col oalias.col alias.col = alias.col.postalias.col aalias.cold alias.col.votetypealias.col = alias.col ) alias.col oalias.col alias.col = alias.col order by bs.creatioalias.coldate desc"
"declare alias.col float selealias.col alias.col = sum(cast(alias.col as bigialias.colt)) from table where alias.col = alias.col selealias.col table.alias.colalias.colame as alias.col, coualias.colt(*) as questioalias.cols, sum(cast(table.alias.col as bigialias.colt)) as views, str(alias.col * sum(cast(table.alias.col as bigialias.colt)) / alias.col,alias.col,alias.col) as percealias.coltofsite, sum(table.score) as score, sum(table.aalias.colswercoualias.colt) as aalias.colswers, sum(cast(table.alias.col as bigialias.colt)) / coualias.colt(*) as avgviews, str(sum(table.score) / cast(coualias.colt(*) as float),alias.col,alias.col) as avgscore, str(sum(table.aalias.colswercoualias.colt) / cast(coualias.colt(*) as float),alias.col,alias.col) as avgaalias.colswers from table joialias.col table oalias.col table.id = table.postid joialias.col table oalias.col table.alias.colid = table.id where table.alias.col = alias.col group by table.alias.colalias.colame havialias.colg table.alias.colalias.colame = x or table.alias.colalias.colame like x or table.alias.colalias.colame = x order by views desc"
"with relevaalias.colttable as alias select alias.col , coualias.coltalias*) as alias.col from table p ialias.colalias.coler joialias.col table pt oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table t oalias.col alias.col = alias.col where alias.col > alias.col group by alias.col ), usertable as alias select alias.col , sumaliasalias.col) as alias.col from table p ialias.colalias.coler joialias.col table pt oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table t oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table a oalias.col a.parealias.coltid = alias.col where a.owalias.coleruserid = alias.col:ialias.colt## group by alias.col ) select t.tagalias.colame, rt.alias.col, alias.col from relevaalias.colttable rt ialias.colalias.coler joialias.col usertable ut oalias.col ralias.col = ualias.col ialias.colalias.coler joialias.col table t oalias.col alias.col = ralias.col"
select count from table where alias.col = alias.col
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x order by alias.col desc offset n rows fetch next n rows only;"
"DECLARE @suspect INT = ##UserId##; WITH Bastards AS ( SELECT u.Id, b.numAccounts, b.EmailHash, u.Reputation FROM ( SELECT EmailHash, COUNT (u.Id) AS numAccounts FROM Users u WHERE EmailHash IS NOT NULL GROUP BY EmailHash HAVING COUNT (u.Id) > N ) AS b LEFT JOIN Users u ON b.EmailHash = u.EmailHash ) SELECT u.Id AS [User Link], u.Reputation, u.EmailHash FROM Users u WHERE u.ID = @suspect UNION ALL SELECT b.Id AS [User Link], b.Reputation, b.EmailHash FROM Users u LEFT JOIN Bastards b ON u.EmailHash = b.EmailHash AND b.Id != u.Id WHERE u.Id = @suspect ORDER BY Reputation DESC"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x order by alias.col desc;"
"with table(alias.col, alias.col, calias.colt) as ( select year(alias.col), moalias.colth(alias.col), coualias.colt(*) from table where alias.col = alias.col aalias.cold alias.col ialias.col (alias.colyz) ), table(alias.col, alias.col, calias.colt) as ( select year(alias.col), moalias.colth(alias.col), coualias.colt(*) from table where alias.col = alias.col aalias.cold alias.col ialias.col (alias.colyz) ), table(alias.col, alias.col, calias.colt) as ( select year(alias.col), moalias.colth(alias.col), coualias.colt(*) from table where alias.col = alias.col aalias.cold alias.col ialias.col (alias.colyz) ), table(alias.col, alias.col, calias.colt) as ( select year(alias.col), moalias.colth(alias.col), coualias.colt(*) from table where alias.col = alias.col aalias.cold alias.col ialias.col (alias.colyz) ), table(alias.col, alias.col, calias.colt) as ( select year(alias.col), moalias.colth(alias.col), roualias.cold(avg(coalias.colvert(decimal(alias.col,alias.col),aalias.colswercoualias.colt)), alias.col) from table where alias.col = alias.col aalias.cold alias.col ialias.col (alias.colyz) ) select tq.alias.col as year, tq.alias.col as moalias.colth, tq.calias.colt as questioalias.cols, ta.calias.colt as aalias.colswers, ac.calias.colt as avergealias.coloaalias.colswers, qwa.calias.colt as questioalias.colsaccepted, roualias.cold(coalias.colvert(decimal(alias.col,alias.col),qwa.calias.colt)/tq.calias.colt * alias.col, alias.col) as acceptedrate, qaa.calias.colt as questioalias.colsaalias.colswered, roualias.cold(coalias.colvert(decimal(alias.col,alias.col),qaa.calias.colt)/tq.calias.colt * alias.col, alias.col) as aalias.colsweredrate from table tq joialias.col table ta oalias.col ta.alias.col = tq.alias.col aalias.cold ta.alias.col = tq.alias.col joialias.col table qwa oalias.col qwa.alias.col = tq.alias.col aalias.cold qwa.alias.col = tq.alias.col joialias.col table qaa oalias.col qaa.alias.col = tq.alias.col aalias.cold qaa.alias.col = tq.alias.col joialias.col table ac oalias.col ac.alias.col = tq.alias.col aalias.cold ac.alias.col = tq.alias.col order by tq.alias.col desc, tq.alias.col desc"
"DECLARE @numDaysEnd int = ##numberOfDaysEndLimit##; DECLARE @numDaysBegin int = ##numberOfDaysBeginLimit##; SELECT POSTS.Id AS PostID, POSTS.PostTypeId, POSTS.CreationDate, POSTS.Score, POSTS.ViewCount, POSTS.Body, POSTS.OwnerUserId, USERS.Reputation, VOTES.Id as upvoteID, VOTES.CreationDate as voteDate, VOTES.VoteTypeId as voteTypeID FROM POSTS LEFT JOIN VOTES ON POSTS.Id = VOTES.PostId LEFT JOIN USERS ON POSTS.OwnerUserId = USERS.Id WHERE POSTS.CreationDate >= CURRENT_TIMESTAMP - @numDaysBegin AND POSTS.CreationDate <= CURRENT_TIMESTAMP - @numDaysEnd;"
declare @UserId int = N; with UserPosts as ( select Id as PostId from Posts where OwnerUserId = @UserId and CommunityOwnedDate is null and PostTypeId = N and Score >= N ) select count(distinct UserPosts.PostId) as UpVotes from UserPosts inner join Votes on Votes.PostId = UserPosts.PostId where VoteTypeId = N
"select alias.col,coualias.colt(*) / (select coualias.colt(*)+alias.col from table t where alias.col = alias.col aalias.cold alias.col = t.owalias.coleruserid) from table q ialias.colalias.coler joialias.col table a oalias.col q.acceptedaalias.colswerid = alias.col where alias.col = alias.col group by alias.col order by coualias.colt(*) desc"
"select distialias.colct top alias.col table.owalias.coleruserid, table.displayalias.colame, table.creatioalias.coldate from table ialias.colalias.coler joialias.col table oalias.col table.parealias.coltid = table.postid ialias.colalias.coler joialias.col table oalias.col table.owalias.coleruserid = table.id where table.posttypeid = alias.col aalias.cold table.tagid ialias.col (alias.col) order by table.creatioalias.coldate desc"
declare alias.col int = ##userid## declare alias.col datetime = getdate() select count(distinct ph.revisionguid) from table ph inner join table p on alias.col = alias.col where alias.col = alias.col and ph.tabletypeid in (alias.col) and alias.col < alias.col and alias.col <> alias.col
"select top alias.col table.id as [user lialias.colk], maalias.col(alias.col) as alias.col, maalias.col(locatioalias.col) as locatioalias.col, maalias.col(websiteurl) as website, maalias.col(reputatioalias.col) as rep, coualias.colt(aalias.colswers.id) as aalias.colswers, sum(aalias.colswers.score) as score, cast(avg(cast(aalias.colswers.score as float)) as alias.columeric(alias.col,alias.col)) as [avg] from table joialias.col posttable oalias.col posttable.tagid = table.id joialias.col table oalias.col table.id = posttable.postid joialias.col table as aalias.colswers oalias.col aalias.colswers.parealias.coltid = table.id joialias.col table oalias.col table.id = aalias.colswers.owalias.coleruserid where table.tagalias.colame = alias.col group by table.id, displayalias.colame order by sum(aalias.colswers.score) desc"
"select alias.col, count(*) as alias.col from table group by alias.col order by count(*) desc"
"select top alias.col alias.col as [post lialias.colk] from table where (posttypealias.col = alias.col) aalias.cold body alias.colot like x aalias.cold creatioalias.coldate < dateadd(day, alias.col, getdate()) aalias.cold body alias.colot like '$ aalias.cold score<alias.col aalias.cold lealias.col(body)<alias.col order by creatioalias.coldate desc"
"select top alias.col owalias.coleruserid as [user lialias.colk], coualias.colt(alias.col) as [ualias.colaalias.colswered questioalias.cols] from table as q where alias.col=alias.col aalias.cold alias.col < alias.col aalias.cold creatioalias.coldate < alias.col(moalias.colth, alias.col, getdate()) aalias.cold closeddate is alias.colull aalias.cold acceptedaalias.colswerid is alias.colull aalias.cold alias.colot exists ( select alias.col from table as a where alias.col=alias.col aalias.cold parealias.coltid=alias.col aalias.cold alias.col>=alias.col ) group by owalias.coleruserid havialias.colg coualias.colt(alias.col)>alias.col order by alias.col desc"
"with table as ( select top alias.col?alias.col alias.col as alias.col, alias.col, alias.col, alias.col(body) as alias.colgth, round((alias.col / alias.col(body)), n) as [alias.col] from table where owneruseralias.col = alias.col and posttypealias.col in (alias.colyz) order by [alias.col] desc ) select alias.col from table"
select top alias.col alias.col from table order by creatioalias.coldate desc
"create table table ( alias.col ialias.colt, posttypealias.col ialias.colt, alias.col datetime ) ialias.colsert ialias.colto table (alias.col, posttypealias.col, alias.col) select alias.col, posttypealias.col, alias.col from table where posttypealias.col = alias.col aalias.cold alias.col like alias.col ialias.colsert ialias.colto table (alias.col, posttypealias.col, alias.col) select a.alias.col, a.posttypealias.col, a.alias.col from table a ialias.colalias.coler joialias.col table q oalias.col a.parealias.coltalias.col = q.alias.col where a.posttypealias.col = alias.col select sum(case posttypealias.col whealias.col alias.col thealias.col alias.col else alias.col ealias.cold) from table v ialias.colalias.coler joialias.col table s oalias.col v.postalias.col = s.alias.col where (s.alias.col is alias.colull or v.creatioalias.coldate < s.alias.col) ;"
"declare @MyUserId int = N; declare @OtherUserId int = N; select myAnswer.ParentId as Question, myAnswer.Score as MyScore, otherAnswer.Score as otherScore from Posts as myAnswer inner join Posts as otherAnswer on otherAnswer.OwnerUserId = @OtherUserId and myAnswer.ParentId = otherAnswer.ParentId where myAnswer.ownerUserId = @MyUserId and myAnswer.postTypeId = N"
"select top alias.col alias.col as [user lialias.colk], u.reputatioalias.col as alias.col, u.locatioalias.col from table u where upper(u.locatioalias.col) like upper(alias.col + ##yourlocatioalias.col:strialias.colg## + alias.col) order by u.locatioalias.col, u.reputatioalias.col desc"
select alias.col from table where alias.col = ##alias.col:string?alias.col
"select top alias.col alias.col as [post lialias.colk], p.aalias.colswercoualias.colt as [aalias.colswers], alias.col as alias.col, viewcoualias.colt as alias.col from table p where alias.col > alias.col order by p.alias.col desc"
"DECLARE @match_edge_cases INT = ##MatchEdgeCases:INT?N##; select dateadd(month, (year(CreationDate)N)*N + month(CreationDate)N, N) as Month, coalesce(count(Id),N) as Count from Posts where PostTypeId = N and Tags not like X and ( Tags like X or Tags like X or Tags like X or Tags like X or Tags like X or Tags like X or Tags like X or Tags like X or Tags like X or Tags like X or Tags like X or Tags like X or Tags like X or Tags like X or Tags like X or Tags like X or Tags like X or Tags like X or Tags like X or Tags like X or Tags like X or Tags like X or Tags like X or Tags like X or Tags like X or Tags like X or Tags like X or Tags like X or Tags like X or Tags like X or Tags like X or Tags like X or Tags like X or Tags like X or (@match_edge_cases = N and (Tags like X or Tags like X or Tags like X or Tags like X or Tags like X or Tags like X )) ) group by year(CreationDate), month(CreationDate) order by N desc"
"declare @epoch datetime = getdate(); with ask_days as ( select OwnerUserId, dateadd(day, datediff(day, @epoch, CreationDate), @epoch) day, min(Score) worst, max(Score) best, count(ClosedDate) closed, count(*) N from Posts where PostTypeId = N and OwnerUserId in (XYZ), @epoch), OwnerUserId ), good_days as ( select OwnerUserId, count(*) N from ask_days where best >= N and worst >= N and closed = N group by OwnerUserId ), badges as ( select OwnerUserId, N, case when N >= ##bronze?N## then N end curious, case when N >= ##silver?N## then N end inquisitive, case when N >= ##gold?N## then N/N end socratic from good_days join Users u on u.Id = OwnerUserId ) select OwnerUserId as [User Link], N, curious, inquisitive, socratic from badges order by N desc;"
"wialias.colableh alias.colable as ( selecalias.colable alias.colable.alias.colableagalias.colame, alias.colable.[coualias.colalias.colable] quesalias.colableioalias.colcoualias.colalias.colable, sum(alias.colable) alias.colable, sum(alias.colable) alias.colable, mialias.col(q.creaalias.colableioalias.coldaalias.colablee) alias.colableagcreaalias.colableeddaalias.colablee, alias.col+daalias.colableediff(day, mialias.col(q.creaalias.colableioalias.coldaalias.colablee), gealias.colabledaalias.colablee()) alias.colableagagedays from alias.colableable alias.colable joialias.col posalias.colablealias.colableable qalias.colable oalias.col alias.colable.id = qalias.colable.alias.colableagid joialias.col alias.colableable q oalias.col qalias.colable.posalias.colableid = alias.col where alias.colable.coualias.colalias.colable >= alias.col group by alias.colable.alias.colableagalias.colame, alias.colable.[coualias.colalias.colable] ) selecalias.colable alias.col from alias.colable"
"declare @mialias.colalias.col ialias.colalias.col = alias.col declare alias.col ialias.colalias.col = alias.col declare @recealias.colalias.colweeks ialias.colalias.col = alias.col selealias.col alias.col, alias.col, alias.col, alias.colraalias.colk, alias.col, alias.colraalias.colk from ( selealias.col alias.col, raalias.colk() over (order by alias.col desc) as alias.colraalias.colk, raalias.colk() over (order by alias.col desc) as alias.colraalias.colk from ( selealias.col alias.colop (alias.col) alias.col, casalias.col((alias.col alias.col a.alias.col / (alias.col alias.col a.alias.col)) as decimal(alias.col, alias.col)) as alias.col from ( selealias.col alias.col.alias.col as alias.col, coualias.colalias.col(alias.col) as alias.col, alias.col.coualias.colalias.col as alias.col from alias.colable q ialias.colalias.coler joialias.col alias.colable palias.col oalias.col alias.col = palias.col.posalias.colid ialias.colalias.coler joialias.col alias.colable alias.col oalias.col palias.col.alias.colagid = alias.col.id where (q.creaalias.colioalias.coldaalias.cole > daalias.coleadd(week, -@recealias.colalias.colweeks, (selealias.col max(p.creaalias.colioalias.coldaalias.cole) from alias.colable p)) ) aalias.cold (q.posalias.colalias.colypeid = alias.col) aalias.cold (q.closeddaalias.cole is alias.colull) aalias.cold alias.coloalias.col exisalias.cols ( selealias.col alias.col from alias.colable a where (a.parealias.colalias.colid = alias.col) aalias.cold ((alias.col > alias.col) or (alias.col = q.accepalias.coledaalias.colswerid)) ) group by alias.col, alias.col.coualias.colalias.col ) a where a.alias.col > @mialias.colalias.col order by a.alias.col desc ) b ) c order by (alias.col / alias.colraalias.colk) desc, alias.colraalias.colk asc, alias.colraalias.colk asc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or lower(location) like x ... order by alias.col desc;"
"select alias.col , alias.col , (select alias.col from table where database_alias.col = alias.col()) as alias.col from table where alias.col = ##useralias.col:alias.col"
select top alias.col alias.col as [userlialias.colk] from table u with (alias.cololock) where lower(u.locatioalias.col) like alias.col + lower(##locatioalias.col:strialias.colg##) + alias.col order by u.reputatioalias.col desc
"select top alias.col selfaalias.colswer.body, selfaalias.colswer.id as [post lialias.colk], selfaalias.colswer.creatioalias.coldate, lealias.col(selfaalias.colswer.body) as lealias.colgth, selfaalias.colswer.score as score, questioalias.col.viewcoualias.colt from table as questioalias.col ialias.colalias.coler joialias.col table as allaalias.colswers oalias.col allaalias.colswers.parealias.coltid = questioalias.col.id ialias.colalias.coler joialias.col table as selfaalias.colswer oalias.col selfaalias.colswer.owalias.coleruserid = questioalias.col.owalias.coleruserid aalias.cold selfaalias.colswer.parealias.coltid = questioalias.col.id ialias.colalias.coler joialias.col table oalias.col selfaalias.colswer.owalias.coleruserid = table.id where selfaalias.colswer.creatioalias.coldate > alias.col aalias.cold questioalias.col.posttypeid = alias.col aalias.cold selfaalias.colswer.posttypeid = alias.col aalias.cold questioalias.col.viewcoualias.colt < alias.col aalias.cold lealias.col(selfaalias.colswer.body) < alias.col aalias.cold table.reputatioalias.col < alias.col group by selfaalias.colswer.id, selfaalias.colswer.creatioalias.coldate, lealias.col(selfaalias.colswer.body), selfaalias.colswer.score, questioalias.col.viewcoualias.colt, selfaalias.colswer.body havialias.colg coualias.colt(distialias.colct allaalias.colswers.id) > alias.col order by selfaalias.colswer.creatioalias.coldate desc"
"select top alias.col alias.col as [user lialias.colk], alias.col + dowalias.colvotes as alias.col, alias.col, dowalias.colvotes, alias.colutatioalias.col as alias.col from table where alias.col != alias.col order by alias.col desc"
"selealias.col alias.col, (cast(sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as float) / alias.colullif(cast(sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as float),alias.col)) as ratio from table where alias.col > alias.col group by alias.col order by alias.col"
"select top alias.col alias.col [user lialias.colk], u.reputatioalias.col as reputatioalias.col, coualias.colt(alias.col) as table, u.reputatioalias.col/coualias.colt(alias.col) as reputatioalias.colsforabadge from table b ialias.colalias.coler joialias.col table u oalias.col alias.col = alias.col where u.reputatioalias.col > alias.col group by alias.col, u.reputatioalias.col order by reputatioalias.colsforabadge desc"
"selealias.col alias.col, count(alias.col) from ( selealias.col cast( cast(alias.col(alias.col, alias.col) as varchar) + alias.col + cast(alias.col(alias.col, alias.col) as varchar) + alias.col as date) month, alias.col from ( selealias.col alias.col, p.alias.col from table p join table pt on alias.col = alias.col join table t on alias.col = alias.col ) alias.col join table pt on alias.col = palias.col join table t on alias.col = alias.col where alias.col in (alias.colyz) ) as alias.col group by tagname, month order by month asc, count(alias.col) desc"
"create table table( id int, firstname nvarchar(n), lastname nvarchar(n), created datetime)"
"select alias.col as alias.col, alias.col, alias.col, (alias.col)*alias.col/(alias.col+alias.col) as alias.colpct from table where alias.col > alias.col aalias.cold alias.col > alias.col aalias.cold alias.col+alias.col > alias.col aalias.cold alias.col <> alias.col order by alias.colpct desc"
"alias.colelect top aliaalias.col.col table.id aalias.col [poalias.colt lialiaalias.col.colk], table.creatioaliaalias.col.coldate, table.creatioaliaalias.col.coldate, aliaalias.col.col(alias.col,table.creatioaliaalias.col.coldate,table.creatioaliaalias.col.coldate), table.tabletypeid, table.ualias.colerid, table.owaliaalias.col.colerualias.colerid from table joialiaalias.col.col table oaliaalias.col.col table.poalias.coltid = table.id where table.tabletypeid ialiaalias.col.col (alias.col) aaliaalias.col.cold (table.ualias.colerid <> table.owaliaalias.col.colerualias.colerid or table.ualias.colerid ialias.col aliaalias.col.colull or table.owaliaalias.col.colerualias.colerid ialias.col aliaalias.col.colull) order by aliaalias.col.col(alias.col,table.creatioaliaalias.col.coldate,table.creatioaliaalias.col.coldate)"
"select top alias.col alias.col as [post lialias.colk], owalias.coleruseralias.col as [user alias.col], lealias.col(body) as lealias.colgth, lastactivitydate as [last activity date] from table where posttypealias.col = alias.col order by lealias.colgth desc"
"select top alias.col table.id, body from table where alias.col = alias.col aalias.cold (body like x or body like x)"
"select alias.col ,alias.col ,alias.col ,alias.col ,p.table from table p join table pt on alias.col = alias.col join table t on alias.col = alias.col where alias.col in (alias.col) or alias.col like alias.col or (alias.col like alias.col and alias.col <> alias.col and alias.col <> alias.col) or alias.col like alias.col order by alias.col desc"
"select alias.collialias.cols.col alias.cols alias.collialias.cols.col, alias.collialias.cols.col, alias.collialias.cols.col, alias.collialias.cols.col from ( select alias.collialias.cols.col alias.cols alias.collialias.cols.col, alias.collialias.cols.col alias.cols alias.collialias.cols.col, (calias.colse whealias.collialias.cols.col alias.collialias.cols.col is alias.collialias.cols.colull thealias.collialias.cols.col alias.collialias.cols.col else alias.collialias.cols.col ealias.collialias.cols.cold) alias.cols alias.collialias.cols.col, (select coualias.collialias.cols.colt(*) from talias.colble closed where closed.alias.collialias.cols.col = p.alias.collialias.cols.col alias.colalias.collialias.cols.cold closed.talias.colbletypealias.collialias.cols.col = alias.collialias.cols.col) alias.cols alias.collialias.cols.col, (select coualias.collialias.cols.colt(*) from talias.colble opealias.collialias.cols.coled where opealias.collialias.cols.coled.alias.collialias.cols.col = p.alias.collialias.cols.col alias.colalias.collialias.cols.cold opealias.collialias.cols.coled.talias.colbletypealias.collialias.cols.col = alias.collialias.cols.col) alias.cols alias.collialias.cols.col from talias.colble p where p.posttypealias.collialias.cols.col = alias.collialias.cols.col ) alias.col where alias.collialias.cols.col > alias.collialias.cols.col alias.colalias.collialias.cols.cold alias.collialias.cols.col = alias.collialias.cols.col order by (alias.collialias.cols.col + alias.collialias.cols.col) desc, alias.collialias.cols.col desc, alias.collialias.cols.col desc"
"DECLARE @UserN int = ##UserN##; DECLARE @UserN int = ##UserN##; SELECT [OwnerUserId],[CreationDate],[PostTypeId] from [Posts] where ([OwnerUserId]=@UserN OR [OwnerUserId]=@UserN) ORDER BY [CreationDate]"
Declare @dateFrom date = X; Declare @dateTo date = X; Declare @reviewDescision tinyint = N; SELECT TOP N * FROM ReviewTasks WHERE ReviewTaskTypeId = N AND ReviewTaskStateId = N AND (CreationDate BETWEEN @dateFrom AND @dateTo) ORDER BY CreationDate;
"select top alias.col alias.col, u.displayalias.colame, u.creatioalias.coldate, u.reputatioalias.col, alias.col, alias.col, u.dowalias.colvotes, u.reputatioalias.col/alias.col as alias.col from table u order by alias.col desc"
"select top alias.col alias.col, userdisplayalias.colame, text, alias.col as [postlialias.colk] from table order by alias.col desc"
"select (select count(*) as alias.col from taalias.colle as answers join taalias.colle as questions on alias.col = alias.col where alias.col = alias.col## and not alias.col is null ) as a, (select count(*) as successfullyalias.col from taalias.colle as answers join taalias.colle as questions on alias.col = alias.col where alias.col = alias.col## and alias.col = alias.col ) as alias.col"
"declare @alias.col int = ##alias.col## select table.alias.col, table.text, table.id as alias.col, table.id as alias.col from table inner join table on table.id = table.postid where alias.col = @alias.col order by alias.col desc"
"select alias.col, coualias.colt(alias.col) as alias.col, coualias.colt(alias.col) as alias.col from table palias.col, table palias.col where (alias.col = alias.col aalias.cold alias.col = alias.col) group by alias.col, alias.col"
"select avg(alias.col(body)) as averagealias.colgth, avg(score) as questioalias.colscore from table where alias.col = alias.col group by roualias.cold(alias.col(body), alias.col) order by roualias.cold(alias.col(body), alias.col)"
"select table.id, table.alias.col from table where (alias.col < alias.col or alias.col is alias.colot alias.colull) aalias.cold alias.col = alias.col aalias.cold ( select coualias.colt(*) from table where table.postid = table.id ) = alias.col order by table.id;"
"create table table ( coln int, coln int ); insert into table values (xyz), (n,n), (n,n), (n,n), (n,n), (n,n), (n,n), (n,n) select distinct coln,coln from table;"
"select top alias.col alias.col as [post lialias.colk] from table q joialias.col table h oalias.col alias.col = alias.col where alias.col < alias.col()-##deadlialias.cole## aalias.cold tabletypeid=alias.col aalias.cold commealias.colt<>x aalias.cold isalias.colull((select top alias.col tabletypeid from table where alias.col=alias.col aalias.cold tabletypeid ialias.col (alias.col) order by creatioalias.coldate desc),alias.col) alias.colot ialias.col (alias.col) aalias.cold alias.colot exists (select alias.col from table a where parealias.coltid=alias.col aalias.cold alias.col>=alias.col) aalias.cold acceptedaalias.colswerid is alias.colull aalias.cold alias.col <= alias.col aalias.cold alias.colot exists (select alias.col from table where alias.col=alias.col aalias.cold alias.col=alias.col) aalias.cold alias.colot exists (select alias.col from table where tabletypeid ialias.col (alias.col) aalias.cold alias.col=alias.col aalias.cold creatioalias.coldate > alias.col) aalias.cold alias.colot exists (select alias.col from table h joialias.col table a oalias.col alias.col=alias.col where tabletypeid ialias.col (alias.col) aalias.cold a.parealias.coltid=alias.col aalias.cold h.creatioalias.coldate > alias.col) order by q.creatioalias.coldate desc"
"select alias.col, alias.col = alias.col, location, reputation, age, websiteurl, views from table where location like x order by views desc"
select alias.col alias.col
"; with questions as ( select sum(viewcount) as viewcount , owneruserid from posts where posttypeid = N and owneruserid = ##uid## group by owneruserid ) , answers as ( select sum(q.viewcount) as viewcount , a.owneruserid from posts q inner join posts a on a.parentid = q.id where a.score > N and ( a.id in (XYZ) as [Avc] , (q.viewcount + isnull(a.viewcount,N)) as reached from questions q left outer join answers a on a.owneruserid = q.owneruserid order by q.viewcount + isnull(a.viewcount,N) desc"
"with table as ( select alias.col from (values aliaslias.col), aliaslias.col), aliaslias.col), aliaslias.col)) xaliaslias.col) ), table as ( select a.alias.col from table as a cross joialias.col table as b ), table as ( select top alias.col row_alias.columber() over (order by a.alias.col) as alias.col from table as a cross joialias.col table as b ) select case whealias.col alias.col alias.col = alias.col thealias.col x whealias.col alias.col alias.col = alias.col thealias.col x whealias.col alias.col alias.col = alias.col thealias.col x else castaliaslias.col as alias.colvarchar) ealias.cold as fizzbuzz from table order by alias.col;"
select alias.col from table where alias.col ialias.col ( select top alias.col alias.col from table order by alias.col desc ) order by alias.col desc;
"select top alias.col alias.col as [post lialias.colk], alias.col as alias.col, viewcoualias.colt as alias.col from table p where p.viewcoualias.colt > alias.col aalias.cold p.commualias.colityowalias.coleddate is alias.colull order by viewcoualias.colt desc"
select table.* from table joialias.col table oalias.col table.id = table.id where alias.col=alias.col aalias.cold owalias.coleruserid = alias.col##
"declare alias.col ialias.colt = ##userid## select sum(case whealias.col alias.col = alias.col thealias.col alias.col whealias.col alias.col=alias.col thealias.col alias.col whealias.col alias.col=alias.col thealias.col alias.col else alias.col ealias.cold) - reputatioalias.col as lostrep, alias.col.alias.col - (reputatioalias.col * alias.col.alias.col / sum(case whealias.col alias.col = alias.col thealias.col alias.col whealias.col alias.col=alias.col thealias.col alias.col whealias.col alias.col=alias.col thealias.col alias.col else alias.col ealias.cold)) as [lostrep] from table v ialias.colalias.coler joialias.col table p oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table oalias.col table.id = p.owalias.coleruserid where p.owalias.coleruserid = alias.col aalias.cold p.commualias.colityowalias.coleddate is alias.colull group by reputatioalias.col"
"select alias.col, (alias.col + sum(case when post.acalias.colptedanswerid is not null then n else n end)) / (alias.col + sum(case when post.acalias.colptedanswerid is null then n else n end)) from table as [user] inner join table as post on alias.col = alias.col group by alias.col order by (alias.col + sum(case when post.acalias.colptedanswerid is not null then n else n end)) / (alias.col + sum(case when post.acalias.colptedanswerid is null then n else n end)) desc"
"with alias.colkcdlialias.colktable as ( select alias.col, alias.col as type, substrialias.colg(tealias.colt, charialias.coldealias.col(alias.col, tealias.colt) + alias.col, alias.col ) as comicalias.columber from table where tealias.colt like alias.col ) select coualias.colt(*), comicalias.columber from alias.colkcdlialias.colktable group by comicalias.columber order by coualias.colt(*) desc"
"select alias.col from table where alias.col < alias.col aalias.cold reputatioalias.col < alias.col aalias.cold alias.col(day,lastaccessdate, getdate()) > (alias.colalias.colalias.col) aalias.cold (select coualias.colt(alias.col) from table where (table.owalias.coleruseralias.col = table.alias.col) aalias.cold (alias.col(day, creatioalias.coldate, getdate()) < alias.col) ) = alias.col"
";with postsNvotes as ( select p.owneruserid targetuserid, v.creationdate, case votetypeid when N then N when N then -bountyamount when N then bountyamount when N then N when N then N end targetrepchange from votes v inner join posts p on p.id = v.postid inner join users u on u.id = p.owneruserid where v.votetypeid in (XYZ) and p.communityowneddate is null and u.reputation >= N union all select pN.owneruserid, v.creationdate, N from votes v inner join posts pN on pN.id = v.postid and v.votetypeid = N inner join posts pN on pN.id = pN.parentid inner join users u on u.id = pN.owneruserid where pN.communityowneddate is null and u.reputation >= N ) SELECT u.id as [User Link], u.id FROM users u WITH (nolock), (SELECT targetuserid AS userid FROM (SELECT targetuserid, CONVERT(CHAR(N), creationdate, N) AS dayperiod, SUM(targetrepchange) AS dayrep FROM postsNvotes WHERE targetrepchange IS NOT NULL AND targetuserid = N GROUP BY targetuserid, CONVERT(CHAR(N), creationdate, N) HAVING SUM(targetrepchange) >= N) AS x GROUP BY targetuserid) x"
"select alias.col, alias.col from (select alias.col, coualias.colt(alias.col) as alias.col from (select alias.col from table where alias.col > alias.col aalias.cold alias.col = alias.col) table group by alias.col havialias.colg coualias.colt(alias.col) > alias.col) as upvotedquestioalias.cols ialias.colalias.coler joialias.col table oalias.col table.id = upvotedquestioalias.cols.alias.col"
"select alias.col as alias.col, alias.col from table as q ialias.colalias.coler joialias.col table as u oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table as ph oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col(day, q.creatioalias.coldate, getdate()) > alias.col aalias.cold q.score = alias.col aalias.cold q.aalias.colswercoualias.colt = alias.col aalias.cold ph.tabletypeid != alias.col aalias.cold alias.col < alias.col(day, q.creatioalias.coldate, getdate()) * alias.col.alias.col aalias.cold q.commealias.coltcoualias.colt < alias.col aalias.cold q.closeddate is alias.colull aalias.cold lealias.col(q.body) < ##questioalias.collealias.colgth?alias.col## aalias.cold alias.col(day, u.lastaccessdate, getdate()) > alias.col aalias.cold u.reputatioalias.col < ##questioalias.colerrep?alias.col## order by alias.col desc"
"with table as ( select alias.col from table p ialias.colalias.coler joialias.col table ph oalias.col alias.col = alias.col where ph.tabletypeid = alias.col aalias.cold alias.col = alias.col aalias.cold alias.col = (select top alias.col alias.col from table pmax where alias.col = alias.col aalias.cold tabletypeid ialias.col (alias.col) order by creatioalias.coldate) ) select alias.col as [post lialias.colk] , sum( case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as upvotes , sum( case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as dowalias.colvotes from table pf ialias.colalias.coler joialias.col table p oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table q oalias.col alias.col = p.parealias.coltid ialias.colalias.coler joialias.col table ph oalias.col alias.col = alias.col where alias.col ialias.col (alias.col) aalias.cold isaalias.coloalias.colymous = alias.col group by alias.col order by sum( case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) + sum( case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) desc"
"declare alias.col ialias.colt = ##userid## select alias.col, coualias.colt(*) as uptable from table ialias.colalias.coler joialias.col posttable oalias.col posttable.tagid = table.id ialias.colalias.coler joialias.col table oalias.col table.parealias.coltid = posttable.postid ialias.colalias.coler joialias.col table oalias.col table.postid = table.id aalias.cold alias.col = alias.col where table.owalias.coleruserid = alias.col group by alias.col order by uptable desc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like lower(x) order by alias.col desc;"
"select top alias.col alias.col, alias.col as [post lialias.colk], p.viewcoualias.colt, p.commealias.coltcoualias.colt, c.creatioalias.coldate, u.lastaccessdate, alias.col, alias.col(day, p.creatioalias.coldate, getutcdate()) as daysold from table p joialias.col table c oalias.col alias.col = alias.col joialias.col table u oalias.col p.owalias.coleruserid = alias.col where alias.col = alias.col aalias.cold p.viewcoualias.colt < alias.col(day, p.creatioalias.coldate, getutcdate()) * alias.col.alias.col aalias.cold alias.col < alias.col aalias.cold isalias.colull(p.aalias.colswercoualias.colt,alias.col) = alias.col aalias.cold alias.col(day, p.creatioalias.coldate, getutcdate()) > alias.col aalias.cold c.creatioalias.coldate > u.lastaccessdate order by alias.col, p.viewcoualias.colt"
select alias.col from table select alias.col as alias.col from table where alias.col = alias.col
"declare alias.col int = ##userid## select count(alias.col) , alias.col from table v left join table vt on alias.col = alias.col where alias.col = alias.col group by alias.col"
"declare @tag varchar(alias.col) = ##tag:strialias.colg## select top alias.col alias.col as [post lialias.colk], alias.col, viewcoualias.colt as views, aalias.colswercoualias.colt as aalias.colswers, body, creatioalias.coldate from table where acceptedaalias.colsweralias.col is alias.colull aalias.cold posttypealias.col = alias.col aalias.cold creatioalias.coldate < getdate() - alias.col aalias.cold closeddate is alias.colull aalias.cold tags like x ... + lower(@tag) + x aalias.cold viewcoualias.colt < alias.col order by creatioalias.coldate desc"
"declare @months as int = ##Months:int?N##; declare @thismonth as Date; declare @pivot as NVarchar(Max); select @thismonth = DateAdd(Day, N - DatePart(day, CURRENT_TIMESTAMP), Convert(Date, CURRENT_TIMESTAMP)) ; declare @epoch as Date = DateAdd(Month, - @months, @thismonth); print Convert(nvarchar, @epoch) + X + Convert(nvarchar, @thismonth); create table #tusers ( Id int, CreateDate DateTime, CreateMonth Char(N)) ; insert into #tusers select Id, CreationDate, Convert(Char(N), case when CreationDate < @epoch then @epoch else DateAdd(Day, N - DatePart(day, CreationDate), Convert(Date, CreationDate)) end, N) from Users ; create table #tmonths ( CreateMonth Char(N), UserCount float) ; insert into #tmonths select CreateMonth, Count (*) from #tusers group by CreateMonth ; SET @pivot = STUFF((SELECT X + QUOTENAME(CreateMonth) FROM #tmonths order by CreateMonth FOR XML PATH(X), TYPE ).value(X, X) ,N,N,X) ; print @pivot ; create table #tactivity ( CreateMonth Date, Week Date, PostCount float) ; select * from #tactivity order by CreateMonth, Week"
"select top alias.col alias.col as [user lialias.colk], reputatioalias.col, alias.col, locatioalias.col from table where alias.col like alias.colx order by reputatioalias.col desc"
"select alias.col, alias.col as alias.col from table where alias.col not like alias.col order by alias.col desc"
"select alias.col as alias.col, alias.col, alias.col.[# table], alias.col / alias.col.[# table] as alias.col from table cross apply ( select coualias.colt(*) from table where table.owalias.coleruseralias.col = table.alias.col ) alias.col([# table]) where alias.col > alias.col aalias.cold [# table] > ##mialias.coltable## order by alias.col desc"
"select top alias.col ualias.colluckyaalias.colswer.owalias.coleruserid as [user lialias.colk], questioalias.col.id as [post lialias.colk], ualias.colluckyaalias.colswer.score as [igalias.colored score] from table as ualias.colluckyaalias.colswer, table as questioalias.col where questioalias.col.id = ualias.colluckyaalias.colswer.parealias.coltid aalias.cold questioalias.col.posttypeid = alias.col aalias.cold questioalias.col.acceptedaalias.colswerid is alias.colot alias.colull aalias.cold questioalias.col.acceptedaalias.colswerid != ualias.colluckyaalias.colswer.id aalias.cold questioalias.col.aalias.colswercoualias.colt >= alias.col aalias.cold ualias.colluckyaalias.colswer.score >= alias.col aalias.cold ualias.colluckyaalias.colswer.score > ( select alias.col.alias.col * sum(allaalias.colswers.score) from table as allaalias.colswers where questioalias.col.id = allaalias.colswers.parealias.coltid ) order by ualias.colluckyaalias.colswer.score desc"
"select alias.col as alias.col, ( select coualias.colt (table) from ( select sum(case table.votetypealias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col boualias.coltyamoualias.colt ealias.cold) as table, table.creatioalias.coldate as creatioalias.coldate from table ialias.colalias.coler joialias.col table oalias.col table.postalias.col = table.alias.col where table.owalias.coleruseralias.col = u.alias.col aalias.cold table.commualias.colityowalias.coleddate is alias.colull group by table.creatioalias.coldate ) t where table>=alias.col) from table u where reputatioalias.col > alias.col"
"select alias.col + replace(alias.col,alias.col,alias.col) + alias.col + alias.col + alias.col + alias.col + alias.col + alias.colalias.colalias.col + alias.col from table where name like alias.col"
"declare alias.col int = ##userid## select alias.col, alias.col, alias.col from table a inner join table b on alias.col=alias.col inner join table c on alias.col=alias.col where alias.col=alias.col and alias.col like alias.col ... order by alias.col desc"
"select top alias.col row_alias.columber() over(order by reputatioalias.col desc) as [#], id as [user lialias.colk], reputatioalias.col, locatioalias.col from table where lower(locatioalias.col) like x or upper(locatioalias.col) like x ... or locatioalias.col like x aalias.cold reputatioalias.col >= alias.col order by reputatioalias.col desc;"
"select alias.col as alias.col, alias.col from table where alias.col=alias.col"
"select top alias.col table.tagalias.colame, mediaalias.colviews.[mediaalias.col views] as [mediaalias.col views], avg(table.viewcoualias.colt) as alias.col, coualias.colt(*) as [questioalias.col coualias.colt] from table ialias.colalias.coler joialias.col table oalias.col table.id = table.postid ialias.colalias.coler joialias.col table oalias.col table.tagid = table.id ialias.colalias.coler joialias.col ( select tagalias.colame, avg(viewcoualias.colt) as [mediaalias.col views] from ( select table.tagalias.colame, viewcoualias.colt, row_alias.columber() over ( partitioalias.col by table.tagalias.colame order by viewcoualias.colt asc ) as rowasc, row_alias.columber() over ( partitioalias.col by table.tagalias.colame order by viewcoualias.colt desc ) as rowdesc from table ialias.colalias.coler joialias.col table oalias.col table.id = table.postid ialias.colalias.coler joialias.col table oalias.col table.tagid = table.id ) as alias.col where rowasc ialias.col (alias.colyz) group by tagalias.colame ) as mediaalias.colviews oalias.col mediaalias.colviews.tagalias.colame = table.tagalias.colame group by table.tagalias.colame, [mediaalias.col views] havialias.colg coualias.colt(*) >= alias.col order by [mediaalias.col views] desc"
"select alias.col, alias.col, body from table where posttypealias.col = alias.col"
"select distinct alias.col as [post link] , case when p.posttypeid = n then x else x end as qa , p.creationalias , p.score , p.owneruserid as [user link] from table p inner join table pt on alias.col = coalesce(alias.col, alias.col) inner join table t on alias.col = alias.col inner join table ph on alias.col = alias.col where alias.col = alias.col:alias.col and alias.col between ##alias:alias.col and aliasadd(d, n, cast(##alias:alias.col as alias))"
"select alias.col alias.col, alias.col, alias.col, location from table where location in (xyz) order by alias.col desc"
"with activetable as (select alias.col, alias.col, alias.col, lastaccessdate from table where alias.col >= alias.col:alias.col and alias.col(day, lastaccessdate, getdate()) <= ##activethreshold:alias.col ) select activetable.alias.col as useralias.col, activetable.alias.col, table.alias.col, table.parentalias.col from table join activetable on activetable.alias.col = table.owneruseralias.col join table on table.alias.col = table.posttypealias.col where table.name = alias.col and alias.col(day, table.creationdate, getdate()) <= n order by table.creationdate desc"
"select top alias.col voteordialias.colal, alias.col( day, alias.col, alias.col ), coualias.colt(*) from ( select alias.col as alias.col, p.creatioalias.coldate as alias.col, alias.col as alias.col, v.creatioalias.coldate as alias.col, coualias.colt( valias.col.id ) as voteordialias.colal from table p, table v, table valias.col where alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold valias.col.postid = alias.col aalias.cold valias.col.votetypeid = alias.col aalias.cold valias.col.id <= alias.col group by alias.col, p.creatioalias.coldate, alias.col, v.creatioalias.coldate ) as fcv group by voteordialias.colal, alias.col( day, alias.col, alias.col ) order by alias.col, alias.col"
"select alias.collialias.cols.col, alias.collialias.cols.col alias.cols alias.collialias.cols.colalias.colalias.collialias.cols.colk, alias.collialias.cols.col, alias.collialias.cols.col falias.collialias.cols.colom ( select alias.collialias.cols.col, alias.collialias.cols.col, alias.collialias.cols.col, alias.collialias.cols.colow_alias.collialias.cols.columalias.colealias.collialias.cols.col() ovealias.collialias.cols.col(palias.colalias.collialias.cols.coltitioalias.collialias.cols.col alias.coly alias.collialias.cols.col oalias.collialias.cols.coldealias.collialias.cols.col alias.coly alias.collialias.cols.col desc) alias.cols alias.collialias.cols.col falias.collialias.cols.colom ( select alias.collialias.cols.col, alias.collialias.cols.col alias.cols alias.collialias.cols.col, coualias.collialias.cols.colt(alias.collialias.cols.col) alias.cols postcoualias.collialias.cols.colt falias.collialias.cols.colom ( select alias.collialias.cols.col, alias.collialias.cols.col falias.collialias.cols.colom ( select alias.collialias.cols.col, coalias.collesce(p.palias.colalias.collialias.cols.colealias.collialias.cols.coltid, alias.collialias.cols.col) alias.cols alias.collialias.cols.col, alias.collialias.cols.colow_alias.collialias.cols.columalias.colealias.collialias.cols.col() ovealias.collialias.cols.col(palias.colalias.collialias.cols.coltitioalias.collialias.cols.col alias.coly alias.collialias.cols.col, alias.collialias.cols.col oalias.collialias.cols.coldealias.collialias.cols.col alias.coly p.calias.collialias.cols.colealias.coltioalias.collialias.cols.coldalias.colte) alias.cols alias.collialias.cols.col falias.collialias.cols.colom talias.colalias.colle u ialias.collialias.cols.colalias.collialias.cols.colealias.collialias.cols.col joialias.collialias.cols.col talias.colalias.colle p oalias.collialias.cols.col p.owalias.collialias.cols.colealias.collialias.cols.colusealias.collialias.cols.colid = alias.collialias.cols.col whealias.collialias.cols.cole alias.collialias.cols.col ialias.collialias.cols.col (alias.collialias.cols.col) ) alias.col whealias.collialias.cols.cole alias.col.alias.collialias.cols.col <= alias.collialias.cols.col ) alias.col ialias.collialias.cols.colalias.collialias.cols.colealias.collialias.cols.col joialias.collialias.cols.col talias.colalias.colle pt oalias.collialias.cols.col pt.alias.collialias.cols.col = alias.col.alias.collialias.cols.col ialias.collialias.cols.colalias.collialias.cols.colealias.collialias.cols.col joialias.collialias.cols.col talias.colalias.colle t oalias.collialias.cols.col alias.col = pt.alias.collialias.cols.colid galias.collialias.cols.coloup alias.coly alias.collialias.cols.col, alias.collialias.cols.col ) c ) d whealias.collialias.cols.cole alias.collialias.cols.col <= alias.collialias.cols.col"
"with table as ( select table.id as alias.col, sum(alias.col) as alias.col from table as questioalias.cols ialias.colalias.coler joialias.col table oalias.col alias.col = table.id ialias.colalias.coler joialias.col table oalias.col table.postid = alias.col ialias.colalias.coler joialias.col table oalias.col table.id = table.tagid where lower(locatioalias.col) like lower(x) aalias.cold table.tagalias.colame=x group by table.id ), table as ( select table.id as alias.col, sum(aalias.colswers.alias.col) as alias.col from table as aalias.colswers ialias.colalias.coler joialias.col table as parealias.coltquestioalias.cols oalias.col parealias.coltalias.col = alias.col ialias.colalias.coler joialias.col table as table oalias.col alias.col = table.id ialias.colalias.coler joialias.col table oalias.col table.postid = alias.col ialias.colalias.coler joialias.col table oalias.col table.id = table.tagid where lower(locatioalias.col) like lower(x) aalias.cold table.tagalias.colame=x group by table.id ) select top alias.col isalias.colull(table.alias.col, table.alias.col) as alias.col, isalias.colull(table.alias.col, alias.col) as [questioalias.col alias.col], isalias.colull(table.alias.col, alias.col) as [aalias.colswer alias.col], isalias.colull(table.alias.col, alias.col) + isalias.colull(table.alias.col, alias.col) as [total alias.col] from table full joialias.col table oalias.col table.alias.col = table.alias.col order by [total alias.col] desc;"
"select alias.col, alias.col, count(*) alias.col from table where alias.col > alias.col and alias.col is not null group by alias.col order by alias.col desc"
";WITH Points AS ( SELECT CreationDate AS [Date], SUM(Vote) AS [Votes], CASE WHEN SUM(Edit) > N THEN N ELSE N END AS [Edit] FROM ( SELECT N AS Vote, N AS Edit, DATEADD(DAY, DATEDIFF(DAY, N, CreationDate), N) AS CreationDate FROM PostHistory WHERE PostHistoryTypeId IN (XYZ) AND PostId = ##PostId## UNION SELECT CASE WHEN VoteTypeId = N THEN N ELSE N END AS Vote, N AS Edit, CreationDate FROM Votes WHERE VoteTypeId IN (XYZ) AND PostId = ##PostId## ) AS History GROUP BY CreationDate ) SELECT [Date], (SELECT SUM(totals.Votes) FROM Points totals WHERE totals.[Date] <= p.[Date]) AS Votes, Edit FROM Points p ORDER BY [Date] DESC"
"declare alias.col ialias.colt = ##userid## select alias.col, alias.col from table p ialias.colalias.coler joialias.col table v oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table u oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold alias.col like(alias.col)"
"declare table table ( alias.col int primary key, alias.col int ) declare table int set table = n walias.colle table > n and (select count(alias.col) from table r) < n begin insert into table select table as alias.col, table as alias.col from table u where ( (select count(*) from table p where p.owneruseralias.col = table and alias.col >= table) >= table) and not table in (select alias.col from table r) set table = table - n end select r.alias.col as alias.col, table, alias.col from table r inner join table u on table = alias.col"
"select alias.col alias.col, alias.col alias.col from table palias.col joialias.col table palias.col oalias.col alias.col != alias.col aalias.cold substrialias.colg(alias.col, alias.col, alias.col) = substrialias.colg(alias.col, alias.col, alias.col) aalias.cold palias.col.posttypeid = alias.col where alias.col = alias.col aalias.cold palias.col.posttypeid = alias.col"
"select table.name, table.id as alias.col, table.alias.col as alias.col, table.viewcount as alias.col from table inner join table on table.posttypeid = table.id where not (table.communityowneddate is null) order by table.id, table.posttypeid, table.alias.col"
"select alias.col as alias.col, alias.col, alias.col as alias.col, alias.col as alias.col, alias.col, alias.col from table q joialias.col table ph oalias.col (alias.col = alias.col) where alias.col is alias.colot alias.colull aalias.cold alias.col = alias.col aalias.cold alias.colot ealias.colists ( select alias.col from table ph where alias.col = alias.col aalias.cold ph.tabletypeid = alias.col ) aalias.cold ph.tabletypeid = alias.col aalias.cold alias.col = alias.col aalias.cold alias.col <= ##aalias.colswercoualias.colt:ialias.colt?alias.col## order by alias.col asc"
"declare @UserId int = ##UserId##; with fights as ( select myAnswer.ParentId as Question, myAnswer.Score as MyScore, herbertsAnswer.Score as HerbertsScore from Posts as myAnswer inner join Posts as herbertsAnswer on herbertsAnswer.OwnerUserId = N and myAnswer.ParentId = herbertsAnswer.ParentId where myAnswer.ownerUserId = @UserId and myAnswer.postTypeId = N ) select case when myScore > HerbertsScore then X when myScore < HerbertsScore then X else X end as X, Question as [Post Link], myScore as X, HerbertsScore as X from fights;"
"select top alias.col## row_number() over(order by alias.col desc) as [#], id as [user link], alias.col, location, lastaccessdate, upvotes, downvotes from table where ( lower(location) like lower(x) or lower(location) like lower(x) ) and not ( lower(location) like lower(x) or lower(location) like lower(x) or lower(location) like lower(x) ) order by location asc"
"select top alias.col alias.col, displayalias.colame, reputatioalias.col, alias.col, alias.col, locatioalias.col from table where locatioalias.col like alias.colx order by reputatioalias.col desc"
"declare @useralias.col int = ##useralias.col## select alias.col, posttypealias.col, alias.col from table p where p.owneruseralias.col = @useralias.col"
"selealias.col alias.col as alias.col, cast(alias.col as varchar) + alias.col + cast(alias.col as varchar) + alias.col as alias.col, cast(alias.col as varchar) + alias.col + cast(alias.col as varchar) + alias.col as alias.col from (selealias.col alias.col(hour, creatioalias.coldate) as hour, coualias.colt(*) as alias.col, alias.col.alias.col * coualias.colt(*) / (selealias.col coualias.colt(*) from table where alias.col = alias.col) as percealias.coltage from table where alias.col = alias.col group by alias.col(hour, creatioalias.coldate) ) q ialias.colalias.coler joialias.col (selealias.col alias.col(hour, creatioalias.coldate) as hour, coualias.colt(*) as alias.col, alias.col.alias.col * coualias.colt(*) / (selealias.col coualias.colt(*) from table where alias.col = alias.col) as percealias.coltage from table where alias.col = alias.col group by alias.col(hour, creatioalias.coldate) ) a oalias.col alias.col = alias.col order by alias.col, alias.col, alias.col"
"select coualias.colt(*) as alias.col from table, table where table.id = table.owalias.coleruserid aalias.cold table.posttypeid = alias.col aalias.cold table.creatioalias.coldate > alias.col## aalias.cold table.id = alias.col##"
selealias.col (selealias.col cast(count(*) as float) from table where body like x)/ (selealias.col cast(count(*) as float) from table)*n as [percentage of table mentioning imgur] ;
"declare alias.col ialias.colt = ##userid## declare @mialias.colascore ialias.colt = ##mialias.colascore## select alias.col as alias.col, alias.col as alias.col, alias.col from table a, table q where alias.col = alias.col aalias.cold alias.col = @mialias.colascore aalias.cold a.owalias.coleruserid=alias.col aalias.cold alias.col = a.parealias.coltid aalias.cold q.acceptedaalias.colswerid is alias.colull aalias.cold ealias.colists (select alias.col from table u where alias.col = q.owalias.coleruserid aalias.cold u.lastaccessdate >= alias.col) order by a.lastactivitydate asc"
"select alias.col(alias.col, alias.col) as alias.col, coualias.colt(alias.col) as [table] from table where posttypealias.col = alias.col aalias.cold alias.col(alias.col, alias.col) = alias.col group by alias.col(alias.col, alias.col)"
"select alias.col, alias.col from table where alias.col>alias.col aalias.cold alias.col ialias.col (select alias.col from table where aalias.colswercoualias.colt=alias.col)"
"select year(alias.col) , avg(alias.col) as [avg. alias.col] , avg(alias.col) as [avg. alias.col] , count(*) as alias.col from( select alias.col as alias.col , alias.col as alias.col , alias.col(alias.col, alias.col, alias.col) as [alias.col] , alias.col(alias.col, alias.col, alias.col) as [alias.col] from table ph inner join table p on p.ialias.col = ph.postialias.col where tabletypeialias.col in (alias.col) ) as alias.colim group by year(alias.col) oralias.coler by year(alias.col)"
with table as ( select alias.col from table where alias.col ialias.col (alias.col) ) select p.alias.col as alias.col from table p where p.posttypealias.col = alias.col aalias.cold alias.colot exists ( select alias.col from posttable pt where pt.postalias.col = p.alias.col aalias.cold pt.tagalias.col ialias.col (select alias.col from table) )
"select alias.col as alias.col, alias.col as alias.col, alias.col as alias.col, alias.col as alias.col from taliasle as a joialias.col taliasle as b oalias.col alias.col = alias.col where alias.col < alias.col aalias.cold alias.col is alias.colull aalias.cold b.closeddate is alias.colull aalias.cold (select coualias.colt(*) from taliasle where taliasletypeid=alias.col aalias.cold (alias.col=alias.col or alias.col=alias.col)) = alias.col;"
"select top alias.col owalias.coleruserid as [user lialias.colk], coualias.colt(*) as postcoualias.colt from table where alias.col=alias.col group by owalias.coleruserid order by coualias.colt(*) desc"
"select alias.col as alias.col, body from table where alias.col < alias.col aalias.cold body like x ... aalias.cold lealias.col(body) < alias.col order by alias.col desc"
"select top alias.col:ialias.colt?alias.col alias.col as alias.col, alias.col, alias.col as alias.col from table p left joialias.col table ph oalias.col alias.col = alias.col left joialias.col table v oalias.col (alias.col = alias.col aalias.cold alias.col = alias.col) ialias.colalias.coler joialias.col tabletypes phalias.col oalias.col alias.col = ph.tabletypeid ialias.colalias.coler joialias.col table a oalias.col alias.col = alias.col where alias.col != alias.col aalias.cold alias.col != alias.col aalias.cold ph.tabletypeid = alias.col aalias.cold p.acceptedaalias.colswerid is alias.colull aalias.cold p.closeddate is alias.colot alias.colull aalias.cold p.tags like alias.col + ##tagscoalias.coltaialias.col:strialias.colg?## + alias.col aalias.cold p.tags alias.colot like alias.col + ##tagsdoalias.colotcoalias.coltaialias.col:strialias.colg?alias.colyzzy## + alias.col aalias.cold p.viewcoualias.colt < ##viewcoualias.colt:ialias.colt?alias.col aalias.cold datediff(d, p.closeddate, getdate()) >= alias.col aalias.cold alias.col >= ##mialias.colscore:ialias.colt?alias.col group by alias.col, alias.col, alias.col, alias.col havialias.colg coualias.colt(alias.col) = alias.col aalias.cold maalias.col(a.score) <= ##maalias.colaalias.colswer:ialias.colt?alias.col order by alias.col asc"
declare @useralias.col ialias.colt = ##useralias.col## select alias.col as alias.col from table where useralias.col = @useralias.col aalias.cold alias.col ialias.col ( select top alias.col alias.col from table where useralias.col = @useralias.col order by alias.col desc ) order by alias.col desc;
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... and alias.col >= n order by alias.col desc;"
select alias.col from table where location like x order by alias.col desc
"DECLARE @userReputation int; SELECT @userReputation = Reputation FROM Users WHERE Id = ##UserId:int## SELECT TOP(N) u.Id AS [User Link], u.DisplayName, u.Reputation, COUNT(p.Id) AS [Posts count], (CAST(u.Reputation AS float) / CAST(COUNT(p.Id) AS float)) AS [Ratio] FROM Users u LEFT JOIN Posts p ON u.Id = p.OwnerUserId WHERE p.PostTypeId = N OR p.PostTypeId = N GROUP BY u.Id, u.DisplayName, u.Reputation HAVING u.Reputation > @userReputation - N AND u.Reputation < @userReputation + N ORDER BY Reputation DESC PRINT @userReputation"
"CREATE table #a (a_id INT PRIMARY KEY, name nvarchar(N)); INSERT INTO #a values (XYZ), (N, X), (N, X), (N, X), (N, X), (N, X) CREATE table #b (b_id INT PRIMARY KEY, name nvarchar(N)); INSERT INTO #b values (XYZ), (N, X), (N, X), (N, X), (N, X), (N, X) SELECT a.name, b.name FROM #a a, #b b WHERE a.name LIKE (b.name + X);"
"declare @displayalias.colame alias.colvarchar(alias.col) = x select alias.col, coualias.colt(*) as uptable from table ialias.colalias.coler joialias.col posttable oalias.col posttable.tagid = table.id ialias.colalias.coler joialias.col table oalias.col table.parealias.coltid = posttable.postid ialias.colalias.coler joialias.col table oalias.col table.postid = table.id aalias.cold alias.col = alias.col ialias.colalias.coler joialias.col table oalias.col table.id = table.owalias.coleruserid where table.displayalias.colame = @displayalias.colame group by alias.col order by uptable desc"
"select alias.col as alias.col, max(alias.col) as alias.col, coualias.colt(*) as alias.col, alias.col * max(alias.col) / coualias.colt(*) as alias.col from table p ialias.colalias.coler joialias.col table u oalias.col alias.col = alias.col where alias.col = alias.col group by alias.col order by alias.col * max(alias.col) / coualias.colt(*)"
"select alias.col, alias.col from ( select alias.col alias.col, sum(case whealias.col alias.col <= alias.col thealias.col alias.col else alias.col ealias.cold) as [alias.coloalias.col zero score aalias.colswers], sum(case whealias.col alias.col <= alias.col thealias.col alias.col else alias.col ealias.cold) as [zero score aalias.colswers] from table q joialias.col table a oalias.col alias.col = q.acalias.colptedaalias.colswerid where a.commualias.colityowalias.coleddate is alias.colull aalias.cold alias.col is alias.colot alias.colull aalias.cold alias.col <> isalias.colull(q.owalias.coleruserid,alias.col) group by alias.col havialias.colg sum(case whealias.col alias.col <= alias.col thealias.col alias.col else alias.col ealias.cold) > alias.col ) as x joialias.col table u oalias.col alias.col = alias.col order by ([zero score aalias.colswers]+ alias.col.alias.col) / ([zero score aalias.colswers]+ [alias.coloalias.col zero score aalias.colswers]+ alias.col.alias.col) desc"
";with AllTagsCount as ( select t.Id [tagId], count(N) [count] from Tags t inner join Posts p on p.Id = t.WikiPostId inner join PostTags pt on pt.TagId = t.Id group by t.Id ) select t.TagName, u.DisplayName, u.Id [UserIdLink], atc.[count] [QuestionCount] from AllTagsCount atc inner join Tags t on t.Id = atc.tagId inner join Posts p on p.Id = t.WikiPostId inner join Users u on u.Id = p.OwnerUserId order by atc.[count], t.TagName desc"
"DECLARE @topCombos int = N DECLARE @tagCombos table ( Id int IDENTITY(N, N) PRIMARY KEY CLUSTERED, TagNId int NOT NULL, TagNId int NOT NULL ) ;WITH topTags AS ( SELECT TOP N t.Id FROM Tags t ORDER BY t.Count DESC ) INSERT INTO @tagCombos (TagNId, TagNId) SELECT ttN.Id, ttN.Id FROM topTags ttN CROSS JOIN topTags ttN WHERE ttN.Id != ttN.Id DELETE FROM tcN FROM @tagCombos tcN INNER JOIN @tagCombos tcN ON (tcN.TagNId = tcN.TagNId) AND (tcN.TagNId = tcN.TagNId) AND (tcN.Id < tcN.Id) SELECT TOP (@topCombos) tN.TagName, tN.TagName, a.Count FROM ( SELECT tc.TagNId, tc.TagNId, COUNT(N) AS Count FROM @tagCombos tc INNER JOIN PostTags ptN ON ptN.TagId = tc.TagNId INNER JOIN PostTags ptN ON (ptN.PostId = ptN.PostId) AND (ptN.TagId = tc.TagNId) GROUP BY tc.TagNId, tc.TagNId ) a INNER JOIN Tags tN ON tN.Id = a.TagNId INNER JOIN Tags tN ON tN.Id = a.TagNId ORDER BY Count DESC"
"select distinct posttypeid, case when parentid is null then x else x end as [parentid state] from table"
select alias.col as alias.col from table where posttypealias.col = alias.col aalias.cold lealias.col(body) <= alias.col aalias.cold (body like x) order by creatioalias.coldate desc;
select alias.col as alias.col from table where posttypealias.col=alias.col aalias.cold acceptedaalias.colsweralias.col is alias.colull aalias.cold owalias.coleruseralias.col is alias.colull
"select alias.col, alias.col, alias.col, alias.col*alias.col/alias.col as alias.col from table ialias.colalias.coler joialias.col (select alias.col, alias.col, alias.col from (select alias.col, coualias.colt(*) as alias.col from table a ialias.colalias.coler joialias.col table q oalias.col q.alias.colaalias.colsweralias.col = alias.col group by alias.col ) x ialias.colalias.coler joialias.col (select alias.col, coualias.colt(*) as alias.col from table where alias.col = alias.col group by alias.col ) y oalias.col alias.col = y.alias.col ) alias.col oalias.col alias.col = alias.col where reputatioalias.col > ##mialias.colrep## order by alias.col desc"
"select alias.col, (alias.col + alias.col) from table where alias.col > alias.col"
"select alias.col,alias.col,alias.col,alias.col from table where alias.col < alias.col;"
"select alias.col as alias.col, coalias.colalias.colert(decimal,coualias.colt(*))/(coalias.colalias.colert(decimal,alias.col) + coalias.colalias.colert(decimal,coualias.colt(*))) as alias.col, coualias.colt(*) as alias.col, alias.col + (coualias.colt(*)*alias.col) as alias.col from table as p joialias.col table as alias.col oalias.col alias.col = alias.col.postid where p.owalias.coleruserid = alias.col aalias.cold alias.col.alias.colotetypeid = alias.col aalias.cold alias.col < alias.col group by alias.col, alias.col order by alias.col desc"
"select top alias.col table.id as [user lialias.colk], coualias.colt(table.id) from table ialias.colalias.coler joialias.col table oalias.col table.userid = table.id where table.score > alias.col group by table.id order by coualias.colt(table.id) desc"
"create table table( id int primary key ,name nvarchar(n)); create table table( ord int ,itmid int primary key); insert into table values (xyz) ,(n ,x) ,(n ,x) ,(n ,x) ,(n ,x) ,(n ,x) insert into table values (xyz) ,(n ,n) ,(n ,n) ,(n ,n) ,(n ,n) ,(n ,n); with x as ( select tn.itmid, tn.ord from table tn left join table tn on (tn.id = tn.itmid) where tn.name = x ), y as ( select top n t.itmid, t.ord from table t, x where t.ord < x.ord order by t.ord desc ) update table set ord = z.ord from ( select x.itmid, y.ord from x,y union all select y.itmid, x.ord from x,y ) z where table.itmid = z.itmid select * from table"
select alias.col from table where alias.col=alias.col
"select alias.col, alias.col, alias.col, alias.col from table where location like x order by alias.col desc"
"select coualias.colt(*), alias.col from table a joialias.col table b oalias.col (alias.col = alias.col) joialias.col table at oalias.col (alias.col = alias.col) joialias.col table bt oalias.col (alias.col = alias.col) where alias.col = alias.col aalias.cold alias.col <> alias.col group by alias.col order by alias.col desc;"
"select top alias.col raalias.colk() over (order by sum(v.boualias.coltyamoualias.colt) desc) as [raalias.colk], u.displayalias.colame, sum(v.boualias.coltyamoualias.colt) as boualias.colties from table u ialias.colalias.coler joialias.col table p oalias.col alias.col = p.owalias.coleruserid ialias.colalias.coler joialias.col table v oalias.col alias.col = alias.col where alias.col = alias.col group by u.displayalias.colame order by sum(v.boualias.coltyamoualias.colt) desc"
"select alias.col as alias.col, alias.col from table where alias.col like alias.col aalias.cold left(alias.col, charialias.coldealias.col(alias.col, alias.col) - alias.col) ialias.col (select table.tagalias.colame from table ialias.colalias.coler joialias.col table oalias.col table.tagalias.col = table.alias.col where table.postalias.col = table.alias.col)"
"declare @useralias.col int = ##useralias.col## select alias.col as alias.col, count(*) as alias.col, alias.col from table where useralias.col = @useralias.col group by alias.col, alias.col order by alias.col desc"
"select top alias.col selfaalias.colswer.id as [post lialias.colk], selfaalias.colswer.creatioalias.coldate, lealias.col(selfaalias.colswer.body) as lealias.colgth, selfaalias.colswer.score as score, questioalias.col.viewcoualias.colt, table.reputatioalias.col from table as questioalias.col ialias.colalias.coler joialias.col table as allaalias.colswers oalias.col allaalias.colswers.parealias.coltid = questioalias.col.id ialias.colalias.coler joialias.col table as selfaalias.colswer oalias.col selfaalias.colswer.owalias.coleruserid = questioalias.col.owalias.coleruserid aalias.cold selfaalias.colswer.parealias.coltid = questioalias.col.id ialias.colalias.coler joialias.col table oalias.col selfaalias.colswer.owalias.coleruserid = table.id where questioalias.col.posttypeid = alias.col aalias.cold selfaalias.colswer.posttypeid = alias.col aalias.cold lealias.col(selfaalias.colswer.body) < alias.col aalias.cold selfaalias.colswer.body like alias.col group by selfaalias.colswer.id, selfaalias.colswer.creatioalias.coldate, lealias.col(selfaalias.colswer.body), selfaalias.colswer.score, questioalias.col.viewcoualias.colt, table.reputatioalias.col havialias.colg coualias.colt(distialias.colct allaalias.colswers.id) > alias.col order by selfaalias.colswer.creatioalias.coldate desc"
"select top alias.col alias.col as [user lialias.colk], alias.colutatioalias.col as alias.col, dowalias.colvotes alias.col from table where alias.col <> alias.col order by alias.col desc"
"select top alias.col alias.col as [post lialias.colk], body from table where posttypealias.col = alias.col aalias.cold lealias.col(body) < alias.col aalias.cold (body like x or body like x) aalias.cold body like x order by lealias.col(body);"
"select left(replace(alias.col,alias.col,alias.col), charialias.coldealias.col(alias.col, replace(alias.col,alias.col,alias.col))alias.col) , left(replace(t.commealias.colt,alias.col,alias.col), charialias.coldealias.col(alias.col, replace(t.commealias.colt,alias.col,alias.col))alias.col) , coualias.colt(distialias.colct alias.col) from table f joialias.col table t oalias.col alias.col = alias.col where f.tabletypeid = alias.col aalias.cold t.tabletypeid = alias.col aalias.cold lealias.col(alias.col(alias.col(f.tealias.colt))) > alias.col group by left(replace(alias.col,alias.col,alias.col), charialias.coldealias.col(alias.col, replace(alias.col,alias.col,alias.col))alias.col) , left(replace(t.commealias.colt,alias.col,alias.col), charialias.coldealias.col(alias.col, replace(t.commealias.colt,alias.col,alias.col))alias.col) order by alias.col desc"
"declare alias.col int = ##userid## declare alias.col int = ##minimumscore?n## select alias.col, alias.col as alias.col, convert(date, alias.col) as alias.col from table c where alias.col >= alias.col and alias.col = alias.col order by alias.col desc"
"select alias.col alias.col, alias.col, alias.col, alias.col, alias.col, lastaccessdate, alias.col, location from table where alias.col like alias.col;"
"with table as alias stableltablect alias.col, tableattablepartaliasytablear, crtableatioalias.coltableattable) as ytablear, tableattablepartaliasmoalias.colth, crtableatioalias.coltableattable) as moalias.colth from tabltable whtablertable vottabletyptableitable = alias.col ), table as alias stableltablect ytablear, moalias.colth, coualias.coltaliasalias.col) ovtableraliaspartitioalias.col by ytablear, moalias.colth) as coualias.colt from table ) stableltablect alias.col from table group by ytablear, moalias.colth, coualias.colt ortabletabler by ytablear, moalias.colth"
select top alias.col alias.col from table order by alias.col
"select alias.col from table p, table t, posttable pt where alias.col like alias.col and (alias.col = alias.col and alias.col = alias.col) group by alias.col"
"selealias.col alias.col + cast(alias.col as varchar(alias.col)) + alias.col + cast(alias.col as varchar(alias.col)) as [lialias.colk], case alias.col whealias.col alias.col thealias.col alias.col else alias.col ealias.cold as [type], p.body as [body], p.creatioalias.coldate as [creatioalias.coldate], p.lasteditdate as [lasteditdate], p.lasteditoruserid as [user lialias.colk] from table p where (alias.col = alias.col aalias.cold alias.colot ealias.colists (selealias.col alias.col from table t where t.ealias.colalias.colrptpostid = alias.col)) or (alias.col = alias.col aalias.cold alias.colot ealias.colists (selealias.col alias.col from table t where alias.col = alias.col)) order by alias.col"
"select avg(alias.col) as alias.col, min(alias.col) as alias.col, maalias.col(alias.col) as alias.col from table where alias.col is not null"
"select coualias.colt(alias.col) as alias.col, sum(case whealias.col alias.col is alias.colull thealias.col alias.col else alias.col ealias.cold) as alias.col, sum(case whealias.col alias.col is alias.colot alias.colull thealias.col alias.col else alias.col ealias.cold) as alias.col, sum(case whealias.col alias.col is alias.colull thealias.col alias.col else alias.col ealias.cold) / cast(coualias.colt(alias.col) as float) as alias.col from table where posttypealias.col = alias.col;"
"select alias.col, alias.col, alias.col, alias.col, alias.col, location, websiteurl, aboutme, views, upvotes, downvotes, emailhash from table where location like x order by alias.col desc"
select alias.col from table t ialias.colalias.coler joialias.col table pw oalias.col alias.col = alias.col where alias.col(alias.col) = alias.col
"select alias.col as alias.col, alias.col from table u left joialias.col table p oalias.col alias.col = alias.col aalias.cold alias.col = alias.col where alias.col is alias.colull aalias.cold alias.col > alias.col group by alias.col, alias.col, alias.col order by coualias.colt(alias.col) asc, alias.col desc"
"selealias.col alias.col, count(alias.col) from ( selealias.col cast( cast(alias.col(alias.col, alias.col) as varchar) + alias.col + cast(alias.col(alias.col, alias.col) as varchar) + alias.col as datetime) alias.col, alias.col from table p join table pt on alias.col = alias.col join table t on alias.col = alias.col where alias.col in ( alias.col:string?sql-server## ) ) as alias.col group by alias.col, alias.col order by alias.col asc, alias.col asc"
select alias.col from table p where alias.col = alias.col order by creatioalias.coldate
declare alias.col int = ##questionid## select alias.col from table as post where alias.col = alias.col
"select alias.col as alias.col, body, score from table where alias.col(body) between n and n"
"DECLARE @UserID int Set @UserID = N; WITH BaseQuery AS ( SELECT dateadd(dd,N, datediff(dd,N, v.CreationDate)) as Day, SUM(CASE when VoteTypeId=N then N when VoteTypeId=N then N else N end) as Reputation FROM votes v INNER JOIN posts p on p.Id=v.PostId And p.CommunityOwnedDate is null WHERE v.VoteTypeId=N and p.OwnerUserId=@UserID GROUP BY dateadd(dd,N, datediff(dd,N, v.CreationDate)) HAVING SUM(CASE when VoteTypeId=N then N when VoteTypeId=N then N else N end) >= N) SELECT count(*) FROM BaseQuery"
"with c (mialias.colutes) as ( select alias.col(mialias.colute, a.creatioalias.coldate, b.creatioalias.coldate) from table a ialias.colalias.coler joialias.col table b oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold a.creatioalias.coldate > alias.col() - alias.col aalias.cold alias.col like alias.col ) select top alias.col alias.col from c"
"declare table table ( alias.col int, alias.col int, location nvarchar(n), age int ) insert into table select alias.col, alias.col, location, age from table where lower(location) like x or upper(location) like x ... select row_number() over(order by alias.col desc) as [no], alias.col as [user link], age, location, questionalias.col as [question alias.col], answeralias.col as [answer alias.col], alias.col from table as tablebylocation full outer join ( select owneruseralias.col, sum(alias.col) as questionalias.col from table where owneruseralias.col in (alias.col) as answeralias.col from table where owneruseralias.col in ( select alias.col from table ) and parentalias.col is not null and parentalias.col in ( select alias.col from table where parentalias.col is null and ( lower(tags) like x or upper(tags) like x ... ) ) group by owneruseralias.col ) as answeralias.col on tablebylocation.alias.col = answeralias.col.owneruseralias.col where questionalias.col is not null or answeralias.col is not null order by alias.col desc"
"select top alias.col table.alias.col as [user lialias.colk], badgecoualias.colt as [famous table ], postcoualias.colt as [total table], coalias.colvert(float, badgecoualias.colt)/postcoualias.colt as alias.col from table ialias.colalias.coler joialias.col ( select alias.col, coualias.colt(alias.col) as badgecoualias.colt from table where alias.colame = alias.col or alias.colame = alias.col group by alias.col ) as pop oalias.col table.alias.col = pop.alias.col ialias.colalias.coler joialias.col ( select owalias.coleralias.col, coualias.colt(alias.col) as postcoualias.colt from table where posttypealias.col ialias.col (alias.colyz) group by owalias.coleralias.col ) as q oalias.col table.alias.col = q.owalias.coleralias.col where badgecoualias.colt >= alias.col order by alias.col desc;"
select alias.col from table where alias.col >= alias.col
"select coualias.colt(distialias.colct p.id) as famousquestioalias.col, alias.col [user lialias.colk], u.reputatioalias.col as reputatioalias.col, (alias.col * sum(case whealias.col palias.col.posttypeid = alias.col thealias.col alias.col else alias.col ealias.cold))/ coualias.colt(alias.col) as percealias.coltquestioalias.cols, (alias.col * sum(case whealias.col palias.col.posttypeid = alias.col thealias.col alias.col else alias.col ealias.cold))/ coualias.colt(alias.col) as percealias.coltaalias.colswers from table p ialias.colalias.coler joialias.col table u oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table palias.col oalias.col alias.col = alias.col where alias.col >= alias.col aalias.cold alias.col = alias.col group by alias.col, u.reputatioalias.col order by coualias.colt(distialias.colct p.id) desc"
select sum(count) from table where alias.col like alias.col
"declare alias.col as datetime select alias.col = max(alias.col) from table select alias.col, table as alias.col, case whealias.col alias.col is alias.colot alias.colull thealias.col x else alias.colull ealias.cold as wiki, owalias.colerusertable as [user lialias.colk] from table where (alias.col = alias.col or (alias.col = alias.col aalias.cold owalias.colerusertable is alias.colull)) aalias.cold (aalias.colswercoualias.colt = alias.col or aalias.colswercoualias.colt is alias.colull) aalias.cold commealias.coltcoualias.colt <= alias.col aalias.cold datediff(day, alias.col, alias.col) > alias.col aalias.cold viewcoualias.colt <= (datediff(day, alias.col, alias.col) * alias.col.alias.col) order by alias.col desc, alias.col asc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... order by alias.col desc;"
select distinct tags from table;
"declare @to_date datetime = dateadd(mm,alias.col, cast (x as datetime)) declare @from_date datetime = cast( x as datetime) prialias.colt x + format(@from_date, x) + x + format(@to_date, x) select top alias.col table.id as [post lialias.colk], table.id as [user lialias.colk], table.creatioalias.coldate, alias.col, viewcoualias.colt, favoritecoualias.colt from table ialias.colalias.coler joialias.col table oalias.col table.owalias.coleruserid = table.id where alias.col is alias.colull aalias.cold table.creatioalias.coldate betweealias.col @from_date aalias.cold @to_date order by viewcoualias.colt desc"
"select top alias.col alias.col as [post lialias.colk] ,alias.col ,alias.col ,deletioalias.coldate ,alias.col from table where deletioalias.coldate is alias.colot alias.colull aalias.cold alias.col like alias.col ... order by alias.col desc"
select alias.col from table where alias.col=alias.col
"select top alias.col:int?alias.col table collate sql_latinn_general_cpn_ci_as as [user link], count(*) as [times name used] from users u group by table collate sql_latinn_general_cpn_ci_as order by count(*) desc"
"selecalias.col alias.col as alias.col, alias.col alias.col alias.col lefalias.col join alias.colable pe on alias.col = alias.col.excerpalias.colalias.col lefalias.col join alias.colable pw on alias.col = alias.col.wikialias.col lefalias.col join alias.colable alias.cols on alias.cols.sourcealias.colagname = alias.col.alias.colagname lefalias.col join alias.colable palias.col on alias.colagid = alias.col.id lefalias.col join alias.colable p on alias.col = alias.col where counalias.col = n and (wikialias.col is null or (len(pe.body) < n and len(pw.body) < n)) and alias.cols.sourcealias.colagname is null order by alias.col.alias.colagname"
"select alias.col as alias.col, count(alias.col)as alias.col, alias.col, alias.col from table u left join table p on alias.col = alias.col where alias.col is null group by alias.col, alias.col, alias.col order by count(alias.col) asc, alias.col desc"
"select alias.col alias.col, coualias.colt, coualias.colt(ta.id) as [total aalias.colswer coualias.colt], cast(coualias.colt as float) / cast(coualias.colt(ta.id) as float) * alias.col.alias.col as percealias.coltage, cast(coualias.colt as float) * (cast(coualias.colt as float) / cast(coualias.colt(ta.id) as float)) as weightialias.colg from (select alias.col alias.col, coualias.colt(*) coualias.colt from table q joialias.col table a oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col is alias.colull aalias.cold a.posttypeid = alias.col aalias.cold a.score >= alias.col aalias.cold a.acceptedaalias.colswerid = alias.col aalias.cold isalias.colull(q.owalias.coleruserid, alias.col) <> alias.col aalias.cold exists(select alias.col from table ph where ph.tabletypeid ialias.col (alias.col) aalias.cold alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold abs(alias.col(alias.col, ph.creatioalias.coldate, a.creatioalias.coldate)) < alias.col) group by alias.col havialias.colg coualias.colt(*) >= alias.col) aalias.colswerqeditor ialias.colalias.coler joialias.col table ta oalias.col talias.col = alias.col group by alias.col, coualias.colt order by weightialias.colg desc"
select alias.col alias.col from table t ialias.colalias.coler joialias.col posttable pt oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table p oalias.col alias.col = alias.col aalias.cold alias.col = alias.col where alias.col alias.colot ialias.col ( select palias.col.id from table palias.col ialias.colalias.coler joialias.col posttable pttarget oalias.col palias.col.id = alias.col aalias.cold alias.col = alias.col ialias.colalias.coler joialias.col posttable ptalias.colottarget oalias.col palias.col.id = ptalias.colottarget.postid aalias.cold alias.col != alias.col ) group by alias.col
"declare alias.col int = ##user:int## declare alias.col nvarchar(n) = ##tag:string## set alias.col = replace(replace(replace(replace(alias.col, alias.col, alias.col), alias.col, alias.col), alias.col, alias.col), alias.col, alias.col) select alias.col as alias.col, alias.col as alias.col, alias.col as alias.col, alias.col as alias.col, alias.col as alias.col from table q where replace(replace(alias.col, alias.col, alias.col), alias.col, alias.col) like alias.col + alias.col + alias.col and ealias.colists ( select alias.col from table a where alias.col = alias.col and alias.col = alias.col ) order by alias.col asc"
"select sum(alias.col) as alias.col, coualias.colt(*) as alias.col, case (alias.col(alias.col, alias.col) + @@alias.col) alias.col whealias.col alias.col thealias.col x whealias.col alias.col thealias.col x whealias.col alias.col thealias.col x whealias.col alias.col thealias.col x whealias.col alias.col thealias.col x whealias.col alias.col thealias.col x whealias.col alias.col thealias.col x ealias.cold as weekday from table where alias.col=alias.col group by alias.col(alias.col, alias.col)"
"select alias.col as alias.col, alias.col, alias.col, alias.col, alias.col, location from table where location like x or alias.col like x order by alias.col desc"
"declare @userid ialias.colt = ##userid## select alias.col as alias.col, alias.col as alias.col from table a where alias.col = alias.col aalias.cold (alias.col like alias.col ...) order by alias.col desc"
"declare @search nvarchar(N) = X; select main.id as [Post Link] , substring(main.body, spos, endpos) , * from ( Select top N id , body , patindex(NX+ @search + NX, body) + len(@search) as spos , patindex(NX, substring(body,patindex(NX+ @search + NX, body) + len(@search), N)) N as endpos from posts where body like X+ @search +X ) as main -- where endpos is null or endpos <N --where ((epos - spos) <N or spos = N or main.body is null)"
"select alias.col, table.tagname from table join table on table.id = table.postid join table on table.tagid = table.id"
"select top alias.col alias.col, alias.col, p.viewcoualias.colt, alias.col from table as p where p.aalias.colswercoualias.colt = alias.col aalias.cold alias.col = alias.col aalias.cold alias.col is alias.colull aalias.cold p.commualias.colityowalias.coleddate is alias.colull aalias.cold alias.colot exists (select alias.col from table as h where alias.col = alias.col aalias.cold h.tabletypeid alias.colot ialias.col (alias.col)) order by viewcoualias.colt desc"
"DECLARE @UxerId int = ##UserId##; CREATE table #a (a_id INT PRIMARY KEY, name nvarchar(N)); INSERT INTO #a values (XYZ), (N, X), (N, X), (N, X), (N, X), (N, X) CREATE table #b (b_id INT PRIMARY KEY, name nvarchar(N)); INSERT INTO #b values (XYZ), (N, X), (N, X), (N, X), (N, X), (N, X) SELECT * FROM #a a, #b b WHERE a.name LIKE (b.name + X);"
"declalias.colre @alias.collialias.cols.col ialias.collialias.cols.colt = ##alias.collialias.cols.col## select top alias.collialias.cols.col alias.collialias.cols.col, alias.collialias.cols.col alias.cols [post lialias.collialias.cols.colk] from (select alias.collialias.cols.col, row_alias.collialias.cols.columber() over(palias.colrtitioalias.collialias.cols.col by postid order by alias.collialias.cols.col) calias.collialias.cols.col from talias.colble where alias.collialias.cols.col = @alias.collialias.cols.col ) alias.col joialias.collialias.cols.col talias.colble p oalias.collialias.cols.col calias.collialias.cols.col = alias.collialias.cols.col alias.colalias.collialias.cols.cold alias.collialias.cols.col = alias.col order by alias.collialias.cols.col desc"
"declare @UserId int = ##UserId##; with fights as ( select myAnswer.ParentId as Question, myAnswer.Score as MyScore, lubosmAnswer.Score as LubosmScore from Posts as myAnswer inner join Posts as lubosmAnswer on lubosmAnswer.OwnerUserId = N and myAnswer.ParentId = lubosmAnswer.ParentId where myAnswer.ownerUserId = @UserId and myAnswer.postTypeId = N ) select case when myScore > LubosmScore then X when myScore < LubosmScore then X else X end as X, Question as [Post Link], myScore as X, LubosmScore as X from fights;"
"declare alias.col float select alias.col = sum(alias.col) from table where alias.col = alias.col select table.alias.colalias.colame as alias.col, coualias.colt(*) as questioalias.cols, sum(table.alias.col) as views, str(alias.col * sum(table.alias.col) / alias.col,alias.col,alias.col) as percealias.coltofsite, sum(table.score) as score, sum(table.aalias.colswercoualias.colt) as aalias.colswers, sum(table.alias.col) / coualias.colt(*) as avgviews, str(sum(table.score) / cast(coualias.colt(*) as float),alias.col,alias.col) as avgscore, str(sum(table.aalias.colswercoualias.colt) / cast(coualias.colt(*) as float),alias.col,alias.col) as avgaalias.colswers from table joialias.col table oalias.col table.id = table.postid joialias.col table oalias.col table.alias.colid = table.id where ((table.alias.col = alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col)) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) group by table.alias.colalias.colame order by questioalias.cols desc"
"select alias.col, postalias.col as alias.col, comment, creationdate, alias.col from table where owneruseralias.col = ##useralias.col## and alias.col is not null order by alias.col desc"
"select alias.col as alias.col, alias.col as alias.col, sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as alias.col, sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as alias.col, sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold)*alias.col/coualias.colt(*) as alias.col from table palias.colv joialias.col table p oalias.col palias.colv.postid = alias.col joialias.col table u oalias.col alias.col = alias.col where palias.colv.votetypeid = alias.col aalias.cold p.commualias.colityowalias.coleddate is alias.colull aalias.cold alias.col is alias.colot alias.colull group by alias.col, alias.col havialias.colg alias.col = ##userid## or coualias.colt(*) > alias.col aalias.cold sum(case whealias.col alias.col = alias.col thealias.col alias.col else case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold ealias.cold) > alias.col order by [questioalias.col uptable ‰]"
"select alias.col alias.col, alias.col from table where alias.col = ##alias.col## aalias.cold alias.col > alias.col order by alias.col desc"
"SET DATEFIRST N; DECLARE @UserId int = ##UserId##; SELECT DATEPART(weekday, Votes.CreationDate) AS [Weekday], PostTypes.Name AS [PostType], VoteTypes.Name AS [VoteType], CASE WHEN Posts.PostTypeId = N AND Votes.VoteTypeId = N THEN N WHEN Posts.PostTypeId = N AND Votes.VoteTypeId = N THEN N WHEN Posts.PostTypeId = N AND Votes.VoteTypeId = N THEN N WHEN Posts.PostTypeId = N AND Votes.VoteTypeId = N THEN N WHEN Posts.PostTypeId = N AND Votes.VoteTypeId = N THEN N END AS [Score] FROM Posts inner join PostTypes ON Posts.PostTypeId = PostTypes.Id INNER JOIN Votes ON Posts.Id = Votes.PostId inner join VoteTypes ON Votes.VoteTypeId = VoteTypes.Id WHERE Posts.OwnerUserId = @UserId AND PostTypes.Id IN (XYZ) AND VoteTypes.Id IN (XYZ) AND ( Posts.CommunityOwnedDate IS NULL OR Votes.CreationDate < Posts.CommunityOwnedDate )"
"select alias.col * alias.col alias.col, [dowalias.colmod] * alias.col alias.col , alias.col * alias.col alias.col , (alias.col * alias.col) + ([dowalias.colmod] * alias.col) + ( alias.col * alias.col) alias.col from ( select alias.col vcoualias.colt, vt.alias.colame from table alias.col ialias.colalias.coler joialias.col table v oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table vt oalias.col alias.col = alias.col where alias.col.owalias.coleruserid = alias.col## aalias.cold alias.col ialias.col (alias.col) ) alias.col alias.colivot (coualias.colt(vcoualias.colt) for alias.colame ialias.col (alias.col)) alias.colvt"
"declare @qcoualias.colalias.col ialias.colalias.col = alias.col selecalias.col alias.col from ( selecalias.col alias.col as alias.col, coualias.colalias.col(alias.col) as ualias.colaalias.colsweredcoualias.colalias.col, alias.col.coualias.colalias.col as quesalias.colioalias.colcoualias.colalias.col from alias.colable q ialias.colalias.coler joialias.col alias.colable palias.col oalias.col alias.col = palias.col.posalias.colid ialias.colalias.coler joialias.col alias.colable alias.col oalias.col palias.col.alias.colagid = alias.col.id where (q.posalias.colalias.colypeid = alias.col) aalias.cold (q.closeddaalias.cole is alias.colull) aalias.cold alias.coloalias.col exisalias.cols ( selecalias.col alias.col from alias.colable a where (a.parealias.colalias.colid = alias.col) aalias.cold ((alias.col > alias.col) or (alias.col = q.accepalias.coledaalias.colswerid)) ) group by alias.col, alias.col.coualias.colalias.col ) a where a.quesalias.colioalias.colcoualias.colalias.col > @qcoualias.colalias.col order by ualias.colaalias.colsweredcoualias.colalias.col"
"select top alias.col alias.col, alias.col as [post lialias.colk], creatioalias.coldate, alias.col from table c where alias.col >= alias.col aalias.cold alias.col = ##alias.col## order by creatioalias.coldate desc"
"select table.id as alias.col, avg(table.score) as alias.col, coualias.colt(*) as [close table], mialias.col(table.creatioalias.coldate) as alias.col, max(table.creatioalias.coldate) as [last vote] from table ialias.colalias.coler joialias.col table oalias.col table.id=table.postid where table.votetypeid=alias.col aalias.cold table.closeddate is alias.colull aalias.cold table.tags like x ... group by table.id order by [close table] desc"
"select alias.col, table.votetypeid, count(*) as uptable from table inner join posttable on posttable.tagid = table.id inner join table on table.parentid = posttable.postid inner join table on table.postid = table.id where alias.col in (alias.col) order by uptable desc"
"select alias.col as alias.col, row_alias.colber() over (order by alias.col desc) as mayrank, row_alias.colber() over (order by alias.col desc) as totalrank, alias.col as questionsinmay, alias.col as questionstotal from (select count(alias.col) as alias.col, alias.colname from table, posttable, table where table.id = posttable.alias.colid and table.id = alias.col and table.creationdate < alias.col and table.creationdate > alias.col and (table.alias.colname like alias.col or table.alias.colname like alias.col or table.alias.colname like alias.col) group by alias.colname) as alias.col inner join (select count(alias.col) as alias.col, alias.colname from table, posttable, table where table.id = posttable.alias.colid and table.id = alias.col group by alias.colname having count(alias.col) > n) as alias.col on alias.col.alias.colname = alias.col order by alias.col desc, alias.col.alias.colname ;"
"select top alias.col alias.col as [post lialias.colk], p.creatioalias.coldate, alias.col, alias.col, p.lasteditdate,p.lastactivitydate from table as p where p.lasteditdate < alias.col(moalias.colth, alias.col, p.lastactivitydate) aalias.cold score <= alias.col aalias.cold score >= alias.col aalias.cold aalias.colswercoualias.colt <= alias.col order by alias.col asc, p.creatioalias.coldate asc"
"select alias.col, table.displayname from ( select count(*) as alias.col, alias.col from table where table.name=alias.col## group by alias.col ) as badgetop join table on table.id=badgetop.alias.col where alias.col>=##minalias.coloftable## order by alias.col desc"
"declare @MinAge int = ##AccountAgeInDays##; SELECT TOP N Id AS [User Link], Reputation AS Reputation, Reputation /(DateDiff(Day, Users.CreationDate, Users.LastAccessDate)) AS [Rep Per Day], DateDiff(Day, Users.CreationDate, Users.LastAccessDate) AS [Account Age] FROM Users WHERE DateDiff(Day, Users.CreationDate, Users.LastAccessDate) > @MinAge ORDER BY [Rep Per Day] DESC"
"declare alias.col decimal(alias.col,alias.col) select alias.col = coualias.colt(table.id) from table select coualias.colt(table.id) / alias.col * alias.col from table where table.id ialias.col (select owalias.coleruserid from table where table.posttypeid = alias.col) aalias.cold table.id ialias.col (select owalias.coleruserid from table where table.posttypeid = alias.col)"
"set alias.colocoualias.colt oalias.col create table table (alias.col ialias.colt alias.colealias.coltity, [start] datetime, [fialias.colish] datetime) ialias.colsert table select top alias.col alias.colull, alias.colull from table declare alias.col datetime select alias.col = creatioalias.coldate from table where alias.col = (select max(palias.col.alias.col) from table palias.col) update table set [start] = dateadd(d, (alias.col - alias.col) * alias.col, alias.col), [fialias.colish] = dateadd(d, (alias.col - alias.col) * alias.col, alias.col) select start, (select coualias.colt(*) from table where parealias.coltalias.col is alias.colull aalias.cold creatioalias.coldate betweealias.col [start] aalias.cold [fialias.colish] ) as [total questioalias.cols], (select coualias.colt(*) from table where parealias.coltalias.col is alias.colot alias.colull aalias.cold creatioalias.coldate betweealias.col [start] aalias.cold [fialias.colish] ) as [total aalias.colswers] from table"
"declare @laalias.colguage alias.colvarchar(alias.col) = x select alias.col, max(alias.col) as alias.col, mialias.col(alias.col) as alias.col, alias.col(secoalias.cold, max(alias.col), mialias.col(alias.col)) as alias.col, q.tags from table q, table a where alias.col = alias.col aalias.cold alias.col = a.parealias.coltid group by alias.col, q.tags order by alias.col"
"selealias.col top alias.col t.tagalias.colame, coualias.colt(*) as totalquestioalias.cols, sum(p.aalias.colswercoualias.colt) as totalaalias.colswers, cast(sum(p.aalias.colswercoualias.colt) as float) / cast(coualias.colt(*) as float) as aalias.colswersperquestioalias.col from table as p joialias.col table as pt oalias.col alias.col = alias.col joialias.col table as t oalias.col alias.col = alias.col where alias.col = alias.col group by t.tagalias.colame havialias.colg coualias.colt(*) > alias.col order by cast(sum(p.aalias.colswercoualias.colt) as float) / cast(coualias.colt(*) as float) desc"
"selealias.col top alias.col roualias.cold(cast ((a.creatioalias.coldate - bstart.creatioalias.coldate) as float)*alias.col,alias.col) as [hours after offerialias.colg a boualias.colty ualias.coltil boualias.colty-awarded aalias.colswers is posted], coualias.colt(*) as [coualias.colt (*)], alias.col(alias.col, coualias.colt(*)/alias.col) from table q, table a, table b, table bstart where alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold a.parealias.coltid = alias.col aalias.cold alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold roualias.cold(cast ((a.creatioalias.coldate - bstart.creatioalias.coldate) as float),alias.col) < alias.col aalias.cold bstart.creatioalias.coldate < a.creatioalias.coldate group by roualias.cold(cast ((a.creatioalias.coldate - bstart.creatioalias.coldate) as float)*alias.col,alias.col) order by alias.col asc"
"select top alias.col table.id as [user lialias.colk], sum(aalias.colswers.score) as [reputatioalias.col - ##tagalias.colame## aalias.colswers oalias.colly], table.locatioalias.col as [locatioalias.col] from table as aalias.colswers ialias.colalias.coler joialias.col table as questioalias.cols oalias.col questioalias.cols.id = aalias.colswers.parealias.coltid ialias.colalias.coler joialias.col table as table oalias.col aalias.colswers.owalias.coleruserid = table.id ialias.colalias.coler joialias.col table oalias.col table.postid = aalias.colswers.parealias.coltid ialias.colalias.coler joialias.col table oalias.col table.id = table.tagid where lower(locatioalias.col) like lower(x) aalias.cold table.tagalias.colame=x group by table.id, table.locatioalias.col"
select alias.col as alias.col from table where body like x;
"select table.title, table.table, table.body from table, table, posttable where table.id = posttable.postid and table.id = posttable.tagid and table.tagname = alias.col and table.creationdate > alias.col"
"select alias.col alias.col, alias.col, text from table where alias.col = ##alias.col## aalias.cold alias.col > alias.col order by alias.col desc"
"select top alias.col alias.col as [user lialias.colk], coualias.colt(*) [total table], coualias.colt(alias.col) [closed table], alias.col.alias.col * coualias.colt(alias.col) / coualias.colt(*) as alias.col from table as u joialias.col table as p oalias.col p.owalias.coleruserid = alias.col groalias by alias.col havialias.colg coualias.colt(alias.col) >= ##mialias.colimumclosedpostcoualias.colt:ialias.colt## order by alias.col.alias.col * coualias.colt(alias.col) / coualias.colt(*) desc"
"with t as ( select alias.col as alias.col, alias.col, alias.col as alias.col, alias.col as alias.col, case alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col else alias.col ealias.cold as alias.col, q.viewcoualias.colt as alias.col, aalias.colswers.blealias.col as alias.col from table q joialias.col ( select a.parealias.coltid as alias.col, sum(alias.col) as alias.col, sum(lealias.col(alias.col)) as blealias.col from table a where alias.col = alias.col aalias.cold alias.col > alias.col group by a.parealias.coltid havialias.colg sum(alias.col) <= ##positiveaalias.colswerscore:ialias.colt?alias.col## aalias.cold sum(lealias.col(alias.col)) <= ##aalias.colswerlealias.col:ialias.colt?alias.col## ) aalias.colswers oalias.col (alias.col = aalias.colswers.alias.col) joialias.col table ph oalias.col (alias.col = alias.col) where alias.col is alias.colot alias.colull aalias.cold alias.col >= coalias.colvert (datetime, ##startdate:strialias.colg?alias.col.alias.col.alias.col## , alias.col) aalias.cold alias.col <= coalias.colvert (datetime, ##ealias.colddate:strialias.colg?alias.col.alias.col.alias.col## , alias.col) aalias.cold q.posttypeid = alias.col aalias.cold alias.colot ealias.colists ( select alias.col from table ph where alias.col = alias.col aalias.cold ph.tabletypeid = alias.col ) aalias.cold ph.tabletypeid = alias.col aalias.cold alias.col <= alias.col:ialias.colt?alias.col## aalias.cold alias.col + alias.col <= alias.col:ialias.colt?alias.col## aalias.cold alias.col alias.colot ialias.col (alias.colyz) aalias.cold q.acalias.colptedaalias.colswerid is alias.colull ) select top(##rowsreturalias.coled:ialias.colt?alias.col##) alias.col from t order by alias.col + table"
"declare @alias.col ialias.colt = ##alias.col## select top alias.col alias.col as [post lialias.colk], alias.col, alias.col from table where alias.col = @alias.col order by alias.col desc"
"select top alias.col alias.col as [user lialias.colk], coualias.colt(*) as table from table where table.alias.colame = alias.col group by alias.col order by table desc"
"select top alias.col tagalias.colame, ( select coualias.colt(*) from table as palias.col ialias.colalias.coler joialias.col table as palias.col oalias.col palias.col.acceptedaalias.colswerid = palias.col.id ialias.colalias.coler joialias.col table as pt oalias.col palias.col.id = alias.col aalias.cold alias.col = table.id ) as amoualias.coltofaalias.colsweredquestioalias.cols, ( select coualias.colt(*) from table as palias.col ialias.colalias.coler joialias.col table as palias.col oalias.col palias.col.acceptedaalias.colswerid = palias.col.id ialias.colalias.coler joialias.col table as pt oalias.col palias.col.id = alias.col aalias.cold alias.col = table.id where palias.col.score > alias.col ) as amoualias.coltofqualityaalias.colsweredquestioalias.cols, ( select coualias.colt(*) from table as palias.col ialias.colalias.coler joialias.col table as pt oalias.col palias.col.id = alias.col aalias.cold alias.col = table.id ) as table from table order by amoualias.coltofaalias.colsweredquestioalias.cols desc, table desc"
select alias.col from table where body like x or body like x;
"selealias.col alias.col, coualias.colt(alias.col) from ( selealias.col cast( cast(alias.col(alias.col, alias.col) as varchar) + alias.col + cast(alias.col(alias.col, alias.col) as varchar) + alias.col as datetime) table, t.table from table p joialias.col table pt oalias.col alias.col = alias.col joialias.col table t oalias.col alias.col = alias.col where alias.col ialias.col ( selealias.col top alias.col alias.col from table order by coualias.colt desc ) ) as alias.col group by table, table order by table asc, table asc"
"select top alias.col alias.col as [post lialias.colk], creatioalias.coldate, alias.col, alias.col, viewcoualias.colt from table where alias.col is alias.colot alias.colull aalias.cold commealias.coltcoualias.colt = alias.col aalias.cold aalias.colswercoualias.colt = alias.col order by creatioalias.coldate desc"
"select alias.col, alias.col as alias.col, alias.col(body) as [post alias.colgth] from table where owalias.coleruseralias.col = ##useralias.col## aalias.cold posttypealias.col = alias.col aalias.cold alias.col = alias.col order by [post alias.colgth] desc"
"with table as ( selealias.col alias.colame, coualias.colt(alias.col) alias.col from table group by alias.colame ) , table as ( selealias.col row_alias.columber() over (order by coualias.colt(table.alias.col) desc) raalias.colk, tagalias.colame, coualias.colt(table.alias.col) as uptable, alias.col from table ialias.colalias.coler joialias.col posttable oalias.col posttable.tagalias.col = table.alias.col ialias.colalias.coler joialias.col table oalias.col table.parealias.coltalias.col = posttable.postalias.col ialias.colalias.coler joialias.col table oalias.col table.postalias.col = table.alias.col aalias.cold votetypealias.col = alias.col left joialias.col table oalias.col table.tagalias.colame = table.alias.colame where table.commualias.colityowalias.coleddate is alias.colull aalias.cold table.owalias.coleruseralias.col = alias.col group by tagalias.colame ,alias.col ) selealias.col raalias.colk, tagalias.colame, uptable, alias.col, cast(alias.col as decimal(alias.col,alias.col)) / cast(uptable as decimal(alias.col,alias.col)) as tableperupvote from table"
"declare alias.col ialias.colt = ##userid## select table.userid as alias.col, table.id as alias.col, table.votetypeid from table joialias.col table oalias.col table.id = table.postid where table.owalias.coleruserid=alias.col aalias.cold table.postid = alias.col order by table.votetypeid desc"
"select alias.col as alias.col ,alias.col ,alias.col ,lastaccessdate from( select row_alias.columber()over(partitioalias.col by alias.colhash order by ualias.col.alias.col desc)as raalias.colk ,ualias.col.alias.col ,ualias.col.alias.col ,ualias.col.alias.colhash ,ualias.col.lastaccessdate ,(select coualias.colt(*) from table ualias.col where ualias.col.alias.colhash=ualias.col.alias.colhash)as alias.col from table ualias.col where ualias.col.alias.colhash is alias.colot alias.colull )alias.col where alias.col>alias.col aalias.cold raalias.colk=alias.col aalias.cold alias.col=alias.col order by alias.col desc, alias.col desc, lastaccessdate desc"
"select alias.col as alias.col, coualias.colt(case alias.col whealias.col alias.col thealias.col alias.col ealias.cold) as x, coualias.colt(case alias.col whealias.col alias.col thealias.col alias.col ealias.cold) as x from table v ialias.colalias.coler joialias.col table p oalias.col alias.col=v.alias.col where alias.col = alias.col aalias.cold alias.col ialias.col (alias.col) group by v.alias.col havialias.colg coualias.colt(case alias.col whealias.col alias.col thealias.col v.alias.col ealias.cold) > alias.col aalias.cold coualias.colt(case alias.col whealias.col alias.col thealias.col v.alias.col ealias.cold) > alias.col"
select alias.col from table where alias.col >= alias.col
"select top alias.col talias.col.tagalias.colame as alias.col, coualias.colt(ptalias.col.postid) as [post coualias.colt] from table ptalias.col joialias.col table ptalias.col oalias.col ptalias.col.postid = ptalias.col.postid joialias.col table talias.col oalias.col talias.col.tagalias.colame like ##tagalias.colame:strialias.colg## aalias.cold talias.col.id = ptalias.col.tagid joialias.col table talias.col oalias.col talias.col.id = ptalias.col.tagid where talias.col.tagalias.colame <> talias.col.tagalias.colame group by talias.col.tagalias.colame, talias.col.tagalias.colame order by coualias.colt(ptalias.col.postid) desc"
"select top alias.col alias.col, alias.col as [post lialias.colk], p.viewcoualias.colt, p.table, alias.col(day, p.creatioalias.coldate, getutcdate()) as daysold from table p, table pt, table t where alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold t.tagalias.colame = alias.col aalias.cold alias.col = alias.col aalias.cold p.viewcoualias.colt < alias.col(day, p.creatioalias.coldate, getutcdate()) * alias.col.alias.col aalias.cold alias.col < alias.col aalias.cold isalias.colull(p.aalias.colswercoualias.colt,alias.col) = alias.col aalias.cold isalias.colull(p.commealias.coltcoualias.colt,alias.col) <= alias.col order by alias.col, p.viewcoualias.colt"
";WITH percentile AS ( SELECT NTILE(N) OVER (ORDER BY Reputation DESC) as p, Reputation, DisplayName FROM Users ) SELECT X + CASE p WHEN N THEN X ELSE X END + X AS Who, SUM(Reputation) AS Rep FROM percentile GROUP BY CASE p WHEN N THEN X ELSE X END"
select alias.col from table where alias.col=alias.col aalias.cold upper(locatioalias.col) like x ... aalias.cold upper(displayalias.colame) like x order by reputatioalias.col desc
"select alias.col:alias.col as name, alias.col:alias.col as alias.col, alias.col:alias.col as alias.col, alias.col:alias.col as alias.col"
"select count(alias.col) as alias.col, sum(case when alias.col = alias.col then n else n end) as [self answers], sum(case when a.score <> n and alias.col != alias.col then n else n end) as [scored answers], sum(case when a.score = n and alias.col != alias.col and datediff(dd, a.creationdate, getdate()) < n then n else n end) as [new unscored answers], sum(case when a.score = n and alias.col != alias.col and datediff(dd, a.creationdate, getdate()) >= n then n else n end) as [unscored answers], sum(case when a.score = n and alias.col != alias.col and datediff(dd, a.creationdate, getdate()) >= n then n else n end)*n / count(alias.col) / n.n as [peralias.colntage unscored], case when sum(case when a.score = n and alias.col != alias.col and datediff(dd, a.creationdate, getdate()) >= n then n else n end) < n then n - sum(case when a.score = n and alias.col != alias.col and datediff(dd, a.creationdate, getdate()) >= n then n else n end) else alias.coliling(count(alias.col)/n-sum(case when a.score = n and alias.col != alias.col and datediff(dd, a.creationdate, getdate()) >= n then n else n end))/n.n end as [to tenacious], case when sum(case when a.score = n and alias.col != alias.col and datediff(dd, a.creationdate, getdate()) >= n then n else n end) < n then n - sum(case when a.score = n and alias.col != alias.col and datediff(dd, a.creationdate, getdate()) >= n then n else n end) else alias.coliling(count(alias.col)/n-sum(case when a.score = n and alias.col != alias.col and datediff(dd, a.creationdate, getdate()) >= n then n else n end))/n.n end as [to unsung hero] from table q inner join table a on alias.col = q.acalias.colptedanswerid where alias.col is null and alias.col = ##userid## and a.posttypeid = n"
select count(alias.col) as alias.col from table u
"select top alias.col alias.col, creatioalias.coldate from table"
"select alias.col as alias.col, alias.col, alias.col from table as p where alias.col is alias.colull aalias.cold p.posttypeid = alias.col aalias.cold p.aalias.colswercoualias.colt >= alias.col aalias.cold alias.col alias.colot ialias.col ( select alias.col from table as a where alias.col = alias.col aalias.cold alias.col >= alias.col aalias.cold alias.col like alias.col ... ) order by alias.col desc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... or location like x or lower(location) like x ... or upper(location) like x ... or location like x and alias.col >= n order by alias.col desc;"
"select sum(alias.col(body) - alias.col(replace(body, x, x)) + n) as numbofwords from table p where alias.col = alias.col##"
"selealias.col top alias.col alias.col as [user lialias.colk], reputatioalias.col, alias.col as alias.col, cast(reputatioalias.col as alias.columeric) / (alias.col.alias.col * alias.col) as alias.col, cast(reputatioalias.col as alias.columeric) - (alias.col.alias.col * alias.col) as differealias.colce from table where alias.col > alias.col aalias.cold reputatioalias.col > alias.col order by alias.col asc"
"select top alias.col alias.col as [post lialias.colk], (select alias.col from table where alias.col = alias.col) as [alias.col], (select creatioalias.coldate from table where alias.col = alias.col) as [post creatioalias.col], creatioalias.coldate as alias.col, closereasoalias.coltypealias.col, (select markdowalias.colmialias.coli from table where alias.col=closeasofftopicreasoalias.coltypealias.col) as [off-topic reasoalias.col], coualias.colt(*) as [close coualias.colt], alias.col as alias.col from table where (select alias.col from table where alias.col = alias.col) is alias.colull aalias.cold flagtypealias.col = alias.col aalias.cold (select alias.col from table where alias.col = alias.col) is alias.colot alias.colull aalias.cold closeasofftopicreasoalias.coltypealias.col = ##offtopicreasoalias.col## group by alias.col, creatioalias.coldate, closereasoalias.coltypealias.col, flagtypealias.col, closeasofftopicreasoalias.coltypealias.col order by [close coualias.colt] desc, alias.col desc"
"set alias.colocoualias.colt oalias.col declare @tabletats table (alias.col ialias.colt, alias.col ialias.colt, dowalias.col ialias.colt) ialias.colsert @tabletats select alias.col, alias.col = sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold), dowalias.col = sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) from table where alias.col ialias.col (alias.col) groalias.col by alias.col set alias.colocoualias.colt off select top alias.col alias.col as [post lialias.colk] , alias.col, dowalias.col from @tabletats joialias.col table p oalias.col alias.col = alias.col where dowalias.col > (alias.col * alias.col.alias.col) aalias.cold p.commualias.colityowalias.coleddate is alias.colull aalias.cold p.closeddate is alias.colull order by alias.col desc"
"create table table(id int); insert into table select posts.id from posts, posttags, tags where posts.owneruserid = ##userid## and posts.id = posttags.postid and posttags.tagid = tags.id and tags.tagname = x; insert into table select postsn.id from posts as postsn, posts as postsn, posttags, tags where postsn.owneruserid = ##userid## and postsn.parentid = postsn.id and postsn.id = posttags.postid and posttags.tagid = tags.id and tags.tagname = x; create table #results(upvotes int, downvotes int, accepted int);"
"select year(alias.col) , sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as acalias.colpted , sum(case whealias.col alias.col = alias.col aalias.cold posttypeid = alias.col thealias.col alias.col else alias.col ealias.cold) as [q upmod] , sum(case whealias.col alias.col = alias.col aalias.cold posttypeid = alias.col thealias.col alias.col else alias.col ealias.cold) as [q dowalias.colmod] , sum(case whealias.col alias.col = alias.col aalias.cold posttypeid = alias.col thealias.col alias.col else alias.col ealias.cold) as [a upmod] , sum(case whealias.col alias.col = alias.col aalias.cold posttypeid = alias.col thealias.col alias.col else alias.col ealias.cold) as [a dowalias.colmod] from table p ialias.colalias.coler joialias.col table v oalias.col alias.col = alias.col where alias.col ialias.col (alias.col) group by year(alias.col)"
"select alias.col, min(alias.col) as alias.col from table inner join posttable on table.id = posttable.tagid inner join table on table.id = posttable.postid group by alias.col order by alias.col desc;"
"selealias.col table.id, table.id as alias.col, coualias.colt(table.id) as alias.columtable, sum(table.score) as alias.col, avg(cast(table.score as float)) as alias.col, alias.col(table.score) as alias.col, avg(cast(table.score as float)) - alias.col(table.score) as alias.col from table ialias.colalias.coler joialias.col table oalias.col table.owalias.coleruserid = table.id where table.posttypeid = alias.col aalias.cold table.parealias.coltid ialias.col (alias.col) >= alias.col aalias.cold avg(table.score) >=alias.col aalias.cold avg(cast(table.score as float)) - alias.col(table.score) > alias.col order by alias.col desc"
"select alias.col alias.col, postalias.col alias.col, coalias.colvert(char(alias.col), creatioalias.coldate, alias.col) date, tealias.colt from table where tealias.colt like alias.col aalias.cold useralias.col = ##useralias.col##"
"declare @questionPool table ( Id int not null, IsClosed bit not null ); insert into @questionPool (Id, IsClosed) select p.Id, case when ClosedDate is null then N else N end [IsClosed] from Posts p where p.PostTypeId = N; declare @openCount int = ( select count(N) from @questionPool qp where qp.IsClosed = N ); declare @closedCount int = ( select count(N) from @questionPool qp where qp.IsClosed = N ); select @openCount [OpenCount], @closedCount [ClosedCount], (@openCount * N.N / @closedCount) [Open:Closed Ratio]"
"select top(alias.col) alias.col as [post lialias.colk], alias.col, (case whealias.col alias.col < dowalias.col thealias.col alias.col else dowalias.col ealias.cold) - abs(alias.col) as coalias.coltroversy, p.owalias.coleruserid as [user lialias.colk], p.creatioalias.coldate from table p ialias.colalias.coler joialias.col ( select alias.col, sum(case alias.col whealias.col alias.col thealias.col alias.col else alias.col ealias.cold) as alias.col, sum(case alias.col whealias.col alias.col thealias.col alias.col else alias.col ealias.cold) as dowalias.col from table groalias.col by alias.col) v oalias.col alias.col = v.alias.col order by coalias.coltroversy desc"
"declare alias.col ialias.colt = ##userid## select alias.col, coualias.colt(*) as uptable from table ialias.colalias.coler joialias.col posttable oalias.col posttable.tagid = table.id ialias.colalias.coler joialias.col table oalias.col table.parealias.coltid = posttable.postid ialias.colalias.coler joialias.col table oalias.col table.postid = table.id aalias.cold alias.col = alias.col where table.owalias.coleruserid = alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull group by alias.col order by uptable desc"
with table as ( select alias.col as alias.columber ualias.colioalias.col all select alias.columber+alias.col from table where alias.columber < alias.col ) select case whealias.col alias.columber alias.col = alias.col thealias.col x whealias.col alias.columber alias.col = alias.col thealias.col x whealias.col alias.columber alias.col = alias.col thealias.col x else cast(alias.columber as alias) ealias.cold as fizzbuzz from table;
"selealias.col top alias.col table.id as [user lialias.colk], alias.col, alias.col, coualias.colt(table.id) as aalias.colswers, table.reputatioalias.col, cast(avg(cast(alias.col as float)) as alias.columeric(alias.col,alias.col)) as [average aalias.colswer alias.col] from table ialias.colalias.coler joialias.col table oalias.col table.id = owalias.coleruserid where (upper(table.locatioalias.col) alias.colot like (alias.col) aalias.cold upper(table.locatioalias.col) alias.colot like (alias.col) aalias.cold upper(table.locatioalias.col) alias.colot like (alias.col) aalias.cold upper(table.locatioalias.col) alias.colot like (alias.col) aalias.cold upper(table.locatioalias.col) alias.colot like (alias.col) aalias.cold upper(table.locatioalias.col) alias.colot like (alias.col)) aalias.cold (alias.col like alias.col or alias.col like alias.col or alias.col like alias.col or alias.col like alias.col or alias.col like alias.col or alias.col like alias.col or alias.col like alias.col or alias.col like alias.col or alias.col like alias.col or alias.col like alias.col or alias.col like alias.col or alias.col like alias.col or alias.col like alias.col or alias.col like alias.col or alias.col like alias.col) aalias.cold ealias.colists ( selealias.col alias.col from table t with (alias.cololock) ialias.colalias.coler joialias.col posttable pt with (alias.cololock)oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table p with (alias.cololock) oalias.col p.parealias.coltid = alias.col ialias.colalias.coler joialias.col table u with (alias.cololock) oalias.col alias.col = p.owalias.coleruserid where p.commualias.colityowalias.coleddate is alias.colull aalias.cold alias.col ialias.col (alias.colyz)) ) group by table.id, displayalias.colame, table.reputatioalias.col, alias.col, alias.col havialias.colg coualias.colt(table.id) > alias.col order by table.reputatioalias.col desc"
"select table.tagname, table.[count], (alias.col(year, table.creationdate) * n + alias.col(quarter, table.creationdate)) as alias.col from table inner join posttable on table.id = posttable.tagid inner join table on table.id = posttable.postid where table.tagname in (alias.col) and table.creationdate >= alias.col group by table.tagname, table.[count] , (alias.col(year, table.creationdate) * n + alias.col(quarter, table.creationdate)) order by alias.col desc"
"with totaltable as ( selealias.col cast(coualias.colt(*) as float) as coualias.colt from table where alias.col = alias.col ) selealias.col aalias.colswercoualias.colt as [aalias.colswers], coualias.colt(*) as alias.columquestioalias.cols, roualias.cold(alias.col.alias.col * coualias.colt(case whealias.col alias.col < alias.col thealias.col alias.col ealias.cold) / coualias.colt(*), alias.col) as [ alias.col<alias.col], roualias.cold(alias.col.alias.col * coualias.colt(case whealias.col alias.col = alias.col thealias.col alias.col ealias.cold) / coualias.colt(*), alias.col) as [ alias.col=alias.col], roualias.cold(alias.col.alias.col * coualias.colt(case whealias.col alias.col = alias.col thealias.col alias.col ealias.cold) / coualias.colt(*), alias.col) as [ alias.col=alias.col], roualias.cold(alias.col.alias.col * coualias.colt(case whealias.col alias.col > alias.col thealias.col alias.col ealias.cold) / coualias.colt(*), alias.col) as [ alias.col>alias.col], roualias.cold(alias.col.alias.col * coualias.colt(case whealias.col alias.col < aalias.colswercoualias.colt thealias.col alias.col ealias.cold) / coualias.colt(*), alias.col) as [ alias.col&lt;aalias.colswersalias.col], roualias.cold(alias.col.alias.col * coualias.colt(case whealias.col alias.col < aalias.colswercoualias.colt thealias.col alias.col ealias.cold) / coualias.colt(*), alias.col) as [ alias.col=aalias.colswers], roualias.cold(alias.col.alias.col * coualias.colt(case whealias.col alias.col < aalias.colswercoualias.colt thealias.col alias.col ealias.cold) / coualias.colt(*), alias.col) as [ alias.col=aalias.colswersalias.col], roualias.cold(alias.col.alias.col * coualias.colt(case whealias.col alias.col < aalias.colswercoualias.colt thealias.col alias.col ealias.cold) / coualias.colt(*), alias.col) as [ alias.col=aalias.colswers], roualias.cold(alias.col.alias.col * coualias.colt(case whealias.col alias.col < aalias.colswercoualias.colt thealias.col alias.col ealias.cold) / coualias.colt(*), alias.col) as [ alias.col&gt;aalias.colswers] from table where alias.col = alias.col aalias.cold aalias.colswercoualias.colt >= alias.col group by aalias.colswercoualias.colt order by aalias.colswercoualias.colt"
"declare alias.col ialias.colt = ##userid## select alias.col, sum(case whealias.col alias.col=alias.col thealias.col alias.col whealias.col alias.col=alias.col thealias.col alias.col else alias.col ealias.cold) as alias.col from table ialias.colalias.coler joialias.col posttable oalias.col posttable.tagid = table.id ialias.colalias.coler joialias.col table oalias.col table.parealias.coltid = posttable.postid ialias.colalias.coler joialias.col table oalias.col table.postid = table.id ialias.colalias.coler joialias.col table oalias.col table.id = table.owalias.coleruserid where table.owalias.coleruserid = alias.col group by alias.col order by alias.col desc declare @alias.col varchar(alias.col) = ##alias.col## select table.id, sum(case whealias.col alias.col=alias.col thealias.col alias.col whealias.col alias.col=alias.col thealias.col alias.col else alias.col ealias.cold) as alias.col from table ialias.colalias.coler joialias.col posttable oalias.col posttable.tagid = table.id ialias.colalias.coler joialias.col table oalias.col table.parealias.coltid = posttable.postid ialias.colalias.coler joialias.col table oalias.col table.postid = table.id ialias.colalias.coler joialias.col table oalias.col table.id = table.owalias.coleruserid where table.alias.col = @alias.col group by table.id order by alias.col desc"
"select top alias.col alias.col as [user lialias.colk] ,coualias.colt(*) as alias.columquestioalias.cols ,sum( case whealias.col q.acalias.colptedaalias.colswerid is alias.colot alias.colull thealias.col alias.col else alias.col ealias.cold) as alias.columacalias.colpted ,mialias.col(u.reputatioalias.col) as reputatioalias.col from table q ialias.colalias.coler joialias.col table u oalias.col alias.col = q.owalias.coleruserid where alias.col = alias.col group by alias.col order by alias.columacalias.colpted asc, reputatioalias.col desc, alias.columquestioalias.cols desc"
select count(table.acceptedanswerid) as alias.col from table
"select alias.col as alias.col, body, score from table where alias.col(alias.col) < alias.col aalias.cold parealias.coltalias.col is alias.colull"
"select alias.col, alias.col, alias.col, alias.col*alias.col/alias.col as alias.col from table inner join (select alias.col, count(*) as alias.col, sum(alias.col) as alias.col from table group by alias.col ) x on alias.col = alias.col where alias.col > alias.col## order by alias.col desc"
select alias.col from table a where alias.col=alias.col
"select top alias.col alias.col as [post lialias.colk], alias.col as alias.col, viewcoualias.colt as alias.col from table p where p.viewcoualias.colt > alias.col aalias.cold p.commualias.colityowalias.coleddate is alias.colot alias.colull order by viewcoualias.colt desc"
"select top alias.col owalias.coleruserid as [user lialias.colk], coualias.colt(*) as postcoualias.colt, sum(alias.col) as totalalias.col from table where alias.col=alias.col aalias.cold owalias.coleruserid != alias.col group by owalias.coleruserid order by coualias.colt(*) desc"
"declare @UserId int = ##UserId##; with fights as ( select myAnswer.ParentId as Question, myAnswer.Score as MyScore, herbertsAnswer.Score as HerbertsScore from Posts as myAnswer inner join Posts as herbertsAnswer on herbertsAnswer.OwnerUserId = N and myAnswer.ParentId = herbertsAnswer.ParentId where myAnswer.ownerUserId = @UserId and myAnswer.postTypeId = N ) select case when myScore > HerbertsScore then X when myScore < HerbertsScore then X else X end as X, Question as [Post Link], myScore as X, HerbertsScore as X from fights;"
"selealias.col avg(alias.col) as alias.col, sum(alias.col) as alias.col, cast(sum(alias.col) as float) / avg(alias.col) as alias.col, alias.col(alias.col, alias.col * cast(sum(alias.col) as float) / avg(alias.col)) as alias.col from table u ialias.colalias.coler joialias.col table v oalias.col v.alias.col = alias.col where alias.col > alias.col aalias.cold alias.col = alias.col group by alias.col order by sum(alias.col) desc"
"select alias.col(alias.col, table.creatioalias.coldate) alias.col, alias.col(hour, table.creatioalias.coldate) hour, coualias.colt(table.id) questioalias.cols from table where alias.col = alias.col group by alias.col(alias.col, table.creatioalias.coldate), alias.col(hour, table.creatioalias.coldate) order by alias.col(hour, table.creatioalias.coldate)"
"select top alias.col alias.col, alias.col as [post lialias.colk], p.viewcoualias.colt, alias.col, year(p.lastactivitydate), moalias.colth(p.lastactivitydate), case whealias.col alias.col is alias.colull thealias.col x else x ealias.cold as closed from table p where alias.col = alias.col aalias.cold p.viewcoualias.colt < alias.col aalias.cold alias.col < alias.col aalias.cold p.acalias.colptedaalias.colswerid is alias.colull aalias.cold alias.colot exists (select alias.col from [table] c where alias.col > alias.col aalias.cold c.[parealias.coltid] = alias.col) order by year(p.lastactivitydate), moalias.colth(p.lastactivitydate), alias.col, p.viewcoualias.colt"
"select alias.col,alias.col(coualias.colt(*)) from table where alias.col=alias.col?alias.col aalias.cold alias.col=alias.col group by alias.col order by alias.col asc"
"select top alias.col alias.col as [post lialias.colk] , aalias.colswers.owalias.coleruserid as [user lialias.colk] , aalias.colswers.score as [aalias.colswer score] , table.id as [commealias.colt lialias.colk], lealias.col(aalias.colswers.body) from table as questioalias.cols ialias.colalias.coler joialias.col table as aalias.colswers oalias.col aalias.colswers.parealias.coltid = questioalias.cols.id ialias.colalias.coler joialias.col table oalias.col table.alias.col = aalias.colswers.id where table.userid = questioalias.cols.owalias.coleruserid aalias.cold lower(substrialias.colg(table.tealias.colt, alias.col, alias.col)) like alias.col order by [aalias.colswer score];"
"declare table table ( alias.col ialias.colt, alias.col ialias.colt ) ialias.colsert ialias.colto table ( alias.col, alias.col ) select alias.col as alias.col, (select coualias.colt(*) from table palias.col where alias.col <> alias.col aalias.cold palias.col.parealias.coltid = alias.col) as alias.col from table p where alias.col = alias.col"
"select alias.col, coualias.colt(*) coualias.colt from table a joialias.col table q oalias.col alias.col = alias.col where alias.col = alias.col## aalias.cold alias.col = alias.col group by alias.col order by alias.col"
"select sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as [up table], sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as [dowalias.col table], (cast(sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as float) / cast(sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as float)) as [up table to dowalias.colvote] from table v ialias.colalias.coler joialias.col table p oalias.col alias.col=alias.col where p.owalias.coleruserid=alias.col##"
"select top alias.col row_alias.columber() over(order by reputatioalias.col desc) as [#], id as [user lialias.colk], reputatioalias.col, locatioalias.col from table where lower(locatioalias.col) like x or upper(locatioalias.col) like x ... or locatioalias.col like x aalias.cold reputatioalias.col >= alias.col order by reputatioalias.col desc;"
declare @useralias.col int = ##useralias.col## select count(*) from ( select distinct alias.col from table where alias.col in ( select postalias.col from table where tabletypealias.col in ( select alias.col from tabletypes where name = alias.col or name = alias.col ) and useralias.col = @useralias.col ) and owneruseralias.col <> @useralias.col and alias.col is null ) as tablewithedits
"select alias.col, acceptedaalias.colsweralias.col, posttypealias.col, alias.col from table where owalias.coleruseralias.col = alias.col aalias.cold acceptedaalias.colsweralias.col is alias.colot alias.colull aalias.cold posttypealias.col is alias.colot alias.colull aalias.cold alias.col is alias.colull"
"DECLARE @EndDate datetime SET @EndDate = ##EndDate##; WITH TopUsers AS ( SELECT TOP N Id, DisplayName, Reputation FROM Users ORDER BY Reputation DESC ), LastPostDates AS ( SELECT OwnerUserId, MAX(CreationDate) AS LastPostDate FROM Posts GROUP BY OwnerUserId ) SELECT u.Id, u.DisplayName, u.Reputation, p.LastPostDate FROM TopUsers u INNER JOIN LastPostDates p ON p.OwnerUserId = u.Id WHERE p.LastPostDate < @EndDate ORDER BY u.Reputation DESC"
"declare table table( name varchar(n) not null, grade varchar(n) not null, alias.col varchar(n) not null ) insert into table values (alias.colyz) insert into table values (alias.colyz) insert into table values (alias.colyz) insert into table values (alias.colyz) select name, maalias.col(case alias.col when alias.col then grade end) alias.col, maalias.col(case alias.col when alias.col then grade end) alias.col from table group by name"
"select top alias.col alias.col as [user lialias.colk], dowalias.colvotes from table order by dowalias.colvotes desc"
"select top alias.col alias.col as [post lialias.colk], alias.col as alias.col, alias.col as alias.col, viewcoualias.colt as alias.col, alias.col(day, p.creatioalias.coldate, currealias.colt_timestamp) as [age (days)], p.viewcoualias.colt / (alias.col(day, p.creatioalias.coldate, currealias.colt_timestamp) + alias.col) as alias.col, case whealias.col alias.col = alias.col thealias.col alias.colull else cast(alias.col.alias.col * viewcoualias.colt / alias.col as decimal(alias.col,alias.col)) ealias.cold as [views / vote] from table p where p.viewcoualias.colt > alias.col aalias.cold p.viewcoualias.colt / (alias.col(day, p.creatioalias.coldate, currealias.colt_timestamp) + alias.col) > alias.col order by alias.col desc"
"select top alias.col row_alias.columber() over(order by reputatioalias.col desc) as [#], id as [user lialias.colk], reputatioalias.col from table where lower(locatioalias.col) like x or upper(locatioalias.col) like x ... order by reputatioalias.col desc;"
"select count (alias.col) as numtable , count (alias.col) as numtablewhopost from table u left join table ph on alias.col = alias.col"
"selealias.col top alias.col table.id as [user lialias.colk], coualias.colt(table.id) as aalias.colswers, cast(avg(cast(alias.col as float)) as alias.columeric(alias.col,alias.col)) as [average aalias.colswer alias.col] from table ialias.colalias.coler joialias.col table oalias.col table.id = owalias.coleruserid where alias.col = alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold closeddate is alias.colull group by table.id, displayalias.colame havialias.colg coualias.colt(table.id) > alias.col order by [average aalias.colswer alias.col] asc"
"with table as ( select alias.col as alias.col, case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold + vt.alias.colame as series, alias.col as vote from table p, table v, table vt where alias.col = alias.col aalias.cold alias.col = alias.col ) select alias.col from table pivot ( sum(vote) for series ialias.col (alias.colyz)) as pivoted where alias.col >= alias.col order by alias.col"
select alias.col from table
"select ealias.colp(alias.col(alias.col(alias.col(alias.col)),alias.col)) as alias.colgth, coualias.colt(distialias.colct alias.col) as postcoualias.colt, sum(case whealias.col v.votetypeid = alias.col thealias.col alias.col whealias.col v.votetypeid = alias.col thealias.col alias.col else alias.colull ealias.cold) / coualias.colt(distialias.colct alias.col) as repgaialias.col from table t joialias.col posttable pt oalias.col alias.col = alias.col joialias.col table pa oalias.col pa.parealias.coltid = alias.col joialias.col table v oalias.col alias.col = alias.col where t.tagalias.colame = alias.col group by alias.col(alias.col(alias.col(alias.col)),alias.col) order by alias.col(alias.col(alias.col(body)),alias.col)"
"select coalias.colvert(datetime, coalias.colvert(varchar(alias.col), ppp.creatioalias.coldate, alias.col)) alias.col , coualias.colt(*) from table ppp ialias.colalias.coler joialias.col ( select distialias.colct ptt.postid from table ptt ialias.colalias.coler joialias.col table ttt oalias.col alias.col = alias.col where ttt.tagalias.colame = alias.col )alias.col oalias.col alias.col = alias.col.postid where alias.col is alias.colull group by coalias.colvert(datetime, coalias.colvert(varchar(alias.col), ppp.creatioalias.coldate, alias.col)) order by alias.col"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where upper(table.location) like alias.col or upper(table.aboutme) like alias.col ... order by alias.col desc;"
"selealias.col un.emailhash, count(alias.col) as alias.col, (selealias.col cast(alias.col as varchar) + alias.col + alias.col + alias.col + cast(alias.col as varchar) + alias.col from table un where un.emailhash = un.emailhash order by alias.col desc for alias.colml path (alias.col) ) as idsandnames from table un where un.emailhash is not null group by un.emailhash having count(alias.col) > n order by alias.col desc"
select top alias.col alias.col from table where alias.col <> alias.col order by alias.col desc
"select top(alias.col) alias.col, displayalias.colame from table order by alias.col desc;"
"select alias.col as alias.col, alias.col as alias.col from table q ialias.colalias.coler joialias.col table h oalias.col alias.col = alias.col where h.tabletypeid = alias.col aalias.cold h.commealias.colt = alias.col aalias.cold alias.col is alias.colot alias.colull aalias.cold aalias.colswercoualias.colt > alias.col aalias.cold alias.col > alias.col order by q.viewcoualias.colt desc"
select top alias.col alias.col from table pf joialias.col table vt oalias.col alias.col = alias.col
"select top alias.col alias.col as [user lialias.colk], (dowalias.colvotes)*alias.col/(dowalias.colvotes+alias.col) as dowalias.colvotespct, alias.col, dowalias.colvotes from table where alias.col > alias.col aalias.cold dowalias.colvotes > alias.col aalias.cold alias.col+dowalias.colvotes > alias.col aalias.cold alias.col <> alias.col order by dowalias.colvotespct desc"
"select alias.col(alias.col, alias.col) as year, alias.col(alias.col, alias.col) as month, count(alias.col) as bounties, sum(alias.col) as totalamount from table where alias.col is not null group by alias.col(alias.col, alias.col), alias.col(alias.col, alias.col)"
"select alias.col, coualias.colt(*) as alias.col from table vt joialias.col table v oalias.col (alias.col = alias.col) joialias.col table p oalias.col (alias.col = alias.col) where alias.col = alias.col group by alias.col order by alias.col desc;"
"with table as ( select alias.col from table where alias.col is alias.colull aalias.cold score >= alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold lower(title) like x ... ) select top alias.col p.alias.col as [post lialias.colk], max(alias.col) as aalias.colswerscore, max(alias.col)alias.colalias.col.alias.col/alias.col as alias.col from table p joialias.col table q oalias.col p.alias.col = alias.col group by p.alias.col, alias.col order by alias.col"
selealias.col avg(cast(alias.colgth as float)) from (selealias.col alias.col(body) as alias.colgth from table where alias.col=alias.col aalias.cold alias.col ialias.col ( selealias.col top alias.col postalias.col from table group by postalias.col order by coualias.colt(alias.col) desc)) as ttt
"select count(alias.col) as alias.col, sum(alias.col) as alias.col, sum(alias.col) as alias.col from table u left join table p on alias.col = alias.col where alias.col is null"
"set alias.colocoualias.colt oalias.col declare @tabletats table (alias.col ialias.colt, alias.col ialias.colt, dowalias.col ialias.colt) ialias.colsert @tabletats select alias.col, alias.col = sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold), dowalias.col = sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) from table where alias.col ialias.col (alias.col) groalias.col by alias.col set alias.colocoualias.colt off select top ##alias.colum## alias.col as [post lialias.colk] , dowalias.col , alias.col, alias.col as alias.col from @tabletats joialias.col table p oalias.col alias.col = alias.col aalias.cold p.alias.col = alias.col where dowalias.col > ##mialias.coldowalias.col## aalias.cold p.commualias.colityowalias.coleddate is alias.colull aalias.cold p.closeddate is alias.colull order by dowalias.col desc"
"select alias.col,alias.col from table where posttypealias.col = alias.col aalias.cold owalias.coleruseralias.col = ##useralias.col## aalias.cold alias.col = alias.col"
"select top alias.col b.owalias.coleruserid as [user lialias.colk], sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as dowalias.coltable, mialias.col(b.creatioalias.coldate) as oldestpost, coualias.colt(distialias.colct alias.col) as alias.columberoftable from table a ialias.colalias.coler joialias.col table b oalias.col alias.col = alias.col aalias.cold alias.col ialias.col (alias.col) where alias.col ialias.col (alias.col) group by b.owalias.coleruserid order by sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) desc"
"select coualias.colt(alias.col) as alias.col, sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as [scored aalias.colswers], sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as [ualias.colscored aalias.colswers], sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold)*alias.col / coualias.colt(alias.col) / alias.col.alias.col as [peralias.colalias.coltage ualias.colscored] from table q ialias.colalias.coler joialias.col table a oalias.col alias.col = q.acalias.colptedaalias.colswerid where a.commualias.colityowalias.coleddate is alias.colull aalias.cold a.owalias.coleruserid = ##userid## aalias.cold q.owalias.coleruserid != ##userid## aalias.cold a.posttypeid = alias.col"
"select alias.col , sum(case when acalias.colptedanswerid is not null then n else n end) as acc , sum(case when acalias.colptedanswerid is null then n else n end) as not_acc from table p inner join table u on alias.col = alias.col group by alias.col order by alias.col"
"select table.id as alias.col, table.lastaccessdate, table.creatioalias.coldate, alias.col(secoalias.cold, table.lastactivitydate, table.lastaccessdate) as alias.col, * from table joialias.col table oalias.col table.owalias.coleruserid = table.id where table.posttypeid = alias.col aalias.cold table.aalias.colswercoualias.colt = alias.col aalias.cold table.closeddate is alias.colull aalias.cold alias.col(secoalias.cold, table.lastactivitydate, table.lastaccessdate) < alias.col aalias.cold alias.col(day, table.lastactivitydate, sysdatetime()) > alias.col order by alias.col, table.lastaccessdate asc"
"select top alias.col alias.col, displayalias.colame, reputatioalias.col, alias.col, locatioalias.col from table where locatioalias.col like alias.colx aalias.cold reputatioalias.col > alias.col aalias.cold reputatioalias.col < alias.col order by reputatioalias.col;"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... order by alias.col desc;"
"selealias.col alias.col alias.col , alias.col(alias.col, alias.col, alias.col() )alias.col ,(alias.col+alias.col) alias.col , cast( alias.colullif((alias.col+alias.col), alias.col) / alias.col(alias.col, alias.col, alias.col() ) as float) alias.col from table where alias.col <> alias.col aalias.cold (alias.col+alias.col)> alias.col order by alias.col desc"
select top alias.col alias.col from table where alias.col = alias.col
"declare @last_extract as datetime = (select max(alias.col) from table) select top alias.col table as [post lialias.colk] , coualias.colt(*) as [coualias.colt] , max(ph.alias.col) as [lastbump] , max(alias.col) as alias.col , max(p.aalias.colswercoualias.colt) as [aalias.colswercoualias.colt] from table as ph ialias.colalias.coler joialias.col table as p oalias.col table = alias.col where ph.tabletypeid = alias.col group by table havialias.colg max(ph.alias.col) > dateadd(day, alias.col, @last_extract) order by [coualias.colt] desc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col, views from table where lower(location) like x order by alias.col desc;"
"declare @temp table (id int identity(N,N), TagName nchar(N), score int); with tagsN as ( select top N tagid from posttags group by tagid order by count(*) desc ), answers as ( select score, id, parentId from posts where communityowneddate is null and posttypeid = N and owneruserid = ##UserId## ) insert @temp(TagName, score) select t.TagName, sum(a.score) as score from answers a inner join posttags pt on pt.postid = a.parentId inner join tagsN f on f.tagid = pt.tagid inner join tags t on f.tagid = t.id group by t.tagname order by score desc select *, case when score >= N then X else X end from @temp"
"declare @Sales table (Department varchar(N), sales int) insert @Sales values (XYZ), (X,N), (X,N), (X,N), (X,N), (X,N); ; with TopNSales as ( select top N Department , Sum(sales) as TotalSales from @Sales group by Department order by Sum(sales) desc ) select Department , TotalSales from TopNSales union all select X , SUM(Sales) from @Sales where Department not in (select Department from TopNSales)"
select alias.col from table where alias.col ialias.col ( select top alias.col alias.col from table where alias.col like alias.col aalias.cold alias.col alias.colot like alias.col order by alias.col desc ) aalias.cold creatioalias.coldate betweealias.col alias.col aalias.cold alias.col aalias.cold aalias.colswercoualias.colt > alias.col
"select alias.col alias.col, alias.col, text from table where alias.col = ##alias.col## aalias.cold alias.col > alias.col order by alias.col desc"
"declare @youralias.col int = ##youralias.col## select alias.col as alias.col, alias.col, (select count(*) from table where table.owneruseralias.col = table.alias.col ) as [# table], alias.col / (select count(*) from table where table.owneruseralias.col = table.alias.col ) as alias.col from table where alias.col = @youralias.col"
"select top alias.col alias.col as [post lialias.colk], alias.col+coalias.colvert(varchar,alias.col)+alias.col+coalias.colvert(varchar,alias.col) [lialias.colk], alias.col, rejectioalias.coldate, commealias.colt from table where owalias.coleruseralias.col is alias.colot alias.colull order by alias.col desc"
"select count(*) from table where alias.col(day,lastaccessdate, getdate()) < n and (select count(*) from table where (table.owneruserid = table.id) and (alias.col(day, creationdate, getdate()) < n) ) > n"
"selealias.col top alias.col table.id, alias.col, displayalias.colame, coualias.colt(table.id) as aalias.colswers, avg(cast(alias.col as float)) as averageaalias.colsweralias.col from table ialias.colalias.coler joialias.col table oalias.col table.id = owalias.coleruserid where table.locatioalias.col like alias.col group by table.id, displayalias.colame, alias.col havialias.colg coualias.colt(table.id) > alias.col order by averageaalias.colsweralias.col desc"
"select alias.col, alias.col, alias.col from table b inner join table u on alias.col=alias.col where alias.col=alias.col"
"declare alias.col float selealias.col alias.col = sum(cast(alias.col as bigialias.colt)) from table where alias.col = alias.col selealias.col table.alias.colalias.colame as alias.col, coualias.colt(*) as questioalias.cols, sum(cast(table.alias.col as bigialias.colt)) as views, str(alias.col * sum(cast(table.alias.col as bigialias.colt)) / alias.col,alias.col,alias.col) as percealias.coltofsite, sum(table.score) as score, sum(table.aalias.colswercoualias.colt) as aalias.colswers, sum(cast(table.alias.col as bigialias.colt)) / coualias.colt(*) as avgviews, str(sum(table.score) / cast(coualias.colt(*) as float),alias.col,alias.col) as avgscore, str(sum(table.aalias.colswercoualias.colt) / cast(coualias.colt(*) as float),alias.col,alias.col) as avgaalias.colswers from table joialias.col table oalias.col table.id = table.postid joialias.col table oalias.col table.alias.colid = table.id where table.alias.col = alias.col group by table.alias.colalias.colame havialias.colg table.alias.colalias.colame = x or table.alias.colalias.colame = x or table.alias.colalias.colame = x or table.alias.colalias.colame = x or table.alias.colalias.colame = x or table.alias.colalias.colame = x order by views desc"
"select floor(alias.col(body)/n) * n as [post alias.colgth], sum(score) as [total score], count(id) as [num of table], cast(sum(score) as float) / count(id) as [score per post] from table where alias.col in (alias.col##) group by floor(alias.col(body)/n) * n order by [post alias.colgth] desc"
"select alias.col as alias.col, alias.col, p.table as table, alias.col as alias.col, case whealias.col alias.col is alias.colull thealias.col alias.colull else alias.col ealias.cold as closed, datediff(moalias.colth,p.creatioalias.coldate,getdate()) as malias.colthsqstact, alias.col as [user lialias.colk] from table p left joialias.col table u oalias.col alias.col = alias.col joialias.col table oalias.col table.postid = alias.col joialias.col table oalias.col table.id = table.tagid where alias.col = alias.col aalias.cold table.tagalias.colame = alias.col aalias.cold p.acalias.colptedaalias.colswerid is alias.colull aalias.cold alias.col is alias.colull order by alias.col, alias.col"
"declare table table (id int, user_id varchar(n), to_user_id varchar(n)) insert into table values (alias.colyz), ( n , alias.col , alias.col ), ( n , alias.col , alias.col ), ( n , alias.col , alias.col ) select alias.col from table a inner join table b on alias.col = alias.col and alias.col = alias.col where alias.col = alias.col"
"declare @ualias.col ialias.colt = ##useralias.col:ialias.colt?alias.col## select alias.col , alias.col + substrialias.colg(alias.col,alias.col,alias.col) as evealias.colt , alias.col as [post lialias.colk] , owalias.coleruseralias.col as [user lialias.colk] from table where owalias.coleruseralias.col = @ualias.col ualias.colioalias.col select p.alias.col , alias.col , p.alias.col , p.owalias.coleruseralias.col from table p ialias.colalias.coler joialias.col table oq oalias.col oq.alias.col = p.parealias.coltalias.col where oq.owalias.coleruseralias.col = @ualias.col ualias.colioalias.col select c.alias.col , alias.col + substrialias.colg(alias.col,alias.col,alias.col) , postalias.col , useralias.col from table c ialias.colalias.coler joialias.col table p oalias.col p.alias.col = c.postalias.col where p.owalias.coleruseralias.col = @ualias.col ualias.colioalias.col select c.alias.col , alias.col , c.postalias.col , c.useralias.col from table c ialias.colalias.coler joialias.col table oc oalias.col oc.postalias.col = c.postalias.col where oc.useralias.col = @ualias.col order by alias.col desc"
"select top alias.col table.id as [user lialias.colk], maalias.col(alias.col) as alias.col, maalias.col(locatioalias.col) as locatioalias.col, maalias.col(websiteurl) as website, maalias.col(reputatioalias.col) as rep, coualias.colt(aalias.colswers.id) as aalias.colswers, sum(aalias.colswers.score) as score, cast(avg(cast(aalias.colswers.score as float)) as alias.columeric(alias.col,alias.col)) as [avg] from table joialias.col posttable oalias.col posttable.tagid = table.id joialias.col table oalias.col table.id = posttable.postid joialias.col table as aalias.colswers oalias.col aalias.colswers.parealias.coltid = table.id joialias.col table oalias.col table.id = aalias.colswers.owalias.coleruserid where table.tagalias.colame ialias.col (alias.col) aalias.cold table.creatioalias.coldate >= alias.col aalias.cold table.creatioalias.coldate <= alias.col group by table.id, displayalias.colame order by sum(aalias.colswers.score) desc"
"select alias.col, alias.col from table where alias.col = alias.col"
"select top alias.col alias.col as [post lialias.colk], body from table where (body like x or body like x ...) aalias.cold posttypealias.col = alias.col aalias.cold score < alias.col aalias.cold lealias.col(body) < alias.col aalias.cold creatioalias.coldate >= dateadd(moalias.colth, alias.col, getdate())"
"select top alias.collialias.cols.col alias.collialias.cols.col from talias.colble q ialias.collialias.cols.colalias.collialias.cols.coler joialias.collialias.cols.col (select palias.colrealias.collialias.cols.coltid from talias.colble where alias.collialias.cols.col>alias.collialias.cols.col) alias.col oalias.collialias.cols.col alias.col.palias.colrealias.collialias.cols.coltid=alias.col where alias.collialias.cols.col=alias.collialias.cols.col alias.colalias.collialias.cols.cold alias.col=alias.collialias.cols.col alias.colalias.collialias.cols.cold isalias.collialias.cols.colull(q.alias.colcceptedalias.colalias.collialias.cols.colswerid,alias.collialias.cols.col)<>alias.collialias.cols.col"
"select top alias.col alias.col as [post lialias.colk], alias.col, viewcoualias.colt from table where alias.col > alias.col aalias.cold viewcoualias.colt <> alias.col aalias.cold parealias.coltalias.col is alias.colull aalias.cold acceptedaalias.colsweralias.col is alias.colull aalias.cold closeddate is alias.colull aalias.cold tags like x order by viewcoualias.colt asc"
"select top alias.col alias.col as [post lialias.colk], creatioalias.coldate, alias.col from table where commualias.colityowalias.coleddate is alias.colot alias.colull aalias.cold posttypealias.col ialias.col (alias.col) aalias.cold alias.col is alias.colot alias.colull order by creatioalias.coldate"
"select table.alias.col as alias.col, table.creatioalias.coldate, coualias.colt(*) as alias.col, table.alias.col as alias.col from table ialias.colalias.coler joialias.col table oalias.col table.alias.col=table.postalias.col aalias.cold table.votetypealias.col=alias.col aalias.cold table.owalias.coleruseralias.col = ##useralias.col## aalias.cold table.posttypealias.col = alias.col group by table.alias.col, table.alias.col, table.creatioalias.coldate"
"declare @a table (alias.col varchar(n), [key] varchar(n), val varchar(n)) insert @a select alias.col, alias.col, alias.col union all select alias.col, alias.col, alias.col union all select alias.col, alias.col, alias.col declare @b table (alias.col varchar(n), [key] varchar(n), val varchar(n)) insert @b select alias.col, alias.col, alias.col union all select alias.col, alias.col, alias.col union all select alias.col, alias.col, alias.col union all select alias.col, alias.col, alias.col union all select alias.col, alias.col, alias.col union all select alias.col, alias.col, alias.col union all select alias.col, alias.col, alias.col union all select alias.col, alias.col, alias.col union all select alias.col, alias.col, alias.col select alias.col from ( select distinct alias.col from @a union select alias.col from @b ) as alias.cols left join @a an on an.alias.col = alias.col left join @b bn on an.alias.col = bn.alias.col and alias.col = alias.col and alias.col = alias.col left join @b bn on bn.alias.col = alias.col left join @a an on bn.alias.col = an.alias.col and alias.col = alias.col and alias.col = alias.col group by alias.col having sum(case when bn.alias.col is null or an.alias.col is null then n else n end) = n"
"select top alias.col?alias.col alias.col as alias.col, coualias.colt(*) as alias.col, sum(alias.col) as totalalias.col, avg(alias.col) as averagealias.col from table where alias.col=##alias.col?alias.col aalias.cold alias.col != alias.col aalias.cold alias.col like alias.col ... group by alias.col havialias.colg coualias.colt(*) > ##mialias.colalias.colrtable?alias.col order by avg(alias.col) asc"
"set alias.colocoualias.colt oalias.col create table table (alias.col ialias.colt alias.colealias.coltity, [start] datetime, [fialias.colish] datetime) ialias.colsert table select top alias.col alias.colull, alias.colull from table declare alias.col datetime select alias.col = creatioalias.coldate from table where alias.col = (select max(palias.col.alias.col) from table palias.col) update table set [start] = dateadd(d, (alias.col - alias.col) * alias.col, alias.col), [fialias.colish] = dateadd(d, (alias.col - alias.col) * alias.col, alias.col) select start, (select coualias.colt(*) from table where parealias.coltalias.col is alias.colull aalias.cold creatioalias.coldate betweealias.col [start] aalias.cold [fialias.colish] ) as [total questioalias.cols], (select coualias.colt(*) from table where parealias.coltalias.col is alias.colull aalias.cold acceptedaalias.colsweralias.col is alias.colot alias.colull aalias.cold creatioalias.coldate betweealias.col [start] aalias.cold [fialias.colish] ) as [aalias.colswered questioalias.cols], (select coualias.colt(*) from table where parealias.coltalias.col is alias.colot alias.colull aalias.cold creatioalias.coldate betweealias.col [start] aalias.cold [fialias.colish] ) as [total aalias.colswers] from table"
"select top alias.col alias.col as [post lialias.colk], sum(alias.col) from table q ialias.colalias.coler joialias.col table a oalias.col alias.col = alias.col aalias.cold a.parealias.coltid = alias.col group by alias.col"
"DECLARE @ReviewType INT = ##ReviewType:int?N##; WITH TasksIn([Date], [Count]) AS ( SELECT CAST(CreationDate AS DATE), COUNT(CreationDate) FROM ReviewTasks AS RT WHERE ReviewTaskTypeId = @ReviewType GROUP BY CAST(CreationDate AS DATE) ), TasksOut([Date], [Count]) AS ( SELECT CAST(RTR.CreationDate AS DATE), COUNT(RTR.CreationDate) FROM ReviewTasks AS RT INNER JOIN ReviewTaskResults AS RTR ON RTR.Id = RT.CompletedByReviewTaskId WHERE RT.ReviewTaskTypeId = @ReviewType GROUP BY CAST(RTR.CreationDate AS DATE) ) SELECT TIn.[Date], TIn.[Count] - TOut.[Count] AS [Delta], SUM(TIn.[Count] - TOut.[Count]) OVER (ORDER BY TIn.[Date] ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS [Net] FROM TasksIn AS TIn INNER JOIN TasksOut AS TOut ON TIn.[Date] = TOut.[Date] ORDER BY TIn.[Date]"
"select top alias.col alias.col as [post lialias.colk], owalias.coleruseralias.col as [user lialias.colk], alias.col, viewcoualias.colt from table where alias.col >= alias.col aalias.cold viewcoualias.colt < alias.col aalias.cold parealias.coltalias.col is alias.colull aalias.cold acceptedaalias.colsweralias.col is alias.colull order by alias.col desc"
"select year(alias.col) , coualias.colt(*) as alias.col , sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold ) as uptable , sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold ) as dowalias.coltable from table v ialias.colalias.coler joialias.col table pt oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table t oalias.col alias.col = alias.col where t.tagalias.colame ialias.col (alias.col) aalias.cold alias.col ialias.col (alias.col) group by year(alias.col)"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col, location from table where upper(location) like x or upper(location) like x ... order by alias.col desc;"
"declare alias.col as alias.colvarchar(alias.col) declare alias.col as ialias.colt = ##alias.col## selealias.col alias.col=alias.col+cast(alias.col as alias.colvarchar)+alias.col selealias.col alias.col, alias.col , [tealias.colt] , alias.col([tealias.colt]) , charialias.coldealias.col(alias.col, alias.col([tealias.colt])) , charialias.coldealias.col(alias.col(alias.col), alias.col([tealias.colt])) from table where tabletypeid =alias.col aalias.cold [tealias.colt] like alias.col+alias.col+alias.col aalias.cold (charialias.coldealias.col(alias.col, alias.col([tealias.colt])) - alias.col = charialias.coldealias.col(alias.col(alias.col), alias.col([tealias.colt])))"
"select alias.col, postalias.col as alias.col, tealias.colt from table where tealias.colt like alias.col;"
"selealias.col top alias.col table.id as [user lialias.colk], table.reputatioalias.col as reputatioalias.col, coualias.colt(table.id) as aalias.colswers, cast(avg(cast(alias.col as float)) as alias.columeric(alias.col,alias.col)) as [average aalias.colswer alias.col] from table ialias.colalias.coler joialias.col table oalias.col table.id = owalias.coleruserid where alias.col = alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold closeddate is alias.colull aalias.cold table.reputatioalias.col > alias.col group by table.id, displayalias.colame, table.reputatioalias.col havialias.colg coualias.colt(table.id) > alias.col order by [average aalias.colswer alias.col] asc"
select alias.col from table where alias.col = alias.col;
"with table as ( select alias.col, coualias.colt(alias.col) as alias.col from table group by alias.col ), table as ( select q.alias.col as alias.col, coualias.colt(a.alias.col) as aalias.col, sum(ac.alias.col) as acalias.col from table q ialias.colalias.coler joialias.col table a oalias.col q.alias.col = a.parealias.coltalias.col ialias.colalias.coler joialias.col table ac oalias.col a.alias.col = ac.alias.col where q.posttypealias.col = alias.col aalias.cold a.posttypealias.col = alias.col group by q.alias.col ) select top alias.col s.alias.col as [post lialias.colk], s.aalias.col as [aalias.colswers], (s.acalias.col + qc.alias.col) as [table] from table s ialias.colalias.coler joialias.col table qc oalias.col s.alias.col = qc.alias.col order by (s.aalias.col + s.acalias.col + qc.alias.col) desc;"
"select alias.col as alias.col, alias.col from table where ( (alias.col(alias.col, alias.col) > alias.col) or (alias.col(alias.col, alias.col) > alias.col) or (alias.col(alias.col, alias.col) > alias.col) ) aalias.cold (posttypealias.col = alias.col)"
select sum(alias.col) from (select coualias.colt(alias.col) as alias.col from table where posttypealias.col=alias.col aalias.cold owalias.coleruseralias.col = ##useralias.col## aalias.cold alias.col>alias.col ualias.colioalias.col select coualias.colt(a.alias.col) as alias.col from table q joialias.col table a oalias.col q.acceptedaalias.colsweralias.col = a.alias.col where a.alias.col=alias.col aalias.cold a.owalias.coleruseralias.col = ##useralias.col##) as combialias.coled;
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x order by alias.col desc;"
"select alias.col + alias.col + alias.col + alias.col as alias.col, count from table where alias.col like alias.col order by alias.col asc"
"select alias.col as name, count(alias.col) as alias.col from table group by alias.col having alias.col = alias.col order by count(alias.col) desc"
"set alias.colocoualias.colt oalias.col declare alias.col date select alias.col = max(alias.col) from table set alias.colocoualias.colt off select top alias.col alias.col as [user lialias.colk], reputatioalias.col, alias.col, reputatioalias.col/alias.col as repperalias.col from ( select alias.col, coalias.colvert(ialias.colt, alias.col - alias.col) as alias.col from table ) as tableaugmealias.colted where reputatioalias.col > alias.col order by repperalias.col desc"
"select alias.col as alias.col, coualias.colt(*) as dowalias.coltable from table p ialias.colalias.coler joialias.col table v oalias.col alias.col = alias.col where alias.col = alias.col:alias.col aalias.cold alias.col = alias.col group by alias.col order by dowalias.coltable desc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... order by alias.col desc;"
"select [close table], coualias.colt(*) from ( select coualias.colt(*) as [close table] from table ialias.colalias.coler joialias.col table oalias.col table.id = table.postid where table.votetypeid=alias.col aalias.cold table.closeddate is alias.colot alias.colull group by table.id ) as x group by [close table]"
"with table as (select coalias.colvert(varchar(alias.col), table.creatioalias.coldate, alias.col) as alias.col, sum(case alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col ealias.cold) as alias.col from table ialias.colalias.coler joialias.col table oalias.col table.id = table.postid where table.owalias.coleruserid = alias.col## aalias.cold table.commualias.colityowalias.coleddate is alias.colull group by table.creatioalias.coldate) select sum(alias.col) from table where date <= alias.col##"
"select top alias.col alias.col as alias.col, alias.col, alias.col, alias.col from table p where alias.col like alias.col + alias.col:strialias.colg## + alias.col order by p.alias.col desc"
"select alias.col as alias.col, (case when alias.col is not null then alias.col + cast(alias.col as nvarchar) + alias.col else alias.col end) + coalesalias.col(p.ownerdisplayname, u.displayname) as [user link], alias.col, p.creationdate, alias.col from table p left join table u on alias.col = alias.col where alias.col in (alias.col) and lower(alias.col) like alias.col + lower(##tealias.colt:alias.col) + alias.col order by alias.col desc, p.creationdate desc"
"select alias.col as alias.col, alias.col, coualias.colt(*) alias.col from ( select alias.col, a.alias.col, alias.col = raalias.colk() over (partitioalias.col by alias.col order by alias.col desc) from table a ialias.colalias.coler joialias.col table q oalias.col alias.col = alias.col aalias.cold alias.col = alias.col where alias.col = alias.col aalias.cold alias.col >= alias.col aalias.cold q.acceptedaalias.colswerid is alias.colull aalias.cold q.commualias.colityowalias.coleddate is alias.colull aalias.cold a.commualias.colityowalias.coleddate is alias.colull aalias.cold q.creatioalias.coldate < dateadd(d, alias.col, getutcdate()) aalias.cold a.alias.col is alias.colot alias.colull ) x where alias.col=alias.col group by alias.col havialias.colg coualias.colt(*) >= alias.col order by alias.col desc"
"select top alias.col alias.col as [post lialias.colk], p.aalias.colswercoualias.colt as [aalias.colswers], alias.col as alias.col, viewcoualias.colt as alias.col from table p where p.aalias.colswercoualias.colt > alias.col order by p.aalias.colswercoualias.colt desc"
"declare alias.col bigialias.colt declare alias.col bigialias.colt declare @topalias.colalias.coltotal decimal(alias.col,alias.col) declare @bottomalias.colalias.coltotal decimal(alias.col,alias.col) selealias.col alias.col = sum(alias.col) from table selealias.col alias.col = coualias.colt(alias.col) from table where alias.col > alias.col selealias.col @topalias.colalias.coltotal = sum(alias.col) from (selealias.col top(alias.col) percealias.colt alias.col as alias.col from table order by alias.col desc) as alias.col selealias.col @bottomalias.colalias.coltotal = sum(alias.col) from (selealias.col top(alias.col) percealias.colt alias.col as alias.col from table where alias.col > alias.col order by alias.col) as alias.col selealias.col alias.col totalalias.col, alias.col usercoualias.colt, @topalias.colalias.coltotal topalias.colalias.coltotal, @bottomalias.colalias.coltotal bottomalias.colalias.coltotal, cast((@topalias.colalias.coltotal/alias.col)*alias.col as decimal(alias.col,alias.col)) topalias.colpercealias.coltageofalias.col, cast((@bottomalias.colalias.coltotal/alias.col)*alias.col as decimal(alias.col,alias.col)) bottomalias.colpercealias.coltageofalias.col"
"select top alias.col alias.col as [post lialias.colk], creatioalias.coldate from table where body like x"
"declare alias.col ialias.colt = ##userid:ialias.colt## select alias.col as alias.col, alias.col from table as aalias.colswer left joialias.col table as questioalias.col oalias.col alias.col=alias.col where alias.col=alias.col aalias.cold aalias.colswer.owalias.coleruserid=alias.col aalias.cold questioalias.col.owalias.coleruserid=alias.col order by alias.col desc"
"set alias.colocoualias.colt oalias.col create table table (alias.col ialias.colt alias.colealias.coltity, [start] datetime, [fialias.colish] datetime) ialias.colsert table select top alias.col alias.colull, alias.colull from table declare alias.col datetime select alias.col = creatioalias.coldate from table where alias.col = (select max(palias.col.alias.col) from table palias.col) update table set [start] = dateadd(d, (alias.col - alias.col) * alias.col, alias.col), [fialias.colish] = dateadd(d, (alias.col - alias.col) * alias.col, alias.col) select start, (select coualias.colt(*) from table where parealias.coltalias.col is alias.colull aalias.cold creatioalias.coldate betweealias.col [start] aalias.cold [fialias.colish] ) as [total questioalias.cols], (select coualias.colt(*) from table where parealias.coltalias.col is alias.colot alias.colull aalias.cold creatioalias.coldate betweealias.col [start] aalias.cold [fialias.colish] ) as [total aalias.colswers] from table"
select count(*) as table_length from table; select count(*) as users_length from table; select count(*) as comments_length from table; select count(*) as badges_length from table; select count(*) as posttags_length from table;
"select top alias.col alias.col, alias.col, body from table order by alias.col desc;"
"declare @refdate float set @refdate=cast(##year:ialias.colt## as float)+cast(##week:ialias.colt## as float)/alias.col.alias.col declare @alias.col float set @alias.col=@refdatealias.col.alias.col set alias.colocoualias.colt oalias.col declare @oldexperts table (uid ialias.colt) ialias.colsert @oldexperts select uid from ( select (alias.col(alias.col, alias.col) + (alias.col(alias.col, alias.col)alias.col) / alias.col.alias.col) as yr_alias.col , alias.col as uid , coualias.colt (*) as alias.columaalias.colswers from table u ialias.colalias.coler joialias.col table p oalias.col p.owalias.coleruserid = alias.col aalias.cold alias.col = alias.col aalias.cold alias.col > alias.col group by (alias.col(alias.col, alias.col) + (alias.col(alias.col, alias.col)alias.col) / alias.col.alias.col) , alias.col ) aalias.colsperuperalias.col where alias.columaalias.colswers > alias.col aalias.cold abs(yr_alias.col-@alias.col)<alias.col.alias.col; declare @alias.colewexperts table (uid ialias.colt) ialias.colsert @alias.colewexperts select uid from ( select (alias.col(alias.col, alias.col) + (alias.col(alias.col, alias.col)alias.col) / alias.col.alias.col) as yr_alias.col , alias.col as uid , coualias.colt (*) as alias.columaalias.colswers from table u ialias.colalias.coler joialias.col table p oalias.col p.owalias.coleruserid = alias.col aalias.cold alias.col = alias.col aalias.cold alias.col > alias.col group by (alias.col(alias.col, alias.col) + (alias.col(alias.col, alias.col)alias.col) / alias.col.alias.col) , alias.col ) aalias.colsperuperalias.col where alias.columaalias.colswers > alias.col aalias.cold abs(yr_alias.col-@refdate)<alias.col.alias.col; set alias.colocoualias.colt off select coualias.colt(*) from @alias.colewexperts;"
"declare @tag varchar(alias.col) = ##tag:strialias.colg## select top alias.col alias.col as [post lialias.colk], alias.col, viewcoualias.colt as views, aalias.colswercoualias.colt as aalias.colswers, body, creatioalias.coldate from table where acceptedaalias.colsweralias.col is alias.colull aalias.cold posttypealias.col = alias.col aalias.cold creatioalias.coldate < getdate() - alias.col aalias.cold closeddate is alias.colull aalias.cold tags like x ... + lower(@tag) + x aalias.cold viewcoualias.colt < alias.col order by creatioalias.coldate desc"
"declare alias.col ialias.colt = ##userid## select alias.col, coualias.colt(*) as uptable from table ialias.colalias.coler joialias.col posttable oalias.col posttable.tagid = table.id ialias.colalias.coler joialias.col table oalias.col table.parealias.coltid = posttable.postid ialias.colalias.coler joialias.col table oalias.col table.postid = table.id aalias.cold alias.col = alias.col where table.owalias.coleruserid = alias.col aalias.cold alias.col = ##alias.col:strialias.colg## group by alias.col order by uptable desc"
"select top alias.col alias.col as [alias.col], coualias.colt(*) as [coualias.colt] from table where alias.col = alias.col group by alias.col order by coualias.colt desc"
"declare alias.col int = n declare alias.col char = x select alias.col, alias.col"
select alias.col from table where alias.col < alias.col
"selealias.col un.emailhash, count(alias.col) as alias.col, (selealias.col cast(alias.col as varchar) + alias.col + alias.col + alias.col from table un where un.emailhash = un.emailhash for alias.colml path (alias.col)) as idsandnames from table un where un.emailhash is not null group by un.emailhash having count(alias.col) > n order by alias.col desc"
"selealias.col un.emailhash, count(alias.col) as alias.col, sum(alias.col) as alias.col, maalias.col(alias.col) as alias.col, sum(alias.col) - maalias.col(alias.col) as alias.col, ( selealias.col cast(alias.col as varchar) + alias.col + alias.col + alias.col + cast(alias.col as varchar) + alias.col from table un where un.emailhash = un.emailhash order by alias.col desc for alias.colml path (alias.col)) as idsandnames from table un where un.emailhash is not null group by un.emailhash having count(alias.col) > n and sum(alias.col) >= n and maalias.col(alias.col) < sum(alias.col) * n.n order by alias.col desc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... or location like x and alias.col >= n order by alias.col desc;"
"select top alias.col coualias.colt(alias.col) as [alias.col] , coualias.colt(distialias.colct ta.uid) as distialias.colctquoters, ta.url from ( select p.owalias.coleruserid as uid, p.id as pid , substrialias.colg ( p.urlbody, alias.col, case whealias.col charialias.coldex(x, p.urlbody) > charialias.coldex(x, p.urlbody) thealias.col charialias.coldex(x, p.urlbody) else charialias.coldex(x, p.urlbody) ealias.cold ) as url from ( select substrialias.colg ( body, charialias.coldex(x, upper(body)) + alias.col, alias.col ) as urlbody, id, owalias.coleruserid from table where lealias.col(body) < alias.col aalias.cold upper(body) like x ) p ) as ta group by ta.url order by [alias.col] desc"
"select top alias.col table.id as [post lialias.colk], table.viewcoualias.colt, table.lastactivitydate from table joialias.col table oalias.col table.id = table.postid joialias.col table oalias.col table.tagid = table.id where table.tagalias.colame like alias.col aalias.cold table.tagalias.colame like alias.col ... order by table.viewcoualias.colt desc;"
"select top alias.col alias.col as [post lialias.colk], c.creatioalias.coldate, alias.col as body from table c, table p where ( alias.col like alias.col aalias.cold alias.col = alias.col aalias.cold alias.col is alias.colull aalias.cold p.posttypeid = alias.col aalias.cold commualias.colityowalias.coleddate is alias.colot alias.colull ) order by creatioalias.coldate"
"declare @mialias.colaalias.colswers ialias.colt = ##mialias.colaalias.colswers## select top alias.col alias.col as [user lialias.colk], coualias.colt(*) as alias.columaalias.colswers, sum(case whealias.col q.acalias.colptedaalias.colswerid = alias.col thealias.col alias.col else alias.col ealias.cold) as alias.columacalias.colpted, sum( ca.competialias.colgaalias.colswers ) as competialias.colgaalias.colswers, (sum(case whealias.col q.acalias.colptedaalias.colswerid = alias.col thealias.col alias.col/(alias.col.alias.col * ca.competialias.colgaalias.colswers ) else alias.col ealias.cold)*alias.col.alias.col/coualias.colt(*)) as weightedacalias.colptedperalias.colalias.colt from table a ialias.colalias.coler joialias.col table u oalias.col alias.col = a.owalias.coleruserid ialias.colalias.coler joialias.col table q oalias.col a.parealias.coltid = alias.col left joialias.col ( select qc.acalias.colptedaalias.colswerid, coualias.colt( alias.col ) as competialias.colgaalias.colswers from table qc ialias.colalias.coler joialias.col table ac oalias.col ac.parealias.coltid = alias.col aalias.cold alias.col = alias.col where alias.col = alias.col aalias.cold qc.acalias.colptedaalias.colswerid is alias.colot alias.colull aalias.cold ( qc.owalias.coleruserid <> ac.owalias.coleruserid or qc.owalias.coleruserid is alias.colull ) group by qc.acalias.colptedaalias.colswerid ) ca oalias.col ca.acalias.colptedaalias.colswerid = alias.col where (q.owalias.coleruserid <> alias.col or q.owalias.coleruserid is alias.colull) group by alias.col havialias.colg coualias.colt(*) >= @mialias.colaalias.colswers order by weightedacalias.colptedperalias.colalias.colt desc, alias.columaalias.colswers desc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], user link, alias.col, location, concat( datediff(year, creationdate, getdate()), x, datediff(month, creationdate, getdate()), x ) as x, age from table where lower(location) like lower(x) order by alias.col desc;"
"select toalias alias.col alias.col as [aliasost lialias.colk], alias.col, alias.creatioalias.coldate from table as alias where alias.col like alias.col + ##tagalias.colame:strialias.colg## + alias.col order by alias.creatioalias.coldate"
select toalias alias.col alias.col from table as alias where alias.col like alias.col aalias.cold alias.col = alias.col order by alias.col desc
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... order by alias.col desc;"
"select top alias.col table.id as [user lialias.colk], maalias.col(alias.col) as alias.col, maalias.col(locatioalias.col) as locatioalias.col, maalias.col(websiteurl) as website, maalias.col(reputatioalias.col) as rep, coualias.colt(aalias.colswers.id) as aalias.colswers, sum(aalias.colswers.score) as score, cast(avg(cast(aalias.colswers.score as float)) as alias.columeric(alias.col,alias.col)) as [avg] from table joialias.col posttable oalias.col posttable.tagid = table.id joialias.col table oalias.col table.id = posttable.postid joialias.col table as aalias.colswers oalias.col aalias.colswers.parealias.coltid = table.id joialias.col table oalias.col table.id = aalias.colswers.owalias.coleruserid where table.tagalias.colame = alias.col group by table.id, displayalias.colame order by sum(aalias.colswers.score) desc"
"selealias.col top alias.col questioalias.cols.alias.col as [post lialias.colk], questioalias.cols.alias.col as alias.col, coualias.colt(aalias.colswers.alias.col) as [# aalias.colswers], alias.col + cast(questioalias.cols.acceptedaalias.colsweralias.col as alias.colvarchar) + alias.col + alias.colchar(alias.colalias.colalias.col) as [accepted aalias.colswer] from table as questioalias.cols joialias.col table as aalias.colswers oalias.col aalias.colswers.parealias.coltalias.col = questioalias.cols.alias.col where alias.colot ealias.colists ( selealias.col alias.col from table as aalias.colswers where aalias.colswers.parealias.coltalias.col = questioalias.cols.alias.col aalias.cold aalias.colswers.alias.col <> alias.col ) group by questioalias.cols.alias.col, questioalias.cols.acceptedaalias.colsweralias.col, questioalias.cols.alias.col, questioalias.cols.viewcoualias.colt, questioalias.cols.creatioalias.coldate havialias.colg coualias.colt(aalias.colswers.alias.col) > alias.col order by questioalias.cols.alias.col desc, coualias.colt(aalias.colswers.alias.col) desc, questioalias.cols.viewcoualias.colt desc, questioalias.cols.creatioalias.coldate desc;"
"select exp(alias.col(alias.col(alias.col),alias.col)) as alias.col, alias.col(alias.col.alias.col*dowalias.colvotes/alias.col,alias.col) as alias.col, avg(alias.col) as avg_alias.col, coualias.colt(*) as alias.col from table where alias.col>alias.col aalias.cold alias.col>alias.col aalias.cold alias.col+dowalias.colvotes>alias.col group by alias.col(alias.col(alias.col),alias.col), alias.col(alias.col.alias.col*dowalias.colvotes/alias.col,alias.col) order by alias.col,alias.col"
"DECLARE @username AS NVARCHAR(N) = ##DisplayName:string? ##; DECLARE @userId AS INT = ##UserId:int?N##; SELECT TOP ##Limit:int?N## u.Id AS [User Link], a.Id AS [Post Link], a.Tags AS [Tags], a.CreationDate FROM Posts a JOIN Users u ON a.OwnerUserId = u.Id JOIN ( SELECT q.Id, MAX(a.Score) MaxAnswerScore FROM Posts q JOIN Posts a ON a.ParentId = q.Id WHERE q.AcceptedAnswerId IS NULL GROUP BY q.Id ) q ON a.ParentId = q.Id WHERE (@username = X OR u.DisplayName = @username) AND (@userId = N OR u.Id = @userId) AND a.Score = N AND q.MaxAnswerScore = N ORDER BY a.CreationDate"
"with table as ( select table.postid, table.creatioalias.coldate, table.owalias.coleralias.col as alias.col, alias.col, (case whealias.col alias.col = alias.col thealias.col alias.col whealias.col alias.col = alias.col aalias.cold posttypeid = alias.col thealias.col alias.col whealias.col alias.col = alias.col aalias.cold posttypeid = alias.col thealias.col alias.col whealias.col alias.col = alias.col thealias.col alias.col whealias.col alias.col = alias.col thealias.col boualias.coltyamoualias.colt ealias.cold) as poialias.colts, (case whealias.col table.creatioalias.coldate > table.commualias.colityowalias.coleddate thealias.col alias.col else alias.col ealias.cold) as iscommualias.colityowalias.coled, (case whealias.col (select top alias.col creatioalias.coldate from table where tabletypeid=alias.col aalias.cold table.postid = table.postid order by creatioalias.coldate desc) > table.creatioalias.coldate thealias.col alias.col else alias.col ealias.cold) as isbeforemigratioalias.col from table ialias.colalias.coler joialias.col table oalias.col table.id = table.postid ) , table as ( select table.id as alias.col, sum(poialias.colts) as alias.col, sum(case whealias.col (alias.col = alias.col or alias.col = alias.col or alias.col = alias.col) aalias.cold iscommualias.colityowalias.coled = alias.col aalias.cold isbeforemigratioalias.col = alias.col thealias.col poialias.colts else alias.col ealias.cold) as lostwiki, sum(case whealias.col isbeforemigratioalias.col = alias.col thealias.col poialias.colts else alias.col ealias.cold) as lostmigratioalias.col from table ialias.colalias.coler joialias.col table oalias.col table.id = alias.col group by table.id, table.reputatioalias.col ) select top alias.col table.id as [user lialias.colk], table.reputatioalias.col as alias.col, alias.col as alias.col from table ialias.colalias.coler joialias.col table oalias.col table.id = alias.col order by alias.col desc"
"select alias.col as alias.col, alias.col as alias.col, alias.col as asalias.col, alias.col as views, q.creatioalias.coldate as qdate from table as q ialias.colalias.coler joialias.col table as a oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold q.aalias.colswercoualias.colt = alias.col aalias.cold q.creatioalias.coldate < alias.col aalias.cold alias.col < alias.col aalias.cold alias.col = alias.col aalias.cold alias.col alias.colot like alias.col aalias.cold lealias.col(alias.col) < alias.col aalias.cold q.acceptedaalias.colswerid is alias.colull aalias.cold q.closeddate < alias.col aalias.cold q.lasteditdate < alias.col group by alias.col, alias.col, alias.col, alias.col, q.creatioalias.coldate order by alias.col asc"
"create table table (questioalias.colid ialias.colt primary key, questioalias.colowalias.coleracalias.colptedperalias.colalias.colt float) ialias.colsert table select top alias.col alias.col as questioalias.colid, (select (sum(case whealias.col subq.acalias.colptedaalias.colswerid is alias.colot alias.colull thealias.col alias.col else alias.col ealias.cold)*alias.col.alias.col/coualias.colt(*)) as acalias.colptedperalias.colalias.colt from table subq where alias.col = alias.col aalias.cold subq.owalias.coleruserid = q.owalias.coleruserid) as questioalias.colowalias.coleracalias.colptedperalias.colalias.colt from table q joialias.col table u oalias.col alias.col = q.owalias.coleruserid where (select coualias.colt(*) from table a where alias.col = alias.col aalias.cold a.parealias.coltid = alias.col aalias.cold alias.col > alias.col) = alias.col aalias.cold alias.col = alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold closeddate is alias.colull aalias.cold q.parealias.coltid is alias.colull aalias.cold q.score >= alias.col aalias.cold acalias.colptedaalias.colswerid is alias.colull aalias.cold datediff(day, q.creatioalias.coldate, getdate()) > alias.col aalias.cold datediff(moalias.colth, q.creatioalias.coldate, getdate()) < alias.col aalias.cold u.reputatioalias.col > alias.col order by questioalias.colowalias.coleracalias.colptedperalias.colalias.colt desc; select top alias.col (us.reputatioalias.col / alias.col) as rep, coualias.colt(*) as tally from table ua joialias.col table p oalias.col ua.questioalias.colid = p.id joialias.col table us oalias.col us.id = p.owalias.coleruserid where questioalias.colowalias.coleracalias.colptedperalias.colalias.colt > alias.col group by (us.reputatioalias.col / alias.col) order by rep asc"
select table.tagname from table as edit left join table on alias.col = table.id left join table on table.id = table.wikipostid where alias.col=alias.col:alias.col and table.posttypeid in (alias.col) and alias.col is not null
select alias.col as alias.col from table q joialias.col table u oalias.col alias.col = alias.col joialias.col table a oalias.col alias.col = alias.col aalias.cold alias.col = alias.col where alias.col < alias.col aalias.cold q.acceptedaalias.colswerid != alias.col aalias.cold u.reputatioalias.col < alias.col order by a.creatioalias.coldate desc
"select alias.col as alias.col, replace(replace(body, x, x), x, x) as [questioalias.col text], score from table where ( (posttypealias.col = alias.col) aalias.cold (lealias.col(body) < alias.col) )"
"select top alias.col alias.col as [post lialias.colk], alias.col from table p where alias.col = alias.col aalias.cold p.creatioalias.coldate < alias.col() - alias.col aalias.cold alias.col is alias.colull aalias.cold alias.colot exists ( select alias.col from table palias.col where palias.col.parealias.coltid = alias.col aalias.cold palias.col.score >= alias.col aalias.cold palias.col.posttypeid = alias.col ) order by alias.col desc"
"select top alias.col alias.col as [post lialias.colk] , body , creatioalias.coldate from table where body like x or alias.col = alias.col"
"select alias.col as alias.col, alias.col as alias.col, alias.col as date, alias.col from table post joialias.col table vote oalias.col alias.col = alias.col joialias.col table parealias.colt oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col <> alias.col aalias.cold alias.col like alias.col ... order by alias.col desc"
"select top alias.col alias.col as [post lialias.colk], alias.col, viewcoualias.colt, creatioalias.coldate from table where lastactivitydate < alias.col(m, -##moalias.colthsold##, alias.col()) aalias.cold parealias.coltalias.col is alias.colull aalias.cold aalias.colswercoualias.colt = alias.col aalias.cold alias.col like x ... order by viewcoualias.colt asc"
"select alias.col as alias.col, coualias.colt(alias.col) as coualias.colt from table t joialias.col posttable pt oalias.col alias.col = pt.alias.colid joialias.col table p oalias.col alias.col = alias.col joialias.col table u oalias.col alias.col = alias.col where {alias.col alias.col()} - alias.col < alias.col * ##moalias.colths## group by alias.col order by coualias.colt desc"
"select alias.col, coualias.colt(*) + alias.col as raalias.colk from ( select owalias.coltablecores.alias.col, owalias.coltablecores.alias.col as alias.col, sum(table.alias.col) as alias.col from ( select table.alias.col as alias.col, sum(aalias.colswers.alias.col) as alias.col from table as aalias.colswers joialias.col table oalias.col table.postid = aalias.colswers.parealias.coltid where owalias.coleruserid = alias.col aalias.cold aalias.colswers.alias.col > alias.col aalias.cold aalias.colswers.commualias.colityowalias.coleddate is alias.colull group by aalias.colswers.owalias.coleruserid, table.alias.col ) owalias.coltablecores joialias.col table oalias.col owalias.coltablecores.alias.col = table.alias.col joialias.col table oalias.col table.parealias.coltid = table.postid where commualias.colityowalias.coleddate is alias.colull aalias.cold table.alias.col > alias.col group by table.owalias.coleruserid, owalias.coltablecores.alias.col, owalias.coltablecores.alias.col ) superiorusers joialias.col table oalias.col table.id = alias.col where alias.col < alias.col group by alias.col, alias.col order by coualias.colt(*), alias.col"
"with uptable as ( select alias.col as alias.col, coualias.colt(alias.col) as alias.col from table p left outer joialias.col table v oalias.col v.alias.col = alias.col where alias.col = alias.col group by alias.col ), dowalias.coltable as ( select alias.col as alias.col, coualias.colt(alias.col) as alias.col from table p left outer joialias.col table v oalias.col v.alias.col = alias.col where alias.col = alias.col group by alias.col ), tabletats as ( select t.alias.colalias.colame as alias.col, coualias.colt(alias.col) as [aalias.colswercoualias.colt], sum(case whealias.col q.acalias.colptedaalias.colswerid = alias.col thealias.col alias.col else alias.col ealias.cold) as [acalias.colptedcoualias.colt], sum(coalesalias.col(u.alias.col, alias.col)) as [uptable], sum(coalesalias.col(d.alias.col, alias.col)) as [dowalias.coltable] from table a ialias.colalias.coler joialias.col table q oalias.col a.parealias.coltid = alias.col ialias.colalias.coler joialias.col table pt oalias.col pt.alias.col = alias.col ialias.colalias.coler joialias.col table t oalias.col alias.col = alias.col left outer joialias.col uptable u oalias.col alias.col = u.alias.col left outer joialias.col dowalias.coltable d oalias.col alias.col = d.alias.col where alias.col = alias.col aalias.cold alias.col = alias.col group by alias.col, t.alias.colalias.colame ) select alias.col as alias.col, roualias.cold(acalias.colptedcoualias.colt * alias.col.alias.col / aalias.colswercoualias.colt, alias.col) as [ acalias.colpted], case whealias.col uptable + dowalias.coltable != alias.col thealias.col roualias.cold(uptable * alias.col.alias.col / (uptable + dowalias.coltable), alias.col) else alias.col ealias.cold as [ uptable], roualias.cold(uptable * alias.col.alias.col / aalias.colswercoualias.colt, alias.col) as [avg. uptable], aalias.colswercoualias.colt as [aalias.colswers], acalias.colptedcoualias.colt as [acalias.colpted], uptable as [uptable], dowalias.coltable as [dowalias.coltable] from tabletats where aalias.colswercoualias.colt >= ##mialias.colaalias.colswers## order by [avg. uptable] desc;"
"select top alias.col alias.col as [post lialias.colk], alias.col, viewcoualias.colt from table where alias.col > alias.col aalias.cold viewcoualias.colt <> alias.col aalias.cold parealias.coltalias.col is alias.colull aalias.cold acceptedaalias.colsweralias.col is alias.colull order by viewcoualias.colt desc"
"select top alias.col pt.alias.colame alias.col, year(v.creatioalias.coldate) alias.col, moalias.colth(v.creatioalias.coldate) votemoalias.colth, alias.col alias.col, vt.alias.colame alias.col, coualias.colt(*) votecoualias.colt from table v ialias.colalias.coler joialias.col table vt oalias.col v.alias.col = alias.col ialias.colalias.coler joialias.col table p oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table pt oalias.col p.alias.colid = alias.col group by pt.alias.colame, year(v.creatioalias.coldate), moalias.colth(v.creatioalias.coldate), alias.col, vt.alias.colame order by pt.alias.colame, alias.col, moalias.colth(v.creatioalias.coldate), year(v.creatioalias.coldate)"
"declare alias.col ialias.colt, alias.col varchar set alias.colocoualias.colt oalias.col set alias.col = x + ##text:alias.col + x select alias.col = alias.col from table where alias.col = alias.col:alias.col select top alias.col## p.alias.col as alias.col, alias.col as alias.col from table p ialias.colalias.coler joialias.col posttable pt oalias.col p.parealias.coltalias.col = pt.postalias.col aalias.cold pt.tagalias.col = alias.col where p.posttypealias.col = alias.col aalias.cold p.owalias.coleruseralias.col = ##useralias.col## aalias.cold (alias.col like alias.col or alias.col like alias.col) order by alias.col desc"
"selealias.col top alias.col alias.col + cast(table.id as alias.colvarchar), reviewtaskresulttypeid, (selealias.col coualias.colt(*) from table where table.reviewtaskid = table.id aalias.cold table.reviewtaskresulttypeid = alias.col) as looksokcoualias.colt, (selealias.col coualias.colt(*) from table where table.reviewtaskid = table.id aalias.cold table.reviewtaskresulttypeid = alias.col) as shouldbeimprovedcoualias.colt, (selealias.col coualias.colt(*) from table where table.reviewtaskid = table.id aalias.cold table.reviewtaskresulttypeid = alias.col) as ualias.colsalvageable from table joialias.col table oalias.col table.id = table.completedbyreviewtaskid where table.reviewtasktypeid = alias.col aalias.cold table.tabletateid = alias.col"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x order by alias.col desc;"
select alias.col from table p where alias.col = alias.col## order by alias.col
"select top alias.col row_alias.columber() over(order by reputatioalias.col desc) as [#], id as [user lialias.colk], reputatioalias.col, locatioalias.col from table where lower(locatioalias.col) like x or upper(locatioalias.col) like x ... or locatioalias.col like x aalias.cold reputatioalias.col >= alias.col order by reputatioalias.col desc;"
"select top alias.col owalias.coleruserid as [user lialias.colk] from table group by owalias.coleruserid, score, commealias.coltcoualias.colt havialias.colg coualias.colt(owalias.coleruserid) = alias.col aalias.cold score <= alias.col aalias.cold commealias.coltcoualias.colt = alias.col"
"select alias.col , alias.col , alias.col , alias.col , alias.col , alias.col from table v ialias.colalias.coler joialias.col table ph oalias.col alias.col = alias.col where ( alias.col = alias.col aalias.cold ph.tabletypeid = alias.col )"
"select top alias.col table.id as [user lialias.colk], roualias.cold((alias.col.alias.col * (alias.colutatioalias.col/alias.col)) / (alias.col+alias.col), alias.col) as alias.col, alias.colutatioalias.col as alias.col, alias.col as alias.col, dowalias.colvotes alias.col from table ialias.colalias.coler joialias.col table oalias.col table.userid = table.id ialias.colalias.coler joialias.col table oalias.col table.postid = table.id where alias.colutatioalias.col > ##mialias.colalias.col## aalias.cold alias.col > ##mialias.colalias.col## aalias.cold table.tags like alias.col ... order by alias.col desc"
"declare @mialias.colaalias.colswers ialias.colt = alias.col select top alias.col alias.col as [user lialias.colk], coualias.colt(*) as alias.columaalias.colswers, sum(case whealias.col q.acalias.colptedaalias.colswerid = alias.col thealias.col alias.col else alias.col ealias.cold) as alias.columacalias.colpted, (sum(case whealias.col q.acalias.colptedaalias.colswerid = alias.col thealias.col alias.col else alias.col ealias.cold)*alias.col.alias.col/coualias.colt(*)) as acalias.colptedperalias.colalias.colt from table a ialias.colalias.coler joialias.col table u oalias.col alias.col = a.owalias.coleruserid ialias.colalias.coler joialias.col table q oalias.col a.parealias.coltid = alias.col where (q.owalias.coleruserid <> alias.col or q.owalias.coleruserid is alias.colull) aalias.cold a.posttypeid = alias.col group by alias.col havialias.colg coualias.colt(*) >= @mialias.colaalias.colswers order by acalias.colptedperalias.colalias.colt desc, alias.columaalias.colswers desc"
"selealias.col top alias.col a.owalias.coleruseralias.col as [user lialias.colk], roualias.cold((cast(coualias.colt(alias.col) as float) / (selealias.col coualias.colt(alias.col) from table where owalias.coleruseralias.col = ##useralias.col## aalias.cold posttypealias.col = alias.col) * alias.col), alias.col) as acceptedpercealias.coltage from table q ialias.colalias.coler joialias.col table a oalias.col q.acceptedaalias.colsweralias.col = alias.col aalias.cold a.posttypealias.col = alias.col where q.owalias.coleruseralias.col = ##useralias.col## group by a.owalias.coleruseralias.col order by acceptedpercealias.coltage desc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... order by alias.col desc;"
"with table as alias select distialias.colct alias.col from table where alias.col=alias.col ), table as alias select alias.col, postcoualias.colt=aliasselect coualias.coltaliasalias.col) from table where alias.col=alias.col aalias.cold alias.col>=alias.col) from table ds ) select alias.col from table where postcoualias.colt>=alias.col"
"declare table table (alias.col varchar(n), alias.col varchar(n), alias.col int) insert into table (alias.col, alias.col, alias.col) values (alias.colyz) select alias.col + alias.col as alias.col ,alias.col + alias.col as alias.col ,alias.col + alias.col as alias.col from table"
"select top alias.col table.id as [post lialias.colk], table.creatioalias.coldate, table, table.tealias.colt from table, table, table, table where table.id = table.postid aalias.cold table.tagid = table.id aalias.cold table.tagalias.colame = alias.col aalias.cold table.postid = table.id aalias.cold table.userid = alias.col aalias.cold table.tabletypeid = alias.col order by table.creatioalias.coldate desc"
"DECLARE @question TABLE(id int, title VARCHAR(N)); DECLARE @customerLikeQuestion TABLE(id int, QuestionId int, CustomerId int); INSERT INTO @question VALUES (XYZ), (N, X), (N, X); INSERT INTO @customerLikeQuestion VALUES (XYZ), (N, N, N), (N, N, N), (N, N, N), (N, N, N), (N, N, N), (N, N, N), (N, N, N), (N, N, N); ;WITH LiksCounts AS ( SELECT Id, (SELECT COUNT(*) AS ExprN FROM @customerLikeQuestion WHERE (QuestionId = q.Id)) AS LikeCount FROM @question AS q GROUP BY Id ) SELECT *, row_number() over (order by likecount) as RowNum fROM LiksCounts ORDER BY likecount DESC"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or lower(location) like x ... or upper(location) like x ... order by alias.col desc;"
"select alias.col as alias.col, alias.col, alias.col, location from table where location like nx or location like nx or location like nx or (location like nx and location not like nx) order by alias.col desc"
select top alias.col alias.col from table where alias.col is alias.colull order by creatioalias.coldate desc
"select top alias.col alias.col,alias.col,creatioalias.coldate,alias.col,alias.col(day, alias.col, creatioalias.coldate) from table where alias.col = alias.colull order by alias.col(day, alias.col, creatioalias.coldate);"
"select top alias.col owalias.coleruserid [user lialias.colk], coualias.colt(alias.col) [boualias.colty aalias.colswers provided], sum(boualias.coltyamoualias.colt) [boualias.colty amoualias.colt woalias.col] from table p,table where alias.col = alias.col aalias.cold alias.col = alias.col group by owalias.coleruserid order by coualias.colt(alias.col) desc"
"select top alias.col alias.col as [post lialias.colk] , body , creatioalias.coldate from table where body like x or alias.col = alias.col"
select count(*) from table where body like x
select alias.col from table where alias.col=alias.col
"select top alias.col alias.col as [user lialias.colk], alias.col, dowalias.colvotes, (dowalias.colvotes / (dowalias.colvotes + alias.col) ) *alias.col as percealias.coltage from table c where dowalias.colvotes > alias.col order by percealias.coltage desc"
"select alias.col as alias.col, alias.col from table where body like x and body like x order by parentalias.col"
"with toptableialias.colcvq as ( select top alias.col alias.col from table p ialias.colalias.coler joialias.col table pt oalias.col alias.col = alias.col where exists ( select alias.col from table pf where alias.col = alias.col) group by alias.col order by coualias.colt(*) desc ) select t.tagalias.colame , coualias.colt(*) from table p ialias.colalias.coler joialias.col table pt oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table mt oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table pf oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table m oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table t oalias.col alias.col = alias.col aalias.cold alias.col <> alias.col where alias.col ialias.col (alias.col) group by t.tagalias.colame havialias.colg coualias.colt(*) < alias.col order by alias.col desc"
"select alias.col, alias.col from ( select alias.col, alias.col from (select alias.colalias.col.alias.col alias.col, mialias.col(alias.colalias.col.alias.col) + alias.col alias.col from table alias.colalias.col ialias.colalias.coler joialias.col table alias.colalias.col oalias.col alias.colalias.col.alias.col < alias.colalias.col.alias.col where alias.colalias.col.alias.col < alias.col aalias.cold alias.colalias.col.alias.col < alias.col group by alias.colalias.col.alias.col) t where t.alias.col alias.colot ialias.col (alias.col) - alias.col alias.col from table alias.colalias.col ialias.colalias.coler joialias.col table alias.colalias.col oalias.col alias.colalias.col.alias.col < alias.colalias.col.alias.col where alias.colalias.col.alias.col < alias.col aalias.cold alias.colalias.col.alias.col < alias.col group by alias.colalias.col.alias.col) t where t.alias.col alias.colot ialias.col (select alias.col from table) ) talias.col oalias.col t.alias.col = talias.col.alias.col"
"select alias.col, postalias.col as alias.col, comment, creationdate, alias.col from table where owneruseralias.col = ##useralias.col## and alias.col is null order by alias.col desc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... order by alias.col desc;"
"declare alias.col ialias.colt = ##userid## selealias.col avg(alias.col) from (selealias.col (cast(alias.col as float) / sum(allalias.col)) * alias.col as alias.colormalizedscore from table a joialias.col table q oalias.col a.parealias.coltid = alias.col joialias.col table alla oalias.col alla.parealias.coltid = alias.col where alias.col = alias.col aalias.cold a.owalias.coleruserid = alias.col aalias.cold alias.col >= alias.col aalias.cold allalias.col > alias.col group by a.id, alias.col havialias.colg sum(allalias.col) > alias.col) as a"
"selealias.col alias.col, coualias.colt(alias.col) from ( selealias.col cast( cast(alias.col(alias.col, alias.col) as varchar) + alias.col + cast(alias.col(alias.col, alias.col) as varchar) + alias.col as datetime) table, t.table from table p joialias.col table pt oalias.col alias.col = alias.col joialias.col table t oalias.col alias.col = alias.col where alias.col ialias.col ( selealias.col top alias.col alias.col from table order by coualias.colt desc ) ) as alias.col group by table, table order by table asc, table asc"
"select top alias.col alias.col as [post lialias.colk], alias.col as [user lialias.colk], alias.col as commealias.colt, p.[body] as post, c.creatioalias.coldate, (alias.col - alias.col) as differealias.colce from table c ialias.colalias.coler joialias.col table p oalias.col alias.col = alias.col where (alias.col - alias.col) > alias.col order by (alias.col-alias.col) desc"
"select top alias.col alias.col as [post lialias.colk] , p.viewcoualias.colt , alias.col, p.aalias.colswercoualias.colt, (case whealias.col acalias.colptedaalias.colswerid is alias.colull thealias.col x else x ealias.cold) as hasacalias.colpted, roualias.cold(cast(alias.col as float)/p.viewcoualias.colt,alias.col) as alias.col from table p where p.viewcoualias.colt > alias.col aalias.cold alias.col is alias.colull aalias.cold alias.col > alias.col aalias.cold p.aalias.colswercoualias.colt < alias.col aalias.cold acalias.colptedaalias.colswerid is alias.colull order by alias.col desc"
"selealias.col alias.col, coualias.colt(alias.col) alias.col from ( selealias.col cast( cast(alias.col(alias.col, alias.col) as varchar) + alias.col + cast(alias.col(alias.col, alias.col) as varchar) + alias.col as date) moalias.colth, t.tagalias.colame from ( selealias.col alias.col, p.alias.col from table p joialias.col table pt oalias.col alias.col = alias.col joialias.col table t oalias.col alias.col = alias.col where alias.col > alias.col ) alias.col joialias.col table pt oalias.col alias.col = palias.col joialias.col table t oalias.col alias.col = alias.col where t.tagalias.colame like alias.col ) as alias.col group by tagalias.colame, moalias.colth order by moalias.colth desc, coualias.colt(alias.col) desc"
"selealias.col alias.col, count(alias.col) from ( selealias.col cast( cast(alias.col(alias.col, alias.col) as varchar) + alias.col + cast(alias.col(alias.col, alias.col) as varchar) + alias.col as date) month, alias.col from table p join table pt on alias.col = alias.col join table t on alias.col = alias.col where alias.col in (alias.colyz) ) as alias.col where month between cast(alias.col as date) and cast(alias.col as date) group by tagname, month order by month asc, count(alias.col) desc"
"set alias.colocoualias.colt oalias.col create table table (alias.col ialias.colt alias.colealias.coltity, [start] datetime, [fialias.colish] datetime) ialias.colsert table select top alias.col alias.colull, alias.colull from table declare alias.col datetime select alias.col = creatioalias.coldate from table where alias.col = (select max(palias.col.alias.col) from table palias.col) update table set [start] = dateadd(d, (alias.col - alias.col) , alias.col), [fialias.colish] = dateadd(d, (alias.col - alias.col) , alias.col) select start, (select coualias.colt(*) from table where parealias.coltalias.col is alias.colull aalias.cold creatioalias.coldate betweealias.col [start] aalias.cold [fialias.colish] ) as [total questioalias.cols], (select coualias.colt(*) from table where parealias.coltalias.col is alias.colot alias.colull aalias.cold creatioalias.coldate betweealias.col [start] aalias.cold [fialias.colish] ) as [total aalias.colswers] from table"
"declare @activedate as date = DateAdd (week, - ##Weeks:int?N##, Convert(date, CURRENT_TIMESTAMP)); set @activedate = DateAdd (day, N - DatePart(day, @activedate), @activedate); with WeekAction as ( select distinct DateAdd(day, N - DatePart(weekday, CreationDate), Convert(Date, CreationDate)) as Week, case when PostTypeId = N then X else X end as Series, OwnerUserId as UserId from Posts where PostTypeId in (XYZ) and CreationDate >= @activedate UNION ALL select distinct DateAdd(day, N - DatePart(weekday, CreationDate), Convert(Date, CreationDate)) as Week, X as Series, UserId from Comments where CreationDate >= @activedate ) select Week, Series, Count(*) from WeekAction where Week < CURRENT_TIMESTAMP group by Week, Series order by Week"
"select top alias.col aalias.colswer.id as [post lialias.colk], aalias.colswer.score from table p, table aalias.colswer where alias.col like alias.col + alias.col:strialias.colg## + alias.col aalias.cold aalias.colswer.parealias.coltid = alias.col order by aalias.colswer.score asc"
"create table table ( alias.col tealias.colt, alias.col ialias.colt ) ialias.colsert ialias.colto table (alias.col, alias.col) select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col select rc.alias.col, rc.alias.col, ( select coualias.colt(alias.col) from table u where u.reputatioalias.col >= rc.alias.col ) as usercoualias.colt from table rc"
"select alias.col , table.id as alias.col , table.creatioalias.coldate as alias.col , table.creatioalias.coldate as alias.col , case whealias.col table.commealias.colt like alias.col thealias.col alias.col else alias.col ealias.cold as [from stackoverflow] , substrialias.colg(table.commealias.colt,alias.col,charialias.coldealias.col(alias.col, substrialias.colg(table.commealias.colt + alias.col, alias.col, lealias.col(table.commealias.colt))) alias.col) from table joialias.col table oalias.col table.id = table.postid where table.tabletypeid = alias.col aalias.cold table.posttypeid = alias.col aalias.cold owalias.coleruserid is alias.colull order by alias.col, table.creatioalias.coldate desc"
"with table as (select coalias.colvert(varchar(alias.col), table.creatioalias.coldate, alias.col) as alias.col, sum(case alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col ealias.cold) as alias.col from table ialias.colalias.coler joialias.col table oalias.col table.id = table.postid where table.owalias.coleruserid = alias.col## aalias.cold table.commualias.colityowalias.coleddate is alias.colull group by table.creatioalias.coldate) select sum(alias.col) from table where date <= alias.col##"
declare @postid ialias.colt = ##questioalias.colpostid:ialias.colt## select top alias.col alias.col from table where alias.col = alias.col;
"declare @questionPool table ( Id int not null, IsClosed bit not null ); insert into @questionPool (Id, IsClosed) select p.Id, case when ClosedDate is null then N else N end [IsClosed] from Posts p where p.PostTypeId = N; declare @openCount int = ( select count(N) from @questionPool qp where qp.IsClosed = N ); declare @closedCount int = ( select count(N) from @questionPool qp where qp.IsClosed = N ); select @openCount [OpenCount], @closedCount [ClosedCount], (@openCount * N.N / @closedCount) [Open:Closed Ratio]"
"declare alias.col float selealias.col alias.col = sum(cast(alias.col as bigialias.colt)) from table where alias.col = alias.col selealias.col table.alias.colalias.colame as alias.col, coualias.colt(*) as questioalias.cols, sum(cast(table.alias.col as bigialias.colt)) as views, str(alias.col * sum(cast(table.alias.col as bigialias.colt)) / alias.col,alias.col,alias.col) as percealias.coltofsite, sum(table.score) as score, sum(table.aalias.colswercoualias.colt) as aalias.colswers, sum(cast(table.alias.col as bigialias.colt)) / coualias.colt(*) as avgviews, str(sum(table.score) / cast(coualias.colt(*) as float),alias.col,alias.col) as avgscore, str(sum(table.aalias.colswercoualias.colt) / cast(coualias.colt(*) as float),alias.col,alias.col) as avgaalias.colswers from table joialias.col table oalias.col table.id = table.postid joialias.col table oalias.col table.alias.colid = table.id where table.alias.col = alias.col group by table.alias.colalias.colame havialias.colg table.alias.colalias.colame = x or table.alias.colalias.colame = x or table.alias.colalias.colame = x or table.alias.colalias.colame = x order by views desc"
"select top alias.col alias.col, displayalias.colame, reputatioalias.col, alias.col, locatioalias.col from table where locatioalias.col like alias.colx order by reputatioalias.col desc"
"select alias.col, coualias.colt(alias.col) alias.col from table p ialias.colalias.coler joialias.col table u oalias.col alias.col = alias.col aalias.cold alias.col < alias.col where alias.col = alias.col aalias.cold alias.col is alias.colot alias.colull group by alias.col order by alias.col"
"declare alias.col float selealias.col alias.col = sum(cast(alias.col as bigialias.colt)) from table where alias.col = alias.col selealias.col table.alias.colalias.colame as alias.col, coualias.colt(*) as questioalias.cols, sum(cast(table.alias.col as bigialias.colt)) as views, str(alias.col * sum(cast(table.alias.col as bigialias.colt)) / alias.col,alias.col,alias.col) as percealias.coltofsite, sum(table.score) as score, sum(table.aalias.colswercoualias.colt) as aalias.colswers, sum(cast(table.alias.col as bigialias.colt)) / coualias.colt(*) as avgviews, str(sum(table.score) / cast(coualias.colt(*) as float),alias.col,alias.col) as avgscore, str(sum(table.aalias.colswercoualias.colt) / cast(coualias.colt(*) as float),alias.col,alias.col) as avgaalias.colswers from table joialias.col table oalias.col table.id = table.postid joialias.col table oalias.col table.alias.colid = table.id where table.alias.col = alias.col group by table.alias.colalias.colame havialias.colg table.alias.colalias.colame = x or table.alias.colalias.colame = x or table.alias.colalias.colame = x or table.alias.colalias.colame = x order by views desc"
"declare @alias.col int = ##alias.col## select alias.col as alias.col, alias.col as alias.col from table where alias.col = @alias.col order by alias.col desc"
select alias.col as alias.col from table where body like x and body not like x order by alias.col asc
"select alias.col, alias.col,(alias.col+ alias.coleputatioalias.col) as alias.col, ((alias.col+ alias.coleputatioalias.col))*alias.col.alias.col/(alias.col) as alias.colatio falias.colom table ialias.colalias.colealias.col joialias.col (select owalias.colealias.colusealias.colalias.col, coualias.colt(*) as alias.col falias.colom table galias.coloup by owalias.colealias.colusealias.colalias.col ) x oalias.col owalias.colealias.colusealias.colalias.col = alias.col whealias.cole alias.col = alias.col oalias.coldealias.col by alias.colatio desc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x order by alias.col desc;"
"selealias.col top alias.col alias.col, alias.col, reputatioalias.col, cast(reputatioalias.col as float)/(cast(alias.col as float)*cast(alias.col as float)) as alias.col from table order by reputatioalias.col desc"
"select top alias.col alias.col as [post lialias.colk], body, score from table where body like x aalias.cold parealias.coltalias.col is alias.colull"
"DECLARE @TicketHolder TABLE ( [Name] VARCHAR(N), Tickets DECIMAL(N, N) ); INSERT INTO @TicketHolder ([Name], Tickets) SELECT X, N.N UNION ALL SELECT X, N UNION ALL SELECT X, N.N UNION ALL SELECT X, N.N; declare @rnd float set @rnd = rand() * (select sum(tickets) from @TicketHolder) select Name , StartingNumber , EndingNumber , @rnd as DrawNumber , case when StartingNumber <= @rnd and @rnd < EndingNumber then X else X end from ( select tN.Name , IsNull(( select sum(Tickets) from @TicketHolder tN where tN.Name < tN.Name ),N) as StartingNumber , IsNull(( select sum(Tickets) from @TicketHolder tN where tN.Name <= tN.Name ),N) as EndingNumber from @TicketHolder tN ) as running_sum order by Name"
"select alias.col, alias.col from ( select alias.col alias.col, sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as [alias.coloalias.col zero score aalias.colswers], sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as [zero score aalias.colswers] from table q joialias.col table a oalias.col alias.col = q.acalias.colptedaalias.colswerid where a.commualias.colityowalias.coleddate is alias.colull aalias.cold alias.col is alias.colot alias.colull aalias.cold alias.col <> isalias.colull(q.owalias.coleruserid,alias.col) group by alias.col havialias.colg sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) > alias.col ) as x joialias.col table u oalias.col alias.col = alias.col order by ([zero score aalias.colswers]+ alias.col.alias.col) / ([zero score aalias.colswers]+ [alias.coloalias.col zero score aalias.colswers]+ alias.col.alias.col) desc"
select distialias.colct top alias.col alias.col as [post lialias.colk] from table as q ialias.colalias.coler joialias.col table ph oalias.col (alias.col = alias.col) where alias.col = alias.col aalias.cold alias.col >= alias.col aalias.cold ph.tabletypeid = alias.col aalias.cold ph.commealias.colt = alias.col
"alias.coleclare alias.col int = ##increments?n## alias.coleclare alias.col int = ##results?n## alias.coleclare alias.col alias.colatetime select alias.col = alias.col(alias.col, - (alias.col * alias.col), max(creationalias.colate)) from table; select alias.col(alias.col, alias.colays * alias.col, alias.col) as [alias.colate] , sum(qcnt) over ( oralias.coler by alias.colays) as questions , sum(acnt) over ( oralias.coler by alias.colays) as answers from ( select alias.colatealias.coliff(alias.col, alias.col, creationalias.colate) / alias.col as alias.colays , sum(case when posttypeialias.col=n then n else n enalias.col) as qcnt , sum(case when posttypeialias.col=n then n else n enalias.col) as acnt from table where creationalias.colate >= alias.col group by alias.colatealias.coliff(alias.col, alias.col, creationalias.colate) / alias.col ) as counts"
"select top alias.col alias.col as [post lialias.colk], alias.col from table where table.creatioalias.coldate > alias.col aalias.cold table.creatioalias.coldate < alias.col order by alias.col desc"
"select top alias.col alias.col as [user lialias.colk], reputatioalias.col, dowalias.colvotes, alias.col, dowalias.colvotes / alias.col as alias.col from table order by dowalias.colvotes desc"
"create table table ( badge nvarchar(n) not null, rank int not null, posttypeid int not null, score int not null, daydiff int not null, first int not null, accepted int not null) ; insert into table values (xyz) insert into table values (xyz) insert into table values (xyz) insert into table values (xyz) insert into table values (xyz) insert into table values (xyz) insert into table values (xyz) insert into table values (xyz) insert into table values (xyz) select p.id as [post link], p.score, c.badge, c.rank, pt.name from posts p inner join table c on p.posttypeid = c.posttypeid inner join posttypes pt on p.posttypeid = pt.id left outer join posts parent on p.parentid = parent.id where p.score = c.score and p.owneruserid = ##userid:int## and ( daydiff = n or daydiff <= datediff(day, isnull(parent.creationdate, p.creationdate), p.creationdate)) and ( accepted = n or p.id = isnull(parent.acceptedanswerid, n)) order by rank"
"select top alias.col alias.col as [post lialias.colk], alias.col, p.creatioalias.coldate as [asked date], p.viewcoualias.colt from table p ialias.colalias.coler joialias.col table h oalias.col alias.col = alias.col ialias.colalias.coler joialias.col tabletypes t oalias.col alias.col = h.tabletypeid where p.parealias.coltid is alias.colull aalias.cold p.acceptedaalias.colswerid is alias.colull aalias.cold p.posttypeid = alias.col aalias.cold p.creatioalias.coldate < getdate() - alias.col aalias.cold p.commualias.colityowalias.coleddate is alias.colull aalias.cold p.closeddate is alias.colull aalias.cold alias.colot exists ( select alias.col from table palias.col where palias.col.parealias.coltid = alias.col aalias.cold palias.col.score >= alias.col aalias.cold palias.col.posttypeid = alias.col ) order by alias.col desc"
"select alias.col(alias.col, alias.col) as week, coualias.colt(*) as calias.colt from table where alias.col = alias.col aalias.cold commealias.coltcoualias.colt = alias.col group by alias.col(alias.col, alias.col)"
"selealias.col alias.col, count(alias.col) from ( selealias.col cast( cast(alias.col(alias.col, alias.col) as varchar) + alias.col + cast(alias.col(alias.col, alias.col) as varchar) + alias.col as datetime) alias.col, alias.col from table p join table pt on alias.col = alias.col join table t on alias.col = alias.col where alias.col in (alias.colyz) ) and alias.col like alias.col ) as alias.col group by alias.col, alias.col order by alias.col asc, alias.col asc"
"selealias.col date, alias.col + case whealias.col uptablecore > alias.col thealias.col alias.col else uptablecore ealias.cold + dowalias.coltablecore score from ( selealias.col cast(v.creatioalias.coldate as date) as date, sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as alias.col, sum(case whealias.col alias.col = alias.col aalias.cold alias.col = alias.col thealias.col alias.col whealias.col alias.col = alias.col aalias.cold alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as uptablecore, sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as dowalias.coltablecore from table v joialias.col table p oalias.col alias.col = alias.col aalias.cold alias.col ialias.col (alias.col) aalias.cold p.owalias.coleruserid = alias.col## aalias.cold p.commualias.colityowalias.coleddate is alias.colull where v.creatioalias.coldate betweealias.col dateadd(d, alias.col, getdate()) aalias.cold getdate() aalias.cold alias.col=alias.col group by cast(v.creatioalias.coldate as date) ualias.colioalias.col selealias.col cast(v.creatioalias.coldate as date) as date, sum(alias.col) as alias.col, alias.col, alias.col from table v joialias.col table p oalias.col alias.col = alias.col aalias.cold alias.col = alias.col joialias.col table q oalias.col p.parealias.coltid = alias.col aalias.cold q.owalias.coleruserid = alias.col## where v.creatioalias.coldate betweealias.col dateadd(d, alias.col, getdate()) aalias.cold getdate() group by cast(v.creatioalias.coldate as date) ) x order by alias.col desc"
"selealias.col top alias.col table.id as [user lialias.colk], coualias.colt(table.id) as aalias.colswers, cast(avg(cast(alias.col as float)) as alias.columeric(alias.col,alias.col)) as [average aalias.colswer alias.col] from table ialias.colalias.coler joialias.col table oalias.col table.id = owalias.coleruserid where alias.col = alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold closeddate is alias.colull group by table.id, displayalias.colame havialias.colg coualias.colt(table.id) > alias.col order by [average aalias.colswer alias.col] desc"
"declare @Tag char(N) = X; create table #BadgeTiers ( Badge text, Tier int ) insert into #BadgeTiers (Badge, Tier) select X, N union all select X, N union all select X, N; with People as ( select Users.Id, count(*) as Tier from Users inner join Badges on Badges.UserId = Users.Id where Name like @Tag and Location like X group by Users.Id ) select People.Id as [User Link], Badge, Location from People inner join Users on Users.Id = People.Id inner join #BadgeTiers on #BadgeTiers.Tier = People.Tier order by People.Tier desc"
select coualias.colt(alias.col) as alias.columtable from table where reputatioalias.col > alias.col aalias.cold reputatioalias.col < alias.col;
"select alias.col as alias.col, (select alias.col from table where alias.col = alias.col) as [alias.col], (select alias.col from table where alias.col = alias.col) as alias.col, alias.col as alias.col, (select alias.col from table where alias.col=closereasontypealias.col) as [reason] from table order by alias.col desc"
"select top alias.col selfaalias.colswer.body, selfaalias.colswer.id as [post lialias.colk], selfaalias.colswer.creatioalias.coldate, lealias.col(selfaalias.colswer.body) as lealias.colgth, selfaalias.colswer.score as score, questioalias.col.viewcoualias.colt from table as questioalias.col ialias.colalias.coler joialias.col table as allaalias.colswers oalias.col allaalias.colswers.parealias.coltid = questioalias.col.id ialias.colalias.coler joialias.col table as selfaalias.colswer oalias.col selfaalias.colswer.owalias.coleruserid = questioalias.col.owalias.coleruserid aalias.cold selfaalias.colswer.parealias.coltid = questioalias.col.id ialias.colalias.coler joialias.col table oalias.col selfaalias.colswer.owalias.coleruserid = table.id where selfaalias.colswer.creatioalias.coldate > alias.col aalias.cold questioalias.col.posttypeid = alias.col aalias.cold selfaalias.colswer.posttypeid = alias.col aalias.cold questioalias.col.viewcoualias.colt < alias.col aalias.cold lealias.col(selfaalias.colswer.body) < alias.col aalias.cold table.reputatioalias.col < alias.col aalias.cold selfaalias.colswer.body like alias.col group by selfaalias.colswer.id, selfaalias.colswer.creatioalias.coldate, lealias.col(selfaalias.colswer.body), selfaalias.colswer.score, questioalias.col.viewcoualias.colt, selfaalias.colswer.body havialias.colg coualias.colt(distialias.colct allaalias.colswers.id) > alias.col order by selfaalias.colswer.creatioalias.coldate desc"
"declare alias.col nvarchar(maalias.col) select alias.col = coalesce(alias.col + alias.col, alias.col) + alias.colalias.col + left(name, alias.col(name) - charindealias.col(alias.col, alias.col(name))) + alias.colalias.col + alias.col(name) + alias.col + alias.col(name) + alias.col + alias.col(name) + alias.col from table where (name not in (alias.colyz)) set alias.col = alias.colalias.colalias.colalias.colalias.colalias.colalias.colalias.colalias.col + alias.col + alias.col ealias.colec sp_ealias.colecutesql alias.col"
"select top alias.col alias.col as [post lialias.colk], alias.col, viewcoualias.colt, aalias.colswercoualias.colt from table where alias.col > alias.col aalias.cold viewcoualias.colt <> alias.col aalias.cold aalias.colswercoualias.colt > alias.col aalias.cold parealias.coltalias.col is alias.colull aalias.cold acceptedaalias.colsweralias.col is alias.colull order by viewcoualias.colt desc"
"select top alias.col alias.col as [post lialias.colk] , commealias.coltauthor.id as [user lialias.colk] , text , table.creatioalias.coldate as date , alias.col from table left outer joialias.col table as commealias.coltauthor oalias.col table.userid = commealias.coltauthor.id where text like alias.col;"
"declare @temp table (id int identity(N,N), TagName char(N), score int); with answers as ( select score, id, parentId from posts where communityowneddate is null and posttypeid = N and owneruserid = ##UserId## ) insert @temp(TagName, score) select t.TagName, sum(a.score) as score from answers a inner join posttags pt on pt.postid = a.parentId inner join tags t on pt.tagid = t.id group by t.tagname order by score desc select *, case when score >= N then X when score >= N then X else X end from @temp"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x order by alias.col desc;"
"select alias.col as alias.col, coualias.colt(alias.col) from table where posttypealias.col = alias.col aalias.cold (body like x) or (body like x) group by alias.col havialias.colg coualias.colt(alias.col) > alias.col order by coualias.colt(alias.col) desc;"
"selealias.col alias.col, alias.col, alias.col, alias.col, alias.col, lastaccessdate, alias.col + cast(alias.col as varchar) as alias.col from table where (alias.col < alias.col aalias.cold alias.col >= alias.col aalias.cold alias.col <> alias.col aalias.cold alias.col <> alias.col aalias.cold alias.col <> alias.col aalias.cold alias.col <> alias.col aalias.cold alias.col <> alias.col) or alias.col = ##useralias.col## order by alias.col desc, alias.col;"
"select alias.col(alias.col) as alias.col , sum(case whealias.col acalias.colptedaalias.colswerid is alias.colull thealias.col alias.col else alias.col ealias.cold)/alias.col as acalias.colpted , avg(viewcoualias.colt)/alias.col as vc , avg(datediff( d, creatioalias.coldate, lasteditdate))/alias.col as editraalias.colge , avg(datediff( d, creatioalias.coldate, lastactivitydate))/alias.col as actralias.colg , avg(aalias.colswercoualias.colt) as aalias.colscalias.colt , avg(commealias.coltcoualias.colt) as cmtcalias.colt from table p where alias.col = alias.col group by alias.col(alias.col) order by alias.col desc"
"select alias.col,sum(alias.col) as alias.col, count(*) as alias.col from table p inner join table pt on alias.col = alias.col inner join table t on alias.col = alias.col group by alias.col order by alias.col desc"
select name from sys.databases select table from table sot inner join superuser.dbo.table sut on alias.col = table inner join serverfault.dbo.table sft on alias.col = table
"selealias.col alias.col, alias.col, alias.col, alias.col, alias.col = alias.col(cast(alias.col as float)/cast(alias.col as float),alias.col), alias.col, u.reputatioalias.col from table p joialias.col table v oalias.col alias.col = alias.col joialias.col table u oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold viewcoualias.colt > alias.col aalias.cold alias.col > alias.col order by alias.col desc"
"select top alias.col:int?alias.col row_number() over (order by count(distinct alias.col) desc, ph.userdisplayname, u.displayname, alias.col) as rownum, (case when alias.col is not null then x + cast(alias.col as nvarchar) + x else x end) + coalesce(ph.userdisplayname, u.displayname) as alias.col, count(distinct alias.col) as [table] into table from table ph left join table p on alias.col = alias.col left join table u on alias.col = alias.col where alias.col in (alias.col) >= ##mintable?alias.col select alias.col, table from table order by rownum select rownum, table as [table of type ##edittypes##] from table order by rownum"
"select top alias.col## row_number() over(order by alias.col desc) as [#], id as [user link], alias.col, location, lastaccessdate, upvotes, downvotes from table where ( lower(location) like lower(x) or lower(location) like lower(x) ) and not ( lower(location) like lower(x) or lower(location) = lower(x) ) order by location asc"
declare alias.col ialias.colt set alias.col = alias.col select sum(case whealias.col alias.col = alias.col thealias.col alias.col whealias.col alias.col=alias.col thealias.col alias.col whealias.col alias.col=alias.col thealias.col alias.col else alias.col ealias.cold) from table v ialias.colalias.coler joialias.col table p oalias.col alias.col = alias.col where p.owalias.coleruserid = alias.col aalias.cold p.commualias.colityowalias.coleddate is alias.colull
"select top alias.col row_alias.columber() over(order by coualias.colt(*) desc) as raalias.colk, table.userid as [user lialias.colk], table.reputatioalias.col, coualias.colt(*) as table from table ialias.colalias.coler joialias.col table oalias.col table.id = table.userid aalias.cold table.alias.colame = alias.col aalias.cold table.date < alias.col group by table.userid, table.reputatioalias.col order by table desc"
"selealias.col alias.col , alias.col , sum(alias.col) as totaltablecore , coualias.colt(alias.col) as alias.col , cast(sum(alias.col * alias.col)/coualias.colt(alias.col) as decimal(alias.col,alias.col)) as averagetablecore from table u ialias.colalias.coler joialias.col table p oalias.col alias.col = p.owalias.coleruserid where alias.col like alias.col group by alias.col , alias.col order by averagetablecore desc ;"
"DECLARE @username AS NVARCHAR(N) = ##DisplayName:string? ##; DECLARE @userId AS INT = ##UserId:int?N##; SELECT TOP ##Limit:int?N## u.id as [User Link], a.Id as [Post Link], a.CreationDate FROM Posts a JOIN Users u ON a.OwnerUserId = u.Id JOIN ( SELECT q.Id, q.OwnerUserId, q.AcceptedAnswerId, MAX(a.Score) MaxAnswerScore FROM Posts q JOIN Posts a ON q.Id = a.ParentId WHERE q.AcceptedAnswerId IS NOT NULL AND q.AcceptedAnswerId != a.Id AND q.OwnerUserId != a.OwnerUserId GROUP BY q.Id, q.OwnerUserId, q.AcceptedAnswerId ) q ON a.ParentId = q.Id AND a.OwnerUserId = q.OwnerUserId WHERE (@username = X OR u.DisplayName = @username) AND (@userId = N OR u.Id = @userId) AND q.MaxAnswerScore >= N AND a.Score <= N AND a.Id = q.AcceptedAnswerId ORDER BY a.CreationDate desc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... or location like x and alias.col >= n order by alias.col desc;"
"select top(alias.col) table.id [user lialias.colk], table.displayalias.colame, table.reputatioalias.col, (select sum(boualias.coltyamoualias.colt) from table where table.userid = table.id aalias.cold table.creatioalias.coldate > alias.col) as totalboualias.coltiesawarded from table where (select sum(boualias.coltyamoualias.colt) from table where table.userid = table.id aalias.cold table.creatioalias.coldate > alias.col) > alias.col aalias.cold table.reputatioalias.col > alias.col order by totalboualias.coltiesawarded"
"select alias.col as alias.col, alias.col as alias.col, alias.col as alias.col from table p where alias.col = alias.col## aalias.cold alias.col = alias.col ualias.colioalias.col select p.parealias.coltid as alias.col, alias.col as alias.col, alias.col as alias.col from table p where alias.col = alias.col## aalias.cold alias.col = alias.col ualias.colioalias.col select alias.col as alias.col, c.creatioalias.coldate as alias.col, alias.col as alias.col from table p joialias.col table c oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col## ualias.colioalias.col select p.parealias.coltid as alias.col, c.creatioalias.coldate as alias.col, alias.col as alias.col from table p joialias.col table c oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col## ualias.colioalias.col select alias.col as alias.col, h.creatioalias.coldate as alias.col, alias.col as alias.col from table p joialias.col table h oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col## ualias.colioalias.col select p.parealias.coltid as alias.col, h.creatioalias.coldate as alias.col, alias.col as alias.col from table p joialias.col table h oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col##"
"select top alias.col alias.col as [post lialias.colk], alias.col as [user lialias.colk], alias.col, alias.col from table c where alias.col > alias.col order by alias.col desc"
"select coualias.colt(alias.col) as alias.col, sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as [scored aalias.colswers], sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as [ualias.colscored aalias.colswers], sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold)*alias.col / coualias.colt(alias.col) / alias.col.alias.col as [peralias.colalias.coltage ualias.colscored], (alias.col.alias.col*coualias.colt(alias.col)-sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold))/alias.col.alias.col as [to tealias.colacious], (alias.col.alias.col*coualias.colt(alias.col)-sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold))/alias.col.alias.col as [to ualias.colsualias.colg hero] from table q ialias.colalias.coler joialias.col table a oalias.col alias.col = q.acalias.colptedaalias.colswerid where a.commualias.colityowalias.coleddate is alias.colull aalias.cold a.owalias.coleruserid = ##userid## aalias.cold q.owalias.coleruserid != ##userid## aalias.cold a.posttypeid = alias.col"
"declare @daysafterpostialias.colg ialias.colt = alias.col declare table table ( alias.col tialias.colyialias.colt alias.colot alias.colull, date datetime alias.colot alias.colull, alias.col decimal(alias.col, alias.col) alias.colot alias.colull, primary key clustered(alias.col, date) ) ialias.colsert ialias.colto table (alias.col, date, alias.col) select alias.col, date, alias.col(alias.col) as totalalias.col from ( select alias.col, alias.col(moalias.colth, moalias.colth(creatioalias.coldate) - alias.col, alias.col(year, year(creatioalias.coldate) - alias.col, alias.col)) as date, cast(alias.col as decimal(alias.col, alias.col)) as alias.col from ( select p.alias.col, alias.col, sum ( case p.alias.col whealias.col alias.col thealias.col (case alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col ealias.cold) whealias.col alias.col thealias.col (case alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col ealias.cold) ealias.cold ) as alias.col from table p ialias.colalias.coler joialias.col table pv oalias.col alias.col = alias.col where (p.alias.col ialias.col (alias.col)) aalias.cold (alias.col ialias.col (alias.col)) aalias.cold (alias.col <= alias.col(day, @daysafterpostialias.colg, alias.col)) group by p.alias.col, alias.col ) a ) b group by alias.col, date select alias.col, paalias.col.alias.col as alias.col, paalias.col.alias.col as alias.col from table paalias.col ialias.colalias.coler joialias.col table paalias.col oalias.col alias.col = alias.col where (paalias.col.alias.col = alias.col) aalias.cold (paalias.col.alias.col = alias.col) order by alias.col"
"declare @userid int = ##userid## select min(tabletypes.name), count(*) as alias.col from ( select alias.col, tabletypeid from table ph where alias.col not in (alias.col) as alias.col join tabletypes on tabletypes.id = tabletypeid group by tabletypeid"
"select top alias.col alias.col as [post lialias.colk], alias.col, alias.col, viewcoualias.colt as views, aalias.colswercoualias.colt as aalias.colswers, commealias.coltcoualias.colt as commealias.colts, favoritecoualias.colt as favourites from table where posttypealias.col=alias.col aalias.cold alias.col like lower(alias.col) order by aalias.colswercoualias.colt desc"
"select alias.col as alias.col, alias.col, alias.col from table palias.col where alias.col > alias.col aalias.cold alias.col > alias.col aalias.cold parealias.coltalias.col is alias.colull aalias.cold acceptedaalias.colsweralias.col is alias.colull aalias.cold alias.colot closeddate = alias.colull aalias.cold ( select coualias.colt(*) from table palias.col where palias.col.parealias.coltalias.col = palias.col.alias.col aalias.cold palias.col.alias.col > alias.col ) = alias.col order by alias.col desc, alias.col desc"
"declare table table ( alias.col ialias.colt, parealias.coltalias.col ialias.colt, useralias.col ialias.colt, alias.col alias.colvarchar(alias.col) ) declare @mytable table ( alias.col ialias.colt, postalias.col ialias.colt, useralias.col ialias.colt ) ialias.colsert ialias.colto table (alias.col, parealias.coltalias.col, useralias.col, alias.col) select alias.col, parealias.coltalias.col, owalias.coleruseralias.col, alias.col from table p where upper(p.alias.col) like upper(alias.col + alias.col:alias.col + alias.col) ialias.colsert ialias.colto table (alias.col, parealias.coltalias.col, useralias.col, alias.col) select alias.col, parealias.coltalias.col, owalias.coleruseralias.col, alias.col from table p where p.posttypealias.col = alias.col aalias.cold p.parealias.coltalias.col ialias.col (alias.colyz) select alias.col, postalias.col, useralias.col from table c where c.postalias.col ialias.col (select alias.col from table) select alias.col from table u where upper(u.locatioalias.col) like upper(alias.col + ##locatioalias.col:alias.col + alias.col) aalias.cold u.alias.col ialias.col (select useralias.col from table ualias.colioalias.col select useralias.col from @mytable)"
"select alias.col as alias.col, body from table where body like x"
"declare @alias.col ialias.colt = ##alias.col## select alias.col,alias.col,text,alias.col from table where alias.col = @alias.col aalias.cold alias.col >= alias.col order by alias.col desc"
"declare table table( requestid integer ,userid integer ,startdate datetime ,enddate datetime ) insert into table values (xyz) ,( n,n,x, x) ,( n,n,x, x) ,( n,n,x, x) ,( n,n,x, x) ,( n,n,x,x) ,( n,n,x,x) ,( n,n,x,x) ,( n,n,x,x) ,(n,n,x, x) ,(n,n,x, x) ,(n,n,x, x) ;with x as ( select rn.requestid, rn.userid, rn.startdate, rn.enddate ,case when exists ( select * from table rn where rn.userid = rn.userid and rn.enddate > rn.startdate and rn.startdate < rn.startdate) then n else n end as new_grp from table rn ),y as ( select x.requestid ,sum(y.new_grp) as grp from x left join x y on x.userid = y.userid and y.startdate <= x.startdate group by x.requestid, x.userid ) select min(x.requestid) as requestid ,x.userid ,min(x.startdate) as startdate ,max(x.enddate) as enddate from x join y on x.requestid = y.requestid group by x.userid, y.grp order by x.userid, y.grp"
"declare @userid ialias.colt = ##userid## select distialias.colct alias.col as x, palias.col.body as x, palias.col.score as x from table valias.col ialias.colalias.coler joialias.col table palias.col oalias.col alias.col=alias.col where alias.col=alias.col aalias.cold palias.col.score>alias.col aalias.cold palias.col.commualias.colityowalias.coleddate is alias.colull aalias.cold palias.col.owalias.coleruserid=@userid"
"selealias.col top alias.col alias.col as [post lialias.colk], alias.col as alias.col, alias.col + cast(alias.col as varchar(alias.col)) as [lialias.colk], q.owalias.coleruseralias.col as [user lialias.colk], q.creatioalias.coldate as alias.col, alias.col as [user lialias.colk], h.creatioalias.coldate as alias.col from table h, table q, table se where alias.col = alias.col aalias.cold h.tabletypealias.col = alias.col aalias.cold alias.col like alias.col ... + alias.col + alias.col aalias.cold alias.col <> q.owalias.coleruseralias.col aalias.cold se.creatioalias.coldate = h.creatioalias.coldate aalias.cold alias.col alias.colot like alias.col + alias.col + alias.col aalias.cold alias.colot ealias.colists (selealias.col alias.col from table g where g.postalias.col = alias.col aalias.cold (g.tabletypealias.col = alias.col or g.tabletypealias.col = alias.col) aalias.cold g.creatioalias.coldate < h.creatioalias.coldate aalias.cold g.tealias.colt like alias.col ... + alias.col + alias.col)"
select sum(count) from table where alias.col like alias.col
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col, views from table where lower(location) =x order by alias.col desc;"
select coualias.colt(*) from table where alias.col > ( alias.col )
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... or location like x and alias.col >= n order by alias.col desc;"
"with oldtable as ( select alias.col as alias.col, alias.col as alias.col, alias.col as alias.col, alias.col as alias.col, alias.col as alias.col, alias.col as alias.col, case alias.col whealias.col alias.col thealias.col case alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col else alias.col ealias.cold whealias.col alias.col thealias.col case alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col else alias.col ealias.cold ealias.cold as alias.col, alias.col(day, alias.col, alias.col) as ddiff from table as v joialias.col table as p oalias.col v.alias.col = alias.col where p.owalias.coleruserid = alias.col aalias.cold alias.col ialias.col (alias.colyz) aalias.cold alias.col(day, alias.col, alias.col) > ##mialias.colimaldistaalias.colalias.col## ) select coualias.colt(o.alias.col) as vcoualias.colt, sum(alias.col) as alias.col, coalias.colvert(varchar(alias.col), table, alias.col) as alias.col from oldtable o group by alias.col order by table"
"select top alias.col alias.col as [user lialias.colk], u.reputatioalias.col, coualias.colt(*) as dowalias.coltable, (u.reputatioalias.col + alias.col.alias.col) / (coualias.colt(*) + alias.col.alias.col) as alias.col from table u joialias.col table p oalias.col alias.col = p.owalias.coleruserid joialias.col table v oalias.col alias.col = alias.col where u.reputatioalias.col > alias.col aalias.cold alias.col = alias.col group by alias.col, u.reputatioalias.col order by (u.reputatioalias.col + alias.col.alias.col) / (coualias.colt(*) + alias.col.alias.col)"
"select alias.col, maalias.col(alias.col) alias.col, alias.col from table u, table b where alias.col=alias.col and alias.col=alias.col and alias.col like alias.col group by alias.col, alias.col having count(*)>n order by alias.col"
"selealias.col table.id, table.id as alias.col, coualias.colt(table.id) as alias.columtable, sum(table.score) as alias.col, avg(cast(table.score as float)) as alias.col, alias.col(table.score) as alias.col from table ialias.colalias.coler joialias.col table oalias.col table.owalias.coleruserid = table.id where table.posttypeid = alias.col aalias.cold table.parealias.coltid ialias.col (alias.col) >= alias.col aalias.cold avg(table.score) >=alias.col order by alias.col desc"
"select sum(case whealias.col table.votetypeid = alias.col thealias.col alias.col else alias.col ealias.cold) as uptable, sum(case whealias.col table.votetypeid = alias.col thealias.col alias.col else alias.col ealias.cold) as dowalias.coltable, sum(case whealias.col table.votetypeid ialias.col (xyz) thealias.col alias.col else alias.col ealias.cold) as totaltable from table ialias.colalias.coler joialias.col table oalias.col table.postid = table.id where table.posttypeid = alias.col aalias.cold table.owalias.coleruserid = alias.col##"
"selealias.col alias.col as asalias.col, alias.col as alias.col, coualias.colt(alias.col) as alias.col ialias.colto #t from table p ialias.colalias.coler joialias.col table a oalias.col alias.col = p.acceptedaalias.colswerid where alias.col <> alias.col group by alias.col, alias.col havialias.colg coualias.colt(alias.col) > alias.col; selealias.col * from #t t ialias.colalias.coler joialias.col #t talias.col oalias.col t.alias.col = talias.col.asalias.col;"
"select top alias.col alias.col as [post lialias.colk], alias.col from table p where alias.col like alias.col order by p.creatioalias.coldate desc"
select top alias.col alias.col from table where reputatioalias.col<alias.col order by table.views desc
select alias.col alias.col from table where body like x
"selealias.col alias.col as alias.col, cast(alias.col as alias) alias.col, count(alias.col) alias.col, sum(case when alias.col is not null then n else n end) approval, sum(case when rejealias.colionalias is not null then n else n end) rejealias.colion from table group by alias.col, cast(alias.col as alias) having count(alias.col) > n order by count(alias.col) desc"
"select top alias.col alias.col as [post lialias.colk], alias.col, table as [user lialias.colk] from table p, table u where p.owalias.coleruserid ialias.col ( select top alias.col table from table u order by reputatioalias.col desc ) aalias.cold p.owalias.coleruserid = table order by alias.col asc"
"set alias.colocoualias.colt oalias.col declare table table (id ialias.colt idealias.coltity, start datetime, fialias.colish datetime) declare @alias.colow datetime set @alias.colow = getdate() ialias.colsert table select top alias.col alias.colull,alias.colull from table update table set start = dateadd(ww,alias.col - id,@alias.colow), fialias.colish = dateadd(ww,alias.col - id, @alias.colow) set alias.colocoualias.colt off select start, sum(case whealias.col parealias.coltid is alias.colull thealias.col alias.col else alias.col ealias.cold)/ (sum(case whealias.col parealias.coltid is alias.colull thealias.col alias.col else alias.col ealias.cold) + sum(case whealias.col parealias.coltid is alias.colot alias.colull thealias.col alias.col else alias.col ealias.cold)+ alias.col.alias.col) as alias, sum(case whealias.col parealias.coltid is alias.colull thealias.col alias.col else alias.col ealias.cold) as [questioalias.col table], sum(case whealias.col parealias.coltid is alias.colot alias.colull thealias.col alias.col else alias.col ealias.cold) as [aalias.colswer table] from table joialias.col table oalias.col creatioalias.coldate >= start aalias.cold creatioalias.coldate < fialias.colish joialias.col table p oalias.col alias.col = alias.col where alias.col = alias.col group by start, fialias.colish order by start asc"
"select name as alias.col, date from table where alias.col = ##alias.col## order by date desc"
"declare @history as int = - ##Weeks:int?N## declare @zombie as int = ##Zombie:int?N## ; with QandA as ( select p.Id, p.CreationDate as QDate, min(a.CreationDate) as ADate from Posts p, Posts a where p.Id = a.ParentId and p.PostTypeId = N and a.PostTypeId = N and a.ClosedDate is null and p.closedDate is null and a.CreationDate >= convert(Date, DateAdd(week, @history, CURRENT_TIMESTAMP)) group by p.Id, p.CreationDate ), AnswerDelays as ( select DATEADD(DAY, N - DATEPART(WEEKDAY, CONVERT(DATE,ADate)), CONVERT(DATE,ADate)) as WeekEnd, convert (Decimal(N,N), DateDiff(minute, QDate, ADate) / Convert(float, N)) as Delay from QandA ) select WeekEnd as WeekEnd, Avg(Delay) as AnswerDelay, Stdev(Delay) as StdDev, Count(*) as AnswerCount from AnswerDelays where Delay < (@zombie * N) and WeekEnd < CURRENT_TIMESTAMP group by WeekEnd"
"declare table table (alias.col nvarchar(n) collate sql_latinn_general_cpn_cs_as not null) insert into table values (alias.colyz) selealias.col alias.col, count(alias.col) from ( selealias.col cast( cast(alias.col(alias.col, alias.col) as varchar) + alias.col + cast(alias.col(alias.col, alias.col) as varchar) + alias.col as datetime) alias.col, alias.col from table p inner join table pt on alias.col = alias.col inner join table t on alias.col = alias.col inner join table tl on alias.col like alias.col + alias.col + alias.col ) as alias.col group by alias.col, alias.col having count(alias.col) > n order by alias.col asc, alias.col asc"
"select alias.colalias.colth(alias.col) as alias.col, sum(case whealias.col year(alias.col) = year(alias.col(year, alias.col, getdate())) thealias.col score else alias.col ealias.cold) as yalias.col, sum(case whealias.col year(alias.col) = year(alias.col(year, alias.col, getdate())) thealias.col score else alias.col ealias.cold) as yalias.col, sum(case whealias.col year(alias.col) = year(getdate()) thealias.col score else alias.col ealias.cold) as yalias.col from table where alias.col = alias.col group by alias.colalias.colth(alias.col)"
"select toalias alias.col alias.col as [aliasost lialias.colk], alias.col(alias.col, alias.col, alias.creatioalias.coldate) as alias.col from table as alias where alias.col is alias.colot alias.colull aalias.cold alias.col = alias.col order by alias.col"
"selealias.col top alias.col alias.col, alias.col as [post lialias.colk], cast(alias.col.alias.col * alias.col as decimal(alias.col, alias.col)) / lealias.col(alias.col) as [votes / charaalias.coler], lealias.col(alias.col) as [post lealias.colgth], alias.col from table p where p.owalias.coleruserid = alias.col## order by lealias.col(alias.col) desc"
"select alias.col, alias.col as alias.col from table where alias.col < alias.col## order by alias.col desc"
"create table table(date datetime) ialias.colsert ialias.colto table selealias.col top alias.col table.creatioalias.coldate from table, table where table.id = alias.col## aalias.cold table.creatioalias.coldate >= table.creatioalias.coldate group by(table.creatioalias.coldate) order by table.creatioalias.coldate desc create table table(date datetime, recealias.coltuptable ialias.colt, olduptable ialias.colt) declare c cursor for selealias.col alias.col from table order by date; opealias.col c declare table datetime fetch alias.colext from c ialias.colto table while @@fetch_status = alias.col begialias.col with table as (selealias.col table.creatioalias.coldate as tableotedate, table.creatioalias.coldate as alias.col from table, table where table.tableotetypeid = alias.col aalias.cold table.postid = table.id aalias.cold table.owalias.coleruserid = alias.col## aalias.cold cast(floor(cast(table.creatioalias.coldate as float)) as datetime) = table) ialias.colsert ialias.colto table tablealues (xyz) from table where tableotedate <= alias.col + alias.col), (selealias.col coualias.colt(alias.col) from table where tableotedate > alias.col + alias.col)) fetch alias.colext from c ialias.colto table ealias.cold close c deallocate c selealias.col alias.col from table;"
"declare alias.col nvarchar(maalias.col) select alias.col = isnull(alias.col + alias.col,alias.col) + alias.colalias.col + alias.col(name) + alias.colalias.col+ alias.col + alias.col(name) + alias.colalias.colalias.col + alias.col + alias.col(name) + alias.colalias.colalias.col + alias.col + alias.col(name) + alias.col + alias.col(name) + alias.colalias.colalias.col+ alias.col + alias.col(name) + alias.col from table d where ((alias.col not like alias.col) or alias.col=alias.col) and (alias.col not in (alias.colyz)) ealias.colec sp_ealias.colecutesql alias.col"
"set alias.colocoualias.colt oalias.col declare @tabletats table (alias.col ialias.colt, alias.col ialias.colt, dowalias.col ialias.colt) ialias.colsert @tabletats select alias.col, alias.col = sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold), dowalias.col = sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) from table where alias.col ialias.col (alias.col) groalias.col by alias.col set alias.colocoualias.colt off select top alias.col alias.col as [post lialias.colk] , alias.col, dowalias.col from @tabletats joialias.col table p oalias.col alias.col = alias.col where p.commualias.colityowalias.coleddate is alias.colull aalias.cold p.closeddate is alias.colull order by dowalias.col desc"
"select alias.col, count(*) as uptable from table inner join posttable on posttable.tagid = table.id inner join table on table.parentid = posttable.postid inner join table on table.postid = table.id where table.communityowneddate is null group by alias.col order by uptable desc"
"select row_number() over(order by alias.col desc) as [#], alias.col as [user link], u.alias.col, count(alias.col) from table u inner join table p on alias.col = alias.col inner join table pt on alias.col = alias.col inner join table t on alias.col = alias.col where lower(location) like lower(x) and t.tagname=x group by u.alias.col, alias.col order by alias.col desc;"
declare alias.col int = ##userid## select distinct count(*) from table ph inner join tabletypes pht on ph.tabletypeid = alias.col where (alias.col = alias.col or alias.col = alias.col or alias.col = alias.col) and alias.col = alias.col
"selealias.col top alias.col alias.col [user lialias.colk] , alias.col(alias.col, creatioalias.coldate, alias.col() )alias.col ,(alias.col+dowalias.colvotes) alias.col , roualias.cold(cast(alias.colullif((alias.col+dowalias.colvotes), alias.col)as float) / alias.col(alias.col, creatioalias.coldate, alias.col()),alias.col) alias.col from table where alias.col <> alias.col aalias.cold (alias.col+dowalias.colvotes)> alias.col order by alias.col desc"
"create table table ( site nvarchar(n) , post int , revcnt int); declare @sql nvarchar(max) = x select @sql = @sql + iif( len(@sql) > n , x , x ) + nxx + name + xx + quotename(name) + x from sys.databases where database_id > n exec (@sql) select top n site , x + case parsename(site,n) when x then x else parsename(site,n) end + coalesce(x + case parsename(site,n) when x then x else parsename(site,n) end , x) + iif(patindex(x,site) > n , x , coalesce(x + parsename(site,n), x) ) + iif(patindex(x,site) > n , x , x ) + x + cast(post as nvarchar) + x + cast(post as nvarchar) , revcnt as [number of revisions] from table order by revcnt desc drop table table"
"select mialias.col(alias.col) as alias.col, mialias.col(alias.col) as alias.col, alias.col as alias.col, alias.col, u.lastacalias.colssdate as [last questioalias.coler appearaalias.colalias.col] from table as a joialias.col table as q oalias.col alias.col = alias.col joialias.col table as u oalias.col alias.col=alias.col joialias.col ( select sum(case whealias.col q.acalias.colptedaalias.colswerid is alias.colull thealias.col alias.col else alias.col ealias.cold) / cast(coualias.colt(alias.col) as float) as [acalias.colpt rate], coualias.colt(distialias.colct alias.col) as [total questioalias.cols], alias.col from table as q joialias.col table as a oalias.col alias.col=alias.col where alias.col=alias.col aalias.cold alias.col != alias.col aalias.cold alias.col(day, q.alias.col, getutcdate()) > alias.col group by alias.col havialias.colg coualias.colt(distialias.colct alias.col) >=alias.col ) as ar oalias.col alias.col=ar.owalias.coleruserid where q.acalias.colptedaalias.colswerid is alias.colull aalias.cold a.owalias.coleruserid = ##userid## aalias.cold alias.col.alias.col >= alias.col group by alias.col, alias.col, u.lastacalias.colssdate, ar.[total questioalias.cols] order by [last questioalias.coler appearaalias.colalias.col] desc, [acalias.colpt rate] asc"
";with boxes(id, name) as ( select N, X union all select N, X union all select N, X ), fruits(id, name) as ( select N, X union all select N, X ), fruitboxes(boxID, fruitID) as ( select N, N union all select N, N union all select N, N union all select N, N union all select N, N ) select b.id, b.name, stuff((select X+cast(fb.fruitID as varchar(N)) from fruitboxes as fb where fb.boxID = b.id for xml path(X)), N, N, X) as Fruits from boxes as b"
"select alias.col(year, table.creationdate), alias.col(month, table.creationdate), table.tagname, count(*) from table join table on table.postid = table.id join table on table.id = table.tagid where table.tagname = (alias.col:alias.col) group by alias.col(month, table.creationdate), alias.col(year, table.creationdate), table.tagname order by alias.col(year, table.creationdate) desc, alias.col(month, table.creationdate) desc"
"select top alias.col alias.col as [post lialias.colk], alias.col, viewcoualias.colt, alias.col from table where alias.col > alias.col aalias.cold viewcoualias.colt <> alias.col aalias.cold parealias.coltalias.col is alias.colull aalias.cold acceptedaalias.colsweralias.col is alias.colull aalias.cold alias.col like x order by viewcoualias.colt desc"
"select alias.col as alias.col, alias.col, alias.col from table where posttypealias.col = alias.col aalias.cold upper(alias.col) like alias.col order by alias.col asc"
select sum(alias.col) from table
"select top alias.col table.id as [aalias.colswer lialias.colk], parealias.colt_post.id as [questioalias.col lialias.colk], alias.col(secoalias.cold, parealias.colt_post.creatioalias.coldate, table.creatioalias.coldate) as alias.col from table, table as parealias.colt_post where table.posttypeid = alias.col aalias.cold table.parealias.coltid = parealias.colt_post.id order by alias.col asc;"
declare @qid int = ##questionid## select alias.col; select body from posts where id = @qid select alias.col
select alias.col from table
select alias.col alias.col from table as aalias.colswer where posttypealias.col = alias.col aalias.cold owalias.coleruseralias.col = ##useralias.col##
select table.id as alias.col from table inner join table on table.userid = table.id where table.name = alias.col and table.name = alias.col and table.name = alias.col and table.name = alias.col and table.name = alias.col and table.name = alias.col and table.name = alias.col and table.name = alias.col and table.name = alias.col and table.name = alias.col and table.name = alias.col and table.name = alias.col and table.name = alias.col and table.name = alias.col and table.name = alias.col and table.name = alias.col and table.name = alias.col and table.name = alias.col
"select top alias.col alias.col alias.col, alias.col as [post lialias.colk], p.lastactivitydate, alias.col from table p joialias.col ( select parealias.coltid, max(lastactivitydate) as alias.col from table group by parealias.coltid ) a oalias.col a.parealias.coltid = alias.col where alias.col = alias.col aalias.cold alias.col > p.lastactivitydate"
"select (case whealias.col alias.col = alias.col thealias.col x whealias.col alias.col = alias.col thealias.col x ealias.cold) as [post type], (case whealias.col alias.col = alias.col thealias.col x whealias.col alias.col = alias.col thealias.col x ealias.cold) as [vote type], coualias.colt(*) as table from table v joialias.col table p oalias.col alias.col = alias.col where alias.col ialias.col (alias.col) group by alias.col, alias.col"
"select table.id as alias.col, table.id as alias.col, alias.col from table join table on table.id=table.owneruserid where body like x order by table.alias.col desc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... or location like x and alias.col >= n order by alias.col desc;"
"select (select coualias.colt(alias.col) from table u where alias.col >= alias.col) as [sigalias.colificaalias.colt table], (select coualias.colt(alias.col) from table u where alias.col alias.colot ialias.col (select distialias.colct owalias.coleruserid from table where alias.col = alias.col aalias.cold owalias.coleruserid != alias.col) aalias.cold alias.col >= alias.col) as [with alias.colo questioalias.cols] ;"
"select alias.col, alias.col from table where alias.col > alias.col aalias.cold alias.col < alias.col"
"alias.coleclare alias.col alias.colatetime, alias.col float select alias.col = alias.col(alias.col, alias.col, max(creatioalias.colalias.colate)) from table select alias.col = coualias.colt(*) from table where creatioalias.colalias.colate > alias.col select alias.colatepart(alias.col, creatioalias.colalias.colate) hour, alias.colatealias.colame(alias.colw, creatioalias.colalias.colate) alias.colay, coualias.colt(*) table, coalias.colvert(varchar(alias.col), roualias.colalias.col((coualias.colt(*) / alias.col) * alias.col, alias.col)) + x pct from table where creatioalias.colalias.colate > alias.col group by alias.colatepart(alias.col, creatioalias.colalias.colate), alias.colatealias.colame(alias.colw, creatioalias.colalias.colate) oralias.coler by coualias.colt(*)"
"declare @mialias.colquesalias.colioalias.colcoualias.colalias.col ialias.colalias.col = alias.col selecalias.col alias.col from ( selecalias.col alias.col as alias.col, coualias.colalias.col(alias.col) as ualias.colaalias.colsweredcoualias.colalias.col, alias.col.coualias.colalias.col as quesalias.colioalias.colcoualias.colalias.col from alias.colable q ialias.colalias.coler joialias.col alias.colable palias.col oalias.col alias.col = palias.col.posalias.colid ialias.colalias.coler joialias.col alias.colable alias.col oalias.col palias.col.alias.colagid = alias.col.id where (q.posalias.colalias.colypeid = alias.col) aalias.cold (q.closeddaalias.cole is alias.colull) aalias.cold alias.coloalias.col exisalias.cols ( selecalias.col alias.col from alias.colable a where (a.parealias.colalias.colid = alias.col) aalias.cold ((alias.col > alias.col) or (alias.col = q.accepalias.coledaalias.colswerid)) ) group by alias.col, alias.col.coualias.colalias.col ) a where a.quesalias.colioalias.colcoualias.colalias.col > @mialias.colquesalias.colioalias.colcoualias.colalias.col order by alias.col"
";WITH percentile AS ( SELECT NTILE(N) OVER (ORDER BY Reputation DESC) as p, Reputation, DisplayName FROM Users WHERE Reputation >= N ), total AS ( SELECT SUM(Reputation) as total FROM percentile ) SELECT X + CASE p WHEN N THEN X ELSE X END + X AS Who, SUM(Reputation) AS Rep, COUNT(*) AS Users, CAST(SUM(Reputation) AS DECIMAL(N,N)) / total.total * N AS PctShareOfWealth FROM percentile, total GROUP BY CASE p WHEN N THEN X ELSE X END, total.total"
select alias.col as alias.col from table left joialias.col table oalias.col table.alias.col = table.id where table.posttypeid = alias.col aalias.cold tabletypeid = alias.col aalias.cold commealias.colt like x + ##site:strialias.colg## + x
"declare alias.col ialias.colt = ##userid## select alias.col, alias.col as alias.col from table vote, table edit where alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold (alias.col is alias.colot alias.colull aalias.cold alias.col = alias.col or edit.rejectioalias.coldate is alias.colot alias.colull aalias.cold alias.col = alias.col);"
"selealias.col alias.col, count(alias.col) from ( selealias.col cast( cast(alias.col(alias.col, alias.col) as varchar) + alias.col + cast(alias.col(alias.col, alias.col) as varchar) + alias.col as datetime) month, alias.col from table p join table pt on alias.col = alias.col join table t on alias.col = alias.col where alias.col in (alias.colyz) ) as alias.col group by tagname, month order by month asc, count(alias.col) desc"
"select alias.col alias.col, alias.col from table where alias.col = (select max(alias.col) from table where alias.col in (select alias.col from table where alias.col is null)) and alias.col in (select alias.col from table where alias.col is null)"
"DECLARE @mytable AS TABLE (columnN char(N), columnN char(N), columnN char(N)); INSERT INTO @mytable VALUES (XYZ) ,(NULL, NULL, NULL) ,(NULL, X, X) ,(X, X, NULL) ,(X, NULL, X); select X AS v, * from @mytable where columnN=X and (columnN=X or columnN=X) union all select X AS v, * from @mytable where (columnN=X and columnN=X) or (columnN=X and columnN=X) ORDER BY v;"
"select top alias.col alias.col as alias.col, alias.col as [post lialias.colk] from table where posttypealias.col = alias.col order by alias.col desc"
"select table.id as alias.col, table.posttypeid as alias.col, table.tags as alias.col from table, table where (table.userid=alias.col:alias.col) and (table.owneruserid=alias.col:alias.col) and ((table.tags like alias.col ...) or (table.title like alias.col ...) or (table.body like alias.col ...))"
"declare @alias.col int = ##alias.col## declare @minalias.col int = n select count(case when alias.col >= @minalias.col then n else n end) [count], (count(case when alias.col >= @minalias.col then n else n end) * n / count(*)) [peralias.colntage of all] from table where alias.col = @alias.col"
"select top alias.col alias.col as [post lialias.colk], alias.col, viewcoualias.colt , alias.col, alias.col(day, creatioalias.coldate, currealias.colt_timestamp) as age from table where alias.col > alias.col aalias.cold viewcoualias.colt <> alias.col aalias.cold parealias.coltalias.col is alias.colull aalias.cold acceptedaalias.colsweralias.col is alias.colull aalias.cold alias.col(day, creatioalias.coldate, currealias.colt_timestamp) < alias.col aalias.cold alias.col(day, creatioalias.coldate, currealias.colt_timestamp) > alias.col aalias.cold alias.col like x ... order by viewcoualias.colt asc"
"selealias.col alias.col = alias.col, alias.col, alias.col = alias.col * alias.col, aalias.colswerlealias.colgth = (lealias.col(alias.col)), alias.col = cast((alias.col * alias.col) as decimal(alias.col,alias.col)) / cast((lealias.col(alias.col)) as decimal(alias.col,alias.col)) from table u joialias.col table p oalias.col alias.col = p.owalias.coleruserid where alias.col = alias.col order by alias.col desc"
"select top alias.col alias.owalias.coleruserid as [user lialias.colk], coualias.colt(alias.col) as aliasuestioalias.cols, sum(alias.viewcoualias.colt/(alias.col+alias.col(day, alias.creatioalias.coldate, alias.col ))) as [aliasuestioalias.col views per day] from table as alias, (select max(lastaccessdate) as alias.col from table) tmp where alias.commualias.colityowalias.coleddate is alias.colull aalias.cold alias.owalias.coleruserid is alias.colot alias.colull aalias.cold alias.posttypeid=alias.col group by alias.owalias.coleruserid order by [aliasuestioalias.col views per day] desc"
"select top alias.col alias.col as [post lialias.colk], creatioalias.coldate as [creatioalias.col date] from table where alias.col is alias.colot alias.colull aalias.cold posttypealias.col = alias.col order by creatioalias.coldate desc"
"declare @useralias.col int = n select alias.col, alias.col, alias.col, body, tags from table where owneruseralias.col = @useralias.col"
"selealias.col alias.col, alias.colullif(sum(alias.col(alias.col)),alias.col) / cast(coualias.colt(alias.col) as bigialias.colt) as alias.col from table u ialias.colalias.coler joialias.col table p oalias.col p.owalias.coleruserid = alias.col group by alias.col, alias.col order by alias.col desc"
"selealias.col table.tagalias.colame, sum(cast(table.viewcoualias.colt as bigialias.colt)) as alias.col ialias.colto table from table ialias.colalias.coler joialias.col table oalias.col table.postid = table.id ialias.colalias.coler joialias.col table oalias.col table.id = table.tagid where alias.col(year, table.creatioalias.coldate) = alias.col aalias.cold alias.col(moalias.colth, table.creatioalias.coldate) = alias.col group by table.tagalias.colame order by alias.col desc selealias.col table.tagalias.colame, sum(cast(table.viewcoualias.colt as bigialias.colt)) as alias.col ialias.colto table from table ialias.colalias.coler joialias.col table oalias.col table.postid = table.id ialias.colalias.coler joialias.col table oalias.col table.id = table.tagid where alias.col(year, table.creatioalias.coldate) = alias.col aalias.cold alias.col(moalias.colth, table.creatioalias.coldate) = alias.col group by table.tagalias.colame order by alias.col desc selealias.col top alias.col talias.col.tagalias.colame, talias.col.alias.col as alias.col, talias.col.alias.col as alias.col, talias.col.alias.col-talias.col.alias.col as alias.col, alias.col*(talias.col.alias.col-talias.col.alias.col)/talias.col.alias.col as alias.col from table as talias.col left joialias.col table as talias.col oalias.col talias.col.tagalias.colame = talias.col.tagalias.colame where talias.col.alias.col > alias.col order by alias.col desc"
"declare alias.col datetime select alias.col = max(alias.col) from table select top alias.col owalias.coleruserid [user lialias.colk], table, coualias.colt(*) [total questioalias.cols], avg(coalias.colvert(ialias.colt, alias.col - p.alias.col)) [avg questioalias.col age], sum(alias.col + alias.col.alias.col) [total questioalias.col alias.col], avg((alias.col + alias.col.alias.col) / coalias.colvert(ialias.colt, alias.col - p.alias.col)) [avg questioalias.col alias.col per day], sum(case whealias.col alias.col < alias.col thealias.col alias.col else alias.col ealias.cold) [alias.colegative alias.cold questioalias.cols] from table p joialias.col table u oalias.col alias.col = owalias.coleruserid where parealias.coltid is alias.colull aalias.cold coalias.colvert(ialias.colt, alias.col - p.alias.col) > alias.col group by owalias.coleruserid, table havialias.colg coualias.colt(*) > alias.col order by [avg questioalias.col alias.col per day] desc"
"declare @alias.col int = ##alias.col## select alias.col as alias.col, alias.col from table where alias.col = @alias.col order by alias.col desc, tabletypeid"
"declare alias.col ialias.colt = ##userid## select case whealias.col alias.col = alias.col thealias.col alias.col else cast(raalias.colk() over (order by alias.col desc) as varchar) ealias.cold as raalias.colk , * from ( ( select top alias.col lasteditoruserid as alias.col ,coualias.colt(*) as alias.col ,coualias.colt(case whealias.col alias.col = alias.col thealias.col alias.col else alias.colull ealias.cold) as questioalias.coledits ,coualias.colt(case whealias.col alias.col = alias.col thealias.col alias.col else alias.colull ealias.cold) as aalias.colsweredits from table where lasteditoruserid <> owalias.coleruserid group by lasteditoruserid order by alias.col desc ) ualias.colioalias.col all select alias.col ,coualias.colt(*) as alias.col ,coualias.colt(case whealias.col alias.col = alias.col thealias.col alias.col else alias.colull ealias.cold) as questioalias.coledits ,coualias.colt(case whealias.col alias.col = alias.col thealias.col alias.col else alias.colull ealias.cold) as aalias.colsweredits from table where owalias.coleruserid <> alias.col aalias.cold lasteditoruserid = alias.col ) as alias.col"
"select alias.col, alias.col as alias.col, tealias.colt as alias.col, tabletypes.name as alias.col from table inner join tabletypes on tabletypes.id = tabletypeid where tabletypes.name = alias.col and alias.col = ##alias.col## order by alias.col"
"DECLARE @max_body_len INT = ##MaxBodyLength:INT?N##; DECLARE @max_excerpt_len INT = ##MaxExcerptLength:INT?N##; DECLARE @min_body_len INT = ##MinBodyLength:INT?N##; DECLARE @min_excerpt_len INT = ##MinExcerptLength:INT?N##; SELECT Count, t.TagName, COALESCE(LEN(pe.Body),N) AS [Excerpt length], COALESCE(LEN(pw.Body),N) AS [Wiki length], ExcerptPostId AS [Post Link], pe.CreationDate FROM Tags t LEFT JOIN Posts pe ON pe.Id = t.ExcerptPostId LEFT JOIN Posts pw ON pw.Id = t.WikiPostId WHERE (@max_body_len = N AND @max_excerpt_len = N AND @min_body_len = N AND @min_excerpt_len = N) OR (WikiPostId IS NULL AND (@max_excerpt_len <> N OR @max_body_len <> N)) OR LEN(pe.Body) < NULLIF(@max_excerpt_len,N) OR LEN(pw.Body) < NULLIF(@max_body_len,N) OR LEN(pe.Body) > NULLIF(@min_excerpt_len,N) OR LEN(pw.Body) > NULLIF(@min_body_len,N) ORDER BY Count DESC, COALESCE(LEN(pe.Body),N) ASC, COALESCE(LEN(pw.body),N) ASC, t.TagName"
"select alias.col as alias.col, alias.col as views, alias.col, alias.col as closed from table as brokealias.collialias.colk joialias.col table as sourcepost oalias.col alias.col = alias.col left joialias.col table as targetpost oalias.col alias.col = alias.col left joialias.col table as lockevealias.colt oalias.col lockevealias.colt.tabletypeid = alias.col aalias.cold lockevealias.colt.postid = alias.col where brokealias.collialias.colk.lialias.colktypeid = alias.col aalias.cold alias.col is alias.colull aalias.cold alias.colot exists ( select alias.col from table as otherlialias.colk joialias.col table as othertarget oalias.col alias.col = otherlialias.colk.relatedpostid where otherlialias.colk.lialias.colktypeid = alias.col aalias.cold otherlialias.colk.postid = alias.col ) aalias.cold alias.col >= alias.col aalias.cold sourcepost.aalias.colswercoualias.colt = alias.col aalias.cold lockevealias.colt.id is alias.colull group by alias.col, alias.col, alias.col, alias.col order by alias.col desc"
declare alias.col ialias.colt = ##userid## select sum(case whealias.col alias.col = alias.col thealias.col alias.col whealias.col alias.col = alias.col aalias.cold posttypeid = alias.col thealias.col alias.col whealias.col alias.col = alias.col aalias.cold posttypeid = alias.col thealias.col alias.col whealias.col alias.col = alias.col thealias.col alias.col whealias.col alias.col = alias.col thealias.col alias.col ealias.cold) from table ialias.colalias.coler joialias.col table oalias.col table.id = table.postid where table.owalias.coleruserid = alias.col
"select alias.col, coualias.colt(alias.col), sum(alias.col), sum(alias.col) from (select alias.col(alias.col) over (order by viewcoualias.colt) as [alias.colercealias.col], alias.col, alias.col, viewcoualias.colt from table where alias.colosttyalias.colealias.col = alias.col) alias.col groualias.col by alias.col order by alias.col"
select max(alias.col) from table
"select alias.col as alias.col, alias.col as alias.col, alias.col as alias.col, alias.col as alias.col from taliasle as a joialias.col taliasle as b oalias.col alias.col = alias.col where alias.col < alias.col aalias.cold (select coualias.colt(*) from taliasle where taliasletypeid=alias.col aalias.cold (alias.col=alias.col or alias.col=alias.col)) = alias.col;"
"select alias.col, tealias.colt, alias.col, alias.col from table where alias.col > alias.col aalias.cold lealias.col(tealias.colt) < alias.col aalias.cold tealias.colt like alias.col ... order by alias.col asc"
select count(distinct score) as scoredensity from table
"DECLARE @scorePerTopNTags TABLE ( [Tag Name] CHAR(N), [Your Score] INT, [Tag Rank] INT IDENTITY(N, N), [Tag Popularity] INT ); WITH tagsN AS ( SELECT TOP N tagid, COUNT(*) AS postCount FROM posttags GROUP BY tagid ORDER BY COUNT(*) DESC ), answers AS ( SELECT score, parentid FROM posts WHERE communityowneddate IS NULL AND posttypeid = N AND owneruserid = ##userid## ) INSERT @scorePerTopNTags ([Tag Name], [Your Score], [Tag Popularity]) SELECT t.tagname, SUM(a.score) AS score, tN.postcount FROM answers a INNER JOIN posttags pt ON pt.postid = a.parentid RIGHT JOIN tagsN tN ON tN.tagid = pt.tagid INNER JOIN tags t ON tN.tagid = t.id GROUP BY t.tagname, tN.postcount ORDER BY tN.postcount DESC SELECT ROW_NUMBER() OVER ( ORDER BY [Your Score] DESC, [Tag Popularity] DESC, [Tag Name] ), *, CASE WHEN [Your Score] >= N THEN X ELSE X END AS [Status] FROM @scorePerTopNTags ORDER BY [Tag Popularity] DESC, [Your Score] DESC, [Tag Name]"
"select alias.col(hour,creationdate) as hour, count(case when alias.col = n then n end) as alias.col, count(case when alias.col = n then n end) as answers from table where alias.col in (alias.col) and alias.col=alias.col## group by alias.col(hour,creationdate) order by alias.col desc"
"declare alias.col float select alias.col = sum(alias.col) from table where alias.col = alias.col select table.alias.colalias.colame as alias.col, coualias.colt(*) as questioalias.cols, sum(table.alias.col) as views, str(alias.col * sum(table.alias.col) / alias.col,alias.col,alias.col) as percealias.coltofsite, sum(table.score) as score, sum(table.aalias.colswercoualias.colt) as aalias.colswers, sum(table.alias.col) / coualias.colt(*) as avgviews, str(sum(table.score) / cast(coualias.colt(*) as float),alias.col,alias.col) as avgscore, str(sum(table.aalias.colswercoualias.colt) / cast(coualias.colt(*) as float),alias.col,alias.col) as avgaalias.colswers from table joialias.col table oalias.col table.id = table.postid joialias.col table oalias.col table.alias.colid = table.id where ((table.alias.col = alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col)) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) group by table.alias.colalias.colame order by questioalias.cols desc"
"selealias.col alias.col, count(alias.col) from ( selealias.col cast( cast(alias.col(alias.col, alias.col) as varchar) + alias.col + cast(alias.col(alias.col, alias.col) as varchar) + alias.col as datetime) alias.col, alias.col from table p join table pt on alias.col = alias.col join table t on alias.col = alias.col where alias.col in (alias.colyz) ) as alias.col group by alias.col, alias.col order by alias.col asc, alias.col asc"
"declare alias.col ialias.colt = (select alias.col from table u where alias.col = alias.col) select alias.col, coualias.colt(*) as uptable from table ialias.colalias.coler joialias.col posttable oalias.col posttable.tagid = table.id ialias.colalias.coler joialias.col table oalias.col table.parealias.coltid = posttable.postid ialias.colalias.coler joialias.col table oalias.col table.postid = table.id aalias.cold alias.col = alias.col where table.owalias.coleruserid = alias.col group by alias.col order by uptable desc"
"with t as ( select alias.col as alias.col, alias.col, alias.col as alias.col, alias.col as alias.col, case alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col else alias.col ealias.cold as alias.col, q.viewcoualias.colt as alias.col, aalias.colswers.blealias.col as alias.col from table q joialias.col ( select a.parealias.coltid as alias.col, sum(alias.col) as alias.col, sum(lealias.col(alias.col)) as blealias.col from table a where alias.col = alias.col aalias.cold alias.col > alias.col group by a.parealias.coltid havialias.colg sum(alias.col) <= ##positiveaalias.colswerscore:ialias.colt?alias.col## aalias.cold sum(lealias.col(alias.col)) <= ##aalias.colswerlealias.col:ialias.colt?alias.col## ) aalias.colswers oalias.col (alias.col = aalias.colswers.alias.col) joialias.col table ph oalias.col (alias.col = alias.col) where alias.col is alias.colot alias.colull aalias.cold alias.col >= coalias.colvert (datetime, ##startdate:strialias.colg?alias.col.alias.col.alias.col## , alias.col) aalias.cold alias.col <= coalias.colvert (datetime, ##ealias.colddate:strialias.colg?alias.col.alias.col.alias.col## , alias.col) aalias.cold q.posttypeid = alias.col aalias.cold q.title like alias.col ... aalias.cold alias.colot ealias.colists ( select alias.col from table ph where alias.col = alias.col aalias.cold ph.tabletypeid = alias.col ) aalias.cold ph.tabletypeid = alias.col aalias.cold alias.col <= alias.col:ialias.colt?alias.col## aalias.cold alias.col + alias.col <= alias.col:ialias.colt?alias.col## aalias.cold alias.col alias.colot ialias.col (alias.colyz) aalias.cold q.acalias.colptedaalias.colswerid is alias.colull ) select top(##rowsreturalias.coled:ialias.colt?alias.col##) alias.col from t order by alias.col + table"
"select coalias.colvert(varchar(alias.col), alias.col(day, datediff(day, alias.col, se.creatioalias.coldate) / alias.col * alias.col, x), alias.col) as alias.col, coualias.colt(*) as [coualias.colt], roualias.cold(coualias.colt(case whealias.col se.approvaldate is alias.colot alias.colull thealias.col alias.col ealias.cold) * alias.col.alias.col / coualias.colt(*), alias.col) as [ approved], roualias.cold(avg(datediff(secoalias.cold, se.creatioalias.coldate, isalias.colull(se.approvaldate, se.rejectioalias.coldate)) / alias.col.alias.col), alias.col) as [duratioalias.col (mialias.col)] from table se group by datediff(day, alias.col, se.creatioalias.coldate) / alias.col order by alias.col asc"
select top alias.col alias.col from table where creatioalias.coldate > alias.col
"declare @userIdN int = N; declare @userIdN int = N; with userNquestionid as ( select id from posts where posttypeid = N and owneruserid = @userIdN union select parentid from posts where posttypeid = N and owneruserid = @userIdN ), userNquestionid as ( select id from posts where posttypeid = N and owneruserid = @userIdN union select parentid from posts where posttypeid = N and owneruserid = @userIdN ) select p.Id as [Post Link] from posts p inner join userNquestionid uN on p.id = uN.id inner join userNquestionid uN on p.id = uN.id where posttypeid = N ;"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... order by alias.col desc;"
"select top alias.col coualias.colt(alias.col) as alias.col, alias.col as [post lialias.colk], alias.col, p.favoritecoualias.colt from table v ialias.colalias.coler joialias.col table p oalias.col alias.col=alias.col where alias.col = alias.col aalias.cold alias.col=alias.col group by alias.col,alias.col, p.commealias.coltcoualias.colt, p.favoritecoualias.colt order by alias.col desc"
"select alias.col as alias.col, coalias.colvert(float, alias.col)/alias.col as alias.col, alias.col, alias.col, (alias.col+alias.col) as alias.col from table where alias.col > alias.col aalias.cold alias.col > alias.col aalias.cold alias.col > alias.col order by alias.col desc"
"select avg(alias.col(body)) as averagealias.colgth, avg(score) as aalias.colswerscore, avg(score) + stdev(score) as plusoalias.colesigma, avg(score) - stdev(score) as mialias.colusoalias.colesigma from table where alias.col = alias.col aalias.cold alias.col(body) <= alias.col group by roualias.cold(alias.col(body), alias.col) order by roualias.cold(alias.col(body), alias.col)"
"declare @useralias.col ialias.colt = ##useralias.col## select coualias.colt(*) as raalias.colk, ((coualias.colt(*) / alias.col) + alias.col) alias.col, (select reputatioalias.col from table where alias.col = @useralias.col) reputatioalias.col from table where reputatioalias.col > (select reputatioalias.col from table u where alias.col = @useralias.col)"
"select top alias.col row_alias.columber() over(order by reputatioalias.col desc) as [#], id as [user lialias.colk], reputatioalias.col, locatioalias.col from table where lower(locatioalias.col) like x or upper(locatioalias.col) like x ... or locatioalias.col like x aalias.cold reputatioalias.col >= alias.col order by reputatioalias.col desc;"
"selealias.col ualias.col.emailhash, coualias.colt(alias.col) as alias.col, ( selealias.col cast(alias.col as varchar) + alias.col + alias.col + alias.col + cast(alias.col as varchar) + alias.col from table ualias.col where ualias.col.emailhash = ualias.col.emailhash order by alias.col desc for alias.colml path (alias.col)) as idsaalias.coldalias.colames from table ualias.col where ualias.col.emailhash is alias.colot alias.colull aalias.cold (selealias.col sum(alias.col) from table ualias.col where ualias.col.emailhash = ualias.col.emailhash) > alias.col aalias.cold (selealias.col coualias.colt(*) from table ualias.col where ualias.col.emailhash = ualias.col.emailhash aalias.cold reputatioalias.col > alias.col) > alias.col group by ualias.col.emailhash havialias.colg coualias.colt(alias.col) > alias.col order by alias.col desc"
"create table table ( id int, reputation int ); insert into table (id, reputation) select top n percent id, reputation from users where reputation > n order by reputation desc; declare @totalreputation int; declare @onepercentsreputation int; declare @ninetyninepercentsreputation int; declare @unfair float; select @totalreputation = sum(reputation) from users where reputation > n; select @onepercentsreputation = sum(reputation) from table; select @ninetyninepercentsreputation = @totalreputation - @onepercentsreputation; select @unfair = (n.n * @onepercentsreputation) / @totalreputation; select x, @unfair union all select x, @onepercentsreputation union all select x, @totalreputation union all select x, n"
"select alias.col as alias.col ,alias.col ,coualias.colt(alias.col) from table p ialias.colalias.coler joialias.col table v oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col is alias.colot alias.colull group by alias.col ,alias.col havialias.colg coualias.colt(alias.col) > alias.col order by coualias.colt(alias.col) desc"
"select alias.col, alias.col, alias.col, alias.col from table where alias.col like alias.col or alias.col like alias.col order by alias.col desc"
"select top(alias.col) lealias.col(alias.col) as lealias.colgth, p.id as [post lialias.colk], p.owalias.coleruserid as [user lialias.colk], p.creatioalias.coldate, pt.alias.colame from table p ialias.colalias.coler joialias.col table pt oalias.col alias.col = alias.col order by lealias.colgth desc"
"select top alias.col alias.col as [post lialias.colk], creatioalias.coldate from table order by creatioalias.coldate desc;"
"declare @temp table(total int, zero int); insert into @temp(total, zero) values (XYZ), (select count(pN.id) from posts pN, posts pN where pN.owneruserid = N and pN.score = N and pN.id = pN.acceptedanswerid group by pN.owneruserid)); select * from @temp;"
"declare table table( requestid integer ,userid integer ,starttime datetime ,endtime datetime ) insert into table values (xyz) ,( n,n,x, x) ,( n,n,x, x) ,( n,n,x, x) ,( n,n,x, x) ,( n,n,x, x) ,( n,n,x,x) ,( n,n,x,x) ,( n,n,x,x) ,( n,n,x,x) ,(n,n,x, x) ,(n,n,x, x) ,(n,n,x, x) ,(n,n,x, x) ;with new_grp as ( select rn.userid, rn.starttime from table rn where not exists ( select * from table rn where rn.userid = rn.userid and rn.starttime < rn.starttime and rn.endtime >= rn.starttime) group by rn.userid, rn.starttime ),r as ( select r.requestid, r.userid, r.starttime, r.endtime ,count(*) as grp from table r join new_grp n on n.userid = r.userid and n.starttime <= r.starttime group by r.requestid, r.userid, r.starttime, r.endtime ) select min(requestid) as requestid ,userid ,min(starttime) as starttime ,max(endtime) as endtime from r group by userid, grp order by userid, grp"
"DECLARE @ShowScore INT = ##ShowScore:int##; DECLARE @TagN varchar(N) = ##TagN:string##; DECLARE @TagN varchar(N) = ##TagN:string##; DECLARE @TagN varchar(N) = ##TagN:string##; DECLARE @TagN varchar(N) = ##TagN:string##; WITH QuestStatsByMonth AS ( SELECT DATEADD (month, DATEDIFF (month, N, q.CreationDate), N) AS [Month], t.TagName, SUM (q.Score) AS TotalScore, COUNT (q.Id) AS NumQuests FROM Posts q INNER JOIN PostTags pt ON q.Id = pt.PostId INNER JOIN Tags t ON t.Id = pt.TagId WHERE q.PostTypeId = N AND t.TagName IN (XYZ) GROUP BY DATEADD (month, DATEDIFF (month, N, q.CreationDate), N), t.TagName ) SELECT q.[Month], CASE @ShowScore WHEN N THEN q.TagName + X ELSE q.TagName + X END AS [Tag], CASE @ShowScore WHEN N THEN SUM (h.TotalScore) ELSE SUM (h.NumQuests) END AS Cumulative FROM QuestStatsByMonth q LEFT JOIN QuestStatsByMonth h ON h.[Month] <= q.[Month] AND h.TagName = q.TagName GROUP BY q.[Month], q.TagName ORDER BY q.[Month], q.TagName"
"select comment, postid as [post link] from table where alias.col(comment) > n and comment like x ..."
"selealias.col alias.col as alias.col , alias.col as [alias.coled aalias.colswers] , alias.col * alias.col / alias.col as [alias.col rate] from ( selealias.col coualias.colt(*) as alias.col , roualias.cold(sum(case whealias.col q.alias.coledaalias.colswerid = alias.col thealias.col alias.col else alias.col ealias.cold), alias.col) as alias.col from table q joialias.col table a oalias.col a.parealias.coltid = alias.col where alias.col = alias.col aalias.cold alias.col is alias.colull aalias.cold q.closeddate is alias.colull aalias.cold a.posttypeid = alias.col aalias.cold a.owalias.coleruserid = ##userid## ) as sub;"
"select alias.col, alias.col as table, alias.col as alias.col, (alias.col*alias.col)/alias.col as selfaalias.colswerpercealias.colt from table as u ialias.colalias.coler joialias.col ( select owalias.coleruserid, coualias.colt(*) as postcoualias.colt from table where parealias.coltid is alias.colull group by owalias.coleruserid) as p oalias.col alias.col = p.owalias.coleruserid ialias.colalias.coler joialias.col ( select q.owalias.coleruserid, coualias.colt(*) as selfaalias.colswercoualias.colt from table as q ialias.colalias.coler joialias.col table as a oalias.col alias.col = a.parealias.coltid aalias.cold q.owalias.coleruserid = a.owalias.coleruserid group by q.owalias.coleruserid havialias.colg coualias.colt(*) > alias.col) as sa oalias.col alias.col = sa.owalias.coleruserid order by alias.col desc"
"select top alias.col alias.col as [post lialias.colk], creatioalias.coldate from table where body like x"
"with table as ( select alias.col, coualias.colt(*) as alias.col, sum(alias.col) as totalquestioalias.colalias.col from table where alias.col = alias.col aalias.cold alias.col is alias.colot alias.colull group by alias.col ) select top alias.col u.displayalias.colame, u.reputatioalias.col, alias.col, uqc.alias.col, uqc.totalquestioalias.colalias.col from table uqc joialias.col table u oalias.col alias.col = uqc.alias.col order by alias.col desc"
"select alias.col ,coualias.colt(*) from table p ialias.colalias.coler joialias.col table pt oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table mt oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table pf oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table m oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table t oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col ialias.col (select alias.col from table p ialias.colalias.coler joialias.col table pt oalias.col alias.col = alias.col group by alias.col havialias.colg coualias.colt(*)> alias.col) group by alias.col order by alias.col desc"
"set alias.colocoualias.colt oalias.col declare @tabletats table (alias.col ialias.colt, alias.col ialias.colt, dowalias.col ialias.colt, alias.col ialias.colt) ialias.colsert @tabletats select alias.col, alias.col = sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold), dowalias.col = sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold), alias.col =sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) from table where alias.col ialias.col (alias.col) groalias.col by alias.col set alias.colocoualias.colt off select top alias.col alias.col as [post lialias.colk] , alias.col, dowalias.col, alias.col, viewcoualias.colt from @tabletats joialias.col table p oalias.col alias.col = alias.col where ( ((alias.col - dowalias.col = alias.col) or (alias.col - dowalias.col = alias.col) or (alias.col - dowalias.col > alias.col aalias.cold alias.col-dowalias.col < alias.col) or (alias.col=alias.col))) aalias.cold p.commualias.colityowalias.coleddate is alias.colull aalias.cold p.closeddate is alias.colull order by alias.col desc,alias.col desc,viewcoualias.colt desc"
"select top alias.col alias.col, displayalias.colame, reputatioalias.col, alias.col, locatioalias.col from table where locatioalias.col like alias.colx order by reputatioalias.col desc"
"with alias.cole_tablerealias.colived as ( selealias.col alias.col , b.class , mialias.col (alias.col) as date , mialias.col (alias.col) as id from table b where alias.col = alias.col## aalias.cold b.tagbased = alias.col group by alias.col, b.class ) selealias.col alias.col as [badge alias.colame] , cast (b.class as char(alias.col)) + alias.colalias.col + case b.class whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col ealias.cold as [badge class] , alias.col as [first realias.colived] , [award order] = ( selealias.col coualias.colt (*) from table balias.col where balias.col.alias.colame = alias.col aalias.cold balias.col.class = b.class aalias.cold ( balias.col.date < alias.col or balias.col.date = alias.col aalias.cold balias.col.id <= alias.col ) ) , [lialias.colk] = alias.col + alias.col + cast (alias.col as varchar(alias.col)) + alias.col + cast (alias.col## as varchar(alias.col)) + alias.col , alias.col = ( selealias.col coualias.colt (*) from table balias.col where balias.col.alias.colame = alias.col aalias.cold balias.col.class = b.class ) from alias.cole_tablerealias.colived b"
"declare alias.col ialias.colt = ##userid## select alias.col, coualias.colt(*) as uptable from table ialias.colalias.coler joialias.col posttable oalias.col posttable.tagid = table.id ialias.colalias.coler joialias.col table oalias.col table.parealias.coltid = posttable.postid ialias.colalias.coler joialias.col table oalias.col table.postid = table.id aalias.cold alias.col = alias.col where table.owalias.coleruserid = alias.col group by alias.col order by uptable desc"
"select top alias.col alias.col as [user lialias.colk], alias.colutatioalias.col as alias.col, locatioalias.col, age, alias.col, dowalias.colvotes, case whealias.col (alias.col / dowalias.colvotes) = alias.col thealias.col x else x ealias.cold as [voter type] from table where alias.col < ##maxalias.col## aalias.cold dowalias.colvotes > ##mialias.coldowalias.colvotes## order by dowalias.colvotes desc"
"select top alias.col alias.col as alias.col, u.displayalias.colame as [user alias.colame], u.reputatioalias.col as alias.col from table u where upper(u.locatioalias.col) like upper(alias.col + ##yourlocatioalias.col:strialias.colg## + alias.col) order by u.reputatioalias.col"
select coualias.colt(*) as alias.col from table t where alias.col >= alias.col
"declare alias.col varchar(n) select alias.col = alias.col select table.creationdate, table.owneruserid, table.displayname from table inner join table on table.owneruserid = table.id where body like alias.col + alias.col + alias.col or body like alias.col ... + alias.col + alias.col order by table.displayname"
"declare table as table (name varchar(n), alias.col varchar(n) , specialid uniqueidentifier) insert into table (name, alias.col) values (xyz), (x,x), (x,x), (x,x), (x,x), (x,x) ;with tableid as ( select distinct name, alias.col from table ) update table set a.specialid = b.specialid from table a inner join (select name, alias.col, newid() specialid from tableid) b on a.name = b.name and a.alias.col = b.alias.col select * from table"
"create table table (alias.col ialias.colt, uptable ialias.colt, dowalias.coltable ialias.colt) go ialias.colsert ialias.colto table select table.postalias.col, sum(case whealias.col table.votetypealias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as uptable, sum(case whealias.col table.votetypealias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as dowalias.coltable from table group by table.postalias.col go select top alias.col alias.col as [post lialias.colk], uptable from table where dowalias.coltable = alias.col order by uptable desc"
"declare @totaltable int select @totaltable = sum(table) from table declare table cursor for select alias.col, table, table from table order by table desc open table declare table bigint declare @table nvarchar(max) declare @table int declare @repsofar int set @repsofar = n declare @numberoftable int set @numberoftable = n fetch next from table into table, @table, @table while @@fetch_status = n and @repsofar < @totaltable * ##percent## / n begin set @repsofar = @repsofar + @table set @numberoftable = @numberoftable + n fetch next from table into table, @table, @table end close table deallocate table select @table as cutofftable, table as cutoffalias.col, @table as cutofftable, @totaltable as totaltable, @numberoftable as numberoftable"
"select alias.col as alias.col, alias.col as alias.col, alias.col as alias.col from table p where alias.col like alias.col order by alias.col desc;"
select top alias.colalias.col from table order by alias.col desc;
"select alias.col as alias.col, alias.col, alias.col, alias.col from table where location = x order by alias.col desc"
"select alias.col, coualias.colt(alias.col) from table t ialias.colalias.coler joialias.col posttable pt oalias.col alias.col = alias.col aalias.colalias.col alias.col like alias.col ialias.colalias.coler joialias.col table p oalias.col alias.col = alias.col aalias.colalias.col alias.col(alias.col, getalias.colate(), p.creatioalias.colalias.colate) >= alias.col ialias.colalias.coler joialias.col posttable ptalias.col oalias.col alias.col = ptalias.col.postialias.col ialias.colalias.coler joialias.col table talias.col oalias.col ptalias.col.tagialias.col = talias.col.ialias.col group by alias.col oralias.coler by coualias.colt(alias.col) alias.colesc"
"declare alias.col nvarchar(n) = alias.col select alias.col, alias.col, count(*) alias.col from (select alias.col(alias.col, alias.col) as alias.col, alias.col(hour, alias.col) as alias.col, case round(alias.col(hour, alias.col)/n, n) when n then alias.col when n then alias.col when n then alias.col when n then alias.col when n then alias.col when n then alias.col end as daytimename, ((alias.col(alias.col, alias.col) - n) * n) + alias.col(hour, alias.col) as weekhour from table p, table ans where alias.col = alias.col and alias.col like alias.col ... + alias.col+alias.col ) as alias.col group by alias.col, alias.col order by alias.col"
"select top alias.col alias.col as [user lialias.colk], alias.col, dowalias.colvotes, reputatioalias.col, alias.col/reputatioalias.col as alias.col from table where reputatioalias.col > alias.col order by alias.col desc, reputatioalias.col asc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], location, websiteurl, views, upvotes, downvotes, alias.col from table where lower(location) like x or lower(location) like x ... order by alias.col desc;"
"select alias.col as alias.col, alias.col as alias.col, alias.col as asalias.col, alias.col as views, q.creatioalias.coldate as qdate from table as q ialias.colalias.coler joialias.col table as a oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold q.aalias.colswercoualias.colt = alias.col aalias.cold q.creatioalias.coldate < alias.col aalias.cold alias.col < alias.col aalias.cold alias.col = alias.col aalias.cold alias.col alias.colot like alias.col aalias.cold lealias.col(alias.col) < alias.col aalias.cold q.acceptedaalias.colswerid is alias.colull aalias.cold q.closeddate < alias.col aalias.cold q.lasteditdate < alias.col group by alias.col, alias.col, alias.col, alias.col, q.creatioalias.coldate order by alias.col asc"
"select sum(alias.col), maalias.col(alias.col) as alias.col from table p where alias.col = alias.col"
"select alias.col as alias.col, alias.col, alias.col, lastaccessdate from table where alias.col < alias.col aalias.cold alias.col (day,lastaccessdate,getdate()) < alias.col order by displayalias.colame"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... order by alias.col desc;"
"select top alias.col questioalias.cols.id as [post lialias.colk], questioalias.cols.aalias.colswercoualias.colt, questioalias.cols.viewcoualias.colt, questioalias.cols.favoritecoualias.colt, questioalias.cols.score, questioalias.cols.lastactivitydate from table as aalias.colswers ialias.colalias.coler joialias.col table as questioalias.cols oalias.col questioalias.cols.id = aalias.colswers.parealias.coltid ialias.colalias.coler joialias.col table as table oalias.col aalias.colswers.owalias.coleruserid = table.id ialias.colalias.coler joialias.col table oalias.col table.postid = aalias.colswers.parealias.coltid ialias.colalias.coler joialias.col table oalias.col table.id = table.tagid where table.tagalias.colame = alias.col group by questioalias.cols.id, questioalias.cols.aalias.colswercoualias.colt, questioalias.cols.viewcoualias.colt, questioalias.cols.favoritecoualias.colt, questioalias.cols.score, questioalias.cols.lastactivitydate order by viewcoualias.colt desc"
"select alias.col as alias.col, alias.col as alias.col, alias.col as alias.col, alias.col as alias.col from taliasle as a join taliasle as b on alias.col = alias.col where alias.col < alias.col and alias.col != alias.col and alias.col is null and b.closeddate is null;"
"declare @site varchar (n) declare alias.col int, @idx_meta int set @site = x set alias.col = patindex(x, db_name()) select alias.col"
"selealias.col top alias.col alias.col as [post lialias.colk] , alias.col , crt.alias.colame , crt.descriptioalias.col from table p ialias.colalias.coler joialias.col table ph oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table crt oalias.col alias.col = cast(ph.commealias.colt as tialias.colyialias.colt) where ph.tabletypeid = alias.col aalias.cold alias.col is alias.colot alias.colull aalias.cold alias.col = alias.col selealias.col alias.col from table"
"select top alias.col alias.col, displayalias.colame, reputatioalias.col, alias.col, locatioalias.col from table where locatioalias.col like alias.colx order by reputatioalias.col desc"
declare alias.col int = ##userid## select count(*) from table ph inner join tabletypes pht on ph.tabletypeid = alias.col where (alias.col = alias.col or alias.col = alias.col or alias.col = alias.col) and alias.col = alias.col group by ph.revisionguid
"with userfirstaalias.colswer as ( select alias.col , mialias.col(alias.col) as alias.col from table where posttypealias.col = alias.col group by alias.col ) select top alias.col raalias.colk() over (order by table desc) as [raalias.colk] , table , table as [user lialias.colk] , aalias.colswers.alias.col as [post lialias.colk] , cast(aalias.colswers.creatioalias.coldate as date) as [date] , questioalias.col.tags from table as aalias.colswers ialias.colalias.coler joialias.col table as questioalias.col oalias.col questioalias.col.alias.col = aalias.colswers.parealias.coltalias.col where aalias.colswers.alias.col ialias.col (select alias.col from userfirstaalias.colswer) order by table desc, table;"
"with table as ( select alias.col,coualias.colt(alias.col) as alias.col,sum(alias.col) as alias.col from table p ialias.colalias.coler joialias.col table pt oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table t oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table py oalias.col alias.col = alias.col where alias.col = alias.col## aalias.cold alias.col = alias.col aalias.cold alias.col is alias.colull group by alias.col ) select alias.col, alias.col, alias.col, case whealias.col alias.col > alias.col aalias.cold alias.col > alias.col thealias.col alias.col whealias.col alias.col > alias.col aalias.cold alias.col > alias.col thealias.col alias.col whealias.col alias.col > alias.col aalias.cold alias.col > alias.col thealias.col alias.col ealias.cold as currealias.coltbadge, case whealias.col alias.col > alias.col aalias.cold alias.col > alias.col thealias.col alias.colull whealias.col alias.col > alias.col aalias.cold alias.col > alias.col thealias.col alias.col whealias.col alias.col > alias.col aalias.cold alias.col > alias.col thealias.col alias.col else alias.col ealias.cold as currealias.coltbadge, case whealias.col alias.col > alias.col thealias.col alias.col whealias.col alias.col betweealias.col alias.col aalias.cold alias.col aalias.cold alias.col > alias.col thealias.col alias.col - alias.col whealias.col alias.col > alias.col aalias.cold alias.col > alias.col thealias.col alias.col whealias.col alias.col betweealias.col alias.col aalias.cold alias.col aalias.cold alias.col > alias.col thealias.col alias.col - alias.col whealias.col alias.col > alias.col aalias.cold alias.col > alias.col thealias.col alias.col whealias.col alias.col < alias.col thealias.col alias.col - alias.col else alias.col ealias.cold as aalias.colswersalias.coleeded, case whealias.col alias.col > alias.col thealias.col alias.col whealias.col alias.col betweealias.col alias.col aalias.cold alias.col aalias.cold alias.col > alias.col thealias.col alias.col - alias.col whealias.col alias.col > alias.col aalias.cold alias.col > alias.col thealias.col alias.col whealias.col alias.col betweealias.col alias.col aalias.cold alias.col aalias.cold alias.col > alias.col thealias.col alias.col - alias.col whealias.col alias.col > alias.col aalias.cold alias.col > alias.col thealias.col alias.col whealias.col alias.col < alias.col thealias.col alias.col - alias.col else alias.col ealias.cold as scorealias.coleeded from table"
"set alias.colocoualias.colt oalias.col declare @tabletats table (alias.col ialias.colt, alias.col ialias.colt, dowalias.col ialias.colt) ialias.colsert @tabletats select alias.col, alias.col = sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold), dowalias.col = sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) from table where alias.col ialias.col (alias.col) groalias.col by alias.col set alias.colocoualias.colt off select top alias.col alias.col as [post lialias.colk], alias.col as [alias.col-table], dowalias.col as [dowalias.col-table] from @tabletats joialias.col table p oalias.col alias.col = alias.col where alias.col > alias.col aalias.cold dowalias.col > alias.col aalias.cold p.commualias.colityowalias.coleddate is alias.colull aalias.cold p.closeddate is alias.colull order by dowalias.col desc"
"selealias.col alias.col, sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) sualias.colday, sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) moalias.colday, sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) tuesday, sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) wedalias.colesday, sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) thursday, sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) friday, sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) saturday from ( selealias.col cast( right(alias.col + coalias.colvert(varchar(alias.col), alias.col(hour, a.creatioalias.coldate)), alias.col) + alias.col + right(alias.col + coalias.colvert(varchar, alias.col(mialias.colute, a.creatioalias.coldate) / alias.col * alias.col), alias.col) as datetime ) as alias.col, coalias.colvert(ialias.colt, alias.col(weekday, a.creatioalias.coldate)) as alias.col from table a joialias.col table q oalias.col a.parealias.coltid = alias.col joialias.col table pt oalias.col alias.col = alias.col joialias.col table t oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold t.tagalias.colame like alias.col:strialias.colg## ) as alias.col group by alias.col order by alias.col asc"
"select alias.col, alias.col, alias.col from table where lower(location) like x order by alias.col;"
"declare @useralias.col ialias.colt = ##useralias.col## select alias.col as alias.col, alias.col, owalias.coleruseralias.col as alias.col from table where owalias.coleruseralias.col = @useralias.col aalias.cold posttypealias.col = alias.col order by alias.col desc"
"select top alias.col alias.col as [user lialias.colk], coualias.colt(*) [total table], coualias.colt(alias.col) [closed table], alias.col.alias.col * coualias.colt(alias.col) / coualias.colt(*) as alias.col from table as u joialias.col table as p oalias.col p.owalias.coleruserid = alias.col groalias by alias.col havialias.colg coualias.colt(alias.col) >= ##closedcoualias.colt:ialias.colt## order by alias.col.alias.col * coualias.colt(alias.col) / coualias.colt(*) desc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x order by alias.col desc;"
"declare alias.col ialias.colt = ##user## select table.tagalias.colame, mialias.col(alias.col) as oldestquestioalias.colalias.col, mialias.col(table.coualias.colt) as alias.col from table joialias.col posttable oalias.col table.id = posttable.tagid joialias.col table oalias.col table.id = posttable.postid where (select top alias.col owalias.coleruserid from table as p joialias.col posttable as pt oalias.col alias.col = alias.col where table.id = alias.col order by alias.col) = alias.col group by table.id, table.tagalias.colame order by oldestquestioalias.colalias.col"
"select top alias.col alias.col, displayalias.colame, reputatioalias.col, alias.col, locatioalias.col from table where locatioalias.col like alias.colx or locatioalias.col like alias.colx or locatioalias.col like alias.colx order by reputatioalias.col desc"
select alias.col from table where table.parealias.coltid = alias.col order by table.score desc
"select top alias.col alias.col, alias.col as [post lialias.colk] faliasom (select alias.col faliasom table whealiase paaliasealias.coltalias.col is alias.colull aalias.cold body alias.colot like x except select paaliasealias.coltalias.col faliasom table whealiase paaliasealias.coltalias.col is alias.colot alias.colull galiasoup by paaliasealias.coltalias.col ) as alias"
"select top alias.col alias.col as [post lialias.colk] , q.owalias.coleruserid as [user lialias.colkl] , q.creatioalias.coldate as [asked oalias.col] , a.creatioalias.coldate as [aalias.colswered oalias.col] from table q ialias.colalias.coler joialias.col table a oalias.col alias.col = q.acceptedaalias.colswerid where alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold a.owalias.coleruserid = q.owalias.coleruserid aalias.cold a.owalias.coleruserid = alias.col"
"create table table ( alias.col tealias.colt, alias.col ialias.colt ) ialias.colsert ialias.colto table (alias.col, alias.col) select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col select rc.alias.col, rc.alias.col, ( select coualias.colt(alias.col) from table u where u.reputatioalias.col >= rc.alias.col aalias.cold alias.colot u.displayalias.colame = alias.col ) as usercoualias.colt from table rc"
select coualias.colt (*) from table where alias.col = alias.col aalias.cold table.score = alias.col aalias.cold table.owalias.coleruserid = alias.col
"declare @commealias.colttealias.colt alias.colvarchar(alias.col) = ##commealias.colttealias.colt:strialias.colg## select alias.col as [commealias.colt alias.col], postalias.col as [post alias.col], alias.col as [alias.col], tealias.colt as alias.col, alias.col as alias.col from table where useralias.col = alias.col aalias.cold tealias.colt like alias.col + @commealias.colttealias.colt + alias.col order by alias.col desc"
"select top alias.col selfaalias.colswer.body, selfaalias.colswer.id, selfaalias.colswer.creatioalias.coldate, lealias.col(selfaalias.colswer.body) as lealias.colgth, selfaalias.colswer.score as score, questioalias.col.viewcoualias.colt, questioalias.col.aalias.colswercoualias.colt - alias.col as otheraalias.colswerd from table as questioalias.col ialias.colalias.coler joialias.col table as allaalias.colswers oalias.col allaalias.colswers.parealias.coltid = questioalias.col.id ialias.colalias.coler joialias.col table as selfaalias.colswer oalias.col selfaalias.colswer.owalias.coleruserid = questioalias.col.owalias.coleruserid aalias.cold selfaalias.colswer.parealias.coltid = questioalias.col.id where selfaalias.colswer.creatioalias.coldate > alias.col aalias.cold selfaalias.colswer.score <= alias.col aalias.cold questioalias.col.posttypeid = alias.col aalias.cold selfaalias.colswer.posttypeid = alias.col aalias.cold ( questioalias.col.acceptedaalias.colswerid != selfaalias.colswer.id or questioalias.col.acceptedaalias.colswerid is alias.colull) aalias.cold questioalias.col.viewcoualias.colt < alias.col aalias.cold lealias.col(selfaalias.colswer.body) < alias.col group by selfaalias.colswer.id, selfaalias.colswer.creatioalias.coldate, lealias.col(selfaalias.colswer.body), selfaalias.colswer.score, questioalias.col.viewcoualias.colt, selfaalias.colswer.body, questioalias.col.aalias.colswercoualias.colt havialias.colg coualias.colt(distialias.colct allaalias.colswers.id) > alias.col order by selfaalias.colswer.creatioalias.coldate desc"
select top alias.col alias.col from table where alias.col = alias.col aalias.cold lealias.col(body) < alias.col aalias.cold aalias.colswercoualias.colt > alias.col;
"declare @alias.col varchar(alias.col) = ##alias.col:strialias.colg## select alias.col, table.id alias.col, alias.col, coualias.colt(*) as uptable from table ialias.colalias.coler joialias.col posttable oalias.col posttable.tagid = table.id ialias.colalias.coler joialias.col table oalias.col table.parealias.coltid = posttable.postid ialias.colalias.coler joialias.col table oalias.col table.postid = table.id aalias.cold alias.col = alias.col ialias.colalias.coler joialias.col table oalias.col table.owalias.coleruserid = table.id where table.alias.col = @alias.col group by alias.col, table.id,alias.col order by uptable desc"
select alias.col from table where alias.col like alias.col order by alias.col desc
"select alias.col, alias.col, (alias.col * alias.col / alias.col) peralias.colalias.coltage from (select sum(case whealias.col alias.col like alias.col thealias.col alias.col else alias.col ealias.cold) alias.col, coualias.colt(*) as alias.col from table pq joialias.col table pa oalias.col alias.col = pq.parealias.coltid where pq.creatioalias.coldate > alias.col aalias.cold alias.col = alias.col aalias.cold alias.col like alias.col ) alias.col"
"select alias.col, coualias.colt(alias.col) as alias.col from table as q ialias.colalias.coler joialias.col table as pt oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table as t oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table as a oalias.col alias.col = alias.col where alias.col = alias.col group by alias.col havialias.colg coualias.colt(alias.col) >= alias.col order by alias.col desc"
"select alias.col ,alias.col(alias.col, alias.col) as alias.col ,alias.col(alias.col, alias.col) as alias.col ,alias.col(alias.col, alias.col) as alias.col ,alias.col(alias.col, alias.col) as alias.col ,alias.col from ::falias.col_helpcollatioalias.cols() where lower(alias.colame) like alias.col order by alias.col,alias.col"
select alias.col from table where alias.col like alias.col
"with table as ( selealias.col alias.col(alias.col, alias.col - alias.col(alias.col, creatioalias.coldate), cast(creatioalias.coldate as date)) as week, coualias.colt (*) weekcoualias.colt from table group by alias.col(alias.col, alias.col - alias.col(alias.col, creatioalias.coldate), cast(creatioalias.coldate as date)) ) selealias.col week, weekcoualias.colt, sum(weekcoualias.colt) over (order by week rows alias.col precedialias.colg) as cumulative from table order by week"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... order by alias.col desc;"
declare alias.col date = ##date:strialias.colg## declare @aalias.colswered ialias.colt = (select coualias.colt(*) from table as alias where alias.col=alias.col aalias.cold creatioalias.coldate < alias.col aalias.cold (alias.col is alias.colull or alias.col >= alias.col) aalias.cold exists ( select alias.col from table where alias.col=alias.col aalias.cold parealias.coltalias.col=alias.alias.col aalias.cold creatioalias.coldate < alias.col aalias.cold alias.col != alias.col ) ) declare @alias.col ialias.colt = ( select coualias.colt(*) from table where alias.col=alias.col aalias.cold creatioalias.coldate < alias.col aalias.cold (alias.col is alias.colull or alias.col >= alias.col) ) select @aalias.colswered*alias.col/@alias.col
"select top alias.col alias.col as [post lialias.colk], alias.col, viewcoualias.colt as views, aalias.colswercoualias.colt as aalias.colswers, creatioalias.coldate, alias.col from table where acceptedaalias.colsweralias.col is alias.colull aalias.cold posttypealias.col = alias.col aalias.cold creatioalias.coldate < getdate() - alias.col aalias.cold closeddate is alias.colull aalias.cold alias.colot ealias.colists ( select alias.col from table p where p.parealias.coltalias.col = table.alias.col aalias.cold p.posttypealias.col = alias.col ) aalias.cold alias.col like alias.col ... order by creatioalias.coldate asc"
"select aliaslialiass.col, aliaslialiass.col, aliaslialiass.col from taliasble aliass alias left joialiaslialiass.col taliasble aliass q oaliaslialiass.col aliaslialiass.col = aliaslialiass.col where aliaslialiass.col = aliaslialiass.col aliasaliaslialiass.cold (q.owaliaslialiass.coleruserid is aliaslialiass.colull or alias.owaliaslialiass.coleruserid <> q.owaliaslialiass.coleruserid) aliasaliaslialiass.cold alias.owaliaslialiass.coleruserid = aliaslialiass.col"
"select top (alias.col) row_alias.columber() over(order by reputatioalias.col desc) as [#], id as [user lialias.colk], reputatioalias.col, locatioalias.col, displayalias.colame, age, alias.col as [about me] from table where lower(alias.col) like alias.col order by reputatioalias.col desc;"
"select alias.col + replace(alias.col,alias.col,alias.col) + alias.col + alias.col + alias.col + alias.col + alias.col + alias.colalias.colalias.col + alias.col from table where name like alias.col"
"select top alias.col alias.col as [post lialias.colk], alias.col, a.viewcoualias.colt, a.acceptedaalias.colswerid, lealias.col(alias.col) as lealias.colgthofacceptedaalias.colswer from table a ialias.colalias.coler joialias.col table q oalias.col a.acceptedaalias.colswerid = alias.col where alias.col > alias.col aalias.cold a.viewcoualias.colt > alias.col aalias.cold alias.col = alias.col aalias.cold alias.col > alias.col aalias.cold lealias.col(alias.col) < alias.col order by lealias.colgthofacceptedaalias.colswer asc, viewcoualias.colt asc"
select alias.col as alias.col from table topic joialias.col table aalias.col oalias.col alias.col = alias.col joialias.col table aalias.col oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col
"select top alias.col alias.col [post lialias.colk], alias.col, alias.col from table q where alias.col = alias.col aalias.cold lealias.col(alias.col) <= alias.col aalias.cold alias.col(moalias.colth, q.creatioalias.coldate, getdate()) <=alias.col aalias.cold alias.col alias.colot like x aalias.cold q.title alias.colot like x aalias.cold alias.col is alias.colull aalias.cold q.viewcoualias.colt < alias.col aalias.cold acceptedaalias.colswerid is alias.colull order by q.creatioalias.coldate desc"
"select top alias.col questioalias.col.id as [post lialias.colk], questioalias.col.creatioalias.coldate from table as questioalias.col ialias.colalias.coler joialias.col table as selfaalias.colswer oalias.col selfaalias.colswer.owalias.coleruserid = questioalias.col.owalias.coleruserid aalias.cold selfaalias.colswer.parealias.coltid = questioalias.col.id where questioalias.col.posttypeid = alias.col aalias.cold selfaalias.colswer.posttypeid = alias.col aalias.cold lealias.col(selfaalias.colswer.body)<alias.col group by questioalias.col.id, questioalias.col.creatioalias.coldate havialias.colg coualias.colt(distialias.colct selfaalias.colswer.id) > alias.col order by questioalias.col.creatioalias.coldate desc"
"declare @alias.colthreshold ialias.colt = ##alias.colthreshold## declare @aalias.colswerthreshold ialias.colt = ##aalias.colswerthreshold## select alias.col as alias.col, (select coualias.colt(*) from table p where p.alias.col=table.alias.col aalias.cold alias.col<=@alias.colthreshold aalias.cold alias.col=alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull) * alias.col.alias.col / coualias.colt(*) as [ below threshold], coualias.colt(*) as [total aalias.colswers] from table where alias.col=alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull group by alias.col havialias.colg coualias.colt(*) < @aalias.colswerthreshold order by [total aalias.colswers] desc"
"declare alias.col int = ##numupvotes## select alias.col, alias.col, alias.col from table where alias.col > alias.col order by alias.col desc"
"select alias.col , alias.col , count(*) as [# table per tag/location] from table p inner join table pt on alias.col = alias.col inner join table t on alias.col = alias.col inner join table u on alias.col = alias.col where location like x + ##country:string## + x group by alias.col , alias.col order by count(*) desc"
"select top alias.col coualias.colt(alias.col) as alias.col, alias.col as [post lialias.colk],alias.col from table v ialias.colalias.coler joialias.col table p oalias.col alias.col=alias.col where alias.col = alias.col aalias.cold alias.col=alias.col aalias.cold alias.col = alias.col group by alias.col,alias.col order by alias.col desc"
"select alias.col,alias.col,alias.col from table where location like x order by alias.col"
"selealias.col top alias.col table.id as [user lialias.colk], coualias.colt(*) as alias.col, roualias.cold(avg(aalias.colswers.alias.col * alias.col / questioalias.cols.viewcoualias.colt),alias.col) as alias.col, roualias.cold(avg(aalias.colswers.alias.col),alias.col) as alias.col, roualias.cold(avg(questioalias.cols.viewcoualias.colt),alias.col) as alias.col from ( selealias.col cast(alias.col as alias.columeric) as alias.col, owalias.coleruserid, parealias.coltid from table where alias.col = alias.col ) as aalias.colswers ialias.colalias.coler joialias.col ( selealias.col table.id, alias.col, viewcoualias.colt from table ialias.colalias.coler joialias.col table oalias.col table.id = table.postid ialias.colalias.coler joialias.col table oalias.col table.tagid = table.id where table.alias.col = alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold table.tagalias.colame = alias.col aalias.cold viewcoualias.colt > alias.col ) as questioalias.cols oalias.col aalias.colswers.parealias.coltid = questioalias.cols.id ialias.colalias.coler joialias.col table oalias.col aalias.colswers.owalias.coleruserid = table.id group by table.id havialias.colg coualias.colt(*) > alias.col order by alias.col desc"
"create table table( id int, review_id int, user_id int, created datetime, comment varchar(n), deleted int ); insert into table values (xyz), (n,n,n,x,x,n), (n,n,n,x,x,n); select id,comment from table where id in ( select max(id) from table where user_id=n and deleted=n group by review_id ) order by created desc"
select alias.col as alias.col from table where alias.col in (select alias.col from table ph where alias.col like alias.col)
"selealias.col alias.col as alias.col, alias.col as alias.col, alias.col as alias.col, coalias.colvert(decimal(alias.col,alias.col), cast(alias.col as float) / alias.col) as alias.col, alias.col * alias.col - alias.col as [votes alias.coleeded] from table questioalias.col, table acceptedaalias.colswer, table youraalias.colswer, table accepteduser where youraalias.colswer.owalias.coleruserid = alias.col## aalias.cold youraalias.colswer.parealias.coltid = alias.col aalias.cold questioalias.col.acceptedaalias.colswerid = acceptedaalias.colswer.id aalias.cold acceptedaalias.colswer.owalias.coleruserid = alias.col aalias.cold acceptedaalias.colswer.id != alias.col## aalias.cold alias.col > alias.col aalias.cold alias.col > alias.col order by [votes alias.coleeded] desc"
"select alias.col, alias.col from table ph ialias.colalias.coler joialias.col table p oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table pt oalias.col ph.tabletypeid = alias.col where alias.col > alias.col aalias.cold ph.tabletypeid = alias.col aalias.cold alias.col !=alias.col"
"select alias.col(alias.col, alias.col) alias.col, alias.col(alias.col, alias.col) alias.col, coualias.colt(alias.col) alias.col, coualias.colt(alias.col) alias.col, sum(alias.col) alias.col, sum(alias.col) alias.col from table palias.col, table ptablealias.col, table talias.col where alias.col = alias.col aalias.cold alias.col = ptablealias.col.postid aalias.cold ptablealias.col.tagid = talias.col.id aalias.cold talias.col.tagalias.colame = alias.col aalias.cold alias.col >= alias.col aalias.cold alias.col <= alias.col group by alias.col(alias.col, alias.col), moalias.colth(alias.col), alias.col(alias.col, alias.col) order by alias.col(alias.col, alias.col) desc, moalias.colth(alias.col) desc"
"select top alias.col table.id as [user lialias.colk], coualias.colt(table.id) as aalias.colswers, max(table.reputatioalias.col)/coualias.colt(table.id) as averageaalias.colswerscore from table ialias.colalias.coler joialias.col table oalias.col table.id = owalias.coleruserid where alias.col = alias.col group by table.id, displayalias.colame havialias.colg coualias.colt(table.id) > alias.col order by averageaalias.colswerscore desc"
"declare alias.col ialias.colt, alias.col ialias.colt, @lowesta ialias.colt, @highesta ialias.colt select alias.col = mialias.col(alias.col), alias.col = max(alias.col) from ( select alias.col, coualias.colt(*) alias.col from table where alias.col ialias.col (alias.col) from ( select alias.col, coualias.colt(*) alias.col from table where alias.col ialias.col (alias.col) ) or ( alias.col = alias.col aalias.cold alias.col ialias.col (alias.col) ) )"
"select table.alias.col as alias.col, year(table.creatioalias.coldate) as year, moalias.colth(table.creatioalias.coldate) as moalias.colth, day(table.creatioalias.coldate) as day, coualias.colt(*) as total from table ialias.colalias.coler joialias.col table oalias.col table.id=table.postid aalias.cold table.votetypeid=alias.col aalias.cold table.id = alias.col## group by table.alias.col, year(table.creatioalias.coldate), moalias.colth(table.creatioalias.coldate), day(table.creatioalias.coldate)"
"select top alias.col alias.col as [post lialias.colk] , commealias.coltauthor.id as [user lialias.colk] , text , table.creatioalias.coldate as date , alias.col from table left outer joialias.col table as commealias.coltauthor oalias.col table.userid = commealias.coltauthor.id where text like alias.col;"
"select alias.col, alias.col, alias.col, alias.col as alias.col from table p ialias.colalias.coler joialias.col table s oalias.col alias.col = alias.col where alias.col like alias.col aalias.cold p.alias.colcoualias.colt > alias.col aalias.cold alias.col = alias.col"
"select top alias.col table.id as [user lialias.colk], table.reputatioalias.col as alias.col, sum(table.score)*alias.col + coualias.colt(table.acceptedaalias.colswerid)*alias.col as [aalias.colswer rep] from table ialias.colalias.coler joialias.col table oalias.col table.owalias.coleruserid = table.id where table.posttypeid = alias.col aalias.cold table.commualias.colityowalias.coleddate is alias.colull group by table.reputatioalias.col, table.id order by [aalias.colswer rep] desc"
"if object_id(X) is not null drop table #t ; create table #t ( owneruserid int, rn int, creationdate datetime, bounty int, immune int, votes_capped int, total as isnull(immune,N) + isnull(votes_capped,N), primary key clustered(owneruserid, rn)) ; insert #t select owneruserid, rn=row_number() over (partition by owneruserid order by creationdate), creationdate, sum(bounty) bounty, sum(coalesce(accepted+bounty,accepted,bounty)) immune, (select min(a) from ( select sum(rep) a union all select N) x) as votes_capped from ( select p.owneruserid, v.creationdate, case votetypeid when N then N end accepted, case votetypeid when N then -bountyamount when N then bountyamount end bounty, case votetypeid when N then N when N then N else N end rep from votes v inner join posts p on p.id = v.postid inner join users u on u.id = p.owneruserid where v.votetypeid in (XYZ) and p.communityowneddate is null and u.reputation >= N union all select pN.owneruserid, v.creationdate, null, null, N from votes v inner join posts pN on pN.id = v.postid and v.votetypeid = N inner join posts pN on pN.id = pN.parentid inner join users u on u.id = pN.owneruserid where pN.communityowneddate is null ) j group by owneruserid, creationdate ;"
"create table table(ualias.colique_id ialias.colt, worker_id ialias.colt, date datetime, type_id ialias.colt) ialias.colsert ialias.colto table values (xyz),(alias.col, alias.col, x, alias.col),(alias.col, alias.col, x, alias.col) select alias.col from table talias.col where exists ( select alias.col from table talias.col where date is alias.colot alias.colull aalias.cold talias.col.ualias.colique_id=talias.col.ualias.colique_id ) aalias.cold exists ( select alias.col from table talias.col where date is alias.colull aalias.cold talias.col.ualias.colique_id=talias.col.ualias.colique_id ) aalias.cold talias.col.date is alias.colull select alias.col from table"
"select top alias.col alias.col, alias.col as [post lialias.colk], p.viewcoualias.colt, alias.col, alias.col(day, p.creatioalias.coldate, getutcdate()) as daysold from table p where alias.col = alias.col aalias.cold p.acceptedaalias.colswerid = alias.colull order by p.viewcoualias.colt / alias.col(day, p.creatioalias.coldate, getutcdate())"
"select alias.col as alias.col, alias.col, alias.col from table where alias.col > alias.col aalias.cold alias.col > alias.col aalias.cold parealias.coltalias.col is alias.colull aalias.cold acceptedaalias.colsweralias.col is alias.colull order by alias.col desc, alias.col desc"
select alias.col from table p joialias.col table pt oalias.col alias.col = alias.col where alias.col like alias.col aalias.cold alias.col like alias.col order by p.creatioalias.coldate asc
"select alias.col, coualias.colt(alias.col) from ( select alias.col(week, datediff(week, alias.col, creatioalias.coldate), alias.col) alias.col, t.alias.col from table p joialias.col table pt oalias.col alias.col = alias.col joialias.col table t oalias.col alias.col = alias.col where alias.col ialias.col (alias.col) aalias.cold alias.col = alias.col ) as alias.col group by alias.col, alias.col order by alias.col asc, alias.col asc"
"declare @alias.col ialias.colt select alias.col(alias.col , alias.col) as alias.col, coualias.colt(alias.col) as alias.col from table p joialias.col table pt oalias.col alias.col = alias.col where alias.col < alias.col aalias.cold pt.alias.colame ialias.col (alias.colyz) aalias.cold alias.col is alias.colot alias.colull group by alias.col havialias.colg coualias.colt(alias.col) > alias.col order by alias.col desc"
"select top alias.col alias.col , alias.col , alias.col , coalias.colvert (varchar(alias.col), q.creatioalias.coldate, alias.col) as [date asked] , q.aalias.colswercoualias.colt as [alias.colum aalias.colswers] from table as q where alias.col = alias.col aalias.cold alias.col is alias.colull aalias.cold alias.col like x order by alias.col desc"
"create table table ( id int , name char(n) ) ; insert into table (id , name) values (xyz) , ( n , x) ; select t.id, t.name, o.ordr as x from table as t join ( values (xyz) , (n,n) ) as o(id, ordr) on o.id = t.id ;"
"with table as ( selealias.col alias.col(alias.col) - alias.col(replace(alias.col, alias.col, alias.col)) as alias.col, coualias.colt(*) as alias.col from table where alias.col = alias.col group by alias.col(alias.col) - alias.col(replace(alias.col, alias.col, alias.col)) ) selealias.col cast(alias.col as varchar) as [alias.columber of alias.col oalias.col questioalias.col], cast(alias.col as varchar) as [alias.columber of questioalias.cols] from table ualias.colioalias.col all selealias.col cast((cast(sum(alias.col * alias.col) as decimal) / sum(alias.col)) as varchar), sum(alias.col) from table"
"declare alias.col datetime set alias.col = dateadd(day,alias.col,getdate()) select alias.col as alias.col, alias.col, alias.col from table u where alias.col < alias.col aalias.cold alias.col > alias.col aalias.cold alias.col alias.colot ialias.col (select alias.col from table b where b.alias.colame = alias.col) order by alias.col"
"selealias.col alias.col, coualias.colt(alias.col) from ( selealias.col cast( cast(alias.col(alias.col, alias.col) as varchar) + alias.col + cast(alias.col(alias.col, alias.col) as varchar) + alias.col as datetime) table, t.table from table p joialias.col table pt oalias.col alias.col = alias.col joialias.col table t oalias.col alias.col = alias.col where alias.col ialias.col ( selealias.col top alias.col alias.col from table order by coualias.colt desc ) ) as alias.col group by table, table order by table asc, table asc"
"select alias.col as alias.col, alias.col, alias.col, alias.col from table palias.col where alias.col >= alias.col aalias.cold alias.col >= alias.col aalias.cold parealias.coltalias.col is alias.colull aalias.cold acceptedaalias.colsweralias.col is alias.colull aalias.cold closeddate is alias.colull aalias.cold ( select coualias.colt(*) from table palias.col where palias.col.parealias.coltalias.col = palias.col.alias.col aalias.cold palias.col.alias.col > alias.col ) = alias.col order by alias.col desc, alias.col desc"
"select top alias.col alias.col as [post lialias.colk], creatioalias.coldate as alias.col, owalias.coleruseralias.col as [user lialias.colk] from table where posttypealias.col = alias.col aalias.cold acceptedaalias.colsweralias.col is alias.colull aalias.cold ( body like alias.col collate sql_latialias.colalias.col_gealias.coleral_cpalias.col_ci_as )"
select alias.col as alias.col from table c where alias.col like alias.col or alias.col like alias.col ... order by alias.col
"select top alias.col alias.col as [post lialias.colk], creatioalias.coldate from table where ( body like x or body like x or body like x )"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... order by alias.col desc;"
"with uptablebymoalias.colth as ( select alias.col (moalias.colth, datediff (moalias.colth, alias.col, v.creatioalias.coldate), alias.col) as [moalias.colth], coualias.colt (v.id) as table from table v joialias.col table p oalias.col (alias.col = alias.col) aalias.cold alias.col = alias.col where alias.col=alias.col group by alias.col (moalias.colth, datediff (moalias.colth, alias.col, v.creatioalias.coldate), alias.col) ), dowalias.coltablebymoalias.colth as ( select alias.col (moalias.colth, datediff (moalias.colth, alias.col, v.creatioalias.coldate), alias.col) as [moalias.colth], coualias.colt (v.id) as table from table v joialias.col table p oalias.col (alias.col = alias.col) aalias.cold alias.col = alias.col where alias.col=alias.col group by alias.col (moalias.colth, datediff (moalias.colth, alias.col, v.creatioalias.coldate), alias.col) ) select v.[moalias.colth], v.table+dv.table as alias.col, v.table as alias.col, dv.table as alias.col from uptablebymoalias.colth v joialias.col dowalias.coltablebymoalias.colth dv oalias.col v.[moalias.colth] = dv.[moalias.colth] order by v.[moalias.colth]"
"select alias.col(alias.col, alias.col(day, creationdate)), count(*) from table where alias.col like alias.col group by alias.col(day, creationdate)"
"select row_alias.columber() over (order by [peasaalias.colts] + alias.col desc), alias.col as [user lialias.colk], [peasaalias.colts], alias.col, [peasaalias.colts] + alias.col as [size of kialias.colgdom] from ( select alias.col, sum(case whealias.col tabletypeid = alias.col thealias.col alias.col else alias.col ealias.cold) as [peasaalias.colts], sum(case whealias.col tabletypeid = alias.col thealias.col alias.col else alias.col ealias.cold) as alias.col from table group by alias.col ) k order by [size of kialias.colgdom] desc"
"select top alias.col row_alias.columber() over(order by reputatioalias.col desc) as [#], id as [user lialias.colk], reputatioalias.col, locatioalias.col from table where lower(locatioalias.col) like x or upper(locatioalias.col) like x ... or locatioalias.col like x aalias.cold reputatioalias.col >= alias.col order by reputatioalias.col desc;"
"select alias.col as alias.col, coualias.colt(*) as dowalias.coltable from table p ialias.colalias.coler joialias.col table v oalias.col alias.col = alias.col where alias.col = alias.col:alias.col aalias.cold alias.col = alias.col group by alias.col order by dowalias.coltable desc"
"select top alias.col alias.col as tablecore, alias.col as [post lialias.colk] from table c where alias.col=alias.col order by tablecore desc"
"select coualias.colt(alias.col) from table q where posttypealias.col=alias.col aalias.cold alias.col(m, q.creatioalias.coldate, alias.col()) >= alias.col aalias.cold aalias.colswercoualias.colt >= alias.col aalias.cold viewcoualias.colt >= alias.col"
"select top alias.col alias.col as alias.col, u.displayalias.colame as [user alias.colame], u.reputatioalias.col as alias.col from table u where upper(u.locatioalias.col) like upper(alias.col + ##yourlocatioalias.col:strialias.colg## + alias.col)"
"select top alias.col owalias.coleruseralias.col as [user lialias.colk], alias.col, alias.col as [post lialias.colk] from table where owalias.coleruseralias.col ialias.col (select owalias.coleruseralias.col from table group by owalias.coleruseralias.col havialias.colg coualias.colt(*) = alias.col) aalias.cold posttypealias.col = alias.col aalias.cold alias.col <= alias.col aalias.cold body like x ... order by alias.col asc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], location, alias.col from table where lower(location) like lower(x) order by alias.col desc;"
"selealias.col alias.col, count(alias.col) from ( selealias.col cast( cast(alias.col(alias.col, alias.col) as varchar) + alias.col + cast(alias.col(alias.col, alias.col) as varchar) + alias.col as datetime) alias.col, alias.col from table p join table pt on alias.col = alias.col join table t on alias.col = alias.col where alias.col in (alias.colyz) ) as alias.col group by alias.col, alias.col order by alias.col asc, alias.col asc"
"select alias.col(hour,creationdate) as hour, count(case when alias.col = n then n end) as alias.col, count(case when alias.col = n then n end) as answers from table where alias.col in (alias.col) and alias.col=alias.col## group by alias.col(hour,creationdate) order by alias.col desc"
select alias.col from table where alias.col= alias.col
select coualias.colt(*) from table where database_id > alias.col aalias.cold ([alias.colame] alias.colot like alias.col or [alias.colame] = alias.col)
"select alias.col as alias.col, alias.col from table where name=alias.col"
"select top alias.col alias.col as [post lialias.colk], year(c.creatioalias.coldate) as year, moalias.colth(c.creatioalias.coldate) as moalias.colth, alias.col as body from table c, table p where ( alias.col like alias.col aalias.cold alias.col = alias.col aalias.cold alias.col=alias.col aalias.cold alias.col is alias.colull ) order by year, moalias.colth"
"declare alias.col ialias.colt = ##userid## select coualias.colt(alias.col) as alias.col, coualias.colt(alias.col) as alias.col from table valias.col, table valias.col, table p where alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold valias.col.postid = alias.col aalias.cold p.owalias.coleruserid = alias.col group by alias.col, alias.col"
"select top alias.col alias.col as [user lialias.colk], (alias.col + dowalias.colvotes) as alias.col, alias.col as alias.col, dowalias.colvotes alias.col from table where dowalias.colvotes > alias.col aalias.cold reputatioalias.col >= alias.col order by alias.col desc"
"select table.userid, table.name from table join table on (table.votetypeid = table.id) join table on (table.id = table.userid) where table.postid = alias.col##"
"select top alias.col alias.col as [user lialias.colk], (sum(coalesce(datalealias.colgth(alias.col),alias.col)) + sum(coalesce(datalealias.colgth(alias.col),alias.col))) as alias.col, u.reputatioalias.col, (sum(coalesce(datalealias.colgth(alias.col),alias.col)) + sum(coalesce(datalealias.colgth(alias.col),alias.col)))/u.reputatioalias.col as alias.col from table u, table p where p.owalias.coleruserid = alias.col aalias.cold u.reputatioalias.col > alias.col group by alias.col, u.reputatioalias.col order by alias.col desc"
"select top alias.col alias.col, alias.col as [post lialias.colk], year(p.creatioalias.coldate) as year, moalias.colth(p.creatioalias.coldate) as moalias.colth, alias.col as body, u.displayalias.colame as useralias.colame from table p, table u where ( alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold alias.col like alias.col ... aalias.cold p.owalias.coleruserid = alias.col aalias.cold alias.col is alias.colull)"
"declare table table (alias.col nvarchar(n) collate sql_latinn_general_cpn_cs_as not null) insert into table values (alias.colyz) selealias.col alias.col, count(alias.col) from ( selealias.col cast( cast(alias.col(alias.col, alias.col) as varchar) + alias.col + cast(alias.col(alias.col, alias.col) as varchar) + alias.col as datetime) alias.col, alias.col from table p inner join table pt on alias.col = alias.col inner join table t on alias.col = alias.col inner join table tl on alias.col like alias.col + alias.col + alias.col ) as alias.col group by alias.col, alias.col having count(alias.col) > n order by alias.col asc, alias.col asc"
select top alias.col alias.col from table p ialias.colalias.coler joialias.col table t oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold p.commualias.colityowalias.coleddate is alias.colull aalias.cold t.tagid = alias.col order by alias.col desc
select coualias.colt(*) from table q where (alias.col = alias.col)
"select top alias.col talias.col.tagalias.colame as alias.col, coualias.colt(ptalias.col.postid) as [post coualias.colt] from table ptalias.col joialias.col table ptalias.col oalias.col ptalias.col.postid = ptalias.col.postid joialias.col table talias.col oalias.col talias.col.tagalias.colame like ##tagalias.colame:strialias.colg## aalias.cold talias.col.id = ptalias.col.tagid joialias.col table talias.col oalias.col talias.col.id = ptalias.col.tagid where talias.col.tagalias.colame <> talias.col.tagalias.colame group by talias.col.tagalias.colame, talias.col.tagalias.colame order by coualias.colt(ptalias.col.postid) desc"
"declare @UserId int = ##UserId##; select pt.TagId, SUM(a.Score) from posts a join posts p on p.Id = a.ParentId join postTags pt on pt.PostId = p.Id where a.OwnerUserId=@UserId group by pt.TagId order by N desc"
"DECLARE @ultimo_anio int = YEAR(GETDATE()); DECLARE @ultimo_mes int = MONTH(GETDATE()); DECLARE @anio int = ##Anio?@ultimo_anio##; DECLARE @mes int = ##Mes?@ultimo_mes##; DECLARE @anio_mes VARCHAR(N); SET @anio_mes = CONCAT(@anio,RIGHT(X+CONVERT(VARCHAR(N),@mes),N)); WITH Answers AS ( SELECT ParentId AS Id, max(Score) AS Score FROM Posts WHERE PostTypeId = N GROUP BY ParentId ) SELECT TOP N format(Q.CreationDate,X) X, CONCAT(X,Q.Id,X,Q.Title) Pregunta, Q.AnswerCount X, Q.Score X, A.Score X FROM Posts Q LEFT OUTER JOIN Answers A ON Q.Id = A.Id WHERE N=N and ParentId is null and Q.CreationDate >= DATEADD(DAY,N,DATEADD(MONTH,N,@anio_mes+X)) and Q.CreationDate < @anio_mes + X ORDER BY N DESC, N DESC, N DESC, N DESC, Q.Title ASC ;"
"select top alias.col alias.col, displayalias.colame, reputatioalias.col, alias.col, locatioalias.col from table where locatioalias.col like alias.colx or locatioalias.col like alias.colx or locatioalias.col like alias.colx or locatioalias.col like alias.colx or (locatioalias.col like alias.colx aalias.cold locatioalias.col alias.colot like alias.colx aalias.cold locatioalias.col alias.colot like alias.colx aalias.cold locatioalias.col alias.colot like alias.colx aalias.cold locatioalias.col alias.colot like alias.colx) order by reputatioalias.col desc"
selealias.col (selealias.col cast(count(*) as float) from table )/ (selealias.col cast(count(*) as float) from table ) as [proportion of table with imgur in] ;
"select top alias.col row_alias.columber() over(order by reputatioalias.col desc) as [#], id as [user lialias.colk], reputatioalias.col, locatioalias.col from table where lower(locatioalias.col) like x or upper(locatioalias.col) like x ... or locatioalias.col like x aalias.cold reputatioalias.col >= alias.col order by reputatioalias.col desc;"
"selealias.col top(alias.col) alias.col, displayalias.colame, alias.col, reputatioalias.col, creatioalias.coldate, lastaccessdate, alias.col + cast(alias.col as varchar) as alias.col from table where alias.col <alias.col aalias.cold reputatioalias.col > alias.col order by creatioalias.coldate, reputatioalias.col desc ,alias.col;"
select alias.col from table where lower(alias.col) like alias.col;
"select table.id, table.score , table.tags, table.body from table where (table.score > alias.col) aalias.cold (table.tags like alias.col) order by table.score desc"
"selealias.col alias.col as alias.col, (cast(alias.col as decimal)/cast(alias.col as decimal)) as alias.col, alias.col, alias.col, alias.col from table as q ialias.colalias.coler joialias.col table as a oalias.col alias.col = alias.col where alias.col > alias.col aalias.cold alias.col = alias.col aalias.cold a.owalias.coleruserid = alias.col## order by alias.col desc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... order by alias.col desc;"
"select top alias.col alias.col as [post lialias.colk], alias.col, viewcoualias.colt as views, favoritecoualias.colt as favs, roualias.cold(alias.col+favoritecoualias.colt+viewcoualias.colt/alias.col,alias.col) as alias.col from table where (alias.col >= alias.col or favoritecoualias.colt >=alias.col) aalias.cold parealias.coltalias.col is alias.colull aalias.cold acceptedaalias.colsweralias.col is alias.colull order by alias.col desc, viewcoualias.colt desc"
"select distialias.colct alias.col, alias.col as [post lialias.colk], p.score, tealias.colt from table as c, table as p where tealias.colt like alias.col aalias.cold alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold alias.col is alias.colull"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or lower(location) like x ... order by alias.col desc;"
"select top alias.col alias.col as [post lialias.colk], alias.col, alias.col, alias.col+coalias.colvert(alias.colchar,alias.col) owalias.coleruseralias.col, approvaldate, rejectioalias.coldate, commealias.colt from table order by creatioalias.coldate desc"
"declare alias.col int = ##alias.collimit## select alias.col as alias.col, alias.col, alias.col from table where alias.col > alias.col and ealias.colists (select alias.col from table b where b.useralias.col = table.alias.col and alias.col = alias.col) order by alias.col desc"
"declare @temp table (TagId int, TagName char(N), OwnerUserId int, DisplayName nvarchar(N), Score int); declare @tagsId int declare CustList cursor for select top N tagid from posttags group by tagid order by count(*) desc OPEN CustList FETCH NEXT FROM CustList INTO @tagsId WHILE @@FETCH_STATUS = N BEGIN insert @temp (TagId, TagName, OwnerUserId, DisplayName, Score) select top N @tagsId as TagId, t.TagName, p.OwnerUserId as UsersId, u.DisplayName, sum(p.Score) as Score from PostTags pt, Posts p, Users u, Tags t where pt.TagId = @tagsId and pt.PostId=p.ParentId and p.OwnerUserId=u.id and pt.TagId=t.id group by u.DisplayName, p.OwnerUserId, t.TagName order by sum(p.Score) desc FETCH NEXT FROM CustList INTO @tagsId END CLOSE CustList DEALLOCATE CustList select * from @temp"
"declare alias.col ialias.colt = ##userid## declare @badgealias.col ialias.colt = alias.col declare @badgealias.col ialias.colt = alias.col declare @badgealias.col ialias.colt = alias.col declare @edittitle ialias.colt = alias.col declare @editbody ialias.colt = alias.col declare @postdelete ialias.colt = alias.col declare alias.col ialias.colt = alias.col declare alias.col ialias.colt select alias.col = coualias.colt(distialias.colct h.revisioalias.colguid) from table p joialias.col table h oalias.col alias.col = alias.col where alias.col != alias.col aalias.cold alias.col = alias.col aalias.cold h.tabletypeid ialias.col (alias.col) aalias.cold (select sum(case halias.col.tabletypeid whealias.col alias.col thealias.col alias.col whealias.col @postdelete thealias.col alias.col else alias.col ealias.cold) from table halias.col where alias.col = alias.col) >= alias.col declare @ualias.coltilbadgealias.col ialias.colt = case whealias.col (@badgealias.col - alias.col) < alias.col thealias.col alias.col else @badgealias.col - alias.col ealias.cold declare @ualias.coltilbadgealias.col ialias.colt = case whealias.col (@badgealias.col - alias.col) < alias.col thealias.col alias.col else @badgealias.col - alias.col ealias.cold declare @ualias.coltilbadgealias.col ialias.colt = case whealias.col (@badgealias.col - alias.col) < alias.col thealias.col alias.col else @badgealias.col - alias.col ealias.cold select alias.col as [user lialias.colk], alias.col as alias.col, @ualias.coltilbadgealias.col as alias.col, @ualias.coltilbadgealias.col as alias.col, @ualias.coltilbadgealias.col as alias.col"
"selealias.col alias.col, coualias.colt(alias.col), coualias.colt(alias.col)/alias.col from ( selealias.col cast( cast(alias.col(alias.col, creatioalias.coldate) as varchar) + alias.col + cast(alias.col(alias.col, creatioalias.coldate) as varchar) + alias.col as datetime) [moalias.colth], t.tagalias.colame from table p joialias.col table pt oalias.col alias.col = alias.col joialias.col table t oalias.col alias.col = alias.col where alias.col ialias.col ( selealias.col alias.col from table where tagalias.colame = ##tagalias.colame## ) ) as alias.col group by tagalias.colame, [moalias.colth] order by [moalias.colth] asc, tagalias.colame asc"
"select alias.col, alias.col from table t cross apply ( select sum(alias.col) as alias.col, sum(alias.col) as alias.col, sum(alias.col * alias.col / alias.col) as alias.col from posttable pt joialias.col table palias.col oalias.col alias.col = alias.col aalias.cold alias.col = alias.col cross apply ( select coalesce(sum(alias.col), alias.col) as alias.col from table pa where pa.parealias.coltid = alias.col ) alias.col where alias.col = alias.col ) alias.col where coualias.colt >= alias.col order by alias.col desc"
"select top alias.col alias.col as [post lialias.colk], alias.col, p.viewcoualias.colt from table p joialias.col table pt oalias.col alias.col = alias.col joialias.col table t oalias.col alias.col = alias.col where t.tagalias.colame like alias.col aalias.cold alias.col > alias.col aalias.cold p.viewcoualias.colt <> alias.col aalias.cold p.parealias.coltid is alias.colull aalias.cold p.acceptedaalias.colswerid is alias.colull order by viewcoualias.colt asc"
"select top alias.col alias.col*dowalias.colvotes/(alias.col+dowalias.colvotes) as percealias.coltage, alias.col, dowalias.colvotes, alias.col as [user lialias.colk] from table where alias.col > alias.col aalias.cold dowalias.colvotes + alias.col > alias.col order by percealias.coltage desc"
"selealias.col un.emailhash, count(alias.col) as alias.col, (selealias.col cast(alias.col as varchar) + alias.col + alias.col + alias.col from table un where un.emailhash = un.emailhash for alias.colml path (alias.col)) as idsandnames from table un where un.emailhash is not null and alias.col like alias.col ... group by un.emailhash having count(alias.col) > n order by alias.col desc"
"alias.coleclare alias.col alias.colatetime, alias.col float, @tag varchar(alias.col) = x select alias.col = alias.col(alias.col, alias.col, max(creatioalias.colalias.colate)) from table select alias.col = coualias.colt(*) from table where creatioalias.colalias.colate > alias.col aalias.colalias.col posttypeialias.col = alias.col aalias.colalias.col ialias.col ialias.col (alias.col) hour ,alias.colatealias.colame(alias.colw, creatioalias.colalias.colate) alias.colay ,coualias.colt(*) table ,coalias.colvert(varchar(alias.col), roualias.colalias.col((coualias.colt(*) / alias.col) * alias.col, alias.col)) + x pct from table where creatioalias.colalias.colate > alias.col aalias.colalias.col posttypeialias.col = alias.col aalias.colalias.col ialias.col ialias.col (alias.col), alias.colatepart(alias.col, creatioalias.colalias.colate), alias.colatealias.colame(alias.colw, creatioalias.colalias.colate) oralias.coler by alias.colatepart(alias.colw, creatioalias.colalias.colate), alias.colatepart(alias.col, creatioalias.colalias.colate)"
select alias.col alias.col from table where posttypealias.col = alias.col aalias.cold body like x
"select alias.col alias.col, coualias.colt(distialias.colct postid) x from table v joialias.col table p oalias.col alias.col=alias.col where alias.col=alias.col aalias.cold alias.col is alias.colot alias.colull aalias.cold alias.col<>alias.col group by alias.col havialias.colg coualias.colt(distialias.colct postid) > alias.col order by coualias.colt(distialias.colct postid) desc"
"declare alias.col ialias.colt = ##topx:ialias.colt?alias.col## select top (alias.col) (case whealias.col alias.col is alias.colot alias.colull thealias.col x + cast(alias.col as alias.colvarchar) + x else x ealias.cold) + coalesalias.col(alias.userdisplayalias.colame, table.displayalias.colame) as [user lialias.colk], coualias.colt (distialias.colct alias.col) as alias.col, (case whealias.col coualias.colt (distialias.colct alias.col) >= alias.col thealias.col x + cast(alias.col as alias.colvarchar) + alias.colx else x + cast(alias.col as alias.colvarchar) + alias.colx ealias.cold) as [badge] from table as alias left outer joialias.col table as p oalias.col alias.col = alias.col left outer joialias.col table oalias.col alias.col = table.id where alias.col = alias.col aalias.cold lealias.col(alias.col(alias.col)) > alias.col group by alias.col, alias.userdisplayalias.colame, table.displayalias.colame order by alias.col desc, alias.userdisplayalias.colame, table.displayalias.colame"
"select top alias.col alias.col as [user lialias.colk], displayalias.colame, reputatioalias.col, alias.col, locatioalias.col from table where locatioalias.col like alias.colx order by reputatioalias.col desc"
"selealias.col top alias.col table.id as [user lialias.colk], coualias.colt(table.id) as aalias.colswers, cast(avg(cast(alias.col as float)) as alias.columeric(alias.col,alias.col)) as [average aalias.colswer alias.col] from table ialias.colalias.coler joialias.col table oalias.col table.id = owalias.coleruserid where alias.col = alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold closeddate is alias.colull group by table.id, displayalias.colame havialias.colg coualias.colt(table.id) > alias.col order by [average aalias.colswer alias.col] desc"
"set alias.colocoualias.colt oalias.col declare @tabletats table (alias.col ialias.colt, alias.col ialias.colt, dowalias.col ialias.colt) ialias.colsert @tabletats select alias.col, alias.col = sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold), dowalias.col = sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) from table where alias.col ialias.col (alias.col) groalias.col by alias.col set alias.colocoualias.colt off ;with pc as( select year(creatioalias.coldate) as postyear,moalias.colth(creatioalias.coldate) as postmoalias.colth, coualias.colt(p.id) as alias.colewquestioalias.cols from posts p joialias.col posttypes pt oalias.col p.posttypeid = pt.id joialias.col posttags ptg oalias.col ptg.alias.col = p.id joialias.col tags t oalias.col t.id = ptg.tagid where pt.alias.colame = x aalias.cold p.closeddate is alias.colull groalias.col by year(creatioalias.coldate),moalias.colth(creatioalias.coldate)), badpc as ( select year(creatioalias.coldate) as postyear,moalias.colth(creatioalias.coldate) as postmoalias.colth, coualias.colt(p.id) as badquestioalias.cols from @tabletats joialias.col posts p oalias.col alias.col = p.id joialias.col posttypes pt oalias.col p.posttypeid = pt.id where (dowalias.col > (alias.col * alias.col.alias.col) or dowalias.col > alias.col) aalias.cold p.commualias.colityowalias.coleddate is alias.colull aalias.cold p.closeddate is alias.colull aalias.cold pt.alias.colame = x groalias.col by year(creatioalias.coldate),moalias.colth(creatioalias.coldate)) select pc.*, badpc.badquestioalias.cols, roualias.cold(alias.col*cast(badquestioalias.cols as decimal(alias.col,alias.col))/cast(alias.colewquestioalias.cols as decimal(alias.col,alias.col)),alias.col)as peralias.colalias.coltbad from pc joialias.col badpc oalias.col pc.postyear = badpc.postyear aalias.cold pc.postmoalias.colth = badpc.postmoalias.colth order by alias.col,alias.col"
"declare @UserId int = ##UserId##; with fights as ( select myAnswer.ParentId as Question, myAnswer.Score as MyScore, jonsAnswer.Score as JonsScore from Posts as myAnswer inner join Posts as jonsAnswer on jonsAnswer.OwnerUserId = N and myAnswer.ParentId = jonsAnswer.ParentId where myAnswer.ownerUserId = @UserId and myAnswer.postTypeId = N ) select case when myScore > JonsScore then X when myScore < JonsScore then X else X end as X, Question as [Post Link], myScore as X, jonsScore as X from fights;"
"select top alias.col alias.col as [user lialias.colk], alias.col as alias.col, dowalias.colvotes [dowalias.col votes], alias.col - dowalias.colvotes as [alias.colet votes] from table where dowalias.colvotes > alias.col order by [alias.colet votes] asc"
"select distialias.colct alias.col as [post lialias.colk], alias.col from table pl where alias.col=alias.col aalias.cold (alias.col = alias.col or alias.col = alias.col)"
"declare @alias.col ialias.colt = ##alias.col## select top alias.col alias.col as [post lialias.colk], creatioalias.coldate, alias.col, alias.col from table c where alias.col = @alias.col order by c.creatioalias.coldate desc"
"set alias.colocoualias.colt oalias.col declare @tabletats table (alias.col ialias.colt, alias.col ialias.colt, dowalias.col ialias.colt) ialias.colsert @tabletats select alias.col, alias.col = sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold), dowalias.col = sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) from table where alias.col ialias.col (alias.col) aalias.cold creatioalias.coldate > alias.col groalias.col by alias.col set alias.colocoualias.colt off select top alias.col alias.col as [post lialias.colk] , alias.col, dowalias.col from @tabletats joialias.col table p oalias.col alias.col = alias.col where dowalias.col > alias.col aalias.cold p.commualias.colityowalias.coleddate is alias.colull aalias.cold p.closeddate is alias.colull order by creatioalias.coldate desc"
"selealias.col table.id as alias.col, table.displayalias.colame, coualias.colt(table.id) as alias.columtable, sum(table.score) as alias.col, avg(cast(table.score as float)) as alias.col, alias.col(table.score) as alias.col from table ialias.colalias.coler joialias.col table oalias.col table.owalias.coleruserid = table.id where table.posttypeid = alias.col aalias.cold table.parealias.coltid ialias.col (alias.col) >= alias.col aalias.cold avg(table.score) >=alias.col order by alias.col desc"
"select top alias.col alias.col, displayalias.colame, reputatioalias.col, alias.col, locatioalias.col from table where locatioalias.col like alias.colx order by reputatioalias.col desc"
"declare @location varchar(n) = ##location:string## select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col, location from table where lower(location) like (x + lower(@location) + x) and alias.col >= n order by alias.col desc"
"select alias.col, alias.col, alias.col, coualias.colt(alias.col) from table where posttypealias.col = alias.col group by alias.col, alias.col, alias.col havialias.colg lealias.col(alias.col) - lealias.col(replace(alias.col, x, x)) + alias.col > alias.col order by coualias.colt(alias.col) desc"
"select row_number() over (order by alias.col desc) as rank, id, displayname, alias.col, location from table where location like x order by alias.col desc"
"select alias.col, count from table where count < n order by count asc"
"select alias.col, table.count from table where alias.col like alias.col group by alias.col, table.count"
"declare @UserId int = ##UserId:int##; select HisVote.UserId [User Link], count(*) [Common Favorites] from Votes HisVote join Votes MyVote on HisVote.PostId = MyVote.PostId where HisVote.UserId <> @UserId and MyVote.UserId = @UserId and HisVote.VoteTypeId = N and MyVote.VoteTypeId = N group by HisVote.UserId order by count(*) desc;"
"select top alias.col alias.col as [post lialias.colk], alias.col, viewcoualias.colt from table where alias.col > alias.col aalias.cold viewcoualias.colt <> alias.col aalias.cold parealias.coltalias.col is alias.colull aalias.cold acceptedaalias.colsweralias.col is alias.colull order by viewcoualias.colt - alias.col desc"
"select alias.col , alias.col alias.col , alias.col , owalias.coleruseralias.col alias.col , alias.col(body) [post alias.colgth] , creatioalias.coldate alias.col from table where alias.col = alias.col aalias.cold alias.col is alias.colull aalias.cold posttypealias.col = alias.col aalias.cold creatioalias.coldate < dateadd(moalias.colth, alias.col, getdate()) order by alias.col asc"
"select top alias.col table.id as [user lialias.colk], table.reputatioalias.col, table.reputatioalias.col / alias.colullif(sum(lealias.col(table.body)),alias.col) as alias.col from table ialias.colalias.coler joialias.col table oalias.col table.owalias.coleruserid = table.id group by table.id, table.reputatioalias.col order by alias.col desc"
"select top alias.col row_alias.columber() over(order by reputatioalias.col desc) as [#], id as [user lialias.colk], reputatioalias.col, locatioalias.col from table where lower(locatioalias.col) like x or upper(locatioalias.col) like x ... or locatioalias.col like x aalias.cold reputatioalias.col >= alias.col order by reputatioalias.col desc;"
"create table table ( site nvarchar(n) , uid int , creationdate datetime , aid int); create index #idx_results_aid on table (aid asc); declare @sql nvarchar(max) = x select @sql = @sql + iif( len(@sql) > n , x , x ) + nxx + name + xx + quotename(name) + x from sys.databases where database_id > n and (name not like x or name = x) and not name = x exec (@sql) delete from table where aid in (xyz) over (partition by aid, creationdate order by creationdate) as rnk , creationdate , aid from table drop table table"
declare table table (alias.col ialias.colt alias.colot alias.colull) ialias.colsert ialias.colto table select alias.col from table where alias.col ialias.col (alias.col) select coualias.colt(*) from table p where p.posttypealias.col = alias.col aalias.cold ( select coualias.colt(*) from posttable pt where pt.postalias.col = p.alias.col aalias.cold pt.tagalias.col ialias.col (select alias.col from table) ) = alias.col
"declare @subjectalias.col ialias.colt = ##alias.col## select top alias.col row_alias.columber() over (order by table.score desc) as x, table.postid as [post lialias.colk], table.alias.col as [user lialias.colk], table.score, table.text from table where alias.col = @subjectalias.col order by table.score desc"
select top alias.col alias.col from table p where p.parealias.coltid = alias.col order by alias.col desc
"select alias.col as alias.col, alias.col from table p where alias.col = alias.col## aalias.cold alias.col != alias.col order by alias.col desc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x order by alias.col desc;"
"declare @alias.col int = ##alias.col## select text, alias.col from table where alias.col = @alias.col order by alias.col desc"
declare alias.col int = n declare alias.col int = n select alias.col as alias.col from table as a inner join table as q on alias.col = alias.col where alias.col = alias.col and alias.col = alias.col and alias.col = alias.col## and alias.col is null and q.answercount > n and a.score > (select max(alias.col) from table as s where alias.col != alias.col and alias.col = alias.col) select @@rowcount as alias.col
"CREATE TABLE #t ( ID INT PRIMARY KEY, [set] INT, status CHAR(N), message CHAR(N) ) INSERT #t VALUES (XYZ) ,(N, N, X, NULL) ,(N, N, NULL, NULL) ,(N, N, X, NULL) ,(N, N, NULL, NULL) ,(N, N, NULL, NULL) ;WITH s AS ( SELECT [set] ,(X + CAST (#t.ID AS char)) AS status FROM #t WHERE status = X ) UPDATE #t SET status = (SELECT X FROM s WHERE s.[set] = #t.[set]) ,message = (SELECT s.status FROM s WHERE s.[set] = #t.[set]) WHERE status IS NULL SELECT * FROM #t;"
"select top alias.col lower(alias.col) as alias.col, coualias.colt(alias.col) as alias.col, maalias.col(lasteditdate) as alias.col, maalias.col(alias.col) as [post lialias.colk] from table where posttypealias.col = alias.col group by lower(alias.col) order by coualias.colt(alias.col) desc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... order by alias.col desc;"
"select top alias.col alias.col as [post lialias.colk], alias.col, creatioalias.coldate from table where aalias.colswercoualias.colt = alias.col aalias.cold parealias.coltalias.col is alias.colull order by alias.col desc"
"select count(distinct alias.col) as [count], case when rejectiondate is not null then x when approvaldate is not null then x else x end as [action] from table se, table v where alias.col = alias.col## and alias.col = alias.col group by case when rejectiondate is not null then x when approvaldate is not null then x else x end"
"select alias.col as alias.col, alias.col from table as palias.col where alias.col = alias.col aalias.cold palias.col.owalias.coleruserid = alias.col## aalias.cold alias.col > alias.col"
"select top alias.col row_alias.columber() over(order by reputatioalias.col desc) as [#], id as [user lialias.colk], reputatioalias.col, locatioalias.col from table where lower(locatioalias.col) like x order by reputatioalias.col desc;"
"with table as alias select alias.col from table where owalias.coleruseralias.col = ##useralias.col## aalias.cold alias.col is alias.colull aalias.cold posttypealias.col = alias.col), myaalias.colswertable as alias select sumalias case whealias.col v.votetypealias.col = alias.col thealias.col alias.col whealias.col v.votetypealias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as x, creatioalias.coldate from table v ialias.colalias.coler joialias.col table a oalias.col a.alias.col = v.postalias.col group by creatioalias.coldate) select top alias.col alias.col from myaalias.colswertable order by creatioalias.coldate desc"
"select top alias.col alias.col as [post lialias.colk], alias.col, a.creatioalias.coldate from table as a ialias.colalias.coler joialias.col table as q oalias.col a.parealias.coltid = alias.col ialias.colalias.coler joialias.col table as ph oalias.col alias.col = alias.col where ph.tabletypeid != alias.col aalias.cold alias.col > alias.col aalias.cold alias.col < alias.col group by alias.col, alias.col, a.creatioalias.coldate order by alias.col, a.creatioalias.coldate desc"
"select top alias.col displayalias.colame, alias.col from table where alias.col is alias.colot alias.colull order by alias.col asc"
"selealias.col top alias.col alias.col as [post lialias.colk], alias.col as alias.col, favoritecoualias.colt as alias.col, viewcoualias.colt as alias.col, cast(alias.col.alias.col * viewcoualias.colt / alias.col as decimal(alias.col, alias.col)) as alias.col from table where posttypealias.col = alias.col aalias.cold alias.col > alias.col aalias.cold viewcoualias.colt > alias.col order by alias.col asc"
"select top alias.col alias.col, alias.col as [post lialias.colk], p.viewcoualias.colt, p.table, alias.col(day, p.creatioalias.coldate, getutcdate()) as daysold from table p, table pt, table t where alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold t.tagalias.colame = alias.col"
"declare alias.col datetime declare alias.col datetime set alias.col = coalias.colvert( datetime, x, alias.col ) set alias.col = coalias.colvert( datetime, x, alias.col ) select top alias.col alias.col, a.creatioalias.coldate, avg(abs(alias.col(mialias.colute, b.creatioalias.coldate, a.creatioalias.coldate))) from table a, table b where b.parealias.coltid = alias.col aalias.cold a.creatioalias.coldate <= alias.col aalias.cold a.creatioalias.coldate >= alias.col group by alias.col, a.creatioalias.coldate, b.creatioalias.coldate"
"select alias.col alias.col, coualias.colt(distialias.colct alias.col) from table joialias.col table p oalias.col alias.col = alias.col where tabletypeid ialias.col (alias.col) aalias.cold alias.col ialias.col (alias.col) aalias.cold alias.col <> alias.col group by alias.col havialias.colg coualias.colt(distialias.colct alias.col) > alias.col order by coualias.colt(distialias.colct alias.col) desc"
"select top alias.col alias.col as [post lialias.colk], favoritecoualias.colt, viewcoualias.colt, alias.col from table where alias.col like alias.col aalias.cold alias.col like alias.col order by favoritecoualias.colt desc"
select top alias.col alias.col alias.col from table a left joialias.col table q oalias.col (a.parealias.coltid = alias.col) where alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold alias.col = q.acceptedaalias.colswerid aalias.cold a.creatioalias.coldate <= (select mialias.col(creatioalias.coldate) from table where parealias.coltid = a.parealias.coltid)
"select table.name, table.id as alias.col, table.alias.col as alias.col, table.creationdate from table inner join table on table.posttypeid = table.id left join table as parenttable on table.parentid = parenttable.id where table.posttypeid in (alias.col) and table.closeddate is null and parenttable.closeddate is null and not (table.communityowneddate is null) and (parenttable.communityowneddate is null) and table.owneruserid = ##userid## order by table.creationdate"
"alias.colelect aliaalias.col.col(year, a.creatioaliaalias.col.coldate) aalias.col [year], coualiaalias.col.colt(*) aalias.col totaltable, alias.colum(caalias.cole whealiaalias.col.col a.alias.colcore < aliaalias.col.col thealiaalias.col.col aliaalias.col.col elalias.cole aliaalias.col.col ealiaalias.col.cold) aalias.col maliaalias.col.colorlealias.colalias.col, alias.colum(caalias.cole whealiaalias.col.col a.alias.colcore < aliaalias.col.col aaliaalias.col.cold a.alias.colcore > aliaalias.col.col thealiaalias.col.col aliaalias.col.col elalias.cole aliaalias.col.col ealiaalias.col.cold) aalias.col maliaalias.col.coltomaliaalias.col.col, alias.colum(caalias.cole whealiaalias.col.col a.alias.colcore < aliaalias.col.col aaliaalias.col.cold a.alias.colcore > aliaalias.col.col thealiaalias.col.col aliaalias.col.col elalias.cole aliaalias.col.col ealiaalias.col.cold) aalias.col maliaalias.col.coltomaliaalias.col.col, alias.colum(caalias.cole whealiaalias.col.col a.alias.colcore < aliaalias.col.col aaliaalias.col.cold a.alias.colcore > aliaalias.col.col thealiaalias.col.col aliaalias.col.col elalias.cole aliaalias.col.col ealiaalias.col.cold) aalias.col maliaalias.col.coltomaliaalias.col.col, alias.colum(caalias.cole whealiaalias.col.col a.alias.colcore = aliaalias.col.col thealiaalias.col.col aliaalias.col.col elalias.cole aliaalias.col.col ealiaalias.col.cold) aalias.col paliaalias.col.col, alias.colum(caalias.cole whealiaalias.col.col a.alias.colcore > aliaalias.col.col aaliaalias.col.cold a.alias.colcore < aliaalias.col.col thealiaalias.col.col aliaalias.col.col elalias.cole aliaalias.col.col ealiaalias.col.cold) aalias.col paliaalias.col.coltopaliaalias.col.col, alias.colum(caalias.cole whealiaalias.col.col a.alias.colcore > aliaalias.col.col aaliaalias.col.cold a.alias.colcore < aliaalias.col.col thealiaalias.col.col aliaalias.col.col elalias.cole aliaalias.col.col ealiaalias.col.cold) aalias.col paliaalias.col.coltopaliaalias.col.col, alias.colum(caalias.cole whealiaalias.col.col a.alias.colcore > aliaalias.col.col aaliaalias.col.cold a.alias.colcore < aliaalias.col.col thealiaalias.col.col aliaalias.col.col elalias.cole aliaalias.col.col ealiaalias.col.cold) aalias.col paliaalias.col.coltopaliaalias.col.col, alias.colum(caalias.cole whealiaalias.col.col a.alias.colcore > aliaalias.col.col thealiaalias.col.col aliaalias.col.col elalias.cole aliaalias.col.col ealiaalias.col.cold) aalias.col paliaalias.col.colormore from table q ialiaalias.col.colaliaalias.col.coler joialiaalias.col.col table a oaliaalias.col.col aliaalias.col.col = aliaalias.col.col where aliaalias.col.col = aliaalias.col.col aaliaalias.col.cold aliaalias.col.col = aliaalias.col.col aaliaalias.col.cold aliaalias.col.col(alias.col, q.creatioaliaalias.col.coldate, a.creatioaliaalias.col.coldate) <= ##alias.colecoaliaalias.col.coldalias.coltoaaliaalias.col.colalias.colwer## aaliaalias.col.cold q.owaliaalias.col.colerualias.colerid <> a.owaliaalias.col.colerualias.colerid group by aliaalias.col.col(year, a.creatioaliaalias.col.coldate) order by aliaalias.col.col(year, a.creatioaliaalias.col.coldate) dealias.colc"
"Declare @nyear int, @nmonth int, @nweek varchar; SELECT DATENAME(year, @nyear) AS X; SELECT DATENAME(month, @nmonth) AS X; SELECT DATENAME(week, @nweek) AS X; Select @nyear = DatePart(week, p.CreationDate), @nmonth = DatePart(week, p.CreationDate), @nweek = DatePart(week, p.CreationDate) from Posts p join Posts pN on pN.ParentId = p.Id join PostTags pt on pt.PostId = p.Id join Tags t on t.Id = pt.TagId where t.TagName = ##Tag:string##"
"declare @tagname char(n) set @tagname = alias.col + ##tagname:string## + alias.col select alias.col as alias.col, alias.col from table where alias.col like alias.col"
"set alias.colocoualias.colt oalias.col declare alias.col datetime select alias.col = max(alias.col) from table declare @igalias.coloredays alias.columeric = alias.col declare @mialias.colagedays alias.columeric = @igalias.coloredays * alias.col declare alias.col ialias.colt = ##userid## declare @tabletats table (alias.col ialias.colt, alias.col ialias.colt, dowalias.col ialias.colt, alias.col datetime) ialias.colsert @tabletats select alias.col, alias.col = sum(case whealias.col alias.col = alias.col thealias.col case whealias.col p.parealias.coltid is alias.colull thealias.col alias.col else alias.col ealias.cold else alias.col ealias.cold), dowalias.col = sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold), p.alias.col from table v joialias.col table p oalias.col alias.col = alias.col where v.alias.col ialias.col (alias.col) aalias.cold owalias.coleruserid = alias.col aalias.cold p.commualias.colityowalias.coleddate is alias.colull aalias.cold alias.col(day, p.alias.col, v.alias.col) > @igalias.coloredays aalias.cold alias.col(day, p.alias.col, alias.col) > @mialias.colagedays groalias.col by alias.col, p.alias.col, p.parealias.coltid set alias.colocoualias.colt off select top alias.col alias.col as [post lialias.colk], coalias.colvert(decimal(alias.col,alias.col), alias.col - dowalias.col)/(alias.col(day, vs.alias.col, alias.col) - @igalias.coloredays) as [passive rep per day], (alias.col - dowalias.col) as [passive rep], alias.col as [passive alias.col reputatioalias.col], dowalias.col as [passive dowalias.col reputatioalias.col], alias.col(day, vs.alias.col, alias.col) - @igalias.coloredays as [days coualias.colted] from @tabletats vs order by [passive rep per day] desc"
select count(alias.col) from table v inner join table p on alias.col = alias.col where alias.col = alias.col## and alias.col = alias.col##
"DECLARE @yourtable table (colN int, colN decimal(N, N)) ; INSERT INTO @yourtable (colN, colN) VALUES (XYZ), (N, N.N), (N, N.N), (N, N.N), (N, N.N), (N, N.N), (N, N.N), (N, N.N), (N, N.N), (N, N.N), (N, N.N), (N, N.N), (N, N.N), (N, N.N), (N, N.N) ; SELECT tN.* FROM @yourtable AS tN INNER JOIN ( SELECT colN, AVG(colN) colNavg FROM @yourtable GROUP BY colN ) AS tN ON tN.colN - N = tN.colN AND tN.colN < tN.colNavg"
"select alias.col as alias.col, alias.col as alias.col, alias.col as alias.col from table questioalias.col joialias.col table aalias.colswer oalias.col alias.col = alias.col where alias.col < alias.col aalias.cold alias.col > alias.col order by alias.col asc, alias.col desc"
"selealias.col sum(alias.col) as alias.col, un.emailhash, count(alias.col) as alias.col, (selealias.col cast(alias.col as varchar) + alias.col + alias.col + alias.col + cast(alias.col as varchar) + alias.col from table un where un.emailhash = un.emailhash order by alias.col desc for alias.colml path (alias.col) ) as idsnamerep from table un where un.emailhash is not null group by un.emailhash having count(alias.col) > n order by alias.col desc"
"declare @startdt datetime create table table (monthyear datetime, totalcount integer, lowquality integer, neutralquality integer,goodquality integer, hightquality integer, veryhighquality integer,); set @startdt = x while @startdt < x begin insert into table select @startdt, count(*), sum(case when posts.score < n then n else n end), sum(case when posts.score = n then n else n end), sum(case when posts.score between n and n then n else n end), sum(case when posts.score between n and n then n else n end), sum(case when posts.score > n then n else n end) from posts where posts.posttypeid = n and posts.creationdate >= @startdt and posts.creationdate <= dateadd(month,n,@startdt) and owneruserid > n set @startdt = dateadd(month,n,@startdt) end select * from table"
select alias.col from table where alias.col = alias.col
"selealias.col alias.col(alias.col, alias.col) as alias.col, coualias.colt(alias.col) as alias.col, avg(cast(alias.col(alias.col, alias.col, closealias.colate) as alias.columeric)) as alias.col from table where posttypealias.col = alias.col aalias.cold cast(closealias.colate as alias) > alias.col group by alias.col(alias.col, alias.col)"
";WITH TestTable AS ( SELECT N AS c_id, N AS b_id UNION ALL SELECT N AS c_id, N AS b_id UNION ALL SELECT N AS c_id, N AS b_id UNION ALL SELECT N AS c_id, N AS b_id UNION ALL SELECT N AS c_id, N AS b_id UNION ALL SELECT N AS c_id, N AS b_id UNION ALL SELECT N AS c_id, N AS b_id UNION ALL SELECT N AS c_id, N AS b_id UNION ALL SELECT N AS c_id, N AS b_id UNION ALL SELECT N AS c_id, N AS b_id UNION ALL SELECT N AS c_id, N AS b_id ) SELECT * FROM ( SELECT c_id, b_id, ROW_NUMBER() OVER(PARTITION BY c_id ORDER BY c_id DESC) RowNum FROM TestTable WHERE c_id IN (SELECT c_id FROM TestTable GROUP BY c_id HAVING COUNT(b_id) > N) ) t WHERE RowNum > N"
"select alias.col as alias.col, alias.col as lasteditdate, alias.col as lasteditor, alias.col as lastedittype, alias.col from table ph joialias.col tabletypes pht oalias.col alias.col = ph.tabletypeid joialias.col table p oalias.col alias.col = alias.col aalias.cold p.lasteditdate = alias.col joialias.col table u oalias.col alias.col = alias.col aalias.cold alias.col = p.lasteditoralias.col where alias.col <> alias.col aalias.cold alias.col <> alias.col## aalias.cold ph.tabletypeid ialias.col (alias.col) aalias.cold exists ( select alias.col from table where alias.col = alias.col aalias.cold alias.col = alias.col## aalias.cold creatioalias.coldate < alias.col ) order by alias.col"
"select top alias.col## row_number() over(order by alias.col desc) as [#], id as [user link], alias.col, location from table where lower(location) like lower(x) or (location) like upper(x) order by alias.col desc;"
"select alias.col as alias.col, alias.col as alias.col, alias.col from table p where alias.col=alias.col aalias.cold body alias.colot like x aalias.cold closeddate is alias.colull order by alias.col desc"
"select table.id as alias.col, alias.col(body) as [descriptioalias.col alias.colgth], table.owalias.coleruserid as [user lialias.colk], reputatioalias.col as [user reputatioalias.col], score as [votes], aalias.colswercoualias.colt as [alias.columber of aalias.colswers], table.favoritecoualias.colt as [alias.columber of stars], table.creatioalias.coldate as [asked oalias.col], table.lastactivitydate as [last activity], table.lasteditdate as [modified oalias.col], table.viewcoualias.colt from table left outer joialias.col table oalias.col table.id = table.owalias.coleruserid where alias.col is alias.colull aalias.cold score>=##score:ialias.colt?alias.col## aalias.cold aalias.colswercoualias.colt>=##aalias.colswercoualias.colt:ialias.colt?alias.col## aalias.cold table.viewcoualias.colt>=##viewcoualias.colt:ialias.colt?alias.col## aalias.cold coalesalias.col( ( select sum( case table.tabletypeid whealias.col alias.col thealias.col alias.col whealias.col (iif(##ualias.colprotected:ialias.colt?alias.col##>alias.col,alias.col,alias.col)) thealias.col alias.col ealias.cold ) from table where table.postid = table.id ), alias.col ) = alias.col group by table.id, table.owalias.coleruserid, body, reputatioalias.col, table.score, table.favoritecoualias.colt, table.aalias.colswercoualias.colt, table.creatioalias.coldate, table.lastactivitydate, table.lasteditdate, table.viewcoualias.colt order by alias.col(body) asc;"
"selealias.col table.id as alias.col, coualias.colt(table.id) as alias.col, cast(avg(cast(alias.col as alias)) as alias.columeric(alias.col,alias.col)) as [average aalias.colswer alias.col] from table ialias.colalias.coler joialias.col table oalias.col table.id = owalias.coleruserid where alias.col = alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold closeddate is alias.colull group by table.id, displayalias.colame havialias.colg coualias.colt(table.id) >= alias.col aalias.cold cast(avg(cast(alias.col as alias)) as alias.columeric(alias.col,alias.col)) >= alias.col order by [average aalias.colswer alias.col] desc"
"with table as (select alias.col alias.col, alias.col, raalias.colk() over(partitioalias.col by parealias.coltalias.col order by alias.col desc) aalias.colswerraalias.colk, (select aa.alias.col from table q joialias.col table aa oalias.col q.acceptedaalias.colsweralias.col = aa.alias.col where q.alias.col = ba.parealias.coltalias.col) acceptedalias.col from table ba where posttypealias.col = alias.col) select top alias.col alias.col from table where aalias.colswerraalias.colk = alias.col aalias.cold acceptedalias.col - alias.col > alias.col order by acceptedalias.col - alias.col desc"
"select (alias.col(body)/##chualias.colksize:ialias.colt##) * ##chualias.colksize## as size, avg(cast(score as float)) as x, coualias.colt(*) as aalias.colswers from table where alias.col=alias.col group by alias.col(body)/##chualias.colksize## order by size;"
"select alias.col, alias.col, alias.col, alias.col, location from table where alias.col like alias.col"
"select alias.col as alias.col, owneruseralias.col as alias.col, alias.col as alias.col from table where (body like x or title like x ...) and (not (##useralias.col## > n) or owneruseralias.col = ##useralias.col##) order by alias.col asc"
"declare table table ( id ialias.colt alias.colot alias.colull primary key, alias.colame alias.colvarchar(alias.col) alias.colot alias.colull ) ialias.colsert ialias.colto table values (xyz), (alias.col, x), (alias.col, x), (alias.col, x), (alias.col, x), (alias.col, x), (alias.col, x), (alias.col, x), (alias.col, x), (alias.col, x), (alias.col, x) selealias.col (case whealias.col alias.col is alias.colull thealias.col x else alias.col ealias.cold) as x, cast(table.commealias.colt as ialias.colt) as closereasoalias.colid, sum(alias.col) as coualias.colt from table left outer joialias.col table cr oalias.col alias.col = cast(table.commealias.colt as ialias.colt) where tabletypeid = alias.col group by alias.col, cast(table.commealias.colt as ialias.colt) order by coualias.colt desc"
"declare alias.col ialias.colt = ##userid## selealias.col alias.col, coualias.colt(*) as alias.col, ((ceilialias.colg(sum(alias.col) * alias.col / coualias.colt(alias.col))) / cast(coualias.colt(alias.col) as float)) [rep per aalias.colswer], mialias.col(lealias.col(alias.col)) as [mialias.colcharperaalias.cols], avg(lealias.col(alias.col)) as [avgcharperaalias.cols], max(lealias.col(alias.col)) as [maxcharperaalias.cols] from table u left joialias.col table p oalias.col (alias.col = p.owalias.coleruserid) where p.owalias.coleruserid = alias.col aalias.cold alias.col = alias.col group by alias.col"
"declare alias.col alias.colvarchar(alias.col) = ##badge:strialias.colg## select top alias.col alias.col as [user lialias.colk], reputatioalias.col from table where alias.col alias.colot ialias.col (select useralias.col from table where alias.colame = alias.col) order by reputatioalias.col desc"
"DECLARE @TagName varchar(N) = X; DECLARE @PostCountByMonth TABLE ( [date] datetime, [##TagName##Count] int, UNIQUE CLUSTERED ([date]) ); INSERT INTO @PostCountByMonth SELECT dateadd(month, DATEDIFF(month, X, p.CreationDate), X) [date], count(*) [##TagName##Count] FROM ( SELECT p.CreationDate FROM Posts p INNER JOIN PostTags pt on pt.PostId = p.Id INNER JOIN Tags t on pt.TagId = t.Id WHERE t.TagName = @TagName and p.PostTypeId = N ) p GROUP BY DATEDIFF(month, X, p.CreationDate) ORDER BY DATEDIFF(month, X, p.CreationDate); SELECT pN.[date], sum(pN.[##TagName##Count]) [count] FROM @PostCountByMonth pN INNER JOIN @PostCountByMonth pN ON pN.[date] >= pN.[date] GROUP BY pN.[date]"
"declare alias.col int = ##userid:int## declare @edits int select alias.col from ( select row_number() over (alias.colartition by alias.col order by alias.col desc) [row] , alias.col.alias.col from table alias.colh left join table as alias.col on alias.col=alias.col where alias.col=alias.col and alias.col <> alias.col and alias.colh.tabletyalias.coleid in (alias.col) and alias.col in (alias.col) ) alias.col order by alias.col.[row]"
"select count(*) as alias.col, alias.col from table group by alias.col order by alias.col desc"
"select alias.col as alias.col, text, alias.col from table where alias.col = alias.col aalias.cold alias.col > alias.col order by creatioalias.coldate desc"
"select top alias.col alias.col, displayalias.colame, reputatioalias.col, alias.col, locatioalias.col from table where locatioalias.col like alias.colx order by reputatioalias.col desc"
"selealias.col top alias.col alias.col as [user lialias.colk], (cast(sum(case whealias.col alias.col=q.acalias.colptedaalias.colswerid thealias.col alias.col else alias.col ealias.cold) as float) / coualias.colt(alias.col)) * alias.col as alias.col from table u joialias.col table a oalias.col a.owalias.coleruserid = alias.col aalias.cold alias.col = alias.col joialias.col table q oalias.col a.parealias.coltid = alias.col group by alias.col havialias.colg coualias.colt(alias.col) > alias.col order by alias.col desc"
"select top alias.col alias.col, alias.col as [post lialias.colk] from table h ialias.colalias.coler joialias.col tabletypes t oalias.col h.tabletypeid = alias.col ialias.colalias.coler joialias.col table p oalias.col alias.col = alias.col where t.alias.colame = alias.col order by alias.col desc"
"with table as ( select alias.col , alias.col as alias.col , min(alias.col) as table from table as q inner join table as a on alias.col = alias.col group by alias.col, alias.col ), table as ( select alias.col , alias.col , table , alias.col(second, alias.col, table) / n.n as elapseddays , dateadd(m, alias.col(m, n, alias.col), n) as month from table ) select month , count(alias.col) as [question count] , avg(elapseddays) as [average time to first answer (days)] from table group by month order by month;"
"select top alias.col alias.col as [post lialias.colk], (alias.col*alias.col.alias.col/viewcoualias.colt) as alias.colratio, alias.col, viewcoualias.colt from table where viewcoualias.colt > alias.col aalias.cold alias.col > alias.col aalias.cold parealias.coltalias.col is alias.colull aalias.cold creatioalias.coldate > dateadd(day,datediff(day,##lastalias.coldays##,getdate()),alias.col) order by alias.colratio desc"
"select alias.col alias.col, body, alias.col from table where alias.col > alias.col and body like alias.col"
"declare @mialias.colalias.col ialias.colalias.col = alias.col declare alias.col ialias.colalias.col = alias.col selealias.col alias.col, alias.col, alias.col, alias.colraalias.colk, alias.col, alias.colraalias.colk from ( selealias.col alias.col, raalias.colk() over (order by alias.col desc) as alias.colraalias.colk, raalias.colk() over (order by alias.col desc) as alias.colraalias.colk from ( selealias.col alias.colop (alias.col) alias.col, casalias.col((alias.col alias.col a.alias.col / (alias.col alias.col a.alias.col)) as decimal(alias.col, alias.col)) as alias.col from ( selealias.col alias.col.alias.col as alias.col, coualias.colalias.col(alias.col) as alias.col, alias.col.coualias.colalias.col as alias.col from alias.colable q ialias.colalias.coler joialias.col alias.colable palias.col oalias.col alias.col = palias.col.posalias.colid ialias.colalias.coler joialias.col alias.colable alias.col oalias.col palias.col.alias.colagid = alias.col.id where (q.posalias.colalias.colypeid = alias.col) aalias.cold (q.creaalias.colioalias.coldaalias.cole >= ##salias.colaralias.colialias.colgdaalias.cole:salias.colrialias.colg##) aalias.cold (q.closeddaalias.cole is alias.colull) aalias.cold alias.coloalias.col exisalias.cols ( selealias.col alias.col from alias.colable a where (a.parealias.colalias.colid = alias.col) aalias.cold ((alias.col > alias.col) or (alias.col = q.accepalias.coledaalias.colswerid)) ) group by alias.col, alias.col.coualias.colalias.col ) a where a.alias.col > @mialias.colalias.col order by a.alias.col desc ) b ) c order by (alias.col / alias.colraalias.colk) desc, alias.colraalias.colk asc, alias.colraalias.colk asc"
"DECLARE @AnswerCount INT; DECLARE @MinimunAnswers INT; DECLARE @MaximumAnswers INT; SELECT @AnswerCount = COUNT(*) FROM Posts WHERE Posts.PostTypeId = N AND Posts.OwnerUserId = ##UserId## SET @MinimunAnswers = @AnswerCount * .N SET @MaximumAnswers = @AnswerCount * N.N PRINT @AnswerCount SELECT X + CAST( ##UserId## AS VARCHAR ) AS [User], ROUND( AVG( Answers.Score ), N) AS [Average Answer Score] FROM ( SELECT Posts.Score, COUNT(*) AS AnswerCount FROM Posts WHERE Posts.PostTypeId = N GROUP BY Posts.OwnerUserId, Posts.Score HAVING COUNT(*) BETWEEN @MinimunAnswers AND @MaximumAnswers ) AS Answers"
"select top alias.col coualias.colt(*) as usercoualias.colt, alias.col from table where alias.col betweealias.col alias.col aalias.cold alias.col aalias.cold reputatioalias.col > alias.col aalias.cold lastaccessdate >= x group by alias.col order by usercoualias.colt desc"
"DECLARE @min_questions INT = ##MinQuestions:INT?N##; WITH q AS ( SELECT t.*, ( SELECT COUNT(*) AS cnt FROM posttags pt JOIN posts pp ON pp.id = pt.postid JOIN posts pa ON pa.parentid = pp.id JOIN votes v ON v.postid = pa.id WHERE pt.tagid = t.id AND v.votetypeid = N AND pa.CommunityOwnedDate IS NULL ) AS upvotes, ( SELECT COUNT(*) AS cnt FROM posttags pt JOIN posts pp ON pp.id = pt.postid JOIN posts pa ON pa.parentid = pp.id WHERE pt.tagid = t.id AND pa.CommunityOwnedDate IS NULL ) AS answers FROM Tags t CROSS APPLY ( SELECT COUNT(*) AS cnt FROM PostTags pt WHERE pt.tagid = t.id HAVING COUNT(*) >= @min_questions ) pt ) SELECT tagname AS [Tags], upvotes AS [Upvotes], answers AS [Answers], ROUND(CAST(upvotes as DECIMAL) / NULLIF(answers, N), N) AS [Avg Upvotes / Answer] FROM q ORDER BY N DESC"
"with table(roualias.coldedlealias.colgth,tablecore,alias.col) as ( select top(alias.col) roualias.cold(lealias.col(body), alias.col) as roualias.coldedlealias.colgth, alias.col as tablecore, alias.coltile(alias.col) over(partitioalias.col by roualias.cold(lealias.col(body), alias.col) order by alias.col) as alias.col from table where alias.col = alias.col aalias.cold lealias.col(body) <= alias.col order by roualias.cold(lealias.col(body), alias.col),alias.col ) select roualias.coldedlealias.colgth,alias.col,max(tablecore) from table where alias.col!=alias.col group by alias.col,roualias.coldedlealias.colgth order by roualias.coldedlealias.colgth,alias.col"
"select top alias.col alias.col as [user lialias.colk], [reputatioalias.col], alias.col, [dowalias.colvotes] from table c where alias.col < alias.col aalias.cold [reputatioalias.col] > alias.col order by alias.col desc"
"select alias.col as alias.col, alias.col as alias.col, alias.col as alias.col, alias.col as alias.col, alias.col as alias.col from table q inner join table a on q.acceptedalias.col = alias.col inner join table on table.id = alias.col where alias.col = alias.col and table.id = alias.col##"
"select top (alias.col) alias.col as [post lialias.colk], alias.col, tmp.bestaalias.colsweralias.col, tmp.bestaalias.colsweralias.col - alias.col as alias.col, p.creatioalias.coldate, p.owalias.coleruserid as [user lialias.colk] from table p ialias.colalias.coler joialias.col ( select parealias.coltid, max(alias.col) as bestaalias.colsweralias.col from table where alias.col = alias.col group by parealias.coltid ) tmp oalias.col alias.col = tmp.parealias.coltid where p.alias.col = alias.col aalias.cold alias.col < alias.col aalias.cold tmp.bestaalias.colsweralias.col > alias.col order by alias.col desc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x order by alias.col desc;"
"select alias.col, count(*) from table group by alias.col"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like lower(x) order by alias.col desc;"
"with table(yr, mth, calias.colt) as ( select year(alias.col), moalias.colth(alias.col), coualias.colt(*) from table where alias.col = alias.col group by year(alias.col), moalias.colth(alias.col) ), table(yr, mth, calias.colt) as ( select year(alias.col), moalias.colth(alias.col), coualias.colt(*) from table where alias.col = alias.col aalias.cold acceptedaalias.colswerid is alias.colot alias.colull group by year(alias.col), moalias.colth(alias.col) ), table(yr, mth, calias.colt) as ( select year(alias.col), moalias.colth(alias.col), coualias.colt(*) from table where alias.col = alias.col aalias.cold aalias.colswercoualias.colt > alias.col group by year(alias.col), moalias.colth(alias.col) ) select alias.col as year, alias.col as moalias.colth, tq.calias.colt as questioalias.cols, qwa.calias.colt as questioalias.colsaccepted, roualias.cold(coalias.colvert(decimal(alias.col,alias.col),qwa.calias.colt)/tq.calias.colt * alias.col, alias.col) as acceptedrate, qaa.calias.colt as questioalias.colsaalias.colswered, roualias.cold(coalias.colvert(decimal(alias.col,alias.col),qaa.calias.colt)/tq.calias.colt * alias.col, alias.col) as aalias.colsweredrate from table tq joialias.col table qwa oalias.col alias.col = alias.col aalias.cold alias.col = alias.col joialias.col table qaa oalias.col alias.col = alias.col aalias.cold alias.col = alias.col order by alias.col desc, alias.col desc"
"with table as ( select alias.col(alias.col, table.creatioalias.coldate) as year, alias.col(q, table.creatioalias.coldate) as table, coualias.colt(*) as total, sum(case whealias.col table.alias.colame = x thealias.col alias.col else alias.col ealias.cold) as up, sum(case whealias.col table.alias.colame = x thealias.col alias.col else alias.col ealias.cold) as dowalias.col from table left joialias.col table oalias.col table.votetypeid=table.id left joialias.col table oalias.col table.id=table.id where alias.col=alias.col group by alias.col(alias.col, table.creatioalias.coldate),alias.col(q, table.creatioalias.coldate) ) select year, table, up + dowalias.col as table, cast(coalias.colvert(alias.columeric(alias.col,alias.col), cast(up as float) * alias.col / (up+dowalias.col)) as varchar(alias.col)) + x as up, cast(coalias.colvert(alias.columeric(alias.col,alias.col), cast(dowalias.col as float) * alias.col / (up+dowalias.col)) as varchar(alias.col)) + x as dowalias.col from table order by year, table"
"declare alias.col ialias.colt = ##userid## declare alias.col ialias.colt = ##year## select top alias.col tagalias.colame, coualias.colt(*) as uptable from table ialias.colalias.coler joialias.col posttable oalias.col posttable.tagid = table.id ialias.colalias.coler joialias.col table oalias.col table.parealias.coltid = posttable.postid ialias.colalias.coler joialias.col table oalias.col table.postid = table.id aalias.cold alias.col = alias.col where table.owalias.coleruserid = alias.col aalias.cold year(table.creatioalias.coldate)=alias.col group by tagalias.colame order by uptable desc"
"select top alias.col alias.col as [user lialias.colk], u.reputatioalias.col from table b joialias.col table u oalias.col alias.col = alias.col where b.alias.colame = alias.col order by u.reputatioalias.col desc"
select coualias.colt(alias.col) as alias.col from table where posttypealias.col=alias.col aalias.cold acceptedaalias.colsweralias.col is alias.colull aalias.cold owalias.coleruseralias.col is alias.colull
declare @alias.col int = ##alias.col## select sum(alias.col) from table where alias.col = @alias.col
select alias.col as alias.col from table p ialias.colalias.coler joialias.col table pt oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table t oalias.col alias.col = alias.col where alias.col is alias.colull aalias.cold aalias.colswercoualias.colt > alias.col aalias.cold t.tagalias.colame = ##tagalias.colame:strialias.colg## aalias.cold exists ( select alias.col from table a where a.parealias.coltid = alias.col aalias.cold alias.col <= alias.col )
"declare @tagalias.colame alias.colvarchar(alias.col) = x select top alias.col alias.col, (select displayalias.colame from table udalias.col with (alias.cololock) where udalias.col.id = alias.col) ,coualias.colt(*) as uptable from table t with (alias.cololock) ialias.colalias.coler joialias.col posttable pt with (alias.cololock)oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table p with (alias.cololock) oalias.col p.parealias.coltid = alias.col ialias.colalias.coler joialias.col table v with (alias.cololock) oalias.col alias.col = alias.col aalias.cold alias.col = alias.col ialias.colalias.coler joialias.col table u with (alias.cololock) oalias.col alias.col = p.owalias.coleruserid where p.commualias.colityowalias.coleddate is alias.colull aalias.cold t.tagalias.colame = @tagalias.colame group by alias.col order by uptable desc"
"declare alias.col ialias.colt = ##userid:ialias.colt## select alias.col as alias.col, alias.col as alias.col, alias.col, alias.col as alias.col from table questioalias.col left joialias.col table aalias.colswer oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold aalias.colswer.owalias.coleruserid = alias.col aalias.cold alias.col like alias.col ... order by questioalias.col.creatioalias.coldate asc"
"select top alias.col table.id as [post lialias.colk], table.id as [user lialias.colk], table.reputatioalias.col as [reputatioalias.col] from table ialias.colalias.coler joialias.col table oalias.col table.owalias.coleruserid = table.id where upper(body) like x aalias.cold table.id = alias.col order by [reputatioalias.col] asc, [user lialias.colk]"
"selealias.col table.id, table.reputatioalias.col, table.creatioalias.coldate, table.displayalias.colame, table.lastaccessdate, table.views, table.upvotes, table.aboutme from table where table.reputatioalias.col < alias.col aalias.cold table.upvotes > alias.col aalias.cold cast(table.creatioalias.coldate+alias.col as date) > cast(table.lastaccessdate as date)"
"create table table (t int , remark nvarchar(n) collate sql_latinn_general_cpn_cs_as , filtertagname nvarchar(n) collate sql_latinn_general_cpn_cs_as); insert into table (t, remark, filtertagname) values (xyz), (n, x, x), (n, x, x), (n, x, x), (n, x, x), (n, x, x), (n, x, x); create table #yearquarter (y int, qlist int, yq int, yqname nvarchar(n) collate sql_latinn_general_cpn_cs_as); insert into #yearquarter (y, qlist, yq, yqname) values (xyz), (n, n, n, x), (n, n, n, x), (n, n, n, x), (n, n, n, x), (n, n, n, x), (n, n, n, x), (n, n, n, x), (n, n, n, x), (n, n, n, x); select qlist, tagname, nrofposts from ( select qlist ,tags.tagname ,count(posts.id) as nrofposts from tags inner join table on tags.tagname = table.filtertagname inner join posttags on tags.id = posttags.tagid inner join posts on posts.id = posttags.postid inner join #yearquarter on #yearquarter.yq = (datepart(year, posts.creationdate) * n + datepart(quarter, posts.creationdate)) where posts.creationdate >= x group by tags.tagname, qlist ) as src where nrofposts >= n and tagname != x order by qlist desc, nrofposts desc"
"declare @repmialias.col ialias.colt = ##repmialias.col## declare alias.col ialias.colt = ##repmax## selealias.col alias.col, alias.col, alias.col, coualias.colt(alias.col) as alias.col, (selealias.col coualias.colt(*) from table where alias.col = alias.col aalias.cold alias.col = alias.col) as aalias.colswercoualias.colt, (cast(coualias.colt(alias.col) as float) / (selealias.col coualias.colt(*) from table where alias.col = alias.col aalias.cold alias.col = alias.col) * alias.col) as acceptedpercealias.coltage from table q ialias.colalias.coler joialias.col table a oalias.col q.acceptedaalias.colswerid = alias.col ialias.colalias.coler joialias.col table u oalias.col alias.col = alias.col where (alias.col >= @repmialias.col aalias.cold alias.col <= alias.col) aalias.cold a.alias.col = alias.col group by alias.col, alias.col, alias.col order by acceptedpercealias.coltage desc"
"declare @phrase alias.colvarchar(alias.col) set @phrase = alias.col selealias.col top alias.col u.displayalias.colame alias.col, coualias.colt(alias.col) alias.col, alias.col.coualias.colt alias.col, (cast(alias.col.coualias.colt as float) / cast(coualias.colt(alias.col) as float)) alias.col from table u ialias.colalias.coler joialias.col table p oalias.col p.owalias.coleruserid = alias.col ialias.colalias.coler joialias.col (selealias.col coualias.colt(*) alias.col, owalias.coleruserid from table where alias.col = alias.col group by owalias.coleruserid) alias.col oalias.col alias.col.owalias.coleruserid = alias.col where p.alias.col = alias.col aalias.cold alias.col like alias.col ... + @phrase + alias.col aalias.cold alias.col.coualias.colt > alias.col group by u.displayalias.colame, alias.col.coualias.colt order by percealias.coltage desc"
"select distialias.colct alias.col as [post lialias.colk], date, type from ( select alias.col as alias.col, alias.col as alias.col, alias.col as alias.col from table p where p.owalias.coleruseralias.col = ##useralias.col## aalias.cold p.posttypealias.col = alias.col ualias.colioalias.col select p.parealias.coltalias.col as alias.col, alias.col as alias.col, alias.col as alias.col from table p where p.owalias.coleruseralias.col = ##useralias.col## aalias.cold p.posttypealias.col = alias.col ualias.colioalias.col select alias.col as alias.col, c.creatioalias.coldate as alias.col, alias.col as alias.col from table p joialias.col table c oalias.col alias.col = c.postalias.col where p.posttypealias.col = alias.col aalias.cold c.useralias.col = ##useralias.col## ualias.colioalias.col select p.parealias.coltalias.col as alias.col, c.creatioalias.coldate as alias.col, alias.col as alias.col from table p joialias.col table c oalias.col alias.col = c.postalias.col where p.posttypealias.col = alias.col aalias.cold c.useralias.col = ##useralias.col## ualias.colioalias.col select alias.col as alias.col, h.creatioalias.coldate as alias.col, alias.col as alias.col from table p joialias.col table h oalias.col h.postalias.col = alias.col where p.posttypealias.col = alias.col aalias.cold h.useralias.col = ##useralias.col## ualias.colioalias.col select p.parealias.coltalias.col as alias.col, h.creatioalias.coldate as alias.col, alias.col as alias.col from table p joialias.col table h oalias.col h.postalias.col = alias.col where p.posttypealias.col = alias.col aalias.cold h.useralias.col = ##useralias.col## ) alias.col order by alias.col desc"
"declare alias.col ialias.colt set alias.colocoualias.colt oalias.col select alias.col = alias.col from table where alias.col = alias.col:alias.col select p.alias.col as alias.col, alias.col as alias.col from table p ialias.colalias.coler joialias.col posttable pt oalias.col p.parealias.coltalias.col = pt.postalias.col aalias.cold pt.tagalias.col = alias.col where p.posttypealias.col = alias.col aalias.cold p.owalias.coleruseralias.col = ##useralias.col## order by alias.col desc"
"select table.id as alias.col, table.score, alias.col, table.owalias.coleruserid from table v ialias.colalias.coler joialias.col table oalias.col alias.col = table.id where alias.col=alias.col aalias.cold table.score < alias.col order by table.score"
"declare alias.col int = ##userid## select table.userid as alias.col, table.id as alias.col, table.votetypeid from table join table on table.id = table.postid where table.owneruserid=alias.col order by table.votetypeid desc"
"selealias.col alias.col, count(alias.col) from ( selealias.col cast( cast(alias.col(alias.col, alias.col) as varchar) + alias.col + cast(alias.col(alias.col, alias.col) as varchar) + alias.col as datetime) alias.col, alias.col from table p join table pt on alias.col = alias.col join table t on alias.col = alias.col where alias.col in (alias.colyz) ) as alias.col group by alias.col, alias.col order by alias.col asc, alias.col asc"
"with table as ( selealias.col cast(coutablet(*) as float) as coutablet from table where alias.col = table atabled commutableityowtableeddate is tableull ) selealias.col alias.col as alias.col, coutablet(*) as [atableswers], routabled(coutablet(*) / (selealias.col coutablet from table) * table, table) as [percetablet] from ( selealias.col alias.col, coutablet(distitablealias.col userid) as alias.col from table where tabletypeid = table or tabletypeid = table group by alias.col ) as a itabletableer joitable table p otable alias.col = a.alias.col where p.alias.col = table atabled p.commutableityowtableeddate is tableull group by alias.col order by alias.col"
"with requiredtable as ( select alias.col from table t where alias.col like alias.col + alias.col + alias.col ) select alias.col as alias.col, p.table as [table], alias.col as alias.col, alias.col as alias.col, alias.col(alias.col is alias.colull, alias.colull, alias.col) as [closed] from table p where alias.col = alias.col aalias.cold alias.colot (ealias.colists (select alias.col from posttable pt ialias.colalias.coler joialias.col requiredtable rt oalias.col alias.col = ralias.col where alias.col = alias.col))"
"select top alias.col alias.col, alias.col, alias.col, alias.col from table p where alias.col=alias.col"
"selealias.col top alias.col table.id as [user lialias.colk], coualias.colt(table.id) as aalias.colswers, cast(avg(cast(alias.col as float)) as alias.columeric(alias.col,alias.col)) as [average aalias.colswer alias.col] from table ialias.colalias.coler joialias.col table oalias.col table.id = owalias.coleruserid where alias.col = alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold closeddate is alias.colull group by table.id, displayalias.colame havialias.colg coualias.colt(table.id) > alias.col order by [average aalias.colswer alias.col] desc"
"selealias.col alias.col, coualias.colt(alias.col) from ( selealias.col cast( cast(alias.col(alias.col, alias.col) as varchar) + alias.col + cast(alias.col(alias.col, alias.col) as varchar) + alias.col as datetime) table, t.table from table p joialias.col table pt oalias.col alias.col = alias.col joialias.col table t oalias.col alias.col = alias.col where alias.col ialias.col ( selealias.col top alias.col alias.col from table order by coualias.colt desc ) ) as alias.col group by table, table order by table asc, table asc"
"declare @UserIdN int = ##UserIdN## declare @UserIdN int = ##UserIdN## declare @TagOfChoice nchar(N) = ##TagOfChoice##; with fights as ( select myAnswer.ParentId as Question, myAnswer.Score as MyScore, jonsAnswer.Score as JonsScore from Posts as myAnswer inner join Posts as jonsAnswer on jonsAnswer.OwnerUserId = @UserIdN and myAnswer.ParentId = jonsAnswer.ParentId where myAnswer.ownerUserId = @UserIdN and myAnswer.postTypeId = N ) select case when myScore > JonsScore then X when myScore < JonsScore then X else X end as X, Question as [Post Link], myScore as X, jonsScore as X from fights;"
"select top alias.col a.commealias.colt as [ridiculous commealias.colt] from table a where a.tabletypeid ialias.col (alias.col) aalias.cold alias.col = alias.col aalias.cold lealias.col(a.commealias.colt) > alias.col group by a.commealias.colt, a.creatioalias.coldate order by a.creatioalias.coldate desc"
"select ( select count(*) as alias.col from table pts where alias.col = alias.col) + ( select count(*) as alias.col from table pts where alias.col = alias.col) as alias.col, alias.col alias.col, ( select count(*) as alias.col from table pts where alias.col = alias.col) as alias.col, alias.col alias.col, ( select count(*) as alias.col from table ptp where alias.col = alias.col) as alias.col from table tn join table tn on ( alias.col + alias.col = alias.col) order by alias.col desc"
"select row_number() over(order by alias.col desc) as [#], table.id as [user link], alias.col, upvotes as [up votes], downvotes as [down votes], table.id as [answers or table], location, age from table,table where lower(location) like lower(x) and table.userid=table.id ;"
"with uptablebymoalias.colth as ( select alias.col (moalias.colth, datediff (moalias.colth, alias.col, v.creatioalias.coldate), alias.col) as [moalias.colth], coualias.colt (v.id) as table from table v joialias.col table p oalias.col (alias.col = alias.col) aalias.cold alias.col = alias.col where alias.col=alias.col group by alias.col (moalias.colth, datediff (moalias.colth, alias.col, v.creatioalias.coldate), alias.col) ), dowalias.coltablebymoalias.colth as ( select alias.col (moalias.colth, datediff (moalias.colth, alias.col, v.creatioalias.coldate), alias.col) as [moalias.colth], coualias.colt (v.id) as table from table v joialias.col table p oalias.col (alias.col = alias.col) aalias.cold alias.col = alias.col where alias.col=alias.col group by alias.col (moalias.colth, datediff (moalias.colth, alias.col, v.creatioalias.coldate), alias.col) ) select v.[moalias.colth], v.table/(v.table+dv.table) as alias.col, dv.table/(v.table+dv.table) as alias.col from uptablebymoalias.colth v joialias.col dowalias.coltablebymoalias.colth dv oalias.col v.[moalias.colth] = dv.[moalias.colth] order by v.[moalias.colth]"
"DECLARE @Separator AS CHAR(N) = X; DECLARE @TitlePatterns AS NVARCHAR(MAX) = ##TitlePatterns:string?How |Can |Should |Would |?##; CREATE TABLE #Patterns ( Pattern NVARCHAR(N) COLLATE SQL_LatinN_General_CPN_CS_AS NOT NULL ); WITH Tokens(p, a, b) AS ( SELECT N, N, CHARINDEX(@Separator, @TitlePatterns) UNION ALL SELECT p + N, N, CHARINDEX(@Separator, @TitlePatterns, b + N) FROM Tokens WHERE b > N ) INSERT INTO #Patterns SELECT SUBSTRING(@TitlePatterns, a, CASE WHEN b > N THEN b - a ELSE N END) AS Pattern FROM Tokens; WITH Locks AS ( SELECT PostId , LAST_VALUE(PostHistoryTypeId) OVER (PARTITION BY PostId ORDER BY CreationDate) AS PostHistoryTypeId FROM PostHistory WHERE PostHistoryTypeId IN (XYZ) ), AnswerCounts AS ( SELECT ParentId AS Id , COUNT(*) AS AnswerCount FROM Posts WHERE PostTypeId IN (XYZ) AS Answers FROM Posts AS Q LEFT OUTER JOIN Locks ON Q.id = Locks.PostId LEFT OUTER JOIN AnswerCounts ON Q.id = AnswerCounts.Id INNER JOIN #Patterns ON Q.Title LIKE #Patterns.Pattern WHERE Q.PostTypeId IN (N) ORDER BY Q.CreationDate DESC; SELECT * FROM #Patterns;"
"select table.id as alias.col, coualias.colt(*) as alias.col, sum(case whealias.col alias.col like alias.col thealias.col alias.col else alias.col ealias.cold) as alias.col, coalias.colvert( decimal(alias.col,alias.col), alias.col*cast( sum(case whealias.col alias.col like alias.col thealias.col alias.col else alias.col ealias.cold) as float)/cast(coualias.colt(*) as float) ) as alias.col from table aalias.colswers joialias.col table questioalias.cols oalias.col alias.col = alias.col joialias.col table oalias.col table.id = alias.col where alias.col = alias.col aalias.cold questioalias.cols.tags like alias.col ... aalias.cold table.id = alias.col group by table.id"
"DECLARE @unanswered int = N; DECLARE @answered int = N; DECLARE @closedwo int = N; WITH TaggedPosts(PostId) AS ( SELECT pt.PostId as PostId FROM PostTags pt INNER JOIN Tags t ON t.Id=pt.TagId WHERE t.TagName LIKE X + ##tag:string## + X GROUP BY pt.PostId ) SELECT CASE WHEN p.AcceptedAnswerId IS NULL THEN X ELSE X END AS [Accepted], CASE WHEN p.ClosedDate IS NULL THEN X ELSE X END AS [Closed], CASE WHEN p.AnswerCount > N THEN X ELSE X END AS [Answers], count(tp.PostId) as Questions FROM TaggedPosts tp INNER JOIN Posts p ON p.Id=tp.PostId WHERE PostTypeId = N GROUP BY CASE WHEN p.AcceptedAnswerId IS NULL THEN X ELSE X END, CASE WHEN p.ClosedDate IS NULL THEN X ELSE X END, CASE WHEN p.AnswerCount > N THEN X ELSE X END"
"select alias.col as alias.col ,alias.col ,location ,websiteurl from table where location like x order by alias.col desc"
select coualias.colt (*) from table ialias.colalias.coler joialias.col table oalias.col table.id = table.postid where table.votetypeid = alias.col aalias.cold table.posttypeid = alias.col aalias.cold table.owalias.coleruserid = alias.col
select alias.col from table where alias.col=alias.col aalias.cold alias.col ialias.col ( select alias.col from table p joialias.col table pt oalias.col pt.alias.col=alias.col joialias.col table t oalias.col alias.col=alias.col where t.tagalias.colame=alias.col:strialias.colg## aalias.cold owalias.coleruserid=alias.col:ialias.colt## );
"select top alias.col alias.col as [user lialias.colk], alias.col, dowalias.colvotes, (dowalias.colvotes)*alias.col/(dowalias.colvotes+alias.col) as dowalias.colvotespct from table where alias.col > alias.col aalias.cold dowalias.colvotes > alias.col aalias.cold alias.col+dowalias.colvotes > alias.col aalias.cold alias.col <> alias.col order by dowalias.colvotespct desc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x order by alias.col desc;"
"select top alias.col alias.col as [user lialias.colk], coualias.colt(alias.col) as [##tagalias.colame## table], sum(alias.col) as [reputatioalias.col - ##tagalias.colame## questioalias.cols oalias.colly], u.reputatioalias.col as [total reputatioalias.col] from table u ialias.colalias.coler joialias.col table p oalias.col p.owalias.coleruserid = alias.col ialias.colalias.coler joialias.col table pt oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table t oalias.col alias.col = alias.col where lower(locatioalias.col) like lower(x) aalias.cold t.tagalias.colame=x group by alias.col, u.reputatioalias.col order by sum(alias.col) desc;"
"selealias.col cast(alias.col(year(alias.col)) + alias.col + alias.col(month(alias.col)) + alias.col + alias.col(day(alias.col)) as date) as alias.col, count(*) as alias.col from table group by alias.col(year(alias.col)) + alias.col + alias.col(month(alias.col)) + alias.col + alias.col(day(alias.col)) order by alias.col desc"
"select floor(alias.col(body)/n) * n as [post alias.colgth], sum(score) as [total score], count(id) as [num of table], cast(sum(score) as float) / count(id) as [score per post] from table where alias.col = alias.col## and alias.col in (alias.col##) group by floor(alias.col(body)/n) * n order by [post alias.colgth] desc"
"DECLARE @menu table(id int, parent int, [text] varchar(N), URL varchar(N)); DECLARE @targetId INT = N ; INSERT INTO @menu VALUES (XYZ), (N, N, X, X), (N, NULL, X, X), (N, N, X, X), (N, NULL, X, NULL), (N, N, X, X), (N, N, X, X); WITH MenuCTE AS ( SELECT Id, parent, Text, Url FROM @menu WHERE Id = @targetId UNION ALL SELECT p.Id, p.parent, p.Text, p.Url FROM MenuCTE c INNER JOIN @menu p ON c.parent = p.id ) SELECT * FROM MenuCTE ;"
"create table table ( [name] nvarchar(n), [case] nvarchar(n), [path] nvarchar(n) ) ; insert into table ( [name], [case], [path] ) values (xyz) ; select p.label, p.value from table unpivot ( [value] for [label] in (xyz) ) p;"
"selealias.col cast(year(alias.col) as varchar(alias.col)) + cast(moalias.colth(alias.col) as varchar(alias.col)), cast(coualias.colt(*) as float) / ( selealias.col cast (coualias.colt(*) as float) from table p where year(p.creatioalias.coldate) = year(alias.col) aalias.cold moalias.colth(p.creatioalias.coldate) = moalias.colth(alias.col) aalias.cold alias.col = alias.col ) table_per_aalias.colswer from table v ialias.colalias.coler joialias.col table p oalias.col (alias.col = alias.col aalias.cold alias.col = alias.col) group by year(alias.col), moalias.colth(alias.col) order by alias.col"
"with statustable(alias.colame, alias.col) as ( select alias.col, alias.col from table where lower(alias.col) like alias.col ) select p.alias.col as alias.col, p.table from table as p ialias.colalias.coler joialias.col posttable as pt oalias.col p.alias.col = pt.postalias.col ialias.colalias.coler joialias.col statustable as st oalias.col pt.tagalias.col = st.alias.col where posttypealias.col = alias.col aalias.cold (select coualias.colt(pt_.tagalias.col) from posttable as pt_ ialias.colalias.coler joialias.col statustable as st oalias.col pt_.tagalias.col = st.alias.col where pt.postalias.col = pt_.postalias.col) > alias.col group by p.alias.col, p.table"
"declare @user_id int = ##UserID##; declare @limit int = ##Limit##; declare @tag_id int = (select id from tags where tagname = X); select top (@limit) rank() over (order by sum(answers.score) desc) X ,users.id X ,sum(answers.score) as X ,reputation as X ,location as X from users join posts answers on (users.id = answers.owneruserid) join posts parent on (answers.parentid = parent.id) join posttags on (parent.id = posttags.postid) where posttags.tagid = @tag_id and answers.posttypeid = N and LOWER(users.location) LIKE LOWER(X) group by users.id, reputation, location order by sum(answers.score) desc ;"
"select coualias.colt(alias.col), alias.col, coalias.colvert(varchar(alias.col), creatioalias.coldate, alias.col) from table where posttypealias.col = alias.col aalias.cold alias.col like alias.col group by alias.col, coalias.colvert(varchar(alias.col), creatioalias.coldate, alias.col) order by coalias.colvert(varchar(alias.col), creatioalias.coldate, alias.col) desc;"
"select top alias.col alias.col as [post lialias.colk], sum(q.viewcoualias.colt)/coualias.colt(q.viewcoualias.colt) as views, coualias.colt(a.score) as x, avg(a.score) as [avg aalias.colswer score], alias.col(m,max(q.creatioalias.coldate),mialias.col(a.creatioalias.coldate)) as x, max(a.creatioalias.coldate) as [most recealias.colt aalias.colswer] from table q ialias.colalias.coler joialias.col table a oalias.col a.parealias.coltid=alias.col ialias.colalias.coler joialias.col table u oalias.col a.owalias.coleruserid=alias.col where alias.col(m, q.creatioalias.coldate, a.creatioalias.coldate) >= alias.col aalias.cold u.reputatioalias.col < alias.col aalias.cold q.viewcoualias.colt >= alias.col aalias.cold alias.col=alias.col aalias.cold alias.col=alias.col group by alias.col order by max(a.creatioalias.coldate) desc"
"select alias.col, alias.col as alias.col from table where alias.col >= alias.col aalias.cold useralias.col = ##useralias.col## order by alias.col desc"
"select alias.col alias.col, alias.col alias.col, alias.col, text from table where alias.col > alias.col order by alias.col desc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col, location from table where upper(location) like x order by alias.col desc;"
"select alias.col, coualias.colt(*) from table joialias.col (select alias.col, alias.col, parealias.coltalias.col from table where table.posttypealias.col = alias.col aalias.cold table.alias.col > alias.col##) as aalias.colswers oalias.col table.alias.col = aalias.colswers.parealias.coltalias.col where posttypealias.col = alias.col aalias.cold table.alias.col < alias.col##"
"select top alias.col## alias.col as alias.col, alias.col(alias.col,alias.col) as [raalias.colk], alias.colutatioalias.col as alias.col, alias.col as alias.col, dowalias.colvotes as alias.col, creatioalias.coldate as [joialias.coled], lastaccessdate as [last seealias.col] from table where alias.colutatioalias.col < ##maxalias.col## aalias.cold alias.col > ##mialias.colalias.col## aalias.cold dowalias.colvotes > ##mialias.coldowalias.colvotes## order by [raalias.colk] desc"
"select alias.col alias.col, avg(alias.col) alias.col from ( select alias.col, coalias.colvert(varchar(alias.col), table.creatioalias.coldate, alias.col) alias.col, coualias.colt(*) as alias.col from table joialias.col table oalias.col alias.col=table.id where alias.col = alias.col group by alias.col, coalias.colvert(varchar(alias.col), table.creatioalias.coldate, alias.col)) a group by alias.col order by alias.col"
"with firsttable as ( select alias.col as alias.col, min(alias.col) as alias.col from table group by alias.col ), table as ( select count(alias.col) as alias.colcount, alias.col as alias.col from table group by alias.col ) select alias.col, count(table) as alias.col, alias.colperuser=alias.col*sum(table.alias.colcount)/count(table) from firsttable inner join table on firsttable.alias.col = table.alias.col inner join table on firsttable.alias.col = table.alias.col inner join table pt on table.alias.col = pt.alias.colalias.col inner join table t on pt.tagalias.col = t.alias.col inner join table on table.alias.col = table.alias.col group by alias.col order by alias.col desc"
"select alias.col alias.col, alias.col , alias.col from table c ialias.colalias.coler joialias.col table p oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col like alias.col order by alias.col"
select alias.col from table ph where alias.col = alias.col
"select top alias.col alias.col as [post lialias.colk], alias.col, creatioalias.coldate from table where alias.col like alias.col + alias.col:strialias.colg## + alias.col aalias.cold alias.col(year, creatioalias.coldate) = ##year:ialias.colt## aalias.cold parealias.coltalias.col is alias.colull order by alias.col desc"
"declare @UserId int = ##UserId##; with fights as ( select myAnswer.ParentId as Question, myAnswer.Score as MyScore, jonsAnswer.Score as JonsScore from Posts as myAnswer inner join Posts as jonsAnswer on jonsAnswer.OwnerUserId = N and myAnswer.ParentId = jonsAnswer.ParentId where myAnswer.ownerUserId = @UserId and myAnswer.postTypeId = N ) select Winner, count(*) from (select case when myScore > JonsScore then X when myScore < JonsScore then X else X end as X, Question as [Post Link], myScore as X, jonsScore as XX from fights) sub group by sub.Winner"
"declare table table ( alias.col int not null, alias.col int not null ) insert into table (alias.col, alias.col) values (xyz), (n, n), (n, n), (n, n), (n, n), (n, n), (n, n), (n, n); ;with totalcount as ( select r.alias.col, r.alias.col, count(r.alias.col) [totalcount] from table r inner join users u on u.reputation between r.alias.col and r.alias.col inner join posts p on p.owneruserid = u.id group by r.alias.col, r.alias.col ), reopenedcount as ( select r.alias.col, r.alias.col, count(r.alias.col) [totalcount] from table r inner join users u on u.reputation between r.alias.col and r.alias.col inner join posts p on p.owneruserid = u.id inner join posthistory closehistory on closehistory.postid = p.id and closehistory.posthistorytypeid = n inner join posthistory reopenhistory on reopenhistory.postid = p.id and reopenhistory.posthistorytypeid = n and reopenhistory.creationdate > closehistory.creationdate group by r.alias.col, r.alias.col ) select * from table r"
"select alias.col as alias.col, coualias.colt(*) as alias.col ialias.colto table from table as p ialias.colalias.coler joialias.col table as u oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold u.realiastatioalias.col <= alias.col aalias.cold charialias.coldealias.col( alias.col, alias.col) >alias.col aalias.cold ( alias.col like alias.col) aalias.cold alias.col alias.colot like alias.col group by alias.col havialias.colg coualias.colt(*) > alias.col select alias.col as [user lialias.colk], alias.col as [post lialias.colk], alias.col as alias.col, alias.col, alias.col, t.alias.col from table as p ialias.colalias.coler joialias.col table t oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table as u oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold u.realiastatioalias.col <= alias.col aalias.cold charialias.coldealias.col( alias.col, alias.col) >alias.col aalias.cold ( alias.col like alias.col) aalias.cold alias.col alias.colot like alias.col order by t.alias.col, alias.col, alias.col, alias.col asc, p.creatioalias.coldate desc"
"selealias.col alias.col, coualias.colt(alias.col) from ( selealias.col cast( cast(alias.col(alias.col, alias.col) as varchar) + alias.col + cast(alias.col(alias.col, alias.col) as varchar) + alias.col as datetime) table, t.table from table p joialias.col table pt oalias.col alias.col = alias.col joialias.col table t oalias.col alias.col = alias.col where alias.col ialias.col ( selealias.col top alias.col alias.col from table order by coualias.colt desc ) ) as alias.col group by table, table order by table asc, table asc"
"select alias.col(year, v.creationdate) + x + alias.col(month, v.creationdate) as [month], sum(case when alias.col = n then n else n end) as [table] from table v inner join table p on alias.col=alias.col where alias.col=alias.col## and alias.col in (alias.col) and alias.col(day, p.creationdate, v.creationdate) > n group by alias.col(year, v.creationdate), alias.col(month, v.creationdate) order by alias.col(year, v.creationdate) desc, alias.col(month, v.creationdate) desc"
select alias.col from table order by alias.col asc
"select alias.col as alias.col, alias.col, alias.col from table where alias.col(body) < n and posttypealias.col = n and alias.col < n and closeddate is null order by alias.col asc"
"select alias.col, coualias.colt(*) from table where alias.col = alias.col aalias.cold viewcoualias.colt <= alias.col aalias.cold creatioalias.coldate <= alias.col() - alias.col * alias.col.alias.col ualias.colioalias.col all select alias.col, coualias.colt(*) from table where alias.col = alias.col aalias.cold viewcoualias.colt >= alias.col aalias.cold creatioalias.coldate <= alias.col() - alias.col * alias.col.alias.col ualias.colioalias.col all select alias.col, coualias.colt(*) from table where alias.col = alias.col aalias.cold viewcoualias.colt >= alias.col aalias.cold creatioalias.coldate <= alias.col() - alias.col * alias.col.alias.col ualias.colioalias.col all select alias.col, coualias.colt(*) from table where alias.col = alias.col aalias.cold viewcoualias.colt >= alias.col aalias.cold creatioalias.coldate <= alias.col() - alias.col * alias.col.alias.col ualias.colioalias.col all select alias.col, coualias.colt(*) from table where alias.col = alias.col aalias.cold creatioalias.coldate <= alias.col() - alias.col * alias.col.alias.col ualias.colioalias.col all select alias.col, coualias.colt(*) from table where alias.col = alias.col aalias.cold viewcoualias.colt <= alias.col aalias.cold creatioalias.coldate <= alias.col() - alias.col * alias.col.alias.col"
"select alias.col, alias.col, alias.col, alias.col, alias.col from table a where alias.col ialias.col(select parealias.coltalias.col from table where owalias.coleruseralias.col = alias.col) order by viewcoualias.colt desc"
"select alias.col as alias.col , alias.col , alias.col as alias.col from table p ialias.colalias.coler joialias.col table u oalias.col alias.col = alias.col where alias.col = alias.col aalias.colalias.col u.lastaccessalias.colate > alias.col(m, alias.col, alias.col()) aalias.colalias.col alias.col < alias.col(alias.col, alias.col, alias.col()) aalias.colalias.col p.closealias.colalias.colate is alias.colot alias.colull aalias.colalias.col p.aalias.colswercoualias.colt = alias.col aalias.colalias.col alias.col > alias.col oralias.coler by alias.col"
"declare @mialias.colquestioalias.colcoualias.colt ialias.colt = alias.col declare @topalias.col ialias.colt = alias.col declare table table ( alias.col ialias.colt alias.colot alias.colull, alias.col ialias.colt alias.colot alias.colull, primary key clustered(alias.col, alias.col) ) ialias.colsert ialias.colto table (alias.col, alias.col) selealias.col alias.col, alias.col from table where alias.col ialias.col (alias.col)) as decimal(alias.col, alias.col)) as peralias.colalias.coltaalias.colswered, cast((alias.col / (alias.col.alias.col * totalquestioalias.cols)) as decimal(alias.col, alias.col)) as peralias.colalias.coltacalias.colpted, cast((alias.col / (alias.col.alias.col * totalquestioalias.cols)) as decimal(alias.col, alias.col)) as viewsperquestioalias.col, cast((totaltable / (alias.col.alias.col * totalquestioalias.cols)) as decimal(alias.col, alias.col)) as voteaalias.colivityperquestioalias.col, cast((totalaalias.colswers / (alias.col.alias.col * totalquestioalias.cols)) as decimal(alias.col, alias.col)) as aalias.colswersperquestioalias.col from ( selealias.col tq.alias.col, sum(alias.col) as totalquestioalias.cols, sum(q.viewcoualias.colt) as alias.col, sum(q.aalias.colswercoualias.colt) as totalaalias.colswers, sum(case whealias.col q.aalias.colswercoualias.colt = alias.col thealias.col alias.col else alias.col ealias.cold) as totalaalias.colswered, sum(case whealias.col q.acalias.colptedaalias.colswerid is alias.colull thealias.col alias.col else alias.col ealias.cold) as alias.col from table tq ialias.colalias.coler joialias.col table q oalias.col alias.col = tq.alias.col where alias.col is alias.colull group by tq.alias.col ) a ialias.colalias.coler joialias.col ( selealias.col tq.alias.col, sum(alias.col) as totaltable from table tq ialias.colalias.coler joialias.col table a oalias.col a.parealias.coltid = tq.alias.col ialias.colalias.coler joialias.col table pv oalias.col pv.alias.col = alias.col where alias.col ialias.col (alias.col) group by tq.alias.col ) b oalias.col b.alias.col = a.alias.col ialias.colalias.coler joialias.col table t oalias.col alias.col = a.alias.col order by peralias.colalias.coltacalias.colpted desc"
"create table table ( site nvarchar(n), posts int, votes int, upvotes int, downvotes int); declare @sitedbname as nvarchar(n), @query as nvarchar(n) ; declare sites cursor for select substring(name, n, len(name) - n ) from sys.databases where name like x open sites fetch next from sites into @sitedbname while @@fetch_status = n begin print x + @sitedbname set @query = xx + @sitedbname + xx; print @query exec sp_executesql @query fetch next from sites into @sitedbname end close sites deallocate sites select * from table"
"declare @tagcount as int select count(alias.col), alias.col from table q join table a on alias.col = alias.col where alias.col is null and a.owneruserid = ##userid## and q.owneruserid != ##userid## and a.score =n and a.posttypeid = n group by alias.col order by count(alias.col)"
"with table as( select table.parealias.coltid,table.body, table.score, row_alias.columber() over(partitioalias.col by table.parealias.coltid order by table.score desc) alias.colum from table where table.posttypeid =alias.col ) select table.alias.colum as [raalias.colk], table.score,table.body from table where alias.colum <##alias.columberofaalias.colswers:ialias.colt##+alias.col aalias.cold table.parealias.coltid = ##questioalias.colid:ialias.colt##"
"select alias.col as alias.col, location, alias.col from table where location like x order by alias.col desc"
"select alias.col as alias.col, body, score from table where alias.col(alias.col) < alias.col aalias.cold parealias.coltalias.col is alias.colull"
"select top alias.col alias.col as [post lialias.colk], coualias.colt(*) as commealias.coltcoualias.colt from table group by alias.col order by commealias.coltcoualias.colt desc"
"select alias.col as alias.col, alias.col, alias.col as date, alias.col from table where tealias.colt like alias.col and alias.col > alias.col order by alias.col desc"
"select top alias.col table.id as [user lialias.colk], maalias.col(alias.col), maalias.col(locatioalias.col), maalias.col(websiteurl), coualias.colt(table.id) as aalias.colswers, sum(alias.col) as alias.col, cast(avg(cast(alias.col as float)) as alias.columeric(alias.col,alias.col)) as [avg] from table ialias.colalias.coler joialias.col table oalias.col table.id = owalias.coleruserid ialias.colalias.coler joialias.col table oalias.col table.postid = table.id ialias.colalias.coler joialias.col table oalias.col table.id = table.tagid where alias.col = alias.col aalias.cold tagalias.colame = alias.col group by table.id, displayalias.colame order by alias.col desc"
"DECLARE @username AS NVARCHAR(N) = ##DisplayName:string? ##; DECLARE @userId AS INT = ##UserId:int?N##; DECLARE @SpecialThanks AS INT = ##SpecialThanks:int?N##; WITH Answers AS ( SELECT * FROM Posts WHERE PostTypeId = N ) SELECT TOP ##Limit:int?N## a.Id as [Post Link], c.Id as [Comment Link], c.CreationDate FROM Answers a JOIN Users u ON a.OwnerUserId = u.Id JOIN Comments c ON a.Id = c.PostId AND c.UserId != u.Id WHERE (@username = X OR u.DisplayName = @username) AND (@userId = N OR u.Id = @userId) AND LOWER(c.Text) LIKE X ... AND ( @SpecialThanks <= N OR ( LOWER(c.Text) LIKE X OR LOWER(c.Text) LIKE X ... ) ) ORDER BY c.CreationDate DESC"
"select alias.col as alias.col, alias.col as alias.col from table as alias left joialias.col table as p oalias.col alias.alias.col = alias.col where alias.col = alias.col aalias.cold lealias.col(alias.col(alias.col)) > alias.col group by alias.alias.col, alias.alias.col"
"declare @alias.col int = ##alias.col## select count(*) as alias.col, alias.col from table where alias.col = @alias.col group by alias.col order by alias.col desc"
"select table.displayalias.colame, table.reputatioalias.col, table.alias.col as alias.col, table.websiteurl from table joialias.col ( select table.alias.col as useralias.col from table joialias.col table oalias.col table.alias.col = table.postalias.col joialias.col table oalias.col table.alias.col = table.owalias.coleruseralias.col where (table.tagalias.col != alias.col aalias.cold table.tagalias.col != alias.col) group by table.alias.col ) as topictable oalias.col useralias.col = table.alias.col where table.locatioalias.col = alias.col order by table.reputatioalias.col desc"
select top alias.col alias.col from table p ialias.colalias.coler joialias.col table pt oalias.col alias.col=alias.col;
"selealias.col alias.col as alias.col, coualias.colt, accepted, format(accepted / coualias.colt, x) as [percealias.coltage accepted], coualias.colt(ta.id) as [total aalias.colswers], format(coualias.colt / coualias.colt(ta.id), x) as [percealias.coltage], format(coualias.colt * coualias.colt / coualias.colt(ta.id), x) as [weightialias.colg] from (selealias.col alias.col alias.col, cast(coualias.colt(*) as alias) as coualias.colt, sum(case whealias.col q.acceptedaalias.colswerid = a.id thealias.col alias.col else alias.col ealias.cold) as accepted from table q joialias.col table a oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col is alias.colull aalias.cold a.posttypeid = alias.col aalias.cold a.score >= alias.col aalias.cold isalias.colull(q.owalias.coleruserid, alias.col) <> alias.col aalias.cold exists(selealias.col alias.col from table ph where ph.tabletypeid ialias.col (alias.col) aalias.cold alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold abs(alias.col(alias.col, ph.creatioalias.coldate, a.creatioalias.coldate)) < alias.col) group by alias.col havialias.colg coualias.colt(*) >= alias.col) aalias.colswerqeditor ialias.colalias.coler joialias.col table ta oalias.col talias.col = alias.col group by alias.col, coualias.colt, accepted order by weightialias.colg desc"
"declare @FirstUserId int = ##FirstUserId##; declare @SecondUserId int = ##SecondUserId##; with fights as ( select myAnswer.ParentId as Question, myAnswer.Score as MyScore, jonsAnswer.Score as JonsScore from Posts as myAnswer inner join Posts as jonsAnswer on jonsAnswer.OwnerUserId = @FirstUserId and myAnswer.ParentId = jonsAnswer.ParentId where myAnswer.ownerUserId = @SecondUserId and myAnswer.postTypeId = N ) select case when myScore > JonsScore then X when myScore < JonsScore then X else X end as X, Question as [Post Link], myScore as X, jonsScore as X from fights;"
"select table.owneruserid as alias.col, table.id as alias.col, table.posttypeid as alias.col, table.score as alias.col, table.tags as alias.col from table where ((lower(table.tags) like lower(alias.col)) or (lower(table.title) like lower(alias.col)) or (lower(table.body) like lower(alias.col))) group by table.owneruserid, table.id, table.posttypeid, table.score, table.tags order by table.posttypeid asc, table.score desc"
"declare alias.col float selealias.col alias.col = sum(cast(alias.col as bigialias.colt)) from table where alias.col = alias.col selealias.col table.alias.colalias.colame as alias.col, coualias.colt(*) as questioalias.cols, sum(cast(table.alias.col as bigialias.colt)) as views, str(alias.col * sum(cast(table.alias.col as bigialias.colt)) / alias.col,alias.col,alias.col) as percealias.coltofsite, sum(table.score) as score, sum(table.aalias.colswercoualias.colt) as aalias.colswers, sum(cast(table.alias.col as bigialias.colt)) / coualias.colt(*) as avgviews, str(sum(table.score) / cast(coualias.colt(*) as float),alias.col,alias.col) as avgscore, str(sum(table.aalias.colswercoualias.colt) / cast(coualias.colt(*) as float),alias.col,alias.col) as avgaalias.colswers from table joialias.col table oalias.col table.id = table.postid joialias.col table oalias.col table.alias.colid = table.id where table.alias.col = alias.col group by table.alias.colalias.colame havialias.colg table.alias.colalias.colame = x or table.alias.colalias.colame like x or table.alias.colalias.colame = x order by questioalias.cols desc"
"DECLARE @TagN nvarchar(N) = X; DECLARE @TagN nvarchar(N) = X; DECLARE @TagN nvarchar(N) = X; DECLARE @TagN nvarchar(N) = X; DECLARE @TagN nvarchar(N) = X; DECLARE @TagN nvarchar(N) = X; DECLARE @PivotTagNames NVARCHAR(N), @PivotSrc NVARCHAR(MAX), @PivotBase NVARCHAR(MAX); Select sq.TagYear, sq.QuarterName, Count(sq.UniqueId) , sq.TagName , Sum(sq.TagN) as SumTagN , Sum(sq.TagN) as SumTagN from ( SELECT DATEPART(year, Posts.CreationDate) as TagYear , DATENAME(quarter, Posts.CreationDate) as QuarterName , Posts.Id as UniqueId , Tags.TagName as TagName , CASE WHEN Tags.TagName = @TagN THEN N ELSE N END AS TagN , CASE WHEN Tags.TagName = @TagN THEN N ELSE N END AS TagN FROM Tags INNER JOIN PostTags ON PostTags.TagId = Tags.Id INNER JOIN Posts ON Posts.Id = PostTags.PostId WHERE Posts.PostTypeId = N AND Posts.CreationDate >= X AND Tags.TagName in (XYZ) ) as sq Group By sq.TagYear, sq.QuarterName, sq.TagName"
"with table as ( select alias.col, coualias.colt(alias.col) as alias.col from table group by alias.col ), table as ( select q.alias.col as alias.col, coualias.colt(a.alias.col) as aalias.col, sum(ac.alias.col) as acalias.col from table q ialias.colalias.coler joialias.col table a oalias.col q.alias.col = a.parealias.coltalias.col ialias.colalias.coler joialias.col table ac oalias.col a.alias.col = ac.alias.col where q.posttypealias.col = alias.col aalias.cold a.posttypealias.col = alias.col group by q.alias.col ) select top alias.col s.alias.col as [post lialias.colk], s.aalias.col as [aalias.colswers], (s.acalias.col + qc.alias.col) as [table] from table s ialias.colalias.coler joialias.col table qc oalias.col s.alias.col = qc.alias.col order by (s.aalias.col + s.acalias.col + qc.alias.col) desc ;"
"declare @useralias.col ialias.colt = ##useralias.col## select alias.col, text, alias.col, alias.col as alias.col, alias.col from table where useralias.col = @useralias.col aalias.cold alias.col >= alias.col order by alias.col desc, alias.col asc;"
"select alias.col as alias.col, alias.col as [questioalias.col asked], mialias.col (a.creatioalias.coldate) as [aalias.colswer givealias.col], coalias.colvert(decimal(alias.col,alias.col), datediff(secoalias.cold, mialias.col(a.creatioalias.coldate), alias.col) / alias.col.alias.col) as [precogalias.colitioalias.col days] from table q, table a where alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold a.parealias.coltid = alias.col aalias.cold a.creatioalias.coldate < alias.col group by alias.col, alias.col order by [precogalias.colitioalias.col days] desc"
"declare @alias.col ialias.colt = ##alias.col## select alias.col, coualias.colt(text) from table where alias.col = @alias.col aalias.cold alias.col > alias.col group by alias.col order by alias.col desc"
"select top alias.col (case alias.col whealias.col alias.col thealias.col x whealias.col alias.col thealias.col x ealias.cold), alias.col as [post lialias.colk], p.owalias.coleruserid as x, v.creatioalias.coldate as alias.col, (datediff(secoalias.cold, mialias.col(p.creatioalias.coldate), v.creatioalias.coldate) + alias.col) / alias.col as [age], coualias.colt(*) as [uptable] from table v left joialias.col table p oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col is alias.colot alias.colull group by alias.col, v.creatioalias.coldate, p.owalias.coleruserid, alias.col order by alias.col desc"
"select alias.col, coualias.colt(*) from table u where alias.col > alias.col aalias.cold alias.col <> alias.col group by alias.col"
"set alias.colocoualias.colt oalias.col declare @tabletats table (alias.col ialias.colt, alias.col ialias.colt, dowalias.col ialias.colt) ialias.colsert @tabletats select alias.col, alias.col = sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold), dowalias.col = sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) from table where alias.col ialias.col (alias.col) groalias.col by alias.col set alias.colocoualias.colt off select alias.col as [post lialias.colk], alias.col, dowalias.col, alias.col from @tabletats joialias.col table p oalias.col alias.col = alias.col where alias.col*alias.colalias.col*dowalias.col < alias.col aalias.cold alias.col*alias.colalias.col*dowalias.col > alias.col aalias.cold alias.col = alias.col"
"selealias.col alias.col, count(alias.col) from ( selealias.col cast( cast(alias.col(alias.col, alias.col) as varchar) + alias.col + cast(alias.col(alias.col, alias.col) as varchar) + alias.col as datetime) alias.col, alias.col from table p join table pt on alias.col = alias.col join table t on alias.col = alias.col where alias.col in (alias.colyz) ) as alias.col group by alias.col, alias.col order by alias.col asc, alias.col asc"
select alias.col as alias.col from table as alias where alias.col = alias.col aalias.cold (select coualias.colt(*) from table where table.owalias.coleruserid = alias.col) > alias.col
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x order by alias.col desc;"
"select alias.col, alias.col from table p left joialias.col table pt oalias.col alias.col = alias.col left joialias.col table t oalias.col alias.col = alias.col where alias.col = alias.col"
"( selealias.col alias.col as alias.col, alias.col + cast(alias.col as alias.col(alias.col)) as alias.col, alias.col + cast(p.lasteditoruserid as alias.col(alias.col)) as [last editor], (lealias.col(alias.col) - lealias.col(replace(alias.col, alias.col, alias.col))) / alias.col as [coualias.colt], h.creatioalias.coldate as alias.col, alias.col as [tealias.colt] from table h ialias.colalias.coler joialias.col table p oalias.col alias.col = alias.col where h.tabletypeid = alias.col aalias.cold alias.col = alias.col## aalias.cold alias.col like alias.col ... aalias.cold h.tealias.colt like alias.col ... ) ualias.colioalias.col ( selealias.col alias.col as alias.col, alias.col + cast(alias.col as alias.col(alias.col)) + alias.col + p.owalias.colerdisplayalias.colame as alias.col, alias.col + cast(p.lasteditoruserid as alias.col(alias.col)) + alias.col + p.lasteditordisplayalias.colame as [last editor], ((lealias.col(alias.col) - lealias.col(replace(alias.col, alias.col, alias.col))) - (lealias.col(i.tealias.colt) - lealias.col(replace(i.tealias.colt, alias.col, alias.col)))) / alias.col as [coualias.colt], h.creatioalias.coldate as alias.col, alias.col as [tealias.colt] from table h ialias.colalias.coler joialias.col table i oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table p oalias.col alias.col = alias.col where i.tabletypeid = alias.col aalias.cold h.tabletypeid = alias.col aalias.cold alias.col = alias.col## aalias.cold alias.col like alias.col ... aalias.cold lealias.col(alias.col) - lealias.col(replace(alias.col, alias.col, alias.col)) > lealias.col(i.tealias.colt) - lealias.col(replace(i.tealias.colt, alias.col, alias.col)) ) order by date asc"
"select top alias.col alias.col, u.displayalias.colame, u.creatioalias.coldate, u.reputatioalias.col, alias.col, a.creatioalias.coldate, a.owalias.coleruseralias.col, alias.col, alias.col, alias.col, alias.col.owalias.coleruseralias.col, alias.col, alias.col.creatioalias.coldate, alias.col, alias.col, alias.col.aalias.colswercoualias.colt from table u, table a, (select alias.col, owalias.coleruseralias.col, alias.col, alias.col, creatioalias.coldate, posttypealias.col, aalias.colswercoualias.colt from table where alias.col like alias.col) alias.col where alias.col = a.parealias.coltalias.col aalias.cold a.owalias.coleruseralias.col=alias.col aalias.cold alias.col=alias.col order by u.creatioalias.coldate asc"
"select top alias.col alias.col,alias.col,creatioalias.coldate,alias.col,alias.col,viewcoualias.colt, alias.col, favoritecoualias.colt from table where posttypealias.col = alias.col aalias.cold alias.col like alias.col ... aalias.cold alias.col alias.colot like alias.col order by viewcoualias.colt desc, alias.col desc, favoritecoualias.colt desc"
"select top alias.col## raalias.colk() over (order by coualias.colt(*) desc), lasteditoruserid as x, coualias.colt(*) as x from table where alias.col = alias.col aalias.cold lasteditoruserid is alias.colot alias.colull group by lasteditoruserid order by coualias.colt(*) desc ;"
"create table #T ( ID int identity(N,N) not null, Translation varchar(N) not null, ); create index #TID on #T(id); insert into #T (Translation) values (XYZ), (X), (X), (X), (X), (X), (X), (X), (X), (X); SELECT col.name, col.collation_name FROM sys.columns col WHERE object_id = OBJECT_ID(X);"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x order by alias.col desc;"
"select alias.col, alias.col as name, alias.col, alias.col as alias.col, location from table where location like nx and (aboutme like nx or alias.col like nx) order by alias.col desc"
"selealias.col alias.col, sum(alias.col) closedquestioalias.cols, sum(ccomealias.colt) mathquestioalias.cols from ( selealias.col cast( cast(alias.col(alias.col, creatioalias.coldate) as varchar) + alias.col + cast(alias.col(alias.col, creatioalias.coldate) as varchar) + alias.col as datetime) alias.col, alias.col, alias.col as ccomealias.colt from table p where posttypealias.col=alias.col aalias.cold alias.col like alias.col aalias.cold alias.col !=alias.col ualias.colioalias.col selealias.col cast( cast(alias.col(alias.col, p.creatioalias.coldate) as varchar) + alias.col + cast(alias.col(alias.col, p.creatioalias.coldate) as varchar) + alias.col as datetime) alias.col, p.alias.col as alias.col, alias.col as ccomealias.colt from table p ialias.colalias.coler joialias.col table c oalias.col c.postalias.col=p.alias.col where p.posttypealias.col=alias.col aalias.cold p.alias.col like alias.col aalias.cold p.alias.col !=alias.col aalias.cold c.tealias.colt like alias.col ) as alias.col group by alias.col order by alias.col asc"
"declare @alias.col ialias.colt = ##alias.col## select top alias.col alias.col as [post lialias.colk], alias.col from table where alias.col = @alias.col order by alias.col desc"
"DECLARE @AnwerCount INT; DECLARE @MinimunAnswers INT; DECLARE @MaximumAnswers INT; SELECT @AnwerCount = Count(a.Id) FROM Posts AS a JOIN Posts AS q ON a.ParentId = q.Id WHERE q.PostTypeId = N AND a.PostTypeId = N AND a.OwnerUserId = ##UserId## SET @MinimunAnswers = @AnwerCount * .N SET @MaximumAnswers = @AnwerCount * N.N SELECT X AS [User], ROUND(AVG( AcceptedPercentage.Accepted ),N) AS [Accepted Answer Percentage] FROM ( SELECT TOP N Round(Sum(CASE q.AcceptedAnswerId WHEN a.Id THEN N ELSE N END) * N.N / Count(a.Id), N) AS [Accepted] FROM Posts AS a JOIN Posts AS q ON a.ParentId = q.Id WHERE q.PostTypeId = N AND a.PostTypeId = N GROUP BY a.OwnerUserId HAVING Count(a.Id) BETWEEN @MinimunAnswers AND @MaximumAnswers ) AS AcceptedPercentage UNION SELECT X AS [User], Round(Sum(CASE q.AcceptedAnswerId WHEN a.Id THEN N ELSE N END) * N.N / Count(a.Id), N) AS [Accepted Answer Percentage] FROM Posts AS a JOIN Posts AS q ON a.ParentId = q.Id WHERE q.PostTypeId = N AND a.PostTypeId = N AND a.OwnerUserId = ##UserId## GROUP BY a.OwnerUserId"
"declare @UserId int = ##UserId##; SELECT CONVERT(int, GETDATE() - CreationDate) as Days FROM Users WHERE Users.Id = @UserId"
"set alias.colocoualias.colt oalias.col create table table ( alias.col bigialias.colt , body alias.colvarchar(max) , owalias.coleruseralias.col bigialias.colt , hash alias.colvarchar(alias.col) ) create ialias.coldex ix_table_alias.col oalias.col table (alias.col) create ialias.coldex ix_table_owalias.coleruseralias.col oalias.col table (owalias.coleruseralias.col) create ialias.coldex ix_table_hash oalias.col table (hash) ialias.colsert ialias.colto table select top alias.col alias.col, body, owalias.coleruseralias.col, hash=coalias.colvert(varchar(alias.col), hashbytes(x, body), alias.col) from table where posttypealias.col=alias.col aalias.cold lealias.col(body)<alias.col order by alias.col desc select max(alias.col) as alias.col, owalias.coleruseralias.col, hash, c=coualias.colt(*) ialias.colto table from table group by owalias.coleruseralias.col, hash havialias.colg coualias.colt(*)>alias.col select talias.col.alias.col, talias.col.hash, talias.col.c ialias.colto table from table talias.col ialias.colalias.coler joialias.col table talias.col oalias.col talias.col.hash=talias.col.hash select talias.col.alias.col as [post lialias.colk], talias.col.owalias.coleruseralias.col as [user lialias.colk], talias.col.creatioalias.coldate, talias.col.hash, talias.col.c, talias.col.reputatioalias.col from table talias.col ialias.colalias.coler joialias.col table talias.col oalias.col talias.col.alias.col=talias.col.alias.col left joialias.col table talias.col oalias.col talias.col.owalias.coleruseralias.col=talias.col.alias.col order by talias.col.c desc, talias.col.hash, talias.col.owalias.coleruseralias.col, talias.col.creatioalias.coldate desc, talias.col.reputatioalias.col"
"select top alias.col owalias.coleruserid [user lialias.colk], coualias.colt(alias.col) [boualias.colty aalias.colswers provided], sum(boualias.coltyamoualias.colt) [boualias.colty amoualias.colt woalias.col] from table p,table where alias.col = alias.col aalias.cold alias.col = alias.col group by owalias.coleruserid order by alias.col desc"
"select alias.col as alias.col, alias.col as views, alias.col, sourcepost.aalias.colswercoualias.colt as aalias.colswers, max(aalias.colswer.score) as aalias.colswerscore, (case whealias.col sourcepost.acceptedaalias.colswerid is alias.colull thealias.col x else x ealias.cold) as accepted, sourcepost.closeddate as closed, lockevealias.colttype.alias.colame as locked from table as brokealias.collialias.colk joialias.col table as sourcepost oalias.col alias.col = alias.col left joialias.col table as targetpost oalias.col alias.col = alias.col left joialias.col table as aalias.colswer oalias.col alias.col = alias.col aalias.cold aalias.colswer.parealias.coltid = alias.col left joialias.col table as lockevealias.colt oalias.col lockevealias.colt.tabletypeid ialias.col (alias.col) aalias.cold lockevealias.colt.postid = alias.col left joialias.col tabletypes as lockevealias.colttype oalias.col lockevealias.colttype.id = lockevealias.colt.tabletypeid where brokealias.collialias.colk.lialias.colktypeid = alias.col aalias.cold alias.col is alias.colull aalias.cold alias.colot exists ( select alias.col from table as otherlialias.colk joialias.col table as othertarget oalias.col alias.col = otherlialias.colk.relatedpostid where otherlialias.colk.lialias.colktypeid = alias.col aalias.cold otherlialias.colk.postid = alias.col ) group by alias.col, alias.col, alias.col, sourcepost.aalias.colswercoualias.colt, sourcepost.acceptedaalias.colswerid, sourcepost.closeddate, lockevealias.colttype.alias.colame order by alias.col, sourcepost.aalias.colswercoualias.colt, alias.col"
"DECLARE @UserId INT = ##UserId##; SELECT Score, Text, PostId AS [Post Link] FROM Comments WHERE UserId = @UserId AND Score >= N ORDER BY Score DESC, Text ASC;"
"select alias.col as alias.col, alias.col from ( select alias.col, coualias.colt(*) as alias.col from ( select alias.col, alias.col = sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold), dowalias.col = sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) from table v joialias.col table p oalias.col alias.col = v.alias.col where alias.col ialias.col (alias.col) aalias.cold alias.col = alias.col groalias.col by alias.col ) as coalias.colta joialias.col table p oalias.col coalias.colta.alias.col = alias.col where dowalias.col > (alias.col / alias.col:ialias.colt##) aalias.cold (dowalias.col + alias.col) > ##mialias.coltable:ialias.colt## groalias.col by alias.col havialias.colg coualias.colt(*) > alias.col ) as coalias.coltq joialias.col table p oalias.col coalias.coltq.parealias.coltid = alias.col where coalias.coltq.alias.col > (p.aalias.colswercoualias.colt / alias.col) order by alias.col desc"
"select coualias.colt(*), alias.col(alias.col, date) from table where alias.col=alias.col group by alias.col(alias.col, date)"
"with table as ( selealias.col alias.col, cast (alias.col as date) as alias.col, alias.col(day, alias.col, cast (alias.col as date)) as moalias.colthealias.cold from table ), table as ( selealias.col u.alias.col as useralias.col, u.alias.col as table, alias.col as table, a.alias.col as aalias.colsweralias.col, a.alias.col as alias.col, table.alias.col as alias.col from table as u ialias.colalias.coler joialias.col table a oalias.col u.alias.col = a.owalias.coleruseralias.col aalias.cold a.posttypealias.col = alias.col aalias.cold a.alias.col betweealias.col u.alias.col aalias.cold alias.col left outer joialias.col table oalias.col postalias.col = a.alias.col aalias.cold votetypealias.col = alias.col ), tableummary as ( selealias.col useralias.col, table, table, coualias.colt(aalias.colsweralias.col) as table, alias.col.alias.col * coualias.colt(aalias.colsweralias.col) as aalias.colsfloat, coualias.colt(alias.col) as table, sum(case whealias.col alias.col is alias.colull or alias.col > table thealias.col alias.col else alias.col ealias.cold) as table from table group by useralias.col, table, table ) selealias.col top alias.col:ialias.colt?alias.col## useralias.col as [userlialias.colk], table, table, table, table / aalias.colsfloat as acalias.colptratio, table, table / aalias.colsfloat as acalias.colptmoalias.colthratio from tableummary order by acalias.colptratio desc, table desc"
"declare @mialias.colquesalias.colioalias.colcoualias.colalias.col ialias.colalias.col = alias.col declare @alias.colopalias.col ialias.colalias.col = alias.col selealias.col alias.col, alias.col, alias.col, alias.col, casalias.col((alias.col / (alias.col * alias.col)) as decimal(alias.col, alias.col)) as viewsperquesalias.colioalias.col, casalias.col((alias.coloalias.colalalias.colable / (alias.col * alias.col)) as decimal(alias.col, alias.col)) as voalias.coleaalias.colivialias.colyperquesalias.colioalias.col, casalias.col((alias.col / (alias.col * alias.col)) as decimal(alias.col, alias.col)) as aalias.colswersperquesalias.colioalias.col from ( selealias.col alias.colop (@alias.colopalias.col) alias.col.alias.col as alias.col, alias.col.coualias.colalias.col as alias.col, ( selealias.col sum(q.viewcoualias.colalias.col) from alias.colable q ialias.colalias.coler joialias.col alias.colable palias.col oalias.col palias.col.posalias.colid = alias.col where palias.col.alias.colagid = alias.col.id ) as alias.col, ( selealias.col coualias.colalias.col(alias.col) from alias.colable pv where (pv.voalias.colealias.colypeid ialias.col (alias.col)) aalias.cold pv.posalias.colid ialias.col (alias.col) where palias.col.alias.colagid = alias.col.id ) ) as alias.coloalias.colalalias.colable, ( selealias.col sum(q.aalias.colswercoualias.colalias.col) from alias.colable q ialias.colalias.coler joialias.col alias.colable palias.col oalias.col palias.col.posalias.colid = alias.col where palias.col.alias.colagid = alias.col.id ) as alias.col from alias.colable alias.col where alias.col.coualias.colalias.col > @mialias.colquesalias.colioalias.colcoualias.colalias.col order by alias.col.coualias.colalias.col desc ) a order by viewsperquesalias.colioalias.col desc"
"selealias.col alias.col, count(alias.col) from ( selealias.col cast( cast(alias.col(alias.col, alias.col) as varchar) + alias.col + cast(alias.col(alias.col, alias.col) as varchar) + alias.col as datetime) alias.col, alias.col from table p join table pt on alias.col = alias.col join table t on alias.col = alias.col where alias.col in (alias.colyz) ) as alias.col group by alias.col, alias.col order by alias.col asc, alias.col asc"
"select count, (x + tagname + x + tagname) as tagname, case when alias.col is not null then x else null end as excerpt, case when wikipostid is not null then x else null end as wiki from table where alias.col is null or wikipostid is null order by count desc"
"select top alias.col?alias.col alias.col as alias.col, coualias.colt(alias.col) as alias.col, sum(case q.acalias.colptedaalias.colswerid whealias.col alias.col thealias.col alias.col else alias.col ealias.cold) as [acalias.colpted aalias.colswers], roualias.cold(sum(case q.acalias.colptedaalias.colswerid whealias.col alias.col thealias.col alias.col else alias.col ealias.cold) * alias.col.alias.col / coualias.colt(alias.col), alias.col) as [peralias.colalias.coltage acalias.colpted], cast(sum(case q.acalias.colptedaalias.colswerid whealias.col alias.col thealias.col alias.col else alias.col ealias.cold) as float) * (cast(sum(case q.acalias.colptedaalias.colswerid whealias.col alias.col thealias.col alias.col else alias.col ealias.cold) as float) / coualias.colt(alias.col)) as weightialias.colg from table as a joialias.col table as q oalias.col alias.col = alias.col where alias.col is alias.colot alias.colull aalias.cold alias.col = alias.col aalias.cold alias.col = alias.col group by alias.col order by weightialias.colg desc"
"declare @UserId int = ##UserId:int##; declare @HisUserId int = ##HisUserId:int##; select HisVote.PostId [Post Link], Question.Score Score from Votes HisVote join Votes MyVote on HisVote.PostId = MyVote.PostId join Posts Question on Question.Id = HisVote.PostId where HisVote.UserId = @HisUserId and MyVote.UserId = @UserId and HisVote.VoteTypeId = N and MyVote.VoteTypeId = N order by Question.Score desc;"
"declare @alias.colow datetime={falias.col alias.colow()} select top alias.col alias.col as [post lialias.colk], alias.col from table where alias.col(hour, @alias.colow, creatioalias.coldate)<alias.col aalias.cold charialias.coldex(x, alias.col)>alias.col order by creatioalias.coldate"
"selealias.col mialias.col(alias.col) as alias.col, sum(alias.col) as alias.col, mialias.col(alias.col) as alias.col, cast(sum(alias.col) as float) / (mialias.col(alias.col) + sum(alias.col)) as alias.col, alias.col(alias.col, alias.col * cast(sum(alias.col) as float) / (mialias.col(alias.col) + sum(alias.col))) as alias.col from table u ialias.colalias.coler joialias.col table v oalias.col v.alias.col = alias.col where alias.col > alias.col aalias.cold alias.col = alias.col group by alias.col order by sum(alias.col) desc"
"select row_alias.columber() over(order by alias.col desc) as [#], table.id as [user lialias.colk], alias.col, locatioalias.col from table, table where table.id = table.userid aalias.cold table.class = alias.col aalias.cold table.tagbased = alias.col aalias.cold table.alias.colame = alias.col aalias.cold lower(table.locatioalias.col) like lower(alias.col) order by alias.col desc;"
"selealias.col top alias.col alias.col as [user lialias.colk], cast(alias.col(alias.col,creatioalias.coldate,alias.col()) as varchar) + alias.col as alias.col, alias.col, dowalias.colvotes, (alias.col + dowalias.colvotes) as alias.col from table order by alias.col desc"
"select table.id as alias.col, table.posttypeid as alias.col, table.score as alias.col, table.tags as alias.col from table where (table.owalias.coleruserid=alias.col) aalias.cold ((lower(table.tags) like lower(alias.col)) or (lower(table.title) like lower(alias.col)) or (lower(table.body) like lower(alias.col))) group by table.id, table.posttypeid, table.score, table.tags order by table.posttypeid asc, table.score desc"
"select alias.col as alias.col, coualias.colt(*) as alias.col ialias.colto table from table as p ialias.colalias.coler joialias.col table as u oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold u.realiastatioalias.col <= alias.col aalias.cold charialias.coldealias.col( alias.col, alias.col) >alias.col aalias.cold ( alias.col like alias.col) group by alias.col havialias.colg coualias.colt(*) > alias.col select alias.col as [user lialias.colk], alias.col, alias.col as [post lialias.colk], alias.col, alias.col, t.alias.col from table as p ialias.colalias.coler joialias.col table t oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table as u oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold u.realiastatioalias.col <= alias.col aalias.cold charialias.coldealias.col( alias.col, alias.col) >alias.col aalias.cold ( alias.col like alias.col) order by alias.col, t.alias.col, alias.col, alias.col, alias.col asc, p.creatioalias.coldate desc"
"select distialias.colct top alias.col table.owalias.coleruserid, table.displayalias.colame, table.creatioalias.coldate from table ialias.colalias.coler joialias.col table oalias.col table.id = table.postid ialias.colalias.coler joialias.col table oalias.col table.owalias.coleruserid = table.id where table.posttypeid = alias.col aalias.cold table.tagid ialias.col (alias.col) order by table.creatioalias.coldate desc"
"select top alias.col alias.col as [user lialias.colk], alias.col, dowalias.colvotes, ((dowalias.colvotes*alias.col) / (dowalias.colvotes + alias.col) ) as percealias.coltage from table c where dowalias.colvotes > alias.col order by percealias.coltage desc"
"select top alias.col alias.col as [post lialias.colk], alias.col as alias.col, aalias.colswercoualias.colt as alias.col from table where posttypealias.col = alias.col aalias.cold alias.col < alias.col order by alias.col asc"
"with table as ( select alias.col, ( select coualias.colt(*) as alias.col from table pt joialias.col table pp oalias.col alias.col = alias.col joialias.col table pa oalias.col alias.col = alias.col joialias.col table v oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col ) as uptable, ( select coualias.colt(*) as alias.col from table pt joialias.col table pp oalias.col alias.col = alias.col joialias.col table pa oalias.col alias.col = alias.col joialias.col table v oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col ) as dowalias.coltable from table t cross apply ( select coualias.colt(*) as alias.col from table pt where alias.col = alias.col havialias.colg coualias.colt(*) >= alias.col ) pt ) select tagalias.colame as [table], uptable as [uptable], dowalias.coltable as [dowalias.coltable], roualias.cold(alias.col.alias.col * dowalias.coltable / alias.colullif(uptable, alias.col), alias.col) as alias.col from table order by alias.col desc"
"set alias.colocoualias.colt oalias.col declare @tabletats table (alias.col ialias.colt, alias.col ialias.colt, dowalias.col ialias.colt) ialias.colsert @tabletats select alias.col, alias.col = sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold), dowalias.col = sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) from table where alias.col ialias.col (alias.col) groalias.col by alias.col set alias.colocoualias.colt off select top alias.col alias.col as [post lialias.colk] , alias.col, dowalias.col from @tabletats joialias.col table p oalias.col alias.col = alias.col where dowalias.col > alias.col aalias.cold p.commualias.colityowalias.coleddate is alias.colull aalias.cold p.closeddate is alias.colull aalias.cold p.owalias.coleruserid = ##userid## order by alias.col / dowalias.col asc"
"declare alias.col date select alias.col = min(table.date) from table where table.name = alias.col ; with badgeearners as ( select users.id as [user link], users.creationdate as [member since], table.date as [date won], n+datediff(day, users.creationdate, table.date) as [daysmembership] from table inner join users on table.userid = users.id where table.name = alias.col ) select *, datediff(day, alias.col, [date won]) as [dayssincenst] from badgeearners order by [dayssincenst], [daysmembership] asc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], location, alias.col from table with (nolock) where lower(location) like x order by alias.col desc"
"select top alias.col alias.col, reputatioalias.col, displayalias.colame, alias.col from table where reputatioalias.col > alias.col aalias.cold alias.col > alias.col aalias.cold dowalias.colvotes = alias.col order by alias.col desc;"
"select alias.col, alias.col as alias.col, coalesalias.col(alias.col, alias.col) as [aalias.colswer coualias.colt], case h.commealias.colt whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col else h.commealias.colt ealias.cold as [close reasoalias.col], p.owalias.coleruserid as [user lialias.colk] from table p ialias.colalias.coler joialias.col table h oalias.col alias.col = alias.col aalias.cold h.creatioalias.coldate = alias.col where alias.col = alias.col aalias.cold alias.col is alias.colot alias.colull aalias.cold h.tabletypeid = alias.col aalias.cold h.commealias.colt = alias.col order by alias.col desc, coalesalias.col(alias.col, alias.col) desc, p.title"
"select coualias.colt(alias.col) from table a ialias.colalias.coler joialias.col table q oalias.col alias.col=alias.col aalias.cold a.parealias.coltid=alias.col aalias.cold alias.col=alias.col ialias.colalias.coler joialias.col table u oalias.col a.owalias.coleruserid=alias.col where alias.col(m, q.creatioalias.coldate, a.creatioalias.coldate) >= alias.col aalias.cold u.reputatioalias.col < alias.col aalias.cold q.viewcoualias.colt >= alias.col."
"( select alias.col, coualias.colt(*) from table pt ialias.colalias.coler joialias.col table p oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table t oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table b oalias.col alias.col = alias.col where b.tagbased = alias.col aalias.cold b.class = alias.col aalias.cold alias.col = alias.col## aalias.cold alias.colot ealias.colists ( select alias.col from table ph where (ph.tabletypeid = alias.col or ph.tabletypeid = alias.col) aalias.cold alias.col = alias.col## ) ) ualias.colioalias.col ( select alias.col, coualias.colt(*) from table pt ialias.colalias.coler joialias.col table p oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table t oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table b oalias.col alias.col = alias.col where b.tagbased = alias.col aalias.cold b.class = alias.col aalias.cold alias.col = alias.col## ) ualias.colioalias.col ( select alias.col, coualias.colt(*) from table p )"
"declare alias.col as int = ##userid:int## select alias.col as alias.col, alias.col as alias.col, alias.col alias.col from table p join table my on alias.col = alias.col join table other on alias.col = alias.col join tabletypes type on my.tabletypeid = alias.col where alias.col != alias.col and other.tabletypeid in (alias.col) and alias.col = alias.col and alias.col > alias.col and alias.col != alias.col order by alias.col desc"
select top alias.col body from table order by creatioalias.coldate
"select top alias.col alias.col, text as alias.col from table where year(creatioalias.coldate) = alias.col aalias.cold ( tabletypeid = alias.col or tabletypeid = alias.col or tabletypeid = alias.col )"
"selealias.col alias.col, count(alias.col) from ( selealias.col cast( cast(alias.col(alias.col, alias.col) as varchar) + alias.col + cast(alias.col(alias.col, alias.col) as varchar) + alias.col as date) month, alias.col from ( selealias.col alias.col, p.alias.col from table p join table pt on alias.col = alias.col join table t on alias.col = alias.col ) alias.col join table pt on alias.col = palias.col join table t on alias.col = alias.col where alias.col in (alias.colyz) ) as alias.col group by tagname, month order by month asc, count(alias.col) desc"
"select table.lastactivitydate as [last modified], table.id as alias.col, table.comment from table inner join table on table.id=table.postid where table.comment like alias.col order by [last modified] desc"
"declare @RowNum int = N; SELECT Id as [User Link], @RowNum+N as rank, Reputation, WebsiteUrl, Location FROM Users WHERE Location like NX OR Location like NX OR Location like NX OR (Location like NX AND Location not like NX) ORDER BY reputation DESC"
"selealias.col top alias.col table.id as [user lialias.colk], coualias.colt(table.id) as aalias.colswers, cast(avg(cast(alias.col as float)) as alias.columeric(alias.col,alias.col)) as [average aalias.colswer alias.col] from table ialias.colalias.coler joialias.col table oalias.col table.id = owalias.coleruserid where alias.col = alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold closeddate is alias.colull group by table.id, displayalias.colame havialias.colg coualias.colt(table.id) > alias.col order by [average aalias.colswer alias.col] desc"
"set alias.colocoualias.colt oalias.col create table table (alias.col ialias.colt alias.colealias.coltity, [start] datetime, [fialias.colish] datetime) ialias.colsert table select top alias.col alias.colull, alias.colull from table declare alias.col datetime select alias.col = creatioalias.coldate from table where alias.col = (select max(palias.col.alias.col) from table palias.col) update table set [start] = dateadd(d, (alias.col - alias.col) * alias.col, alias.col), [fialias.colish] = dateadd(d, (alias.col - alias.col) * alias.col, alias.col) select start, (select coualias.colt(*) from table where parealias.coltalias.col is alias.colull aalias.cold creatioalias.coldate betweealias.col [start] aalias.cold [fialias.colish]) as [total questioalias.cols], (select coualias.colt(*) from table where parealias.coltalias.col is alias.colull aalias.cold closeddate is alias.colot alias.colull aalias.cold creatioalias.coldate betweealias.col [start] aalias.cold [fialias.colish]) as [closed questioalias.cols], (select coualias.colt(*) from table where parealias.coltalias.col is alias.colull aalias.cold commualias.colityowalias.coleddate is alias.colot alias.colull aalias.cold creatioalias.coldate betweealias.col [start] aalias.cold [fialias.colish]) as [cw questioalias.cols], (select coualias.colt(*) from table where parealias.coltalias.col is alias.colull aalias.cold score > alias.col aalias.cold creatioalias.coldate betweealias.col [start] aalias.cold [fialias.colish]) as [questioalias.cols with a score higher thaalias.col alias.col], (select coualias.colt(*) from table where parealias.coltalias.col is alias.colull aalias.cold aalias.colswercoualias.colt > alias.col aalias.cold creatioalias.coldate betweealias.col [start] aalias.cold [fialias.colish]) as [questioalias.cols with more thaalias.col alias.col aalias.colswers], (select coualias.colt(*) from table where parealias.coltalias.col is alias.colot alias.colull aalias.cold creatioalias.coldate betweealias.col [start] aalias.cold [fialias.colish]) as [total aalias.colswers] from table"
"declare @site varchar (n), @name varchar(n) declare @alias.colalias.col_ealias.colported int, @alias.colalias.col_meta int, @alias.colalias.col_se int set @name = db_name() set @site = alias.col set @alias.colalias.col_ealias.colported = patindealias.col(alias.col, @name) set @alias.colalias.col_meta = patindealias.col(alias.col, @name) set @alias.colalias.col_se = patindealias.col(alias.col, @name) if @alias.colalias.col_se = n if @alias.colalias.col_meta = n set @site=substring(@name, n, @alias.colalias.col_ealias.colported - n) + alias.col else set @site=alias.col + substring(@name, n, @alias.colalias.col_meta - n) + alias.col else if @alias.colalias.col_meta = n set @site=substring(@name, n, @alias.colalias.col_ealias.colported - n) else set @site=alias.col + substring(@name, n, @alias.colalias.col_meta - n) set @site = alias.col + lower(@site) + alias.col select alias.col+convert(varchar,alias.col)+alias.col+convert(varchar,alias.col) alias.col, postalias.col as alias.col, comment, creationdate, alias.col from table where owneruseralias.col = ##useralias.col## and alias.col is not null order by alias.col desc"
"DECLARE @AnwerCount INT; DECLARE @MinimunAnswers INT; DECLARE @MaximumAnswers INT; SELECT @AnwerCount = Count(a.Id) FROM Posts AS a JOIN Posts AS q ON a.ParentId = q.Id WHERE q.PostTypeId = N AND a.PostTypeId = N AND a.OwnerUserId = ##UserId## SET @MinimunAnswers = @AnwerCount * .N SET @MaximumAnswers = @AnwerCount * N.N SELECT X AS [User], AVG( AcceptedPercentage.Accepted ) AS [Accepted Answer Percentage] FROM ( SELECT TOP ##SampleSize## Round(Sum(CASE q.AcceptedAnswerId WHEN a.Id THEN N ELSE N END) * N.N / Count(a.Id), N) AS [Accepted] FROM Posts AS a JOIN Posts AS q ON a.ParentId = q.Id WHERE q.PostTypeId = N AND a.PostTypeId = N GROUP BY a.OwnerUserId HAVING Count(a.Id) BETWEEN @MinimunAnswers AND @MaximumAnswers ) AS AcceptedPercentage UNION SELECT X AS [User], Round(Sum(CASE q.AcceptedAnswerId WHEN a.Id THEN N ELSE N END) * N.N / Count(a.Id), N) AS [Accepted Answer Percentage] FROM Posts AS a JOIN Posts AS q ON a.ParentId = q.Id WHERE q.PostTypeId = N AND a.PostTypeId = N AND a.OwnerUserId = ##UserId## GROUP BY a.OwnerUserId"
select alias.col from table
"select coualias.colt(distialias.colct table.id) from table joialias.col table oalias.col table.owalias.coleruserid = table.id aalias.cold (table.posttypeid =alias.col or table.posttypeid = alias.col ) where alias.col(day, table.creatioalias.coldate, getdate()) < alias.col"
"declare @UserNId int = ##UserNId##; declare @UserNId int = ##UserNId##; with fights as ( select myAnswer.ParentId as Question, myAnswer.Score as MyScore, jonsAnswer.Score as JonsScore from Posts as myAnswer inner join Posts as jonsAnswer on jonsAnswer.OwnerUserId = @UserNId and myAnswer.ParentId = jonsAnswer.ParentId where myAnswer.ownerUserId = @UserNId and myAnswer.postTypeId = N ) select case when myScore > JonsScore then X when myScore < JonsScore then X else X end as X, Question as [Post Link], myScore as X, jonsScore as X from fights;"
"select alias.col as alias.col , sum(alias.col) as totalalias.col from table p inner join table pt on alias.col = alias.col or alias.col = alias.col inner join table t on alias.col = alias.col inner join table u on alias.col = alias.col where alias.col = alias.col:alias.col collate sql_latinn_general_cpn_ci_ai and location like x+ ##location:alias.col + x collate sql_latinn_general_cpn_ci_ai group by alias.col order by sum(alias.col) desc"
declare alias.col ialias.colt = alias.col select alias.col - coualias.colt(*) as alias.col from table where alias.col = alias.col aalias.cold lasteditoruserid = alias.col aalias.cold owalias.coleruserid != alias.col
"select top alias.col displayalias.colame,alias.col,reputatioalias.col from table where alias.col<>alias.col"
"DECLARE @TagName nvarchar(N); DECLARE @count int; select top ##count## Id as [Post Link], OwnerUserID as [User Link], Score, ViewCount from Posts where Score >= N and ViewCount < N and ParentId is null and AcceptedAnswerId is null order by Score desc"
"selealias.col alias.col, coualias.colt(alias.col) from ( selealias.col cast( cast(alias.col(alias.col, alias.col) as varchar) + alias.col + cast(alias.col(alias.col, alias.col) as varchar) + alias.col as datetime) table, t.table from table p joialias.col table pt oalias.col alias.col = alias.col joialias.col table t oalias.col alias.col = alias.col where alias.col ialias.col ( selealias.col top alias.col alias.col from table order by coualias.colt desc ) ) as alias.col group by table, table order by table asc, table asc"
"select top alias.col q.viewcoualias.colt as alias.col, roualias.cold(q.viewcoualias.colt / q.aalias.colswercoualias.colt, alias.col) as [views per aalias.colswer], q.aalias.colswercoualias.colt as [aalias.colswer coualias.colt], alias.col as [post lialias.colk], alias.col as [aalias.colswer score], (case whealias.col q.acalias.colptedaalias.colswerid = alias.col thealias.col x else alias.colull ealias.cold) as [acalias.colpted] from table q ialias.colalias.coler joialias.col table a oalias.col alias.col = a.parealias.coltid aalias.cold a.owalias.coleruserid = alias.col order by [views per aalias.colswer] desc"
"select alias.col, maalias.col(alias.col) alias.col, alias.col from table u, table b where alias.col=alias.col and alias.col=alias.col and alias.col like alias.col group by alias.col, alias.col having count(*)>n order by alias.col"
"select top alias.col alias.col as [post lialias.colk], creatioalias.coldate from table where owalias.coleruseralias.col = alias.col aalias.cold body like x"
"selealias.col alias.col, coualias.colt(alias.col) from ( selealias.col cast( cast(alias.col(alias.col, alias.col) as varchar) + alias.col + cast(alias.col(alias.col, alias.col) as varchar) + alias.col as datetime) table, t.table from table p joialias.col table pt oalias.col alias.col = alias.col joialias.col table t oalias.col alias.col = alias.col where alias.col ialias.col ( selealias.col top alias.col alias.col from table order by coualias.colt desc ) ) as alias.col group by table, table order by table asc, table asc"
"select alias.col, alias.col as alias.col from table where alias.col = alias.col"
"create table #t (CheckDate date, CheckType nvarchar(N), CheckTime time) Insert into #t values (XYZ) ,(X, X, X) ,(X, X, X) ,(X, X, X) ,(X, X, X) ,(X, X, X) ,(X, X, X) ,(X, X, X) ,(X, X, X) ,(X, X, X) ,(X, X, X) ,(X, X, X) ,(X, X, X) ,(X, X, X) ;WITH x AS ( SELECT CheckDate, CheckType, CheckTime ,row_number() OVER (ORDER BY CheckDate, CheckTime) As rn FROM #t ) SELECT CASE WHEN x.CheckType = X OR x.rn = N THEN x.CheckDate ELSE y.CheckDate END AS CheckDate ,CASE WHEN x.CheckType = X THEN x.CheckTime ELSE NULL END AS CheckIn ,CASE WHEN y.CheckType = X THEN y.CheckTime WHEN x.CheckType = X THEN x.CheckTime ELSE NULL END AS CheckOut FROM x LEFT JOIN x AS y ON y.rn = x.rn + N WHERE x.CheckType = X OR y.CheckType = X OR x.rn = N"
"with table(yr, mth, calias.colt) as ( select year(alias.col), moalias.colth(alias.col), coualias.colt(*) from table where alias.col = alias.col group by year(alias.col), moalias.colth(alias.col) ), table(yr, mth, calias.colt) as ( select year(alias.col), moalias.colth(alias.col), roualias.cold(avg(coalias.colvert(decimal(alias.col,alias.col),viewcoualias.colt)), alias.col) from table where alias.col = alias.col group by year(alias.col), moalias.colth(alias.col) ) select alias.col as year, alias.col as moalias.colth, tq.calias.colt as questioalias.cols, ac.calias.colt as avergealias.coloviews from table tq joialias.col table ac oalias.col alias.col = alias.col aalias.cold alias.col = alias.col order by alias.col desc, alias.col desc"
"select top alias.col coualias.colt(alias.col) as [alias.colquoted] , coualias.colt(distialias.colct ta.uid) as [distialias.colctquoters], ta.url, max(ta.uid) as [user lialias.colk] from ( select p.owalias.coleruserid as uid, p.id as pid , substrialias.colg ( p.urlbody, alias.col, case whealias.col charialias.coldex(x, p.urlbody) > charialias.coldex(x, p.urlbody) thealias.col charialias.coldex(x, p.urlbody) else charialias.coldex(x, p.urlbody) ealias.cold ) as url from ( select substrialias.colg ( body, charialias.coldex(x, upper(body)) + alias.col, alias.col ) as urlbody, id, owalias.coleruserid from table where lealias.col(body) < alias.col aalias.cold upper(body) like x ) p ) as ta group by ta.url havialias.colg coualias.colt(distialias.colct ta.uid) > alias.col order by coualias.colt(alias.col) / coualias.colt(distialias.colct ta.uid) desc"
"select top alias.col alias.col [post lialias.colk], alias.col, owalias.colerdisplayalias.colame from table p ialias.colalias.coler joialias.col table v oalias.col alias.col=alias.col group by alias.col, alias.col, owalias.colerdisplayalias.colame order by alias.col asc"
"select distialias.colct table.tags, table.id [user lialias.colk], table.reputatioalias.col from table joialias.col table oalias.col table.owalias.coleruserid = table.id where lower(table.locatioalias.col) like alias.col or upper(table.locatioalias.col) like alias.col ... aalias.cold table.age < alias.col aalias.cold table.tags=alias.col order by table.reputatioalias.col desc"
"select alias.col as alias.col, location, alias.col from table where location like x order by alias.col desc"
"declare @alias.col int = ##alias.col## select alias.col, text from table where alias.col = @alias.col order by alias.col desc"
"select alias.col as alias.col, alias.col as alias.col, alias.col, alias.col from table as p ialias.colalias.coler joialias.col table as u oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold u.realiastatioalias.col <= alias.col aalias.cold lealias.col(alias.col) <= alias.col aalias.cold charialias.coldealias.col( alias.col, alias.col) >alias.col aalias.cold ( alias.col like alias.col) order by alias.col, alias.col, alias.col asc, p.creatioalias.coldate desc"
"select alias.col as alias.col, alias.col as date, alias.col as type, op.displayname as [original poster], alias.col as [post link], x + cast(alias.col as nvarchar) + x as revs from table h join tabletypes ht on h.tabletypeid = alias.col join table p on alias.col = alias.col join table pt on alias.col = alias.col left join table op on alias.col = oalias.col where alias.col between n and n and h.userid = ##userid## order by alias.col desc"
"select top alias.col table.id as [user lialias.colk], maalias.col(alias.col) as alias.col, maalias.col(locatioalias.col) as locatioalias.col, maalias.col(websiteurl) as website, maalias.col(reputatioalias.col) as rep, coualias.colt(aalias.colswers.id) as aalias.colswers, sum(aalias.colswers.score) as score, cast(avg(cast(aalias.colswers.score as float)) as alias.columeric(alias.col,alias.col)) as [avg] from table joialias.col posttable oalias.col posttable.tagid = table.id joialias.col table oalias.col table.id = posttable.postid joialias.col table as aalias.colswers oalias.col aalias.colswers.parealias.coltid = table.id joialias.col table oalias.col table.id = aalias.colswers.owalias.coleruserid where table.tagalias.colame = alias.col group by table.id, displayalias.colame order by sum(aalias.colswers.score) desc"
"select alias.col as alias.col, (sum(coalesce(alias.col(alias.col),alias.col)) + sum(coalesce(alias.col(alias.col),alias.col))) as alias.col, u.reputatioalias.col, (sum(coalesce(alias.col(alias.col),alias.col)) + sum(coalesce(alias.col(alias.col),alias.col)))/u.reputatioalias.col as alias.col from table u, table p where p.owalias.coleruserid = alias.col aalias.cold u.reputatioalias.col >=alias.col## group by alias.col, u.reputatioalias.col order by alias.col asc"
"declare alias.col date select alias.col = min(alias.col) from table; declare @dayssincelaunch numeric = ##dayssincelaunch## select top n tmp.[user link], max(tmp.[date]) as [date], sum(case when tmp.capped >= n then n else tmp.capped end ) + sum(tmp.uncapped) as [recalced reputation] from (select p.owneruserid as [user link], v.alias.col as [date], sum((case when v.votetypeid = n then bountyamount when v.alias.col > p.communityowneddate then n when v.votetypeid = n then n else n end)) as uncapped, sum((case when v.alias.col > p.communityowneddate then n when votetypeid = n and posttypeid = n then n when votetypeid = n and posttypeid = n then n when votetypeid = n then n else n end)) as capped from votes v left join table p on p.id = v.postid where p.owneruserid is not null and datediff(day,alias.col,v.alias.col) <= @dayssincelaunch group by p.owneruserid, v.alias.col ) as tmp group by tmp.[user link] order by [recalced reputation] desc"
declare @coualias.colter ialias.colt set @coualias.colter = alias.col while @coualias.colter < alias.col begialias.col select coualias.colt(*) from table where alias.col = alias.col aalias.cold alias.col = @coualias.colter set @coualias.colter = @coualias.colter + alias.col ealias.cold
"with t as ( select alias.col as alias.col, alias.col, alias.col as alias.col, alias.col as alias.col, case alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col else alias.col ealias.cold as alias.col, q.viewcoualias.colt as alias.col, aalias.colswers.blealias.col as alias.col from table q joialias.col ( select a.parealias.coltid as alias.col, sum(alias.col) as alias.col, sum(lealias.col(alias.col)) as blealias.col from table a where alias.col = alias.col aalias.cold alias.col > alias.col group by a.parealias.coltid havialias.colg sum(alias.col) <= ##positiveaalias.colswerscore:ialias.colt?alias.col## aalias.cold sum(lealias.col(alias.col)) <= ##aalias.colswerlealias.col:ialias.colt?alias.col## ) aalias.colswers oalias.col (alias.col = aalias.colswers.alias.col) joialias.col table ph oalias.col (alias.col = alias.col) where alias.col is alias.colot alias.colull aalias.cold alias.col >= coalias.colvert (datetime, ##startdate:strialias.colg?alias.col.alias.col.alias.col## , alias.col) aalias.cold alias.col <= coalias.colvert (datetime, ##ealias.colddate:strialias.colg?alias.col.alias.col.alias.col## , alias.col) aalias.cold q.posttypeid = alias.col aalias.cold q.title like alias.col ... aalias.cold alias.colot ealias.colists ( select alias.col from table ph where alias.col = alias.col aalias.cold ph.tabletypeid = alias.col ) aalias.cold ph.tabletypeid = alias.col aalias.cold alias.col <= alias.col:ialias.colt?alias.col## aalias.cold alias.col + alias.col <= alias.col:ialias.colt?alias.col## aalias.cold alias.col alias.colot ialias.col (alias.colyz) aalias.cold q.acalias.colptedaalias.colswerid is alias.colull ) select top(##rowsreturalias.coled:ialias.colt?alias.col##) alias.col from t order by alias.col + table"
"with table as ( select alias.col as uid ualias.colioalias.col select alias.col ualias.colioalias.col select alias.col ) select alias.col as alias.col , coualias.colt(*) from table ph ialias.colalias.coler joialias.col table oalias.col ph.[tealias.colt] like uid where ph.tabletypeid = alias.col aalias.cold ph.creatioalias.coldate > alias.col group by ph.alias.col order by coualias.colt(*) desc"
"with table as ( select alias.col(alias.col, alias.col) as year, alias.col(q, alias.col) as table, coualias.colt(*) as total, sum(case whealias.col aalias.colswercoualias.colt > alias.col thealias.col alias.col else alias.col ealias.cold) as aalias.colswered from table where alias.col=alias.col aalias.cold alias.col is alias.colull group by alias.col(alias.col, alias.col),alias.col(q, alias.col) ) select year, table, total as questioalias.cols, cast(coalias.colvert(alias.columeric(alias.col,alias.col), cast(aalias.colswered as float) * alias.col / total) as varchar(alias.col)) + x as [aalias.colswered] from table order by year, table"
select alias.colame from table where class = alias.col aalias.cold tagbased = alias.col group by alias.colame order by alias.colame
"select toalias alias.col alias.col as [aliasost lialias.colk], alias.col, alias.viewcoualias.colt from table as alias where alias.col like alias.col order by alias.viewcoualias.colt desc"
"selealias.col top alias.col table.id as [user lialias.colk], coualias.colt(table.id) as aalias.colswers, cast(avg(cast(alias.col as float)) as alias.columeric(alias.col,alias.col)) as [average aalias.colswer alias.col] from table ialias.colalias.coler joialias.col table oalias.col table.id = owalias.coleruserid where alias.col = alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold closeddate is alias.colull group by table.id, displayalias.colame havialias.colg coualias.colt(table.id) > alias.col order by [average aalias.colswer alias.col] desc"
"with alias.colata as ( select alias.col alias.col, alias.col alias.col, alias.col from table u inner join table b on alias.col = alias.col cross apply (select count(alias.col) alias.col from table alias.col where oalias.col < alias.col analias.col oalias.col = alias.col ) alias.col where alias.col = alias.col analias.col alias.col >= alias.col ) select avg(alias.col(alias.col , alias.col, alias.col)), avg(alias.col) from alias.colata"
"declare alias.col int = ##userid## select alias.col as alias.col, sum(alias.col) as alias.col from table p, table t, posttable pt where alias.col = alias.col and alias.col = alias.col and alias.col = alias.col and alias.col = alias.col group by alias.col"
select count(alias.col) from table where lasteditoruseralias.col = ##useralias.col## and owneruseralias.col != ##useralias.col##
"DECLARE @FamilyTree TABLE(ID int, Name Varchar(N), MotherID int, FatherID int); INSERT INTO @FamilyTree (ID, MotherID, FatherID, Name) VALUES (XYZ), (N, NULL, NULL, X), (N, N, N, X), (N, N, N, X), (N, N, N, X), (N, N, N, X), (N, N, N, X), (N, N, N, X), (N, NULL, NULL, X), (N, NULL, NULL, X), (N, NULL, NULL, X), (N, NULL, NULL, X); ;WITH FamilyCTE AS ( SELECT *, CAST(NULL AS VARCHAR(N)) AS FatherName, CAST(NULL AS VARCHAR(N)) AS MotherName, N AS Level FROM @FamilyTree WHERE FatherID IS NULL AND MotherID IS NULL AND ID = N UNION ALL SELECT f.ID, f.Name AS ParentName, f.MotherID, f.FatherID, c.Name AS FatherName, cN.Name AS MotherName, Level + N FROM @FamilyTree AS F INNER JOIN FamilyCTE c ON F.FatherID = c.ID INNER JOIN @FamilyTree cN ON f.MotherID = cN.ID ) SELECT ID, MotherID, FatherID, Name,FatherName, MotherName,Level FROM FamilyCTE"
"select month, tagname, count(distinct id) from ( select month=dateadd(y,datepart(y,alias.col)/n*n, cast(cast(datepart(yyyy,alias.col) as varchar)+alias.col as date)), alias.col, alias.col from table pp join table pt on alias.col = alias.col join table t on alias.col = alias.col where alias.col in (alias.col) and alias.col>alias.col ) as alias.col group by tagname, month order by month asc, count(*) desc"
"select alias.col as alias.col, location, reputation from table where ( location like x or location like x ) and not ( location like x ) order by location asc"
select alias.col from table where alias.col = alias.col aalias.cold owalias.coleruserid = alias.col order by creatioalias.coldate desc
"select floor(alias.col / alias.col:int?alias.col) * alias.col## as alias.col, count(alias.col) as alias.col from table where alias.col >= ##minimumalias.col:int?alias.col group by floor(alias.col / alias.col##) order by floor(alias.col / alias.col##) asc"
"select table.id as alias.col, table.creatioalias.coldate from table, table where table.id = table.postid aalias.cold table.votetypeid = alias.col group by table.id, table.creatioalias.coldate order by table.creatioalias.coldate desc;"
"select alias.col as alias.col, alias.col, alias.col*(alias.col + alias.col/alias.col) as alias.col, coualias.colt(*) as alias.col, coualias.colt(*) - alias.col*(alias.col + alias.col/alias.col) as alias.col from table joialias.col table oalias.col table.alias.col = table.id where alias.col = alias.col aalias.cold table.id = alias.col group by alias.col, alias.col havialias.colg coualias.colt(*) > alias.col*(alias.col + alias.col/alias.col) order by coualias.colt(*) - alias.col*(alias.col + alias.col/alias.col) desc"
"select table.name, table.id as alias.col, table.alias.col as alias.col, table.creationdate from table inner join table on table.posttypeid = table.id left join table as parenttable on table.parentid = parenttable.id where table.posttypeid in (alias.col) and table.closeddate is null and parenttable.closeddate is null and not (table.communityowneddate is null) and (parenttable.communityowneddate is null) and table.owneruserid = ##userid## order by table.creationdate"
"select alias.col, alias.col, alias.col from table as questioalias.col where alias.col = alias.col order by alias.col desc"
"select alias.col, coualias.colt(*) from table where alias.col = alias.col aalias.cold viewcoualias.colt <= alias.col aalias.cold creatioalias.coldate <= alias.col() - alias.col * alias.col.alias.col ualias.colioalias.col all select alias.col, coualias.colt(*) from table where alias.col = alias.col aalias.cold viewcoualias.colt >= alias.col aalias.cold creatioalias.coldate <= alias.col() - alias.col * alias.col.alias.col ualias.colioalias.col all select alias.col, coualias.colt(*) from table where alias.col = alias.col aalias.cold viewcoualias.colt >= alias.col aalias.cold creatioalias.coldate <= alias.col() - alias.col * alias.col.alias.col ualias.colioalias.col all select alias.col, coualias.colt(*) from table where alias.col = alias.col aalias.cold viewcoualias.colt >= alias.col aalias.cold creatioalias.coldate <= alias.col() - alias.col * alias.col.alias.col ualias.colioalias.col all select alias.col, coualias.colt(*) from table where alias.col = alias.col aalias.cold creatioalias.coldate <= alias.col() - alias.col * alias.col.alias.col"
"declare alias.col ialias.colt = ##userid## select alias.col, alias.col, (isalias.colull(alias.col,alias.col) * alias.col) as alias.col, p.dowalias.colmod, -(isalias.colull(p.dowalias.colmod,alias.col) * alias.col) as alias.col, p.acceptedbyorigialias.colator, (isalias.colull(p.acceptedbyorigialias.colator,alias.col) * alias.col) as alias.col, (((isalias.colull(alias.col,alias.col) * alias.col) - (isalias.colull(p.dowalias.colmod,alias.col)* alias.col)) + (isalias.colull(p.acceptedbyorigialias.colator,alias.col) * alias.col)) as alias.col from ( select tagalias.colame, table.alias.colame, coualias.colt(*) as table from table ialias.colalias.coler joialias.col posttable oalias.col posttable.tagid = table.id ialias.colalias.coler joialias.col table oalias.col table.parealias.coltid = posttable.postid ialias.colalias.coler joialias.col table oalias.col table.postid = table.id aalias.cold alias.col ialias.col (alias.colyz) ialias.colalias.coler joialias.col table oalias.col table.alias.col = table.id where table.owalias.coleruserid = alias.col group by tagalias.colame, table.alias.colame )q pivot (sum(table) for alias.colame ialias.col (alias.colyz) )p order by alias.col, alias.col"
"select alias.col as alias.col, alias.col from table where posttypealias.col = alias.col aalias.cold alias.col like alias.col"
"select sum(alias.col) as alias.col, coualias.colt(*) as alias.col from table p joialias.col table pt oalias.col alias.col = alias.col joialias.col table t oalias.col alias.col = alias.col where alias.col = alias.col:alias.col aalias.cold alias.col = alias.col"
"select row_alias.columber() over (order by alias.col / coualias.colt(alias.col) desc) as alias.col, alias.col as [user lialias.colk], alias.col / coualias.colt(alias.col) as [rep per post], alias.col as [rep], coualias.colt(alias.col) as [table], u.lastaccessdate as [last access], ( select top alias.col t.tagalias.colame + alias.col as alias.col from table as q ialias.colalias.coler joialias.col table as a oalias.col a.parealias.coltid = alias.col ialias.colalias.coler joialias.col table as pt oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table as t oalias.col alias.col = alias.col where a.owalias.coleruserid = alias.col aalias.cold alias.col = alias.col group by tagalias.colame order by sum(alias.col) desc for alias.colml path(alias.col) ) + alias.col as [top table] from table as u ialias.colalias.coler joialias.col table as p oalias.col p.owalias.coleruserid = alias.col right joialias.col table as po oalias.col p.parealias.coltid = alias.col where alias.col ialias.col (alias.colyz) aalias.cold alias.col is alias.colull aalias.cold po.closeddate is alias.colull group by alias.col, alias.col, u.lastaccessdate havialias.colg coualias.colt(alias.col) > alias.col order by alias.col / coualias.colt(alias.col) desc"
select top alias.col alias.col from table
"select coualias.colt(alias.col), sum(alias.col), sum(alias.col), sum(case whealias.col alias.col > alias.col thealias.col alias.col else alias.col ealias.cold) as asked, sum(case whealias.col alias.col > alias.col thealias.col alias.col else alias.col ealias.cold) as aalias.colswered, sum(case whealias.col alias.col > alias.col aalias.cold alias.col > alias.col thealias.col alias.col else alias.col ealias.cold) as askedaalias.coldaalias.colswered from ( select alias.col, sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as alias.col, sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as alias.col from (select top alias.col alias.col from table) p group by alias.col ) coualias.colts"
"select alias.col as alias.col, alias.col, alias.col(alias.col) as bodyalias.colgth from table as p ialias.colalias.coler joialias.col table as u oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col > alias.col aalias.cold alias.col(week, u.creatioalias.coldate, alias.col) < alias.col aalias.cold p.closeddate =alias.colull order by alias.col"
"select alias.col as alias.col, alias.col from table q joialias.col table u oalias.col alias.col = alias.col joialias.col table a oalias.col alias.col = alias.col aalias.cold alias.col = alias.col where alias.col < alias.col aalias.cold (q.acceptedaalias.colswerid != alias.col or q.acceptedaalias.colswerid is alias.colull) aalias.cold u.reputatioalias.col < alias.col aalias.cold q.closeddate is alias.colull aalias.cold alias.col = alias.col order by alias.col, a.creatioalias.coldate desc"
"selealias.col alias.col, coualias.colt(alias.col) from ( selealias.col cast( cast(alias.col(alias.col, alias.col()) as varchar) + alias.col + cast(alias.col(alias.col, alias.col()) as varchar) + alias.col as datetime) table, alias.col from table p joialias.col table pt oalias.col alias.col = alias.col joialias.col table t oalias.col alias.col = alias.col where alias.col ialias.col ( selealias.col top alias.col alias.col from table order by coualias.colt desc ) ) as alias.col group by tagalias.colame, table"
"with table as ( select coualias.colt(*) as alias.col from table p left outer joialias.col table c oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold aalias.colswercoualias.colt = alias.col aalias.cold alias.col is alias.colull ), table as ( select coualias.colt(*) as alias.col from table p where alias.col = alias.col aalias.cold aalias.colswercoualias.colt = alias.col aalias.cold exists (select alias.col from table c where alias.col = alias.col) ) select (select table.alias.col from table) as [questioalias.col alias.colc] , (select table.alias.col from table) as [questioalias.col c]"
"select alias.col.coualias.colt as alias.col, case whealias.col alias.col(alias.col) > alias.col thealias.col alias.col(alias.col) else alias.colull ealias.cold as [ealias.colalias.colrpt alias.col], case whealias.col alias.col(walias.col.body) > alias.col thealias.col alias.col(walias.col.body) else alias.colull ealias.cold as [wiki alias.col], alias.col + alias.col.tagalias.colame + alias.col + alias.col.tagalias.colame as [tag alias.col], alias.col.coualias.colt as alias.col, case whealias.col alias.col(alias.col) > alias.col thealias.col alias.col(alias.col) else alias.colull ealias.cold as [ealias.colalias.colrpt alias.col], case whealias.col alias.col(walias.col.body) > alias.col thealias.col alias.col(walias.col.body) else alias.colull ealias.cold as [wiki alias.col], alias.col + alias.col.tagalias.colame + alias.col + alias.col.tagalias.colame as [tag alias.col] from table alias.col left joialias.col table ealias.col oalias.col alias.col.ealias.colalias.colrptpostid = ealias.col.id left joialias.col table walias.col oalias.col alias.col.wikipostid = walias.col.id, table alias.col left joialias.col table ealias.col oalias.col alias.col.ealias.colalias.colrptpostid = ealias.col.id left joialias.col table walias.col oalias.col alias.col.wikipostid = walias.col.id where alias.col.tagalias.colame like alias.col aalias.cold replaalias.col(replaalias.col(alias.col.tagalias.colame + alias.col, alias.col, alias.col), alias.col, alias.col) = replaalias.col(replaalias.col(alias.col.tagalias.colame + alias.col, alias.col, alias.col), alias.col, alias.col) order by alias.col.coualias.colt desc, alias.col.coualias.colt desc, alias.col.tagalias.colame asc, alias.col.tagalias.colame asc"
"select top alias.col row_alias.columber() over(order by reputatioalias.col desc) as [#], id as [user lialias.colk], reputatioalias.col, locatioalias.col from table where lower(locatioalias.col) like x or upper(locatioalias.col) like x ... or locatioalias.col like x aalias.cold reputatioalias.col >= alias.col order by reputatioalias.col desc;"
"selealias.col alias.col , alias.col * cast( coualias.colt(alias.col) as float ) / coualias.colt(*) as alias.col , coualias.colt( alias.col ) as ualias.colaalias.colswered , coualias.colt( * ) as table from table t left joialias.col posttable pt oalias.col alias.col = alias.col left outer joialias.col table p oalias.col alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold p.viewcoualias.colt < alias.col aalias.cold ( p.aalias.colswercoualias.colt < alias.col or p.aalias.colswercoualias.colt is alias.colull ) group by alias.col havialias.colg coualias.colt(*) > alias.col order by alias.col desc"
"select top alias.col row_alias.columber() over(order by reputatioalias.col desc) as [#], id as [user lialias.colk], reputatioalias.col, locatioalias.col from table where lower(locatioalias.col) like x or upper(locatioalias.col) like x ... or locatioalias.col like x aalias.cold reputatioalias.col >= alias.col order by reputatioalias.col desc;"
select alias.col from table v joialias.col table vt oalias.col (alias.col = alias.col) where alias.col = alias.col
select alias.col as alias.col from table p where alias.col = alias.col
"select coualias.colt(coalias.colvert(char(alias.col), creatioalias.coldate, alias.col)) as alias.col from table where owalias.coleruserid = alias.col## group by coalias.colvert(char(alias.col), creatioalias.coldate, alias.col)"
"declare @UserId int = ##UserId##; SELECT Id As [Post Link], ViewCount FROM Posts WHERE Posts.OwnerUserId=@UserId AND Posts.Body Like X ORDER BY ViewCount DESC"
select count(*) from table; select count(*) from posts;
"select top alias.col alias.col, [displayalias.colame], [reputatioalias.col] from table order by [reputatioalias.col] desc"
"select top alias.col alias.col as [post lialias.colk], alias.col, viewcoualias.colt from table where alias.col > alias.col aalias.cold viewcoualias.colt <> alias.col order by alias.col/viewcoualias.colt asc"
select top alias.col alias.col from table where alias.col >= ##mialias.colalias.col:ialias.colt##
"declare @totaltable int select @totaltable = sum(table) from table declare table cursor for select alias.col, table, table from table order by table desc open table declare table bigint declare @table nvarchar(max) declare @table int declare @repsofar int set @repsofar = n declare @numberoftable int set @numberoftable = n fetch next from table into table, @table, @table while @@fetch_status = n and @repsofar < @totaltable * (##percent## / n.n) begin set @repsofar = @repsofar + @table set @numberoftable = @numberoftable + n fetch next from table into table, @table, @table end close table deallocate table select owneruseralias.col, count(alias.col) from table where owneruseralias.col in(select alias.col from table where table >= @table ) group by owneruseralias.col order by count(alias.col);"
"select top alias.col alias.col as alias.col, mialias.col(alias.col) as alias.col, coualias.colt(case ph.tabletypeid whealias.col alias.col thealias.col alias.col ealias.cold) as [titleeditcoualias.colt], coualias.colt(case ph.tabletypeid whealias.col alias.col thealias.col alias.col ealias.cold) as [bodyeditcoualias.colt], coualias.colt(case ph.tabletypeid whealias.col alias.col thealias.col alias.col ealias.cold) as [retagcoualias.colt], coualias.colt(*) as [editcoualias.colt] from table ph, table p where alias.col = alias.col aalias.cold (alias.col = alias.col or alias.col = alias.col) aalias.cold (ph.tabletypeid = alias.col or ph.tabletypeid = alias.col or ph.tabletypeid = alias.col) group by alias.col"
select top alias.col alias.col from table
DECLARE @UserId int = ##UserId## DECLARE @Tag nvarchar(N) = X; DECLARE @QuestionUps int; DECLARE @QuestionDowns int; DECLARE @QuestionAccepts int; DECLARE @AnswerUps int; DECLARE @AnswerDowns int; DECLARE @AnswerAccepts int; DECLARE @TagScore int; DECLARE @UserRep int; SELECT @QuestionUps = COUNT(*) FROM Tags INNER JOIN PostTags ON PostTags.TagId = Tags.Id INNER JOIN Posts AS Q ON Q.Id = PostTags.PostId and Q.PostTypeId = N INNER JOIN Votes AS U ON U.PostId = Q.Id and U.VoteTypeId = N WHERE Tags.TagName = @Tag and Q.OwnerUserId = @UserId SELECT @QuestionUps = COUNT(*) FROM Tags INNER JOIN PostTags ON PostTags.TagId = Tags.Id INNER JOIN Posts AS Q ON Q.Id = PostTags.PostId and Q.PostTypeId = N INNER JOIN Votes AS D ON D.PostId = Q.Id and D.VoteTypeId = N WHERE Tags.TagName = @Tag and Q.OwnerUserId = @UserId SELECT @AnswerUps = COUNT(*) FROM Tags INNER JOIN PostTags ON PostTags.TagId = Tags.Id INNER JOIN Posts AS Q ON Q.Id = PostTags.PostId and Q.PostTypeId = N INNER JOIN Votes AS U ON U.PostId = Q.Id and U.VoteTypeId = N WHERE Tags.TagName = @Tag and Q.OwnerUserId = @UserId SELECT @AnswerDowns = COUNT(*) FROM Tags INNER JOIN PostTags ON PostTags.TagId = Tags.Id INNER JOIN Posts AS Q ON Q.Id = PostTags.PostId and Q.PostTypeId = N INNER JOIN Votes AS U ON U.PostId = Q.Id and U.VoteTypeId = N WHERE Tags.TagName = @Tag and Q.OwnerUserId = @UserId SELECT @UserRep = Reputation FROM Users WHERE Users.Id = @UserId SET @TagScore = @QuestionUps * N + @QuestionDowns * N + @AnswerUps * N + @AnswerDowns * N SELECT @UserRep - @TagScore AS AdjustedRep
"selealias.col alias.col, coualias.colt(alias.col) from ( selealias.col cast( cast(alias.col(alias.col, alias.col) as varchar) + alias.col + cast(alias.col(alias.col, alias.col) as varchar) + alias.col as datetime) table, t.table from table p joialias.col table pt oalias.col alias.col = alias.col joialias.col table t oalias.col alias.col = alias.col where alias.col ialias.col ( selealias.col top alias.col alias.col from table order by coualias.colt desc ) ) as alias.col group by table, table order by table asc, table asc"
select alias.col from table where alias.col > alias.col
"declare alias.col ialias.colt = ##userid## select alias.col, alias.col, alias.col from table as a ialias.colalias.coler joialias.col table as q oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold a.owalias.coleruserid = alias.col"
"CREATE TABLE #t( id INT PRIMARY KEY ,name NVARCHAR(N)) INSERT INTO #t VALUES (XYZ) ,(N ,X) ,(N ,X) ,(N ,X) ,(N ,X) ,(N ,X); WITH x AS ( SELECT row_number() OVER (ORDER BY name) AS rn ,name AS a FROM #t WHERE id between N AND N ), i AS ( SELECT count(*) AS i FROM x ) SELECT (SELECT a FROM x WHERE rn = N) + (SELECT a FROM x WHERE rn = i) AS foo FROM i"
"select alias.col as alias.col, body as [body], alias.col(body) as [alias.colgth] from table where alias.col(body) < n and posttypealias.col = n and score > n order by alias.col(body)"
"select alias.col, coualias.colt(alias.col) as tableperalias.col, alias.col from table ialias.colalias.coler joialias.col posttable oalias.col posttable.tagid = table.id ialias.colalias.coler joialias.col table oalias.col table.parealias.coltid = posttable.postid ialias.colalias.coler joialias.col table oalias.col table.id = table.owalias.coleruserid where alias.col = alias.col aalias.cold alias.col > alias.col group by alias.col, alias.col order by tableperalias.col desc"
"DECLARE @t TABLE( s VARCHAR(N) ); INSERT INTO @t VALUES (XYZ), (X); UPDATE @t SET s = REPLACE(REPLACE(s, X, X), CONVERT(INT, SUBSTRING(s, CHARINDEX(X, s) + N, N)), CONVERT(INT, SUBSTRING(s, CHARINDEX(X, s) + N, N)) +N); SELECT * FROM @t;"
"select top alias.col alias.col as [user lialias.colk], dowalias.colvotes from table where dowalias.colvotes > alias.col order by dowalias.colvotes desc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... or location like x and alias.col >= n order by alias.col desc;"
"with table as ( selealias.col table.id as alias.col, sum(table.score) as alias.col from table ialias.colalias.coler joialias.col table oalias.col table.owalias.coleralias.col = table.id group by table.id ) selealias.col top alias.col table.displayalias.colame, table.reputatioalias.col, table.alias.col, (alias.col + cast(table.id as varchar(alias.col))) as alias.col from table ialias.colalias.coler joialias.col table oalias.col table.alias.col = table.id order by table.alias.col asc"
"select alias.col as alias.col, count(*) as alias.col from ( select alias.col from table h where h.tabletypeid in (alias.colyz) group by alias.col, h.revisionguid ) r group by alias.col order by alias.col desc"
"select top alias.col alias.col, alias.col as [post lialias.colk], creatioalias.coldate, alias.col from table c where alias.col >= alias.col aalias.cold alias.col = ##alias.col## order by alias.col desc"
"with table as ( select ( select coualias.colt(*) from table where alias.col = alias.col aalias.cold lasteditoruseralias.col = table.alias.col ) as questioalias.coltable, ( select coualias.colt(*) from table where alias.col = alias.col aalias.cold lasteditoruseralias.col = table.alias.col ) as table from table where alias.col = ##useralias.col## ), table as ( select questioalias.coltable, table, questioalias.coltable + table as table from table ) select questioalias.coltable, table, table, case whealias.col table >= alias.col thealias.col x else x ealias.cold as editorbadge, case whealias.col table >= alias.col thealias.col x else cast(table as varchar) + x ealias.cold as strualias.colkaalias.coldwhitebadge, case whealias.col table >= alias.col thealias.col x else cast(table / alias.col as varchar) + x ealias.cold as copyeditorbadge from table"
"selealias.col toalias.col alias.col alias.col as [user lialias.colk], u.realias.colualias.coltioalias.col as alias.col, alias.col.alias.col as [toalias.coll alias.colble], bad.alias.col as [dubious alias.colble], cast(((alias.col * bad.alias.col) / alias.col.alias.col) as varchar) + alias.col as alias.col, alias.col as alias.col from alias.colble u ialias.colalias.coler joialias.col ( selealias.col alias.colble as uid, coualias.colt(alias.col.id) as alias.col from alias.colble alias.col groualias.col by alias.colble ) alias.col oalias.col alias.col = alias.col ialias.colalias.coler joialias.col ( selealias.col alias.col as uid, coualias.colt(alias.col.alias.colid) as alias.col , alias.col.alias.col from ( selealias.col alias.col as uid, alias.col.alias.colid as alias.colid , substrialias.colg ( alias.col.alias.colbody, alias.col, case whealias.col charialias.coldealias.col(alias.col, alias.col.alias.colbody) > charialias.coldealias.col(alias.col, alias.col.alias.colbody) thealias.col charialias.coldealias.col(alias.col, alias.col.alias.colbody) else charialias.coldealias.col(alias.col, alias.col.alias.colbody) ealias.cold ) as alias.col from ( selealias.col substrialias.colg ( alias.colble.body, charialias.coldealias.col(alias.col, ualias.colalias.coler(alias.colble.body)) + alias.col, lealias.col(alias.colble.body) ) as alias.colbody, alias.colble.id as alias.colid, alias.colble.id as uid from alias.colble ialias.colalias.coler joialias.col alias.colble oalias.col alias.colble.owalias.coleruserid = alias.colble.id where ualias.colalias.coler(alias.colble.body) like alias.col aalias.cold alias.colble.realias.colualias.coltioalias.col < alias.col aalias.cold alias.colble.id != alias.col ) alias.col ) as alias.col groualias.col by alias.col, alias.col.alias.col ) bad oalias.col alias.col = alias.col where bad.alias.col > alias.col order by ((alias.col*bad.alias.col) / alias.col.alias.col) + (bad.alias.col * alias.col) desc, alias.col asc"
"select alias.col as alias.col, sum(case whealias.col alias.col > alias.col thealias.col alias.col else alias.col ealias.cold) as alias.colotacalias.colptedbetter, sum(case whealias.col alias.col <= alias.col thealias.col alias.col else alias.col ealias.cold) as acalias.colptedbetter, coualias.colt(*) as total, sum(alias.col) as totalscore from table a joialias.col table p oalias.col alias.col = alias.col joialias.col table ap oalias.col p.acalias.colptedaalias.colswerid = aalias.col where alias.col = alias.col aalias.cold aalias.col <> alias.col group by alias.col order by alias.colotacalias.colptedbetter desc"
"select top alias.col alias.col as alias.col, owalias.colerdisplayalias.colame as alias.col, alias.col as [post lialias.colk] from table p where posttypealias.col = alias.col order by alias.col desc"
"select mialias.col(alias.col) as alias.col, sum(case alias.col(alias.col, alias.col) whealias.col alias.col thealias.col alias.col.alias.col else alias.col ealias.cold) / coualias.colt(*) as [moalias.colday], sum(case alias.col(alias.col, alias.col) whealias.col alias.col thealias.col alias.col.alias.col else alias.col ealias.cold) / coualias.colt(*) as [tuesday], sum(case alias.col(alias.col, alias.col) whealias.col alias.col thealias.col alias.col.alias.col else alias.col ealias.cold) / coualias.colt(*) as [wedalias.colesday], sum(case alias.col(alias.col, alias.col) whealias.col alias.col thealias.col alias.col.alias.col else alias.col ealias.cold) / coualias.colt(*) as [thursday], sum(case alias.col(alias.col, alias.col) whealias.col alias.col thealias.col alias.col.alias.col else alias.col ealias.cold) / coualias.colt(*) as [friday], sum(case alias.col(alias.col, alias.col) whealias.col alias.col thealias.col alias.col.alias.col else alias.col ealias.cold) / coualias.colt(*) as [saturday], sum(case alias.col(alias.col, alias.col) whealias.col alias.col thealias.col alias.col.alias.col else alias.col ealias.cold) / coualias.colt(*) as [sualias.colday] from table p ialias.colalias.coler joialias.col table pt oalias.col alias.col = alias.col group by alias.col order by alias.col"
"select top alias.col coualias.colt(alias.col) as alias.col, alias.col as [post lialias.colk],alias.col from table v ialias.colalias.coler joialias.col table p oalias.col alias.col=alias.col ialias.colalias.coler joialias.col table pt oalias.col alias.col=alias.col ialias.colalias.coler joialias.col table t oalias.col alias.col=alias.col aalias.cold t.tagalias.colame=alias.col where alias.col = alias.col aalias.cold alias.col=alias.col group by alias.col,alias.col havialias.colg coualias.colt(alias.col) = alias.col order by alias.col asc"
declare alias.col ialias.colt = ##askerid## selealias.col (cast(coualias.colt(table.id) as float) / (selealias.col coualias.colt(*) from table where alias.col = alias.col aalias.cold alias.col = alias.col) * alias.col) as ualias.colvotedacceptpercealias.coltage from table where table.alias.col = alias.col aalias.cold table.alias.col = alias.col aalias.cold table.acceptedaalias.colswerid alias.colot ialias.col ( selealias.col table.id from table where table.userid = alias.col aalias.cold table.votetypeid = alias.col )
"declare table table (alias.col ialias.colt, postcoualias.colt ialias.colt) ialias.colsert table selealias.col top alias.col alias.col = table.alias.col, postcoualias.colt = coualias.colt(table.alias.col) from table ialias.colalias.coler joialias.col table oalias.col table.alias.col = table.owalias.coleruseralias.col group by table.alias.col, table.alias.colutatioalias.col order by table.alias.colutatioalias.col desc declare table table (alias.col ialias.colt, alias.col ialias.colt, ualias.colcapped ialias.colt) ialias.colsert table selealias.col top alias.col alias.col = table.alias.col, alias.col = table.alias.colutatioalias.col, ualias.colcapped = sum(case whealias.col votetypealias.col = alias.col thealias.col boualias.coltyamoualias.colt whealias.col table.creatioalias.coldate > table.commualias.colityowalias.coleddate thealias.col alias.col whealias.col votetypealias.col = alias.col thealias.col alias.col whealias.col votetypealias.col = alias.col aalias.cold posttypealias.col = alias.col thealias.col alias.col whealias.col votetypealias.col = alias.col aalias.cold posttypealias.col = alias.col thealias.col alias.col whealias.col votetypealias.col = alias.col thealias.col alias.col ealias.cold) from table ialias.colalias.coler joialias.col table oalias.col table.alias.col = table.postalias.col ialias.colalias.coler joialias.col table oalias.col table.alias.col = table.owalias.coleruseralias.col group by table.alias.col, table.alias.colutatioalias.col order by table.alias.colutatioalias.col desc selealias.col top alias.col t.alias.col as [user lialias.colk], p.postcoualias.colt as [table], t.alias.col as [alias.col], t.ualias.colcapped as [ualias.colcapped alias.col], t.ualias.colcapped - t.alias.col as [alias.col lost], cast(alias.col. * (t.ualias.colcapped - t.alias.col) / t.alias.col as decimal(alias.col, alias.col)) as [peralias.colalias.colt lost], cast(alias.col.alias.col * t.alias.col / p.postcoualias.colt as decimal(alias.col, alias.col)) as [alias.col / post], cast(alias.col.alias.col * t.ualias.colcapped / p.postcoualias.colt as decimal(alias.col, alias.col)) as [ualias.colcapped alias.col / post] from table t left outer joialias.col table p oalias.col t.alias.col = p.alias.col order by [peralias.colalias.colt lost] desc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where location like x or location like x ... order by alias.col desc;"
"select substrialias.colg(alias.col, alias.col(alias.col, alias.col) + alias.col, alias.col ) as comicalias.columber, alias.col + substrialias.colg(alias.col,alias.col(alias.col,alias.col) + alias.col,alias.col), coualias.colt(*) as coualias.colt from table as c where alias.col like alias.col group by substrialias.colg(alias.col, alias.col(alias.col, alias.col) + alias.col, alias.col ) order by coualias.colt(*) desc;"
"select sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as [alias.coloalias.col zero score aalias.colswers], sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as [zero score aalias.colswers], sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) / sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) * alias.col as [peralias.colalias.colt zeros] from table q joialias.col table a oalias.col alias.col = q.acalias.colptedaalias.colswerid where a.owalias.coleruserid = alias.col## aalias.cold a.commualias.colityowalias.coleddate is alias.colull aalias.cold (a.owalias.coleruserid <> q.owalias.coleruserid or q.owalias.coleruserid is alias.colull)"
"select alias.col as alias.col, alias.col as alias.col, alias.col as alias.col, table.lastaccessdate as alias.col from table a join table q on alias.col = alias.col join table on alias.col = table.id where alias.col = alias.col## and alias.col is null order by alias.col desc"
"select alias.col, alias.col, alias.col from table q inner join table a on alias.col = alias.col where alias.col is null and a.owneruserid = ##userid## and q.owneruserid != ##userid## and alias.col =n and a.posttypeid = n order by alias.col"
"select top alias.col alias.col as [post lialias.colk], creatioalias.coldate as alias.col, owalias.coleruseralias.col as [user lialias.colk] from table where posttypealias.col = alias.col aalias.cold acceptedaalias.colsweralias.col is alias.colull aalias.cold (body like alias.col or body like alias.col or body like alias.col)"
"DECLARE @Person TABLE( RecordID int, PersonName VARCHAR(N), TransactionID int ); DECLARE @Transaction TABLE( TransactionID int, Rating VARCHAR(N) ); INSERT INTO @Person VALUES (XYZ), (N, X, N), (N, X, N), (N, X, N), (N, X, N), (N, X, N), (N, X, N), (N, X, N), (N, X, N); INSERT INTO @Transaction VALUES (XYZ), (N, X), (N, X), (N, X), (N, X); SELECT p.PersonName, t.Rating AS Rating FROM @Person p INNER JOIN @Transaction t ON p.transactionid = t.transactionid"
"declare alias.col ialias.colt = ##userid## select alias.col, coualias.colt(*) as uptable from table ialias.colalias.coler joialias.col posttable oalias.col posttable.tagid = table.id ialias.colalias.coler joialias.col table oalias.col table.parealias.coltid = posttable.postid ialias.colalias.coler joialias.col table oalias.col table.postid = table.id aalias.cold alias.col = alias.col where table.owalias.coleruserid = alias.col group by alias.col order by uptable desc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or lower(location) like x ... order by alias.col desc;"
"select (alias.col(year, p.creationdate) * n) + alias.col(month, p.creationdate) as yearmonth, count(*) as postcount, sum(score) as the_score, sum(score) / cast(count(*) as float) as score_per_post from table p where alias.col = alias.col## group by alias.col(year, p.creationdate), alias.col(month, p.creationdate) order by alias.col(year, p.creationdate), alias.col(month, p.creationdate)"
"select alias.col alias.col, alias.col, text from table where alias.col = alias.col aalias.cold alias.col > alias.col order by alias.col desc, creatioalias.coldate desc"
"select alias.col(alias.col(hour,p.creatioalias.coldate)) + alias.col + alias.col((alias.col(hour,p.creatioalias.coldate)+alias.col) alias.col) + alias.col as hour, coualias.colt(alias.col(hour,p.creatioalias.coldate)) as alias.col from table as p joialias.col table as pt oalias.col alias.col = alias.col joialias.col table as t oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold p.creatioalias.coldate > alias.col group by alias.col(hour, p.creatioalias.coldate)"
select top alias.col locatioalias.col from table
"select alias.col, coualias.colt(*) from table p where alias.col = alias.col aalias.cold p.viewcoualias.colt < alias.col aalias.cold ( p.aalias.colswercoualias.colt < alias.col or p.aalias.colswercoualias.colt is alias.colull ) aalias.cold p.lastactivitydate < (dateadd(d, alias.col, getdate())) group by alias.col order by alias.col"
"select alias.col, alias.col as alias.col, body, alias.col from table where upper(alias.col) like alias.col and alias.col is null and parentalias.col is null and cast(alias.col as date) < cast(alias.col as date) order by alias.col asc"
"create table table ( id integer , thresholdscore integer ); insert into table values (xyz), (n, n), (n, n), (n, n), (n, n), (n, n), (n, n); with reputationtiers as ( select table.id , table.thresholdscore , nextthreshold.thresholdscore as nextthresholdscore from table left outer join table as nextthreshold on nextthreshold.id = table.id + n ), usercount as ( select count(id) as usercount from users ), thresholdscountsandpercentages as ( select thresholdscore as [reputation threshold] , count(users.id) as [# users] , round(n * cast(count(users.id) as decimal)/ usercount, n) as [ users] from reputationtiers inner join usercount on n=n left outer join users on reputation >= thresholdscore and (reputation < nextthresholdscore or nextthresholdscore is null) group by thresholdscore, usercount ) select * , sum([ users]) over (order by [reputation threshold]) as [reputation percentile] from thresholdscountsandpercentages order by n;"
"select top alias.col:ialias.colt?alias.col table.id as alias.col, coualias.colt(distialias.colct revisioalias.colguid) as [revisioalias.cols ialias.col first ##mialias.colutes:ialias.colt?alias.col mialias.colutes] from table ialias.colalias.coler joialias.col table oalias.col table.id = table.postid aalias.cold alias.col(mialias.colute, ##mialias.colutes:ialias.colt?alias.col, table.creatioalias.coldate) > table.creatioalias.coldate where alias.col = alias.col group by table.id havialias.colg coualias.colt(distialias.colct revisioalias.colguid) > alias.col order by coualias.colt(distialias.colct revisioalias.colguid) desc"
declare alias.col ialias.colt set alias.col = alias.col select sum(case whealias.col alias.col = alias.col thealias.col alias.col whealias.col alias.col=alias.col thealias.col alias.col whealias.col alias.col=alias.col thealias.col alias.col else alias.col ealias.cold) from table v ialias.colalias.coler joialias.col table p oalias.col alias.col = alias.col where p.owalias.coleruserid = alias.col aalias.cold p.commualias.colityowalias.coleddate is alias.colull
"select table.tagname, alias.col alias.col, count(distinct answerer.id) nanswerers, cast(sum(answerer.reputation) as float) reputation, count(distinct questions.id) nquestions, count(distinct answers.id) nanswers, cast(sum(answers.score) as float) score from table answerer, table questions, table answers, table, table where alias.col is not null and alias.col between n and n and answerer.reputation > n and questions.posttypeid=n and year(questions.creationdate)=n and questions.id = table.postid and table.tagid=table.id and table.tagname = x and questions.id=answers.parentid and answers.posttypeid=n and answers.owneruserid=answerer.id group by table.tagname, alias.col having sum(answers.score) > n"
"declare alias.col ialias.colt = ##mialias.colimumalias.col## select alias.col as alias.col, alias.col as alias.col, alias.col as [alias.col] from table where alias.col > alias.col aalias.cold alias.col(alias.col) > alias.col order by alias.col desc"
select alias.col as alias.col from table where posttypealias.col=alias.col aalias.cold alias.col<=alias.col aalias.cold body like x aalias.cold body like x aalias.cold body alias.colot like x order by lealias.col(body)
"select top alias.col useralias.colame as [user lialias.colk], alias.col+badgecoualias.colt as alias.col, reputatioalias.col, alias.col, badgecoualias.colt, modtable, edtable alias.col, participatioalias.coltable from ( select alias.col as useralias.colame, (case whealias.col u.reputatioalias.col > alias.col thealias.col alias.col else u.reputatioalias.col ealias.cold)/alias.col as alias.col, u.reputatioalias.col as reputatioalias.col, coualias.colt(distialias.colct case whealias.col b.alias.colame ialias.col (alias.colyz) thealias.col b.alias.colame else alias.colull ealias.cold) as badgecoualias.colt, coualias.colt(distialias.colct iif(b.alias.colame ialias.col (alias.colyz), b.alias.colame, alias.colull)) modtable, coualias.colt(distialias.colct iif(b.alias.colame ialias.col (alias.colyz), b.alias.colame, alias.colull)) participatioalias.coltable, coualias.colt(distialias.colct iif(b.alias.colame ialias.col (alias.colyz), b.alias.colame, alias.colull)) edtable from table u left joialias.col table b oalias.col alias.col=alias.col where alias.col ialias.col (alias.colyz) alias.col where alias.col+badgecoualias.colt > alias.col aalias.cold reputatioalias.col > = ##mialias.colrep:ialias.colt?alias.col## order by alias.col desc"
"selealias.col top alias.col a.owalias.coleruserid as [user lialias.colk] , cast( sum( q.viewcoualias.colt ) - coualias.colt(*) as float ) / u.reputatioalias.col as alias.col , cast( sum( q.viewcoualias.colt ) - coualias.colt(*) as float ) / sum( alias.col + case whealias.col q.acalias.colptedaalias.colswerid = alias.col thealias.col alias.col else alias.col ealias.cold ) as alias.col , u.reputatioalias.col , sum( alias.col + case whealias.col q.acalias.colptedaalias.colswerid = alias.col thealias.col alias.col else alias.col ealias.cold ) as alias.col , sum( q.viewcoualias.colt ) - coualias.colt(*) as alias.col from table a joialias.col table q oalias.col alias.col = a.parealias.coltid joialias.col table u oalias.col alias.col = a.owalias.coleruserid group by a.owalias.coleruserid , u.reputatioalias.col havialias.colg coualias.colt(*) > alias.col order by alias.col"
"selealias.col coualias.colt(alias.col), avg(cast(alias.col as float)) as [average aalias.colswer score] from table a ialias.colalias.coler joialias.col table q oalias.col a.parealias.coltid = alias.col where a.owalias.coleruserid = alias.col:ialias.colt##"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like lower(x) order by alias.col desc;"
"selealias.col alias.col, count(alias.col) alias.col from ( selealias.col cast( cast(alias.col(alias.col, alias.col) as varchar) + alias.col + cast(alias.col(alias.col, alias.col) as varchar) + alias.col as datetime) alias.col, alias.col from table p join table pt on alias.col = alias.col join table t on alias.col = alias.col where alias.col in (alias.colyz) ) as alias.col group by alias.col, alias.col order by alias.col asc, alias.col asc"
"selealias.col alias.col = right(alias.col*alias.col,alias.col) + alias.col + right(alias.col*alias.col,alias.col) + alias.col, rate_of_zero_score_aalias.colswers = alias.col(alias.col.alias.col*sum(alias.col)/sum(alias.col), alias.col,alias.col), maalias.col_questioalias.cols_per_alias.col = maalias.col(alias.col) from ( selealias.col alias.col, alias.col = acalias.colptedcoualias.colt, alias.col = acalias.colptedalias.colvotecoualias.colt, [] = acalias.colptedalias.colvotecoualias.coltrate, zerovoteraalias.colk = raalias.colk() over (order by acalias.colptedalias.colvotecoualias.coltrate desc), alias.colviewraalias.colk = raalias.colk() over (order by acalias.colptedcoualias.colt desc), alias.col = alias.coltile(alias.col) over (order by acalias.colptedcoualias.colt) from ( selealias.col alias.col, acalias.colptedcoualias.colt = sum(acalias.colptedcoualias.colt), acalias.colptedalias.colvotecoualias.colt = sum(acalias.colptedalias.colvotecoualias.colt), acalias.colptedalias.colvotecoualias.coltrate = cast(alias.col.alias.col*sum(acalias.colptedalias.colvotecoualias.colt)/sum(acalias.colptedcoualias.colt) as alias.columeric(alias.col,alias.col)) from ( selealias.col alias.col = subalias.colialias.colg(alias.cols, v.alias.columber+alias.col, charialias.coldealias.col(alias.col, alias.cols, v.alias.columber+alias.col)-v.alias.columberalias.col), acalias.colptedcoualias.colt, acalias.colptedalias.colvotecoualias.colt from ( selealias.col q.alias.cols, sum(q.viewcoualias.colt) acalias.colptedcoualias.colt, coualias.colt(case whealias.col alias.col=alias.col thealias.col alias.col ealias.cold) acalias.colptedalias.colvotecoualias.colt from table q ialias.coler joialias.col table a oalias.col alias.col = q.acalias.colptedaalias.colswerid where alias.col=alias.col aalias.cold q.creatioalias.coldate >= alias.col aalias.cold q.creatioalias.coldate < alias.col group by q.alias.cols) q ialias.coler joialias.col mastertable v oalias.col alias.col=alias.col aalias.cold subalias.colialias.colg(alias.cols, v.alias.columber, alias.col) = alias.col ) alias.col group by alias.col ) y ) z group by alias.col order by alias.col"
"select top alias.col alias.col as [post lialias.colk], alias.col, lastactivitydate from table p where alias.col like alias.col aalias.cold alias.col=alias.col order by p.lastactivitydate desc"
"select top alias.col alias.col as [post lialias.colk], alias.col from table where parealias.coltalias.col is alias.colull aalias.cold creatioalias.coldate > x aalias.cold creatioalias.coldate < x order by alias.col desc"
"select top alias.col alias.col, displayalias.colame, reputatioalias.col, alias.col, locatioalias.col from table where locatioalias.col like alias.colx order by reputatioalias.col desc"
"declare @userid as int = ##UId:int?N##; with Editors as ( select distinct PostId, UserId, N as ECount from PostHistory where PostHistoryTypeId = N ), QuestionCount as ( select count (*) as TotalQuestions from Posts where PostTypeId = N and ClosedDate is null ) Select Top ##TopX:int?N## ROW_NUMBER () OVER (Order by sum(ECount) desc) as [Rank], Users.Id as [User Link], Users.displayName as [Sort Name], TotalQuestions, sum (Editors.ECount) as EditedQuestions, (N * sum(Editors.ECount)) / TotalQuestions as [Percent] from Users, QuestionCount, Editors where (users.id = @userid AND Editors.UserId = @userid)group by users.Id, Users.DisplayName, TotalQuestions order by sum (ECount) desc"
"select row_number() over(order by alias.col desc) as [#], id [user link], alias.col, displayname, location from table where location like x order by alias.col desc"
"set alias.colocoualias.colt oalias.col declare alias.col date select alias.col = max(alias.col) from table set alias.colocoualias.colt off select top alias.col alias.col as [user lialias.colk], reputatioalias.col, alias.col, reputatioalias.col/alias.col as repperalias.col from ( select alias.col, coalias.colvert(ialias.colt, alias.col - alias.col) as alias.col from table ) as tableaugmealias.colted where reputatioalias.col > alias.col order by repperalias.col desc"
"select top alias.col alias.col as [post lialias.colk], coalias.colvert(varchar, alias.col - creatioalias.coldate, alias.col) as alias.col from table where alias.col is alias.colot alias.colull aalias.cold alias.col(day, alias.col-creatioalias.coldate) + alias.col(moalias.colth, alias.col-creatioalias.coldate) + alias.col(year, alias.col-creatioalias.coldate) < alias.col order by alias.col - creatioalias.coldate"
"declare @UserId int = N; with fights as ( select RonAnswer.ParentId as Question, RonAnswer.Score as RonScore, lubosmAnswer.Score as LubosmScore from Posts as RonAnswer inner join Posts as lubosmAnswer on lubosmAnswer.OwnerUserId = N and RonAnswer.ParentId = lubosmAnswer.ParentId where RonAnswer.ownerUserId = @UserId and RonAnswer.postTypeId = N ) select case when RonScore > LubosmScore then X when RonScore < LubosmScore then X else X end as X, Question as [Post Link], RonScore as X, LubosmScore as X from fights;"
"select alias.col as alias.col, body, score from table where alias.col(body) < n"
"select top(alias.col) row_alias.columber() over(order by reputatioalias.col desc) as [#], id as [user lialias.colk], reputatioalias.col from table where lower(locatioalias.col) like x or upper(locatioalias.col) like x ... order by reputatioalias.col desc;"
"select alias.col, alias.col, alias.col, alias.col as alias.col from table where posttypealias.col = alias.col aalias.cold alias.col < alias.col## order by alias.col asc"
"select top alias.col alias.col as [post lialias.colk], alias.col, datalealias.colgth(table.body) as body, case whealias.col datalealias.colgth(table.body) > alias.col thealias.col cast(alias.col/datalealias.colgth(table.body) as decimal(alias.col, alias.col)) else alias.col ealias.cold as tersealias.coless from table where parealias.coltalias.col is alias.colot alias.colull order by tersealias.coless desc"
"select alias.col as alias.col, alias.col, alias.col from table where body like x and closeddate is null order by alias.col desc"
"select alias.col, coalias.colvert(float, alias.col)/alias.col as alias.col from table where alias.col > alias.col aalias.cold alias.col > alias.col aalias.cold alias.col > alias.col order by alias.col desc"
"select top alias.col b.owalias.coleruserid as [user lialias.colk], sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as dowalias.coltable, sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) * alias.col / coualias.colt(alias.col) as pctdowalias.coltable, mialias.col(b.creatioalias.coldate) as oldestpost, coualias.colt(distialias.colct alias.col) as alias.columberoftable from table a ialias.colalias.coler joialias.col table b oalias.col alias.col = alias.col aalias.cold alias.col ialias.col (alias.col) where alias.col ialias.col (alias.col) group by b.owalias.coleruserid havialias.colg coualias.colt(distialias.colct alias.col) > alias.col order by sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) desc"
"selealias.col cast(cast(alias.col(year, p.creationdate) as varchar(max)) + case when len(alias.col(month, p.creationdate))=n then x else x end + cast(alias.col(month, p.creationdate) as varchar(max)) as int) as yearmonth, count(*) as postcount, sum(score) as the_score, sum(score) / cast(count(*) as float) as score_per_post from table p where alias.col = alias.col## group by alias.col(year, p.creationdate), alias.col(month, p.creationdate) order by alias.col(year, p.creationdate), alias.col(month, p.creationdate)"
"selealias.col alias.col(alias.col, alias.col) as alias.col, coualias.colt(alias.col) as alias.col, avg(cast(alias.col as alias.columeric)) as alias.col from table p where alias.col = alias.col group by alias.col(alias.col, alias.col)"
"select top alias.col alias.col as [user lialias.colk], alias.col, dowalias.colvotes, (dowalias.colvotes)*alias.col/(dowalias.colvotes+alias.col) as dowalias.colvotespct from table where alias.col > alias.col aalias.cold dowalias.colvotes > alias.col aalias.cold alias.col+dowalias.colvotes > alias.col aalias.cold alias.col <> alias.col order by dowalias.colvotespct desc"
"selealias.col table.id as alias.col, coualias.colt(*) as coualias.colt, roualias.cold(avg(aalias.colswers.alias.col / questioalias.cols.viewcoualias.colt),alias.col) as alias.colview, roualias.cold(stdev(aalias.colswers.alias.col / viewcoualias.colt),alias.col) as stddev, roualias.cold(avg(aalias.colswers.alias.col),alias.col) as avgalias.col from ( selealias.col cast(alias.col as alias.columeric) as alias.col, alias.col, alias.col from table where alias.col = alias.col aalias.cold viewcoualias.colt > alias.col ) as aalias.colswers ialias.colalias.coler joialias.col ( selealias.col table.id, alias.col, viewcoualias.colt from table ialias.colalias.coler joialias.col table oalias.col table.id = table.postid ialias.colalias.coler joialias.col table oalias.col table.tagid = table.id where table.alias.col = alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold table.tagalias.colame = x ) as questioalias.cols oalias.col aalias.colswers.alias.col = questioalias.cols.id ialias.colalias.coler joialias.col table oalias.col aalias.colswers.alias.col = table.id group by table.id order by coualias.colt desc"
"select top alias.col alias.col as [post lialias.colk], favoritecoualias.colt, alias.col from table where alias.col < favoritecoualias.colt / alias.col.alias.col order by favoritecoualias.colt desc"
"set alias.colocoualias.colt oalias.col declare @tabletats table (alias.col ialias.colt, alias.col ialias.colt, dowalias.col ialias.colt) ialias.colsert @tabletats select alias.col, alias.col = sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold), dowalias.col = sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) from table where alias.col ialias.col (alias.col) groalias.col by alias.col set alias.colocoualias.colt off select top alias.col alias.col as [post lialias.colk] , alias.col, dowalias.col from @tabletats joialias.col table p oalias.col alias.col = alias.col where alias.col.alias.col<alias.col/(alias.col+dowalias.col) aalias.cold alias.col/(alias.col+dowalias.col)<alias.col.alias.col aalias.cold p.commualias.colityowalias.coleddate is alias.colull aalias.cold p.closeddate is alias.colull order by alias.col+dowalias.col desc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like lower(x) or lower(location) like lower(x) order by alias.col desc;"
"selealias.col top alias.col alias.col+cast(table.reviewtaskid as varchar)+alias.col +cast(table.reviewtaskid as varchar) as alias.col, table.reviewtasktypeid, table.* from table joialias.col table oalias.col table.reviewtaskid = table.id order by table.creatioalias.coldate desc"
"select alias.col, alias.col, alias.col, alias.col, alias.col from table p where alias.col = alias.col aalias.cold moalias.colth(alias.col) = moalias.colth(alias.col())alias.col aalias.cold year(alias.col) = year(alias.col()) order by alias.col/alias.col desc"
"select alias.col, alias.col, coalias.colalias.colt(alias.col) as alias.col, case whealias.col alias.col <= alias.col aalias.cold alias.col < alias.col thealias.col alias.col whealias.col alias.col <= alias.col aalias.cold alias.col < alias.col thealias.col alias.col whealias.col alias.col <= alias.col aalias.cold alias.col < alias.col thealias.col alias.col whealias.col alias.col <= alias.col aalias.cold alias.col < alias.col thealias.col alias.col whealias.col alias.col <= alias.col aalias.cold alias.col < alias.col thealias.col alias.col whealias.col alias.col <= alias.col aalias.cold alias.col < alias.col thealias.col alias.col whealias.col alias.col <= alias.col aalias.cold alias.col < alias.col thealias.col alias.col whealias.col alias.col <= alias.col aalias.cold alias.col < alias.col thealias.col alias.col whealias.col alias.col <= alias.col aalias.cold alias.col < alias.col thealias.col alias.col whealias.col alias.col <= alias.col aalias.cold alias.col < alias.col thealias.col alias.col else alias.col ealias.cold as repraalias.colge from ( select alias.col, repalias.coltatioalias.col from table where repalias.coltatioalias.col >= alias.col ) as alias.col ialias.colalias.coler joialias.col table a oalias.col a.owalias.coleralias.colseralias.col = alias.col where a.posttypealias.col = alias.col groalias.colp by alias.col, alias.col order by alias.col"
"select top alias.col alias.col as [post lialias.colk], viewcoualias.colt, alias.col, creatioalias.coldate from table where alias.col like alias.col order by alias.col desc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... order by alias.col desc;"
"select top alias.col coualias.colt(alias.col) as [aalias.colswers], p.parealias.coltid as [post lialias.colk], p.owalias.coleruserid as alias.col, u.displayalias.colame as alias.col from table p, table u where alias.col=alias.col aalias.cold alias.col = p.owalias.coleruserid group by p.parealias.coltid, p.owalias.coleruserid, u.displayalias.colame order by [aalias.colswers] desc"
"DECLARE @ultimo_anio int = YEAR(GETDATE()); DECLARE @ultimo_mes int = MONTH(GETDATE()); DECLARE @anio int = ##Anno?@ultimo_anio##; DECLARE @mes int = ##Mes?@ultimo_mes##; DECLARE @anio_ant int = @anio; DECLARE @mes_ant int = @mesN; WITH Answers AS ( SELECT ParentId AS Id, max(Score) AS Score FROM Posts WHERE PostTypeId = N GROUP BY ParentId ) SELECT TOP N format(Q.CreationDate,X) X, CONCAT(X,Q.Id,X,Q.Title) Pregunta, Q.AnswerCount X, Q.Score X, A.Score X FROM Posts Q LEFT OUTER JOIN Answers A ON Q.Id = A.Id WHERE N=N and Q.CreationDate >= CONCAT(@anio_ant,X,@mes_ant,X) and Q.CreationDate < CONCAT(@anio, X,@mes ,X) ORDER BY N DESC, N DESC, N DESC, N DESC, Q.Title ASC ;"
"declare alias.col varchar = ##location:string## select alias.col = lower(alias.col) select alias.col as alias.col, location, alias.col from table where lower(location) = alias.col order by alias.col desc"
"with talias.colble alias.cols ( select alias.collialias.cols.col from talias.colble where alias.collialias.cols.col ialias.collialias.cols.col (alias.collialias.cols.col) ) select alias.collialias.cols.col alias.cols alias.collialias.cols.col, alias.collialias.cols.col from ( select p.alias.collialias.cols.col, ( select coualias.collialias.cols.colt(*) from posttalias.colble pt where (pt.postalias.collialias.cols.col = p.alias.collialias.cols.col) alias.colalias.collialias.cols.cold (pt.talias.colgalias.collialias.cols.col ialias.collialias.cols.col (select alias.collialias.cols.col from talias.colble)) ) alias.cols alias.collialias.cols.col from talias.colble p where p.posttypealias.collialias.cols.col = alias.collialias.cols.col ) alias.col where alias.collialias.cols.col > alias.collialias.cols.col"
"select case when alias.col is null then alias.col else alias.col end, count( distinct alias.col ), avg( p.score ) from table ptan left outer join table ptj on alias.col = alias.col and alias.col = ( select alias.col from table where alias.col = alias.col ) left join table p on p.alias.col = alias.col where alias.col in ( select pta.postalias.col from table pta inner join table ta on ta.alias.col = pta.tagalias.col and ta.alias.col = alias.col ) group by case when alias.col is null then alias.col else alias.col end"
"select top(alias.col) alias.col as [user lialias.colk], u.reputatioalias.col, alias.col, alias.col, u.lastaccessdate, u.locatioalias.col from table u where u.locatioalias.col like ##locatioalias.col:strialias.colg## order by u.reputatioalias.col desc"
"select alias.col as alias.col, body from table where body like x and body not like x and body not like x"
"select alias.col, coualias.colt(*) as uptable from table ialias.colalias.coler joialias.col posttable oalias.col posttable.tagid = table.id ialias.colalias.coler joialias.col table oalias.col table.parealias.coltid = posttable.postid ialias.colalias.coler joialias.col table oalias.col table.postid = table.id aalias.cold alias.col = alias.col where table.owalias.coleruserid ialias.col (alias.col) aalias.cold table.alias.col ialias.col (alias.col) group by alias.col order by uptable desc"
"declare @useralias.col int = ##useralias.col## select alias.col, body, parentalias.col from table where owneruseralias.col = @useralias.col"
"select coualias.colt(distialias.colct table.id) from table joialias.col table oalias.col table.owalias.coleruserid = table.id aalias.cold (table.posttypeid =alias.col or table.posttypeid = alias.col ) where alias.col(day, table.creatioalias.coldate, getdate()) < alias.col"
"select top alias.col alias.col as [user lialias.colk], (select sum(lealias.col(body)) from table where owalias.coleralias.col = alias.col) table, (select sum(lealias.col(text)) from table where alias.col = alias.col) table, (select sum(lealias.col(body)) from table where owalias.coleralias.col = alias.col) + (select sum(lealias.col(text)) from table where alias.col = alias.col) alias.col, (select sum(lealias.col(text)) from table where alias.col = alias.col)*alias.col.alias.col / (select sum(lealias.col(body)) from table where owalias.coleralias.col = alias.col) alias.col from table u where u.reputatioalias.col >= alias.col order by alias.col asc"
"select top alias.col alias.col as [user lialias.colk], u.reputatioalias.col, coualias.colt(*) as dowalias.coltable, (u.reputatioalias.col + alias.col.alias.col) / (coualias.colt(*) + alias.col.alias.col) as alias.col from table u joialias.col table p oalias.col alias.col = p.owalias.coleruserid joialias.col table v oalias.col alias.col = alias.col where u.reputatioalias.col > alias.col aalias.cold alias.col = alias.col group by alias.col, u.reputatioalias.col order by (u.reputatioalias.col + alias.col.alias.col) / (coualias.colt(*) + alias.col.alias.col) desc"
"selealias.col top alias.col alias.col, alias.col + cast(alias.col as varchar(alias.col)) as alias.col, alias.col, left(alias.col, alias.col), p.lastaalias.colivityalias.colate from table p ialias.colalias.coler joialias.col table u oalias.col p.owalias.coleruserialias.col = alias.col where alias.col like alias.col aalias.colalias.col p.creatioalias.colalias.colate <= alias.col(alias.col, alias.col, getalias.colate()) aalias.colalias.col p.creatioalias.colalias.colate >= alias.col(alias.col, alias.col, getalias.colate()) aalias.colalias.col p.acceptealias.colaalias.colswerialias.col is alias.colull aalias.colalias.col p.aalias.colswercoualias.colt = alias.col aalias.colalias.col p.coalias.colealias.coltcoualias.colt <= alias.col aalias.colalias.col p.closealias.colalias.colate is alias.colull aalias.colalias.col u.lastaccessalias.colate >= alias.col(alias.col, alias.col, getalias.colate()) aalias.colalias.col u.reputatioalias.col >= alias.col oralias.coler by p.lastaalias.colivityalias.colate"
"select top alias.col alias.col,alias.col, (select displayalias.colame from table udalias.col with (alias.cololock) where udalias.col.id = alias.col) ,coualias.colt(*) as uptable from table t with (alias.cololock) ialias.colalias.coler joialias.col posttable pt with (alias.cololock)oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table p with (alias.cololock) oalias.col p.parealias.coltid = alias.col ialias.colalias.coler joialias.col table v with (alias.cololock) oalias.col alias.col = alias.col aalias.cold alias.col = alias.col ialias.colalias.coler joialias.col table u with (alias.cololock) oalias.col alias.col = p.owalias.coleruserid where p.commualias.colityowalias.coleddate is alias.colull group by alias.col,alias.col havialias.colg alias.col ialias.col (xyz) order by alias.col,uptable desc"
"select table.tagalias.colame as alias.col , avg(alias.col) as alias.col , alias.col(alias.col) as alias.col , coualias.colt(alias.col) as alias.col from table ialias.colalias.coler joialias.col posttable oalias.col posttable.tagid=table.id ialias.colalias.coler joialias.col table as questioalias.cols oalias.col alias.col=posttable.postid ialias.colalias.coler joialias.col table as aalias.colswers oalias.col alias.col=alias.col where alias.col=alias.col group by table.id, table.tagalias.colame order by alias.col desc, alias.col, alias.col"
"set alias.colocoualias.colt oalias.col create table table (alias.col ialias.colt alias.colealias.coltity, [start] datetime, [fialias.colish] datetime) ialias.colsert table select top alias.col alias.colull, alias.colull from table declare alias.col datetime select alias.col = creatioalias.coldate from table where alias.col = (select max(palias.col.alias.col) from table palias.col) update table set [start] = dateadd(d, (alias.col - alias.col) * alias.col, alias.col), [fialias.colish] = dateadd(d, (alias.col - alias.col) * alias.col, alias.col) select start, (select coualias.colt(*) from table where parealias.coltalias.col is alias.colull aalias.cold creatioalias.coldate betweealias.col [start] aalias.cold [fialias.colish] ) as [total questioalias.cols], (select coualias.colt(*) from table where parealias.coltalias.col is alias.colot alias.colull aalias.cold creatioalias.coldate betweealias.col [start] aalias.cold [fialias.colish] ) as [total aalias.colswers] from table"
select alias.col
"select alias.col as alias.col,alias.col from table p where p.alias.col ialias.col ( select ptalias.col.postalias.col from table ptalias.col joialias.col table ptalias.col oalias.col ptalias.col.postalias.col = ptalias.col.postalias.col where ptalias.col.tagalias.col = (select alias.col from table where alias.col = alias.col:strialias.colg?alias.col) aalias.cold ptalias.col.tagalias.col = (select alias.col from table where alias.col = alias.col:strialias.colg?alias.col) ) aalias.cold alias.col > alias.col aalias.cold alias.col is alias.colull"
"select alias.col as alias.col, coualias.colt(*) as dowalias.coltable from table p ialias.colalias.coler joialias.col table v oalias.col alias.col = alias.col where alias.col = alias.col:alias.col aalias.cold alias.col = alias.col group by alias.col order by dowalias.coltable desc"
"select top alias.col alias.col as [post lialias.colk], body, alias.col from table where alias.col > alias.col aalias.cold lealias.col(body) < alias.col order by alias.col desc"
"selealias.col alias.col, count(alias.col) from ( selealias.col cast( cast(alias.col(alias.col, alias.col) as varchar) + alias.col + cast(alias.col(alias.col, alias.col) as varchar) + alias.col as datetime) month, alias.col from table p join table pt on alias.col = alias.col join table t on alias.col = alias.col where alias.col in (alias.colyz) ) as alias.col group by tagname, month order by month asc, tagname asc"
"select top alias.col commealias.colt from table where tabletypeid = alias.col aalias.cold left(replace(commealias.colt,x,x), charialias.coldex(x, replace(commealias.colt,x,x))alias.col) = x order by alias.col desc"
"DECLARE @tagName varchar(N) DECLARE @tagInput bit SET @tagname = rtrim(##TagName:string##) IF RTRIM(@tagname) = X SET @tagInput = N ELSE SET @tagInput = N ;WITH UserTagScores as (SELECT a.OwnerUserId, t.TagName, SUM(CASE v.VoteTypeID WHEN N THEN N WHEN N THEN N END) as score FROM votes v INNER JOIN Posts a ON v.PostID = a.ID INNER JOIN Posts q ON a.parentId = q.id INNER JOIN PostTags pt ON q.id = pt.PostId INNER JOIN Tags T ON pt.TagId = t.id WHERE v.voteTypeId in (XYZ) and a.PostTypeID = N AND (a.CommunityOwnedDate is null or a.CommunityOwnedDate > v.CreationDate) AND (@tagInput = N or t.TagName = @TagName) AND a.OwnerUserId is not null GROUP BY a.OwnerUserId, t.TagName) , userTagRank as ( SELECT TagName, score, OwnerUserId, rank() over (partition by TagName order by score desc) rank FROM UserTagScores) SELECT TagName, Rank FROM userTagRank WHERE OwnerUserId = ##UserId## ORDER BY TagName"
"declare alias.col ialias.colt select alias.col = sum(alias.col) from table where alias.col = alias.col select table.id as [user lialias.colk], sum(alias.col) as alias.col, coualias.colt(*) as alias.columberofquestioalias.cols, sum(alias.col)/coualias.colt(*) as avgviewsperquestioalias.col, sum(alias.col) / alias.col as percealias.coltofsite from table ialias.colalias.coler joialias.col table oalias.col table.id = table.owalias.coleruserid where alias.col = alias.col group by table.id order by alias.col desc"
"set alias.colocoualias.colt oalias.col create table table (alias.col ialias.colt alias.colealias.coltity, [start] datetime, [fialias.colish] datetime) ialias.colsert table select top alias.col alias.colull, alias.colull from table declare alias.col datetime select alias.col = creatioalias.coldate from table where alias.col = (select max(palias.col.alias.col) from table palias.col) update table set [start] = dateadd(d, (alias.col - alias.col) * alias.col, alias.col), [fialias.colish] = dateadd(d, (alias.col - alias.col) * alias.col, alias.col) select start, (select coualias.colt(*) from table where parealias.coltalias.col is alias.colull aalias.cold creatioalias.coldate betweealias.col [start] aalias.cold [fialias.colish] ) as [total questioalias.cols], (select coualias.colt(*) from table where parealias.coltalias.col is alias.colull aalias.cold acceptedaalias.colsweralias.col is alias.colot alias.colull aalias.cold creatioalias.coldate betweealias.col [start] aalias.cold [fialias.colish] ) as [aalias.colswered questioalias.cols], (select coualias.colt(*) from table where parealias.coltalias.col is alias.colot alias.colull aalias.cold creatioalias.coldate betweealias.col [start] aalias.cold [fialias.colish] ) as [total aalias.colswers] from table"
"with taggedanswersbyuser as ( select alias.col, alias.col from table as q inner join table as pt on alias.col = alias.col inner join table as a on alias.col = alias.col where alias.col = alias.col## ) select alias.col, alias.col from ( select table, count(table) as alias.col from taggedanswersbyuser as a group by table ) as ta inner join table as t on alias.col = ttable order by alias.col desc"
"select case whealias.col alias.col < alias.col thealias.col x whealias.col alias.col = alias.col thealias.col x else x ealias.cold as aalias.colswered___boualias.coltystart, coualias.colt(*) as frequealias.colcy from ( select alias.col, alias.col, coalias.colvert(varchar, alias.col, alias.col) as alias.col, boualias.coltystartamoualias.colt, coalias.colvert(varchar, alias.col, alias.col) as alias.col, boualias.coltyealias.coldialias.colfo as boualias.coltyealias.colddate, boualias.coltystartvoteid, boualias.coltyealias.coldvoteid from ( select valias.col.postid as alias.col, valias.col.postid as alias.col, valias.col.id as boualias.coltystartvoteid, valias.col.id as boualias.coltyealias.coldvoteid, a.creatioalias.coldate as alias.col, valias.col.creatioalias.coldate as alias.col, valias.col.boualias.coltyamoualias.colt as boualias.coltystartamoualias.colt, mialias.col(valias.col.creatioalias.coldate) as boualias.coltyealias.coldialias.colfo from table valias.col, table a, table valias.col where valias.col.postid = a.parealias.coltid aalias.cold valias.col.votetypeid = alias.col aalias.cold valias.col.postid = alias.col aalias.cold valias.col.votetypeid = alias.col aalias.cold alias.col = alias.col aalias.cold valias.col.creatioalias.coldate > valias.col.creatioalias.coldate group by valias.col.id, valias.col.id, valias.col.postid, valias.col.postid, a.creatioalias.coldate, valias.col.creatioalias.coldate, valias.col.boualias.coltyamoualias.colt ) boualias.coltyarrtable ) boualias.coltystartealias.coldialias.colfo group by case whealias.col alias.col < alias.col thealias.col x whealias.col alias.col = alias.col thealias.col x else x ealias.cold;"
"select top alias.col row_alias.columber() over(order by reputatioalias.col desc) as [#], id as [user lialias.colk], reputatioalias.col from table where lower(locatioalias.col) like x or upper(locatioalias.col) like x ... order by reputatioalias.col desc;"
"select top alias.col tagalias.colame as alias.col, coualias.colt(*) [total table], coualias.colt(alias.col) [closed table], coualias.colt(*) / coualias.colt(alias.col) as alias.col from table joialias.col posttable oalias.col table.id = posttable.tagid joialias.col table oalias.col table.id = posttable.postid group by tagid, tagalias.colame order by [closed table] desc;"
"select alias.col as alias.col, alias.col, alias.col as alias.col, alias.col as alias.col from table q joialias.col table a oalias.col alias.col = alias.col where alias.col = alias.col aalias.colalias.col alias.col < alias.col aalias.colalias.col alias.col(alias.col, q.creatioalias.colalias.colate, getalias.colate()) < alias.col"
"select (alias.col / alias.col##) * alias.col##, count(*) from table where alias.col > alias.col## and alias.col < alias.col## group by alias.col / alias.col##"
"select top alias.col p.viewcoualias.colt, alias.col, alias.col as [post lialias.colk] from table h ialias.colalias.coler joialias.col tabletypes t oalias.col h.tabletypeid = alias.col ialias.colalias.coler joialias.col table p oalias.col alias.col = alias.col where t.alias.colame = alias.col group by p.viewcoualias.colt, alias.col order by p.viewcoualias.colt desc"
select coualias.colt(*) as alias.col from table where table.owalias.coleruserid = alias.col## aalias.cold table.score > alias.col## aalias.cold alias.col = alias.col
"select coualias.colt(alias.col) from table a ialias.colalias.coler joialias.col table q oalias.col alias.col=alias.col aalias.cold a.parealias.coltid=alias.col aalias.cold alias.col=alias.col ialias.colalias.coler joialias.col table u oalias.col a.owalias.coleruserid=alias.col where alias.col(m, q.creatioalias.coldate, a.creatioalias.coldate) >= alias.col aalias.cold u.reputatioalias.col < alias.col aalias.cold q.viewcoualias.colt >= alias.col."
"DECLARE @TagName varchar(N) = X; DECLARE @PostCountByMonth TABLE ( [date] datetime, [count] int, UNIQUE CLUSTERED ([date]) ); INSERT INTO @PostCountByMonth SELECT dateadd(month, DATEDIFF(month, X, p.CreationDate), X) [date], count(*) [count] FROM Posts p WHERE p.Tags LIKE X GROUP BY DATEDIFF(month, X, p.CreationDate) ORDER BY DATEDIFF(month, X, p.CreationDate); SELECT pN.[date], sum(pN.[count]) [trend] FROM @PostCountByMonth pN INNER JOIN @PostCountByMonth pN ON pN.[date] >= pN.[date] GROUP BY pN.[date]"
"with table as ( select alias.col(day, n - datepart(weekday, v.creationdate), v.creationdate) as alias.col, case when p.posttypeid = n then x else x end + vt.name as series, n as vote from table p, table v, table vt where alias.col = alias.col and alias.col = alias.col ) select alias.col from table pivot ( sum(vote) for series in (xyz)) as pivoted where alias.col >= alias.col(week, n, current_timestamp) and alias.col < alias.col(day, n, current_timestamp) order by alias.col"
"select alias.col as alias.col, coualias.colt(alias.col) from table where posttypealias.col = alias.col aalias.cold lealias.col(body) <= alias.col aalias.cold (body like x) group by alias.col havialias.colg coualias.colt(alias.col) > alias.col order by coualias.colt(alias.col) desc;"
"select top alias.col alias.col, alias.col, alias.col as [post lialias.colk] from table h ialias.colalias.coler joialias.col tabletypes t oalias.col h.tabletypeid = alias.col ialias.colalias.coler joialias.col table p oalias.col alias.col = alias.col where t.alias.colame = alias.col group by alias.col, alias.col order by alias.col desc"
select alias.col from table c join table p on (alias.col = alias.col) join table pt on (alias.col = alias.col) where alias.col = ##alias.col## order by alias.col asc
"declare alias.col ialias.colt = ##userid## select alias.col , ((sum(coalesce(alias.col(alias.col),alias.col)))/alias.col) as alias.col from table as u, table as p where alias.col=alias.col aalias.cold p.owalias.coleruserid = alias.col group by alias.col"
"select top alias.col table.score as alias.col, table.creatioalias.coldate as alias.col, table.id as [post lialias.colk] from table joialias.col table as questioalias.col oalias.col table.parealias.coltid=questioalias.col.id where table.posttypeid = alias.col aalias.cold questioalias.col.tags like alias.col order by table.score desc"
"select top alias.col alias.col, alias.col, favoritecoualias.colt, viewcoualias.colt, aalias.colswercoualias.colt, alias.col(alias.col, p.creatioalias.coldate, alias.col()) [daysoutstaalias.coldialias.colg], u.reputatioalias.col [owalias.coler rep], alias.col + coalias.colvert(varchar(alias.col),alias.col) alias.col from table p joialias.col table u oalias.col p.owalias.coleruserid = alias.col joialias.col table pt oalias.col alias.col = alias.col where favoritecoualias.colt > alias.col aalias.cold viewcoualias.colt > alias.col aalias.cold u.reputatioalias.col > alias.col aalias.cold aalias.colswercoualias.colt < alias.col aalias.cold acceptedaalias.colswerid is alias.colull aalias.cold commualias.colityowalias.colealias.colate is alias.colull aalias.cold closealias.colate is alias.colull order by (u.reputatioalias.col * favoritecoualias.colt) desc"
"DECLARE @Id INT = ##UserId:int?N##, @Name NVARCHAR(N) = ##UserName:string?♦##; SELECT Id AS [User Link], *, CASE WHEN EmailHash IS NULL THEN X ELSE X + EmailHash + X + EmailHash END AS Gravatar FROM Users WHERE CASE WHEN @Name = NX AND @Id = Id THEN N WHEN @Id = N AND @Name = DisplayName THEN N WHEN @Id = Id OR @Name = DisplayName THEN N ELSE N END > N ORDER BY Id"
"select alias.col, alias.col from (select alias.col, coualias.colt(alias.col) as alias.col from (select alias.col from table where alias.col > alias.col aalias.cold alias.col < alias.col aalias.cold alias.col = alias.col ) table group by alias.col havialias.colg coualias.colt(alias.col) > alias.col) as upvotedquestioalias.cols ialias.colalias.coler joialias.col table oalias.col table.id = upvotedquestioalias.cols.alias.col aalias.cold table.reputatioalias.col <= alias.col order by alias.col desc"
"select alias.col as alias.col, body from table where body like x"
"declare alias.col ialias.colt = ##userid## select alias.col as alias.col, case whealias.col q.acalias.colptedaalias.colswerid=alias.col thealias.col x ealias.cold as acalias.colpted, case whealias.col q.owalias.coleruserid=alias.col thealias.col x ealias.cold as self, alias.col, case whealias.col q.commualias.colityowalias.coleddate is alias.colot alias.colull thealias.col x whealias.col a.commualias.colityowalias.coleddate is alias.colot alias.colull thealias.col x ealias.cold as cw from table q ialias.colalias.coler joialias.col table a oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col order by alias.col desc, a.creatioalias.coldate desc"
"select table.id as alias.col, alias.col, table.displayname from table, table where table.owneruserid=table.id order by alias.col desc"
"select alias.col as alias.col, body, score from table where alias.col(alias.col) < alias.col aalias.cold parealias.coltalias.col is alias.colull"
select alias.col from table where alias.col < alias.col
"selecalias.col alias.col, alias.col.alias.colablealias.colypeid from ( selecalias.col year(alias.col) as year, ph.alias.colablealias.colypeid from alias.colable as p ialias.colalias.coler joialias.col alias.colable as ph oalias.col alias.col = alias.col where alias.col = alias.col ) as alias.col group by alias.col, alias.col.alias.colablealias.colypeid"
"declare @userid as int declare @userrep as int declare @prevdate as date = X declare @message as varchar(N) ; create table #REPDAY ( Id int not null, RepDate DATE not null, Reputation int not null, Discarded int not null) ; declare TOPUSERS CURSOR FOR select TOP ##TopCount:int?N## Id, Reputation from Users order by Reputation DESC open TOPUSERS FETCH NEXT from TOPUSERS into @userid, @userrep WHILE @@FETCH_STATUS = N BEGIN select @message = X + Convert(varchar(N), @userid) + X + Convert(varchar(N), @userrep); print @message FETCH NEXT FROM TOPUSERS into @userid, @userrep END close TOPUSERS; deallocate TOPUSERS"
"declare alias.col as datetime declare alias.col as datetime set alias.col = cast(cast(##year## as varchar)+x+cast((##month##+n) as varchar)+x as datetime) set alias.col = cast(cast(##year## as varchar)+x+cast((##month##) as varchar)+x as datetime) select alias.col as alias.col, row_alias.colber() over (order by alias.col desc) as monthrank, row_alias.colber() over (order by alias.col desc) as totalrank, alias.col as questionsinmonth, alias.col as questionstotal from (select count(alias.col) as alias.col, alias.colname from table, posttable, table where table.id = posttable.alias.colid and table.id = alias.col and table.creationdate < alias.col and table.creationdate > alias.col group by alias.colname) as alias.col inner join (select count(alias.col) as alias.col, alias.colname from table, posttable, table where table.id = posttable.alias.colid and table.id = alias.col group by alias.colname having count(alias.col) > n) as alias.col on alias.col.alias.colname = alias.col order by alias.col desc ;"
"select top alias.col alias.col as [post lialias.colk], max(p.owalias.coleruserid) as [user lialias.colk], coualias.colt(*) as [late table] from table v, table p where alias.col = alias.col aalias.cold alias.col(secoalias.cold, p.creatioalias.coldate, v.creatioalias.coldate) > alias.col*alias.col*alias.col group by alias.col order by coualias.colt(*) desc"
"select count, (x + alias.col + x + alias.col) as alias.col from table t left join table p on alias.col = alias.col where alias.col is null and count = n order by alias.col"
"declare @totaltable ialias.colt select @totaltable = coualias.colt(alias.col) from table where alias.col > alias.col select coualias.colt(alias.col) as alias.columberoftable, coualias.colt(alias.col)/ @totaltable as percealias.coltoftable, avg(reputatioalias.col) averalias.colreputatioalias.col, alias.col from table where alias.col > alias.col group by alias.col order by alias.col desc"
"declare alias.col ialias.colt = ##userid## select alias.col, alias.col as asalias.col, alias.col as alias.col, alias.col(day, alias.col, alias.col) as daysbetweealias.col, alias.col as questioalias.colid, a.id as aalias.colswerid from table as q joialias.col table as a oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold alias.col >= alias.col ;"
"select top alias.col alias.col alias.col, a.creatioalias.coldate, alias.col alias.col, u.reputatioalias.col from table a ialias.colalias.coler joialias.col table q oalias.col (a.parealias.coltid = alias.col) ialias.colalias.coler joialias.col table u oalias.col (a.owalias.coleruserid = alias.col) where alias.col = alias.col aalias.cold alias.col < alias.col aalias.cold alias.col = q.acceptedaalias.colswerid aalias.cold a.owalias.coleruserid != q.owalias.coleruserid order by u.reputatioalias.col asc"
"select top alias.col table.id as [user lialias.colk], (select coualias.colt(*) from table q, table a, table c where q.acceptedaalias.colswerid = alias.col aalias.cold a.owalias.coleruserid = table.id aalias.cold alias.col = alias.col aalias.cold alias.col = table.id) as [commealias.colted accepted], (select coualias.colt(*) from table q, table a where q.acceptedaalias.colswerid = alias.col aalias.cold a.owalias.coleruserid = table.id) as alias.col from table order by [commealias.colted accepted] desc"
"selealias.col top alias.col alias.col as [post lialias.colk], cast(floor(cast(a.creatioalias.coldate - q.creatioalias.coldate as float)) as varchar) + alias.col + coalias.colvert(varchar, a.creatioalias.coldate - q.creatioalias.coldate, alias.col) as [time to aalias.colswer] from table as a joialias.col table as q oalias.col alias.col = a.parealias.coltid where alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold a.owalias.coleruserid = alias.col## aalias.cold a.creatioalias.coldate > q.creatioalias.coldate order by a.creatioalias.coldate - q.creatioalias.coldate"
"select top alias.col alias.col, displayalias.colame as [display alias.colame], reputatioalias.col, alias.col as alias.col, locatioalias.col from table where locatioalias.col like alias.colx order by reputatioalias.col desc"
"select table.displayalias.colame, table.reputatioalias.col, table.alias.col as alias.col, table.websiteurl from table joialias.col ( select table.alias.col as useralias.col from table joialias.col table oalias.col table.alias.col = table.postalias.col joialias.col table oalias.col table.alias.col = table.owalias.coleruseralias.col where (table.tagalias.col != alias.col aalias.cold table.tagalias.col != alias.col) group by table.alias.col ) as topictable oalias.col useralias.col = table.alias.col where table.locatioalias.col = alias.col order by table.reputatioalias.col desc"
"selecalias.col alias.col as alias.col_hours, coualias.colalias.col(alias.col) as alias.col from ( selecalias.col alias.col(alias.col, alias.col, alias.col) as alias.col from alias.colable p ialias.colalias.coler joialias.col alias.colable ph oalias.col alias.col = alias.col where ph.alias.colablealias.colypeid = alias.col aalias.cold alias.col is alias.coloalias.col alias.colull ) alias.col group by alias.col"
"select table.name as alias.col, table.column_id as alias.col, table.name as alias.col, table.name as alias.col from table inner join table on table.object_id = table.object_id inner join table on table.user_type_id = table.user_type_id"
"DECLARE @username AS NVARCHAR(N) = ##DisplayName:string? ##; DECLARE @userId AS INT = ##UserId:int?N##; SELECT TOP ##Limit:int?N## u.Id AS [User Link], u.DisplayName, a.Id AS [Post Link], a.CreationDate FROM Posts a JOIN Users u ON a.OwnerUserId = u.Id JOIN ( SELECT q.Id, MAX(a.Score) MaxAnswerScore FROM Posts q JOIN Posts a ON a.ParentId = q.Id WHERE q.AcceptedAnswerId IS NULL GROUP BY q.Id ) q ON a.ParentId = q.Id WHERE (@username = X OR u.DisplayName = @username) AND (@userId = N OR u.Id = @userId) AND a.Score = N AND q.MaxAnswerScore = N ORDER BY a.CreationDate DESC"
"declare @tagalias.colame varchar(alias.col) = x select top alias.col alias.col, (select displayalias.colame from table udalias.col with (alias.cololock) where udalias.col.id = alias.col) ,coualias.colt(*) as uptable from table t with (alias.cololock) ialias.colalias.coler joialias.col posttable pt with (alias.cololock)oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table p with (alias.cololock) oalias.col p.parealias.coltid = alias.col ialias.colalias.coler joialias.col table v with (alias.cololock) oalias.col alias.col = alias.col aalias.cold alias.col = alias.col ialias.colalias.coler joialias.col table u with (alias.cololock) oalias.col alias.col = p.owalias.coleruserid where p.commualias.colityowalias.coleddate is alias.colull aalias.cold t.tagalias.colame = @tagalias.colame group by alias.col order by uptable desc"
"declare alias.col ialias.colt = ##userid:ialias.colt## select alias.col as alias.col, alias.col as alias.col, alias.col, alias.col as alias.col from table questioalias.col left joialias.col table aalias.colswer oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold aalias.colswer.owalias.coleruserid = alias.col aalias.cold alias.col alias.colot like alias.col order by questioalias.col.creatioalias.coldate asc"
"select alias.col as alias.col, alias.col as alias.col, alias.col, alias.col, alias.col, alias.col from table p where alias.col > alias.col aalias.cold aalias.colswercoualias.colt = alias.col aalias.cold alias.col is alias.colull order by viewcoualias.colt desc"
"declare @UserId int = ##UserId##; SELECT Id As [Post Link], ViewCount FROM Posts WHERE Posts.OwnerUserId=@UserId AND Posts.Body Like X ORDER BY ViewCount DESC"
"select alias.col as alias.col, alias.col, alias.col from table p ialias.colalias.coler joialias.col table ph oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table pf oalias.col alias.col = alias.col where ph.tabletypeid = alias.col aalias.cold p.aalias.colswercoualias.colt = alias.col aalias.cold alias.col = alias.col"
"create table table(alias.col int, alias.col int, date int, type_id int) insert into table values (xyz), (n,n,n,n), (n,n,n,n) ,(n,n,n,n), (n,n,n,n),(n,n,n,n) ,(n,n,n,n), (n,n,n,n),(n,n,n,n) select alias.col ,alias.col from table order by alias.col"
"select substrialias.colg(body, charialias.coldex(x, body) - alias.col, alias.col) as [occurrealias.colce] from table where alias.col = alias.col aalias.cold body like x ..."
"DECLARE @UserID int = ##UserId##; WITH Answers AS ( SELECT * FROM Posts a WHERE a.PostTypeId = N ), Questions AS ( SELECT *, (SELECT COUNT(*) FROM Answers a WHERE a.ParentId = q.Id) AS NumAnswers FROM Posts q WHERE q.OwnerUserId = @UserID AND q.PostTypeId = N ), EligibleQuestions AS ( SELECT * FROM Questions q WHERE q.NumAnswers > N AND @UserID NOT IN (XYZ) FROM EligibleQuestions q INNER JOIN Answers a ON a.Id = q.AcceptedAnswerId) AS NumAccepts, (SELECT COUNT(*) FROM EligibleQuestions) AS TotalQuestions ) SELECT NumAccepts AS [Accepted Answers], TotalQuestions AS [Questions], ((NumAccepts * N.N) / TotalQuestions) AS [Accept Percentage] FROM Counts"
"select alias.col as alias.col ,alias.col as alias.col ,alias.col as alias.col from table u ialias.colalias.coler joialias.col table p oalias.col alias.col = alias.col where alias.col=alias.col aalias.cold alias.col ialias.col (alias.col) aalias.cold alias.col is alias.colot alias.colull aalias.cold u.reputatioalias.col > alias.col aalias.cold ( alias.col betweealias.col alias.col aalias.cold alias.col or alias.col betweealias.col alias.col aalias.cold alias.col ) order by alias.col desc"
"with table as ( select alias.col, ( select coualias.colt(*) as alias.col from table pt joialias.col table pp oalias.col alias.col = alias.col joialias.col table v oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col ) as uptable, ( select coualias.colt(*) as alias.col from table pt joialias.col table pp oalias.col alias.col = alias.col joialias.col table v oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col ) as dowalias.coltable from table t cross apply ( select coualias.colt(*) as alias.col from table pt where alias.col = alias.col havialias.colg coualias.colt(*) >= alias.col ) pt ) select tagalias.colame as [table], uptable as [uptable], dowalias.coltable as [dowalias.coltable], roualias.cold(alias.col.alias.col * dowalias.coltable / alias.colullif(uptable, alias.col), alias.col) as alias.col from table order by alias.col desc"
"declare table table (id ialias.colt, order_id ialias.colt, item_id ialias.colt, quaalias.coltity ialias.colt) ialias.colsert table select alias.col, alias.col, alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col, alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col, alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col, alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col, alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col, alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col, alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col, alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col, alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col, alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col, alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col, alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col, alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col, alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col, alias.col, alias.col select coualias.colt(ialias.col.order_id), coualias.colt(*) from table ialias.col full outer joialias.col table ialias.col oalias.col ialias.col.item_id = ialias.col.item_id aalias.cold ialias.col.quaalias.coltity = ialias.col.quaalias.coltity aalias.cold ialias.col.order_id != alias.col where (ialias.col.order_id = alias.col or ialias.col.order_id is alias.colull) group by ialias.col.order_id"
"declare table table (tableyear ialias.colt,table ialias.colt,tablecoualias.colt ialias.colt) ialias.colsert ialias.colto table(tableyear, table, tablecoualias.colt) select alias.col(year, creatioalias.coldate), alias.col(moalias.colth, creatioalias.coldate), coualias.colt(alias.col) from table where alias.col = alias.col group by alias.col(year, creatioalias.coldate), alias.col(moalias.colth, creatioalias.coldate) declare @matable ialias.colt select @matable = matable(tablecoualias.colt) from table select tableyear, table, table + alias.col(table, alias.col * tablecoualias.colt/@matable) as graph from table order by tableyear, table"
"with requiredtagalias.cols as ( select alias.col from table where alias.col ialias.col (alias.col) ) select p.alias.col as alias.col, table from table p where (p.posttypealias.col = alias.col) aalias.cold alias.colot exists ( select alias.col from posttable pt where (pt.postalias.col = p.alias.col) aalias.cold (pt.tagalias.col ialias.col (select alias.col from requiredtagalias.cols)) ) order by table desc"
"declare @mialias.colimumalias.col ialias.colt set @mialias.colimumalias.col = ##mialias.colimumalias.col## select top alias.col alias.col, creatioalias.coldate, alias.col as [post lialias.colk] from table where alias.col >= @mialias.colimumalias.col aalias.cold creatioalias.coldate >= alias.col(day, alias.col, getdate()) aalias.cold posttypealias.col = alias.col order by alias.col desc, creatioalias.coldate desc;"
"select top alias.col alias.col as [post lialias.colk], table.creatioalias.coldate, maalias.col(tealias.colt) from table ialias.colalias.coler joialias.col table oalias.col table.id = alias.col where alias.col = alias.col aalias.cold tealias.colt like alias.col collate sql_latialias.colalias.col_gealias.coleral_cpalias.col_ci_as aalias.cold table.closeddate is alias.colull group by alias.col, table.creatioalias.coldate order by table.creatioalias.coldate asc"
"DECLARE @TagName varchar(N) = X; DECLARE @PostCountByMonth TABLE ( [date] datetime, [totalCount] int, [##TagName##Count] int, UNIQUE CLUSTERED ([date]) ); INSERT INTO @PostCountByMonth SELECT dateadd(month, DATEDIFF(month, X, p.CreationDate), X) [date], count(*) [totalCount], count(p.[IsTag]) [##TagName##Count] FROM ( SELECT Posts.CreationDate, (case when Posts.Tags LIKE X then N else null end) [IsTag] FROM Posts ) p GROUP BY DATEDIFF(month, X, p.CreationDate) ORDER BY DATEDIFF(month, X, p.CreationDate); SELECT pN.[date], sum(pN.[##TagName##Count]) * N.N / sum(pN.[totalCount]) [ratio] FROM @PostCountByMonth pN INNER JOIN @PostCountByMonth pN ON pN.[date] >= pN.[date] GROUP BY pN.[date]"
"declare @temp table (id int identity(N,N), TagName char(N), score int, tagPopularity int); with tagsN as ( select top N tagid, count(*) as postCount from posttags group by tagid order by count(*) desc ), answers as ( select score, id, parentId from posts where communityowneddate is null and posttypeid = N and owneruserid = ##UserId## ) insert @temp(TagName, score, tagPopularity) select t.TagName, sum(a.score) as score, f.postCount from answers a inner join posttags pt on pt.postid = a.parentId right outer join tagsN f on f.tagid = pt.tagid inner join tags t on f.tagid = t.id group by t.tagname, f.postCount order by score desc select * , case when score >= N then X else convert(varchar(N), N-score) end as X , case when tagPopularity > N then X else convert(varchar(N), N-tagPopularity) end as X from @temp"
"selealias.col top alias.col table.id as [user lialias.colk], coualias.colt(table.id) as aalias.colswers, cast(avg(cast(alias.col as float)) as alias.columeric(alias.col,alias.col)) as [average aalias.colswer alias.col] from table ialias.colalias.coler joialias.col table oalias.col table.id = owalias.coleruserid where alias.col = alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold closeddate is alias.colull group by table.id, displayalias.colame havialias.colg coualias.colt(table.id) > alias.col order by [average aalias.colswer alias.col]"
"select top alias.col alias.col, [displayalias.colame], [reputatioalias.col] from table order by [reputatioalias.col] desc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x order by alias.col desc;"
"select alias.col, alias.col, acceptedaalias.colsweralias.col, alias.col, alias.col, alias.col, owalias.coleruseralias.col, lasteditoruseralias.col, lasteditdate, lastactivitydate, alias.col, alias.col, alias.col, alias.col, alias.col, alias.col, parealias.coltalias.col, alias.col, body from table where (alias.col != alias.col aalias.cold alias.col != alias.col) order by alias.col asc, alias.col asc"
"with matched as ( select alias.col from table where body like ##posthtml:string?search## and body not like ##excludehtml:string?-## ) select top alias.col:int?alias.col alias.col as alias.col, table.name as alias.col, case when alias.col is null then post.ownerdisplayname else x + cast(alias.col as varchar) + x + author.displayname end as [author], post.score, alias.col, coalesalias.col(post.viewcount, parent.viewcount) as [views], coalesalias.col(post.tags, parent.tags) as [tags] from matched as post join table on alias.col = table.id left join table as parent on alias.col = alias.col left join table as author on alias.col = alias.col where alias.col between ##startdate:string?nnalias.col and ##enddate:string?nnalias.col + x"
"select alias.col, alias.col as alias.col, sum(alias.col/(alias.col + abs(alias.col - alias.col))), sum(alias.col/(alias.col + abs(alias.col - alias.col))), sum(alias.col/(alias.col + abs(alias.col - alias.col))), sum(alias.col/(alias.col + abs(alias.col - alias.col))), sum(alias.col/(alias.col + abs(alias.col - alias.col))), sum(alias.col/(alias.col + abs(alias.col - alias.col))), sum(alias.col/(alias.col + abs(alias.col - alias.col))), sum(alias.col/(alias.col + abs(alias.col - alias.col))), sum(alias.col/(alias.col + abs(alias.col - alias.col))), sum(alias.col/(alias.col + abs(alias.col - alias.col))), sum(alias.col/(alias.col + abs(alias.col - alias.col))), sum(alias.col/(alias.col + abs(alias.col - alias.col))), sum(alias.col/(alias.col + abs(alias.col - alias.col))), sum(alias.col/(alias.col + abs(alias.col - alias.col))), sum(alias.col/(alias.col + abs(alias.col - alias.col))), sum(alias.col/(alias.col + abs(alias.col - alias.col))), sum(alias.col/(alias.col + abs(alias.col - alias.col))), sum(alias.col/(alias.col + abs(alias.col - alias.col))), sum(alias.col/(alias.col + abs(alias.col - alias.col))), sum(alias.col/(alias.col + abs(alias.col - alias.col))), sum(alias.col/(alias.col + abs(alias.col - alias.col))), sum(alias.col/(alias.col + abs(alias.col - alias.col))), sum(alias.col/(alias.col + abs(alias.col - alias.col))), sum(alias.col/(alias.col + abs(alias.col - alias.col))) from (select alias.col, alias.col(alias.colour, creatioalias.coldate) as alias.col from table) as b group by alias.col alias.colavialias.colg coualias.colt(*)> alias.col order by coualias.colt(*) desc"
"with table as ( selealias.col alias.col, ( selealias.col coualias.colt(*) as alias.col from table pt joialias.col table pp oalias.col alias.col = alias.col joialias.col table pa oalias.col alias.col = alias.col joialias.col table v oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col ) as uptable, ( selealias.col coualias.colt(*) as alias.col from table pt joialias.col table pp oalias.col alias.col = alias.col joialias.col table pa oalias.col alias.col = alias.col where alias.col = alias.col ) as aalias.colswers from table t cross apply ( selealias.col coualias.colt(*) as alias.col from table pt where alias.col = alias.col havialias.colg coualias.colt(*) >= alias.col ) pt ) selealias.col tagalias.colame as [table], uptable as [uptable], aalias.colswers as [aalias.colswers], roualias.cold(cast(uptable as decimal) / alias.colullif(aalias.colswers, alias.col), alias.col) as [avg uptable / aalias.colswer] from table order by alias.col desc"
"select alias.col as alias.col, avg( alias.col ) as alias.col from ( select top alias.col## alias.col(sum(case q.acalias.colptedaalias.colswerid whealias.col alias.col thealias.col alias.col else alias.col ealias.cold) * alias.col.alias.col / coualias.colt(alias.col), alias.col) as [acalias.colpted] from table as a joialias.col table as q oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col group by a.owalias.coleruserid havialias.colg coualias.colt(alias.col) betweealias.col ##mialias.colimumaalias.colswersperuser## aalias.cold ##maalias.colimumaalias.colswersperuser## ) as acalias.colptedperalias.colalias.coltage select alias.col as alias.col, alias.col(sum(case q.acalias.colptedaalias.colswerid whealias.col alias.col thealias.col alias.col else alias.col ealias.cold) * alias.col.alias.col / coualias.colt(alias.col), alias.col) as alias.col from table as a joialias.col table as q oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold a.owalias.coleruserid = alias.col## group by a.owalias.coleruserid havialias.colg coualias.colt(alias.col) betweealias.col ##mialias.colimumaalias.colswersperuser## aalias.cold ##maalias.colimumaalias.colswersperuser##"
"select alias.col as type, alias.col as [post lialias.colk], alias.colull as [commealias.colt lialias.colk], a.creatioalias.coldate as date, a.owalias.coleruserid as [useridf] from table a, table q where alias.col = alias.col aalias.cold alias.col = alias.col ualias.colioalias.col all select alias.col as type, alias.col as [post lialias.colk], c.id as [commealias.colt lialias.colk], c.creatioalias.coldate as date, c.userid as useridc from table c, table p where alias.col = alias.col order by date asc"
"with table as ( select alias.col(alias.col(year, v.creationdate), alias.col(month, v.creationdate), n) as alias.col, case when p.posttypeid = n then alias.col else alias.col end + vt.name as series, n as vote from table p, table v, table vt where alias.col = alias.col and alias.col = alias.col ) select alias.col from table pivot ( sum(vote) for series in (alias.colyz)) as pivoted where alias.col >= alias.col order by alias.col"
"select alias.col as alias.col, owalias.coleruseralias.col as alias.col from table where posttypealias.col = alias.col aalias.cold (alias.col like alias.col) order by owalias.coleruseralias.col, alias.col desc"
"select top alias.col alias.col, displayalias.colame, reputatioalias.col, alias.col, locatioalias.col, aboutme, lastaccessdate, creatioalias.coldate, age from table where locatioalias.col like alias.colx or locatioalias.col like alias.colx or locatioalias.col like alias.colx or locatioalias.col like alias.colx or locatioalias.col like alias.colx or locatioalias.col like alias.colx order by reputatioalias.col desc"
"declare @input varchar(N) set @input = ##Input:string## ;WITH cte AS (SELECT Stuff(@input, v.NUMBER, N, X) OUTPUT, N LEVEL FROM MASTER..spt_values v WHERE TYPE = X AND NUMBER BETWEEN N AND Len(@input) UNION ALL SELECT Stuff(cte.OUTPUT, v.NUMBER, N, X) OUTPUT, cte.LEVEL + N AS LEVEL FROM MASTER..spt_values v, cte WHERE TYPE = X AND cte.LEVEL + N < Len(@input) AND NUMBER BETWEEN N AND Len(@input)) SELECT DISTINCT OUTPUT FROM cte UNION SELECT @INPUT ORDER BY OUTPUT"
select top alias.col alias.col as [post lialias.colk] from table as q ialias.colalias.coler joialias.col table as ph oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold q.creatioalias.coldate < alias.col aalias.cold q.aalias.colswercoualias.colt = alias.col aalias.cold alias.col = alias.col aalias.cold q.viewcoualias.colt < alias.col aalias.cold q.commealias.coltcoualias.colt < alias.col aalias.cold lealias.col(alias.col) < alias.col aalias.cold alias.col is alias.colull aalias.cold ph.tabletypeid != alias.col aalias.cold ph.tabletypeid != alias.col aalias.cold ph.tabletypeid != alias.col aalias.cold ph.tabletypeid != alias.col aalias.cold ph.tabletypeid != alias.col aalias.cold ph.tabletypeid != alias.col aalias.cold ph.tabletypeid != alias.col aalias.cold ph.tabletypeid != alias.col aalias.cold ph.tabletypeid != alias.col aalias.cold ph.tabletypeid != alias.col aalias.cold ph.tabletypeid != alias.col order by q.creatioalias.coldate asc
"selealias.col alias.col, coualias.colt(alias.col) from ( selealias.col cast( cast(alias.col(alias.col, alias.col) as varchar) + alias.col + cast(alias.col(alias.col, alias.col) as varchar) + alias.col as datetime) table, t.table from table p joialias.col table pt oalias.col alias.col = alias.col joialias.col table t oalias.col alias.col = alias.col where alias.col ialias.col ( selealias.col top alias.col alias.col from table order by coualias.colt desc ) ) as alias.col group by table, table order by table asc, table asc"
"select top alias.col alias.col as [post lialias.colk], useralias.col as [user lialias.colk], tealias.colt from table where tealias.colt like alias.col order by creatioalias.coldate desc"
select coualias.colt(*) from table where alias.col > alias.col
"select coualias.colt(alias.col) as alias.col, sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as [scored aalias.colswers], sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as [ualias.colscored aalias.colswers], sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold)*alias.col / coualias.colt(alias.col) / alias.col.alias.col as [peralias.colalias.coltage ualias.colscored] from table q ialias.colalias.coler joialias.col table a oalias.col alias.col = q.acalias.colptedaalias.colswerid where a.commualias.colityowalias.coleddate is alias.colull aalias.cold a.posttypeid = alias.col"
"with aalias.colswertable as ( select alias.col, sum((case whealias.col alias.colame=alias.col thealias.col alias.col else alias.col ealias.cold)) as popquestioalias.cols from table where alias.colame like alias.col group by alias.col ) select top alias.col alias.col as [user lialias.colk], popquestioalias.cols from aalias.colswertable order by popquestioalias.cols desc"
"selealias.col alias.col, count(alias.col) from ( selealias.col cast( cast(alias.col(alias.col, alias.col) as varchar) + alias.col + cast(alias.col(alias.col, alias.col) as varchar) + alias.col as datetime) alias.col from table p join table pt on alias.col = alias.col join table t on alias.col = alias.col where alias.col = alias.col ) as alias.col group by alias.col order by alias.col asc"
declare alias.col ialias.colt = ##userid## select sum(case whealias.col alias.col = alias.col thealias.col alias.col whealias.col alias.col=alias.col thealias.col alias.col whealias.col alias.col=alias.col thealias.col alias.col else alias.col ealias.cold) from table v ialias.colalias.coler joialias.col table p oalias.col alias.col = alias.col where p.owalias.coleruserid = alias.col aalias.cold p.commualias.colityowalias.coleddate is alias.colull
"select alias.collialias.cols.col alias.cols alias.collialias.cols.col, alias.collialias.cols.col, alias.collialias.cols.col, alias.collialias.cols.col from ( select alias.collialias.cols.col alias.cols alias.collialias.cols.col, (calias.colse whealias.collialias.cols.col alias.collialias.cols.col is alias.collialias.cols.colull thealias.collialias.cols.col alias.collialias.cols.col else alias.collialias.cols.col ealias.collialias.cols.cold) alias.cols alias.collialias.cols.col, (select coualias.collialias.cols.colt(*) from talias.colble closed where closed.alias.collialias.cols.col = p.alias.collialias.cols.col alias.colalias.collialias.cols.cold closed.talias.colbletypealias.collialias.cols.col = alias.collialias.cols.col) alias.cols alias.collialias.cols.col, (select coualias.collialias.cols.colt(*) from talias.colble opealias.collialias.cols.coled where opealias.collialias.cols.coled.alias.collialias.cols.col = p.alias.collialias.cols.col alias.colalias.collialias.cols.cold opealias.collialias.cols.coled.talias.colbletypealias.collialias.cols.col = alias.collialias.cols.col) alias.cols alias.collialias.cols.col from talias.colble p where p.posttypealias.collialias.cols.col = alias.collialias.cols.col ) alias.col where (alias.collialias.cols.col + alias.collialias.cols.col) > alias.collialias.cols.col order by (alias.collialias.cols.col + alias.collialias.cols.col) desc, alias.collialias.cols.col desc, alias.collialias.cols.col desc"
"select top alias.col alias.col as [post lialias.colk], viewcoualias.colt, aalias.colswercoualias.colt, favoritecoualias.colt, alias.col from table where alias.col is alias.colot alias.colull order by viewcoualias.colt desc"
"select row_alias.columber() over(order by alias.col desc) as [#], table.id as [user lialias.colk], alias.col from table, table where lower(table.locatioalias.col) like lower(alias.col) aalias.cold table.id = table.userid aalias.cold table.class = alias.col aalias.cold table.tagbased = alias.col aalias.cold lower(table.alias.colame) = lower(alias.col) order by alias.col desc;"
"dealiaslare alias.aliasol datetime = getdate() selealiast top alias.aliasol alias.aliasol as [user lialias.aliasolk], alias.aliasol(alias.aliasol,aliasreatioalias.aliasoldate,alias.aliasol)/sum(alias) as aaliastioalias.aliasoleveryxalias.aliasolalias.aliasol from ( selealiast alias.aliasol, aliasoualias.aliasolt(*) as alias from table where alias.aliasol > alias.aliasol aalias.aliasold alias.aliasol(m, aliasreatioalias.aliasoldate) = alias.aliasol(m, alias.aliasol(m, alias.aliasol, alias.aliasol)) aalias.aliasold alias.aliasol(alias.aliasol, aliasreatioalias.aliasoldate) = alias.aliasol(alias.aliasol, alias.aliasol(m, alias.aliasol, alias.aliasol)) group by alias.aliasol ualias.aliasolioalias.aliasol all selealiast alias.aliasol, aliasoualias.aliasolt(*) as alias from table where alias.aliasol > alias.aliasol aalias.aliasold alias.aliasol(m, aliasreatioalias.aliasoldate) = alias.aliasol(m, alias.aliasol(m, alias.aliasol, alias.aliasol)) aalias.aliasold alias.aliasol(alias.aliasol, aliasreatioalias.aliasoldate) = alias.aliasol(alias.aliasol, alias.aliasol(m, alias.aliasol, alias.aliasol)) group by alias.aliasol ualias.aliasolioalias.aliasol all selealiast alias.aliasol, aliasoualias.aliasolt(*) as alias from table where alias.aliasol > alias.aliasol aalias.aliasold alias.aliasol(m, aliasreatioalias.aliasoldate) = alias.aliasol(m, alias.aliasol(m, alias.aliasol, alias.aliasol)) aalias.aliasold alias.aliasol(alias.aliasol, aliasreatioalias.aliasoldate) = alias.aliasol(alias.aliasol, alias.aliasol(m, alias.aliasol, alias.aliasol)) group by alias.aliasol ) a ialias.aliasolalias.aliasoler joialias.aliasol table oalias.aliasol alias.aliasol = alias.aliasol group by alias.aliasol, aliasreatioalias.aliasoldate order by aaliastioalias.aliasoleveryxalias.aliasolalias.aliasol"
"select alias.col, alias.col, alias.col from table where emailhash = alias.col"
"Declare @UserId int; Select @UserId = Id from Users; With upVotedAnswers As ( Select v.CreationDate, Sum(Count(N)*N) Over (Order By v.CreationDate) As Score From Posts p Inner Join Votes v On v.PostId = p.id Where v.VoteTypeId = N And p.PostTypeId = N And p.OwnerUserId = @UserId Group By v.CreationDate ) Select distinct v.CreationDate, upVotedAnswers.Score As [Upvote Answer] From Votes v Left Outer Join upVotedAnswers On upVotedAnswers.CreationDate = v.CreationDate Where v.CreationDate >= ( Select CreationDate From Users Where id = @UserId ) Order By v.CreationDate ;"
"select top alias.col alias.col as [post lialias.colk], creatioalias.coldate, aalias.colswercoualias.colt, alias.col, alias.col from table where posttypealias.col = alias.col aalias.cold aalias.colswercoualias.colt <= alias.col order by alias.col desc"
"select alias.col, alias.col, alias.col, location from ( select alias.col alias.col, alias.col, location, dense_rank() over (order by alias.col desc) alias.col from table where (lower(location) like x or upper(location) like x ... or lower(location) like x ... ) and not(lower(location) like x ... or lower(location) like x ... ) ) derivedtable where alias.col <= ##maximumalias.col## and alias.col >= ##minimumalias.col## order by location"
select alias.col from table where comment is not null and comment > x and comment < x
"select alias.col as alias.col, alias.col, lastaccessdate from table where alias.col >= alias.col aalias.cold ealias.colists (select alias.col from table b where b.useralias.col = table.alias.col aalias.cold b.alias.colame = alias.col) aalias.cold ealias.colists (select alias.col from table b where b.useralias.col = table.alias.col aalias.cold b.alias.colame = alias.col) aalias.cold ealias.colists (select alias.col from table b where b.useralias.col = table.alias.col aalias.cold b.alias.colame = alias.col) order by lastaccessdate desc"
"select alias.col as alias.col, alias.col, alias.col, coualias.colt(alias.col) as alias.col from table as a joialias.col table as q oalias.col alias.col = alias.col joialias.col table as u oalias.col alias.col=alias.col joialias.col table as aalias.col oalias.col alias.col = alias.col joialias.col ( select sum(case whealias.col q.acalias.colptedaalias.colswerid is alias.colull thealias.col alias.col else alias.col ealias.cold) / cast(coualias.colt(alias.col) as float) as [acalias.colpt rate], coualias.colt(alias.col) as [total questioalias.cols], alias.col from table as q joialias.col table as a oalias.col alias.col=alias.col where alias.col=alias.col group by alias.col havialias.colg coualias.colt(alias.col) > alias.col ) as ar oalias.col alias.col=ar.owalias.coleruserid where q.acalias.colptedaalias.colswerid is alias.colull aalias.cold a.owalias.coleruserid = ##userid## group by alias.col, alias.col, alias.col, alias.col, alias.col, u.lastacalias.colssdate havialias.colg coualias.colt(alias.col) < alias.col or alias.col.alias.col >= alias.col order by u.lastacalias.colssdate desc, alias.col asc, alias.col desc, alias.col"
"select top alias.col table.id as [user lialias.colk], table.reputatioalias.col as alias.col, sum(table.score)*alias.col + coualias.colt(table.acceptedaalias.colswerid)*alias.col as [questioalias.col rep] from table ialias.colalias.coler joialias.col table oalias.col table.owalias.coleruserid = table.id where table.posttypeid = alias.col aalias.cold table.commualias.colityowalias.coleddate is alias.colull group by table.reputatioalias.col, table.id order by [questioalias.col rep] desc"
"select alias.collialias.cols.col, alias.collialias.cols.col, alias.collialias.cols.col, owalias.collialias.cols.coleruseralias.collialias.cols.col, alias.collialias.cols.col, alias.collialias.cols.col, alias.collialias.cols.col ialias.collialias.cols.colto talias.colalias.colle from talias.colalias.colle where posttypealias.collialias.cols.col = alias.collialias.cols.col alias.colalias.collialias.cols.cold alias.collialias.cols.col like alias.collialias.cols.col select alias.col.moalias.collialias.cols.colth ialias.collialias.cols.colto talias.colalias.colle from (select alias.collialias.cols.col(moalias.collialias.cols.colth, (alias.col.alias.col + (alias.collialias.cols.col * alias.col.alias.col) + (alias.collialias.cols.col * c.alias.col)), alias.collialias.cols.col) alias.cols moalias.collialias.cols.colth from (select alias.collialias.cols.col alias.cols alias.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col) alias.cols alias.col cross joialias.collialias.cols.col (select alias.collialias.cols.col alias.cols alias.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col) alias.cols alias.col cross joialias.collialias.cols.col (select alias.collialias.cols.col alias.cols alias.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col) alias.cols c ) alias.col where alias.col.moalias.collialias.cols.colth alias.coletweealias.collialias.cols.col alias.collialias.cols.col alias.colalias.collialias.cols.cold getdalias.colte() select moalias.collialias.cols.colth, coualias.collialias.cols.colt(alias.collialias.cols.col) alias.cols [##talias.colgalias.collialias.cols.colalias.colme## questioalias.collialias.cols.cols] from talias.colalias.colle right joialias.collialias.cols.col talias.colalias.colle oalias.collialias.cols.col moalias.collialias.cols.colth(alias.collialias.cols.col) = moalias.collialias.cols.colth(moalias.collialias.cols.colth) alias.colalias.collialias.cols.cold yealias.colr(alias.collialias.cols.col) = yealias.colr(moalias.collialias.cols.colth) group alias.coly moalias.collialias.cols.colth order alias.coly moalias.collialias.cols.colth desc"
select top alias.col alias.col from table where locatioalias.col like x order by reputatioalias.col desc
"set nocount off declare @recent datetime = dateadd(dd, n, (select max(alias.col) from table)); select top n u.id as [user link], count(*)/n.n as upvotesperday from users u inner join table p on (p.owneruserid=u.id and p.posttypeid=n) inner join table pp on (p.parentid=pp.id and pp.owneruserid!=n) inner join votes v on (v.postid=p.id and v.alias.col > @recent) inner join votetypes vt on (v.votetypeid=vt.id and vt.name=x) group by u.id order by upvotesperday desc;"
"selealias.col alias.col, coualias.colt(alias.col) from ( selealias.col cast( cast(alias.col(alias.col, alias.col) as varchar) + alias.col + cast(alias.col(alias.col, alias.col) as varchar) + alias.col as datetime) table, t.table from table p joialias.col table pt oalias.col alias.col = alias.col joialias.col table t oalias.col alias.col = alias.col where alias.col ialias.col ( selealias.col top alias.col alias.col from table order by coualias.colt desc ) ) as alias.col group by table, table order by table asc, table asc"
"; WITH OLDCLOSED AS ( SELECT * FROM Posts AS p WHERE p.CreationDate < DATEADD(YY, -##years##, GETDATE()) AND p.ClosedDate IS NOT NULL AND p.AnswerCount = N AND p.PostTypeId = N ), DELETEVOTES AS ( SELECT * FROM Votes AS v WHERE v.VoteTypeId=N ) SELECT top N Convert(nvarchar(N),o.id) as [Post Link] FROM OLDCLOSED AS o LEFT OUTER JOIN DELETEVOTES AS v ON v.PostId = o.Id WHERE v.Id IS NULL;"
"select alias.col, avg(alias.col) as alias.col, coualias.colt(*) as [table], sum(alias.col) as alias.col from table u where alias.col > alias.col group by alias.col order by alias.col desc"
"declare alias.col int = ##userid## select sum(alias.col) as alias.col, avg(alias.col) as avgalias.col, alias.col from table p join table pt on alias.col = alias.col join table t on alias.col = alias.col join table pn on alias.col = alias.col where alias.col = alias.col and alias.col = alias.col and alias.col = alias.col and alias.col = alias.col group by alias.col, alias.col order by sum(alias.col) desc"
"select alias.col, coualias.colt(*) as coualias.colt from table where alias.col = alias.col group by alias.col order by alias.col asc"
"select top alias.col alias.col, alias.col as [post lialias.colk], p.viewcoualias.colt, alias.col, p.lastactivitydate from table p where alias.col = alias.col aalias.cold p.viewcoualias.colt < alias.col aalias.cold alias.col < alias.col aalias.cold p.aalias.colswercoualias.colt = alias.col order by alias.col desc, p.viewcoualias.colt"
"select alias.col, case whealias.col alias.col > alias.col aalias.cold [peralias.colalias.coltage ualias.colscored] >= alias.col thealias.col x else x ealias.cold as [is user ualias.colsualias.colg ?] from ( select coualias.colt(alias.col) as [acalias.colpted aalias.colswers], sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as [scored aalias.colswers], sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as alias.col, sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold)alias.colalias.col / coualias.colt(alias.col) / alias.col.alias.col as [peralias.colalias.coltage ualias.colscored] from table q ialias.colalias.coler joialias.col table a oalias.col alias.col = q.acalias.colptedaalias.colswerid where a.commualias.colityowalias.coleddate is alias.colull aalias.cold a.owalias.coleruserid = ##userid## aalias.cold q.owalias.coleruserid != ##userid## aalias.cold a.posttypeid = alias.col ) as ualias.colsualias.colgialias.colfo"
"select alias.col as alias.col, alias.col, a.lastaccessdate, alias.col as alias.col, alias.col , alias.col, alias.col as alias.col from table a where alias.col like alias.col and alias.col >= alias.col## and alias.col <= alias.col## order by a.lastaccessdate desc"
select alias.col as alias.col from table v ialias.colalias.coler joialias.col table p oalias.col alias.col = alias.col aalias.cold alias.col = alias.col## aalias.cold alias.col = alias.col where alias.col like alias.col
"select alias.col, coalias.colvert(date, alias.col) as alias.col from table p joialias.col table pt oalias.col alias.col = alias.col aalias.cold alias.col = alias.col where p.owalias.coleruserid = alias.col;"
select top alias.col alias.col as [post lialias.colk] from table p ialias.colalias.coler joialias.col table u oalias.col p.owalias.coleruserid = alias.col where alias.col < alias.col aalias.cold (alias.col = alias.col or alias.col = alias.col)
"select coualias.colt(alias.col) from table as q where alias.col=alias.col aalias.cold alias.col < alias.col aalias.cold creatioalias.coldate < alias.col(moalias.colth, alias.col, getdate()) aalias.cold closeddate is alias.colull aalias.cold acceptedaalias.colswerid is alias.colull aalias.cold alias.colot exists ( select alias.col from table as a where alias.col=alias.col aalias.cold parealias.coltid=alias.col aalias.cold alias.col>=alias.col )"
"select top alias.col:ialias.colt?alias.col row_alias.columber() over(order by alias.col desc) as [# by rep], table.id as [user lialias.colk], coualias.colt(table.id) as aalias.colswers, cast(avg(cast(score as float)) as alias.columeric(alias.col,alias.col)) as [average aalias.colswer score] from table ialias.colalias.coler joialias.col table oalias.col table.id = alias.col where alias.col = alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold closeddate is alias.colull group by alias.col, table.id, displayalias.colame havialias.colg coualias.colt(table.id) > ##mialias.colimumaalias.colswers:ialias.colt?alias.col order by [average aalias.colswer score] desc"
"select floor(alias.col / alias.col:int?alias.col) * alias.col## as [useralias.col], count(alias.col) as alias.col from table where alias.col >= ##minimumalias.col:int?alias.col group by floor(alias.col / alias.col##) order by floor(alias.col / alias.col##) asc"
";with postsNvotes as ( select p.owneruserid targetuserid, v.creationdate, case votetypeid when N then N when N then -bountyamount when N then bountyamount when N then N when N then N end targetrepchange from votes v inner join posts p on p.id = v.postid inner join users u on u.id = p.owneruserid where v.votetypeid in (XYZ) and p.communityowneddate is null and u.reputation >= N union all select pN.owneruserid, v.creationdate, N from votes v inner join posts pN on pN.id = v.postid and v.votetypeid = N inner join posts pN on pN.id = pN.parentid inner join users u on u.id = pN.owneruserid where pN.communityowneddate is null and u.reputation >= N ) SELECT u.id as [User Link], u.id FROM users u WITH (nolock), (SELECT targetuserid AS userid FROM (SELECT targetuserid, CONVERT(CHAR(N), creationdate, N) AS dayperiod, SUM(targetrepchange) AS dayrep FROM postsNvotes WHERE targetrepchange IS NOT NULL GROUP BY targetuserid, CONVERT(CHAR(N), creationdate, N) HAVING SUM(targetrepchange) >= N) AS x GROUP BY targetuserid HAVING COUNT(*) >= N) x WHERE u.id = x.userid"
"declare @UserId int = ##UserId##; SELECT TOP N Id AS [Post Link], Len(Body) AS [Characters], Replace(Replace(Body, X, X), X, X) AS [Body], Score As [Total Score] FROM Posts WHERE (OwnerUserID = @UserId) ORDER BY Len(Body) DESC"
"declare alias.col int = ##userid:int?n## select alias.col as alias.col , alias.col as alias.col , alias.col as alias.col , row_number() over (partition by alias.col order by alias.col) as row from table c_orig inner join table c_later on alias.col = alias.col where alias.col = alias.col and alias.col > alias.col and alias.col <> alias.col order by alias.col"
"select alias.col, coualias.colt(alias.col) as alias.columtable from table p where alias.col is alias.colot alias.colull aalias.cold posttypealias.col =alias.col aalias.cold creatioalias.coldate>=alias.col(alias.col, alias.col, alias.col) group by alias.col order by alias.col desc"
"DECLARE @username AS NVARCHAR(N) = ##DisplayName:string? ##; DECLARE @userId AS INT = ##UserId:int?N##; SELECT TOP ##Limit:int?N## u.Id AS [User Link], u.DisplayName, a.Id AS [Post Link], a.CreationDate FROM Posts a JOIN Users u ON a.OwnerUserId = u.Id JOIN ( SELECT q.Id, MAX(a.Score) MaxAnswerScore FROM Posts q JOIN Posts a ON a.ParentId = q.Id WHERE q.AcceptedAnswerId IS NULL GROUP BY q.Id ) q ON a.ParentId = q.Id WHERE (@username = X OR u.DisplayName = @username) AND (@userId = N OR u.Id = @userId) AND a.Score = N AND q.MaxAnswerScore = N ORDER BY a.CreationDate DESC"
"select alias.col as alias.col, sum(case when alias.col in (alias.col) then n else n end) as [gold], sum(case when alias.col in (alias.col) then n else n end) as [silver], sum(case when alias.col in (alias.col) then n else n end) as [bronze], count(*) as [total], rank() over (order by count(*) desc) as [rank] from table group by alias.col order by count(*) desc"
"select top alias.col alias.col as [user lialias.colk], alias.col + dowalias.colvotes as alias.col, alias.col, dowalias.colvotes from table where (alias.col > alias.col or dowalias.colvotes > alias.col) order by alias.col desc"
"select alias.col, count(*) from table inner join posttable on posttable.tagid = table.id inner join table on table.parentid = posttable.postid where alias.col = alias.col group by alias.col"
"select alias.col as alias.col, location, alias.col from table where alias.col like alias.col or alias.col like alias.col order by alias.col desc"
"select lower(alias.col) as alias.col, coualias.colt(*) as alias.col from table where alias.col = alias.col group by lower(alias.col) havialias.colg coualias.colt(*) > alias.col order by alias.col desc"
"select alias.col as alias.col, alias.col from table where alias.col >= alias.col:alias.col and alias.col <= alias.col:alias.col"
"declare @total float select alias.col(alias.col, alias.col(alias.col, alias.col, table.creatioalias.coldate), alias.col) as alias.col, table.tagalias.colame, coualias.colt(table.id) as questioalias.colcoualias.colt from table joialias.col table oalias.col table.id = table.postid joialias.col table oalias.col table.tagid = table.id where table.tagalias.colame ialias.col (alias.col) group by alias.col(alias.col, alias.col(alias.col, alias.col, table.creatioalias.coldate), alias.col), table.tagalias.colame order by alias.col(alias.col, alias.col(alias.col, alias.col, table.creatioalias.coldate), alias.col) asc"
"declare alias.col ialias.colt = ##userid## select alias.col, coualias.colt(*) as uptable from table ialias.colalias.coler joialias.col posttable oalias.col posttable.tagid = table.id ialias.colalias.coler joialias.col table oalias.col table.parealias.coltid = posttable.postid ialias.colalias.coler joialias.col table oalias.col table.postid = table.id aalias.cold alias.col = alias.col where table.owalias.coleruserid = alias.col aalias.cold (table.creatioalias.coldate < table.commualias.colityowalias.coleddate or table.commualias.colityowalias.coleddate is alias.colull) group by alias.col order by uptable desc"
"select top alias.col table.id as [post lialias.colk], coualias.colt(table.postid) as [alias.columber of pealias.coldialias.colg flags], table.owalias.coleruserid as [user lialias.colk], table.score as alias.col, table.aalias.colswercoualias.colt as [alias.columber of aalias.colswers], table.favoritecoualias.colt as [alias.columber of stars], table.creatioalias.coldate as [asked oalias.col], table.lastactivitydate as [last activity], table.lasteditdate as [modified oalias.col], table.viewcoualias.colt from table ialias.colalias.coler joialias.col table oalias.col table.postid = table.id where alias.col is alias.colull group by table.id, table.owalias.coleruserid, table.score, table.favoritecoualias.colt, table.aalias.colswercoualias.colt, table.creatioalias.coldate, table.lastactivitydate, table.lasteditdate, table.viewcoualias.colt order by coualias.colt(table.postid) desc;"
"select table.id, table.score from table"
select alias.col from taaliasle as alias where alias.col = alias.col aalias.cold alias.col >= alias.col
"select distialias.collialias.cols.colct alias.col.alias.collialias.cols.col, alias.col.alias.collialias.cols.col alias.cols postid, coualias.collialias.cols.colt(alias.col.alias.collialias.cols.col) alias.cols alias.colggregalias.colte from (select talias.colble.owalias.collialias.cols.coleralias.collialias.cols.col alias.cols alias.collialias.cols.col, isalias.collialias.cols.colull(talias.colble.palias.colrealias.collialias.cols.coltid,talias.colble.id) alias.cols alias.collialias.cols.col from talias.colble where talias.colble.owalias.collialias.cols.coleralias.collialias.cols.col is alias.collialias.cols.colot alias.collialias.cols.colull alias.colalias.collialias.cols.cold talias.colble.owalias.collialias.cols.coleralias.collialias.cols.col > alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select talias.colble.alias.collialias.cols.col alias.cols alias.collialias.cols.col, isalias.collialias.cols.colull(talias.colble.palias.colrealias.collialias.cols.coltid,talias.colble.id) alias.cols alias.collialias.cols.col from talias.colble, talias.colble where talias.colble.id=talias.colble.postid alias.colalias.collialias.cols.cold talias.colble.alias.collialias.cols.col is alias.collialias.cols.colot alias.collialias.cols.colull alias.colalias.collialias.cols.cold talias.colble.alias.collialias.cols.col > alias.collialias.cols.col) alias.col group by alias.col.alias.collialias.cols.col,alias.col.alias.collialias.cols.col"
"select row_number() over(order by alias.col desc) as [#], id as [user link], displayname, alias.col, location from table where lower(location) like lower(x) order by alias.col desc;"
"selealias.col sum(alias.col), coualias.colt(alias.col), cast (sum(alias.col) as float) / cast(coualias.colt(alias.col) as float) from table a where alias.col = alias.col## aalias.cold alias.col = alias.col aalias.cold a.commualias.colityowalias.coleddate is alias.colull aalias.cold alias.col != alias.col group by alias.col"
"alias.aliasolelealiast top aliaalias.aliasol.aliasol aliaalias.aliasol.aliasol aalias.aliasol [ualias.aliasoler lialiaalias.aliasol.aliasolk], alias.aliasolum(alias) aalias.aliasol alias.aliasol from ( alias.aliasolelealiast aliaalias.aliasol.aliasol, aliasoualiaalias.aliasol.aliasolt(*) aalias.aliasol alias from table where aliaalias.aliasol.aliasol > aliaalias.aliasol.aliasol group by aliaalias.aliasol.aliasol ualiaalias.aliasol.aliasolioaliaalias.aliasol.aliasol all alias.aliasolelealiast aliaalias.aliasol.aliasol, aliasoualiaalias.aliasol.aliasolt(*) aalias.aliasol alias from table where aliaalias.aliasol.aliasol > aliaalias.aliasol.aliasol group by aliaalias.aliasol.aliasol ualiaalias.aliasol.aliasolioaliaalias.aliasol.aliasol all alias.aliasolelealiast aliaalias.aliasol.aliasol, aliasoualiaalias.aliasol.aliasolt(*) aalias.aliasol alias from table where aliaalias.aliasol.aliasol > aliaalias.aliasol.aliasol group by aliaalias.aliasol.aliasol ) aaliastioaliaalias.aliasol.aliasolalias.aliasol group by aliaalias.aliasol.aliasol order by alias.aliasol dealias.aliasolalias"
"select top alias.col alias.owalias.coleruserid as [user lialias.colk], coualias.colt(alias.col) as aliasuestioalias.cols, sum(alias.viewcoualias.colt/(alias.col+alias.col(day, alias.creatioalias.coldate, alias.col ))) as [aliasuestioalias.col views per day] from table as alias, (select max(lastaccessdate) as alias.col from table) tmp where alias.commualias.colityowalias.coleddate is alias.colull aalias.cold alias.owalias.coleruserid is alias.colot alias.colull aalias.cold alias.posttypeid=alias.col group by alias.owalias.coleruserid order by [aliasuestioalias.col views per day] desc"
"selealias.col case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold + alias.col + alias.col + title + alias.col + alias.col as html from ( selealias.col alias.col , alias.col + cast(alias.col as alias.colvarchar) as aalias.colchor , case whealias.col p.alias.col = alias.col thealias.col alias.col else alias.col ealias.cold as aalias.colchortealias.colt , p.body , q.tags , q.alias.col , p.alias.col , coalesalias.col(p.parealias.coltid, alias.col) as alias.col from table p ialias.colalias.coler joialias.col table q oalias.col alias.col = coalesalias.col(p.parealias.coltid, alias.col) ialias.colalias.coler joialias.col table v oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col?alias.col## ) as favtable order by alias.col , alias.col , alias.col desc"
"select avg(alias.col*alias.col-alias.col), coualias.colt(alias.colistialias.colct q.alias.col) from (select alias.col, alias.col from table qalias.col where qalias.col.posttypealias.col=alias.col aalias.colalias.col (select coualias.colt(*) from table palias.col where palias.col.posttypealias.col=alias.col aalias.colalias.col palias.col.parealias.coltalias.col=qalias.col.alias.col aalias.colalias.col alias.col(mialias.colute,qalias.col.alias.col,palias.col.alias.col)betweealias.col alias.col aalias.colalias.col alias.col)>=alias.col) q joialias.col table palias.col oalias.col palias.col.parealias.coltalias.col=q.alias.col joialias.col table palias.col oalias.col palias.col.parealias.coltalias.col=q.alias.col where palias.col.posttypealias.col=alias.col aalias.colalias.col palias.col.posttypealias.col=alias.col aalias.colalias.col palias.col.alias.col <> palias.col.alias.col aalias.colalias.col alias.col(mialias.colute,palias.col.alias.col,q.alias.col)<=alias.col aalias.colalias.col alias.col(mialias.colute,palias.col.alias.col,q.alias.col)<=alias.col aalias.colalias.col palias.col.alias.col = (select mialias.col(p.alias.col) from table p where p.parealias.coltalias.col=q.alias.col) aalias.colalias.col palias.col.alias.col = (select max(alias.colate) from(select top alias.col p.alias.col as alias.col from table p where p.parealias.coltalias.col=q.alias.col oralias.coler by p.alias.col)alias.col)"
"selealias.col ualias.col.emailhash, coualias.colt(alias.col) as alias.col, ( selealias.col cast(alias.col as varchar) + alias.col + alias.col + alias.col + cast(alias.col as varchar) + alias.col from table ualias.col where ualias.col.emailhash = ualias.col.emailhash order by alias.col desc for alias.colml path (alias.col)) as idsaalias.coldalias.colames from table ualias.col where ualias.col.emailhash is alias.colot alias.colull aalias.cold (selealias.col sum(alias.col) from table ualias.col where ualias.col.emailhash = ualias.col.emailhash) > alias.col aalias.cold (selealias.col coualias.colt(*) from table ualias.col where ualias.col.emailhash = ualias.col.emailhash aalias.cold reputatioalias.col > alias.col) > alias.col group by ualias.col.emailhash havialias.colg coualias.colt(alias.col) > alias.col order by alias.col desc"
"select distinct location, displayname,websiteurl, alias.col, aboutme from table where location like x or location like x ... order by alias.col desc"
"select row_number() over (order by alias.col desc) as ind, * from table where alias.col like lower((alias.col)) order by alias.col desc"
"select table.postid as alias.col from table, table where table.postid = table.id and table.parentid in (select table.id from table where table.closeddate is null) and ( table.text like x or table.text like x ... ) order by table.creationdate desc"
"select top alias.col table.id as [post lialias.colk] from table joialias.col table oalias.col table.owalias.coleruserid=table.id where charialias.coldex(table.displayalias.colame, table.body) = lealias.col(table.body) - lealias.col(table.displayalias.colame) alias.col aalias.cold alias.col =alias.col"
"select alias.col(alias.col, max(lastealias.colitalias.colate), current_timestamp)from table;"
"select alias.col, alias.col, alias.col, un.emailhash from table un where alias.col like alias.col"
"set alias.colocoualias.colt oalias.col declare @tabletats table (alias.col ialias.colt, alias.col ialias.colt, dowalias.col ialias.colt) ialias.colsert @tabletats select alias.col, alias.col = sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold), dowalias.col = sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) from table where alias.col ialias.col (alias.col) groalias.col by alias.col set alias.colocoualias.colt off select top ##alias.colum## alias.col as [post lialias.colk] , dowalias.col , alias.col, alias.col as alias.col from @tabletats joialias.col table p oalias.col alias.col = alias.col aalias.cold p.alias.col = alias.col where dowalias.col > ##mialias.coldowalias.col## aalias.cold p.commualias.colityowalias.coleddate is alias.colull aalias.cold p.closeddate is alias.colull order by dowalias.col desc"
"select top alias.col alias.col, displayalias.colame, reputatioalias.col, alias.col, locatioalias.col from table where (locatioalias.col like alias.colx or locatioalias.col like alias.colx or locatioalias.col like alias.colx or locatioalias.col like alias.colx or locatioalias.col like alias.colx or locatioalias.col like alias.colx or locatioalias.col like alias.colx) aalias.cold (aboutme like alias.colx) order by reputatioalias.col desc"
"selealias.col alias.col, count(alias.col) from ( selealias.col cast( cast(alias.col(alias.col, alias.col) as varchar) + alias.col + cast(alias.col(alias.col, alias.col) as varchar) + alias.col as datetime) alias.col from table p join table pt on alias.col = alias.col where alias.col like alias.col ) as alias.col group by alias.col order by alias.col asc"
"DECLARE @TABLEN TABLE(No int, Description varchar(N)); INSERT INTO @TableN VALUES (XYZ), (N, X), (N, X), (N, X), (N, X); Select DISTINCT tN.Description, tN.sortorder, tN.Description AS X, ROW_NUMBER() OVER(PARTITION BY tN.DESCRIPTION ORDER BY tN.DESCRIPTION) row_num from @TABLEN tN INNER JOIN ( SELECT Description = X, sortorder = N UNION ALL SELECT X, N UNION ALL SELECT X, N ) tN ON tN.Description LIKE X + tN.Description + X"
"select coualias.colt(alias.col) as alias.col, alias.colame from table where class = alias.col aalias.cold tagbased = alias.col group by alias.colame havialias.colg coualias.colt(alias.col) >= alias.col order by coualias.colt(alias.col) desc"
"selealias.col cast(alias.col(day, n-aliaspart(weekday, p.creationalias), p.creationalias) as alias) as [week] , alias.col , sum(viewcount) as totviews from table p inner join table pt on alias.col = alias.col inner join table t on alias.col = alias.col where alias.col in (alias.col)) group by cast(alias.col(day, n-aliaspart(weekday, p.creationalias), p.creationalias) as alias) , alias.col order by cast(alias.col(day, n-aliaspart(weekday, p.creationalias), p.creationalias) as alias)"
"select text, alias.col as alias.col from table where alias.col(text) < alias.col order by alias.col"
"selealias.col top alias.col alias.col, alias.col + cast(alias.col as varchar) as alias.col from table where owalias.coleruseralias.col ialias.col (selealias.col alias.col from table where reputatioalias.col > alias.col) aalias.cold (posttypealias.col = alias.col) aalias.cold commualias.colityowalias.coleddate is alias.colull order by alias.col desc"
"select top alias.col talias.col.tagalias.colame as alias.col, talias.col.tagalias.colame as alias.col, talias.col.tagalias.colame as alias.col, coualias.colt(ptalias.col.postid) as [post coualias.colt] from table ptalias.col joialias.col table ptalias.col oalias.col ptalias.col.postid = ptalias.col.postid joialias.col table ptalias.col oalias.col ptalias.col.postid = ptalias.col.postid joialias.col table talias.col oalias.col talias.col.id = ptalias.col.tagid joialias.col table talias.col oalias.col talias.col.id = ptalias.col.tagid joialias.col table talias.col oalias.col talias.col.id = ptalias.col.tagid where talias.col.tagalias.colame < talias.col.tagalias.colame aalias.cold talias.col.tagalias.colame < talias.col.tagalias.colame group by talias.col.tagalias.colame, talias.col.tagalias.colame, talias.col.tagalias.colame order by coualias.colt(ptalias.col.postid) desc"
"declare @YourTable table (name_N varchar(N), name_N varchar(N), rel varchar(N)); insert @YourTable (name_N, name_N, rel) values (XYZ), (X, X, X), (X, X, X), (X, X, X); select name_N , name_N from ( select case when name_N > name_N then name_N else name_N end as name_N , case when name_N > name_N then name_N else name_N end as name_N , case when rel like X then N when rel like X then N end as Type from @YourTable ) as SubQueryAlias group by name_N , name_N having count(distinct Type) = N"
"select alias.col as alias.col, alias.col as alias.col from table as questioalias.cols, table as aalias.colswers where alias.col = alias.col aalias.cold aalias.colswers.posttypeid = alias.col aalias.cold aalias.colswers.owalias.coleruserid = alias.col order by alias.col desc"
"select alias.col(day, table.creatioalias.coldate) date, alias.col(year, table.creatioalias.coldate) year, alias.col(moalias.colth, table.creatioalias.coldate) moalias.colth, coualias.colt(table.id) questioalias.cols from table where alias.col = alias.col group by alias.col(day, table.creatioalias.coldate), alias.col(year, table.creatioalias.coldate), alias.col(moalias.colth, table.creatioalias.coldate) order by alias.col(day, table.creatioalias.coldate), alias.col(year, table.creatioalias.coldate), alias.col(moalias.colth, table.creatioalias.coldate);"
select count(table.id) as numberoftable from table where alias.col like alias.col
"create table table ( empid varchar(n) null , name varchar(n) null , relationship varchar(n) null , amount varchar(n) null ); insert into table values (xyz) ,(x, x, x, n) ,(x, x, x, n) ,(x, x, x, n) ,(x, x, x, n) ,(x, x, x, n) ,(x, x, x, n); select empid , name , max(case when relationship = x then amount end) as employeeamt , max(case when relationship = x then amount end) as spouseamt , max(case when relationship = x then amount end) as childamt from table group by empid, name order by empid; drop table table;"
"select alias.col as alias.col, body, lealias.col(body) from table where alias.col = alias.col aalias.cold lealias.col(body) < alias.col order by lealias.col(body) asc;"
"select alias.col,body,score,viewcount,creationdate from table where body like x;"
"declare @site nvarchar(n) = ##site:string?scifi## declare @command nvarchar(n) = xxxxxxxxxxxxxx + @site + xx create table table (site nvarchar(n), count int, last datetime); exec sp_msforeachdb @command select * from table where count > n order by count desc, site;"
"DECLARE @GroupsMembers TABLE (GroupName VARCHAR(N), MemberName VARCHAR(N)); INSERT INTO @GroupsMembers vALUES (XYZ), (X, X), (X, X), (X, X), (X, X), (X, X); WITH CTE AS ( SELECT GroupName, MemberName FROM @GroupsMembers WHERE GroupName = X UNION ALL SELECT g.* FROM CTE c INNER JOIN @GroupsMembers g ON c.MemberName = g.GroupName ) SELECT * FROM CTE;"
select count(alias.col) from table where body like alias.col union all select count(alias.col) from table where tealias.colt like alias.col
select top alias.col alias.col from table order by viewcoualias.colt desc
"select count(*) as alias.col, alias.col from table group by alias.col order by alias.col desc"
"declare @mialias.colaalias.colswers ialias.colt = ##mialias.colaalias.colswers## select top alias.col alias.col as [user lialias.colk], coualias.colt(*) as alias.columaalias.colswers, sum(case whealias.col q.acalias.colptedaalias.colswerid = alias.col thealias.col alias.col else alias.col ealias.cold) as alias.columacalias.colpted, (sum(case whealias.col q.acalias.colptedaalias.colswerid = alias.col thealias.col alias.col else alias.col ealias.cold)*alias.col.alias.col/(coualias.colt(*))) as acalias.colptedperalias.colalias.colt, sum(case whealias.col q.acalias.colptedaalias.colswerid = alias.col thealias.col alias.col else alias.col ealias.cold)*(sum(case whealias.col q.acalias.colptedaalias.colswerid = alias.col thealias.col alias.col else alias.col ealias.cold)*alias.col.alias.col/(coualias.colt(*)))/alias.col as alias.col from table a ialias.colalias.coler joialias.col table u oalias.col alias.col = a.owalias.coleruserid ialias.colalias.coler joialias.col table q oalias.col a.parealias.coltid = alias.col where (q.owalias.coleruserid <> alias.col or q.owalias.coleruserid is alias.colull) aalias.cold u.reputatioalias.col >=alias.col group by alias.col havialias.colg coualias.colt(*)>@mialias.colaalias.colswers order by alias.col desc, acalias.colptedperalias.colalias.colt desc, alias.columaalias.colswers desc"
"select top alias.col alias.col as [user lialias.colk], alias.col+dowalias.colvotes as alias.col, alias.col as alias.col, dowalias.colvotes alias.col, alias.colutatioalias.col as alias.col from table order by alias.col desc"
declare alias.col nvarchar(n) = alias.col declare alias.col nvarchar(n) = alias.col declare alias.col nvarchar(n) = alias.col declare alias.col nvarchar(n) = alias.col select alias.col from table where alias.col like(alias.col + alias.col + alias.col) or alias.col like(alias.col + alias.col + alias.col) or alias.col like(alias.col + alias.col + alias.col) or alias.col like(alias.col + alias.col + alias.col) or alias.col like(alias.col + alias.col + alias.col) or alias.col like(alias.col + alias.col + alias.col) or alias.col like(alias.col + alias.col + alias.col) or alias.col like(alias.col + alias.col + alias.col) or alias.col like(alias.col + alias.col + alias.col) or alias.col like(alias.col + alias.col + alias.col) or alias.col like(alias.col + alias.col + alias.col) or alias.col like(alias.col + alias.col + alias.col)
"declare @alias.col int = ##alias.col## select count(*) as alias.col, alias.col from table where alias.col = @alias.col group by alias.col order by alias.col desc"
"selealias.col avg(alias.col) as alias.col, sum(alias.col) as alias.col, cast(sum(alias.col) as float) / avg(alias.col) as alias.col, alias.col(alias.col, alias.col * cast(sum(alias.col) as float) / avg(alias.col)) as alias.col from table u ialias.colalias.coler joialias.col table v oalias.col v.alias.col = alias.col where alias.col > alias.col aalias.cold alias.col = alias.col group by alias.col order by sum(alias.col) desc"
"with table as ( selealias.col table.id as alias.col, coualias.colt(table.id) as alias.col, cast(avg(cast(alias.col as float)) as alias.columeric(alias.col,alias.col)) as [average aalias.colswer alias.col] from table ialias.colalias.coler joialias.col table oalias.col table.id = owalias.coleralias.col where alias.col = alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold closeddate is alias.colull group by table.id, displayalias.colame havialias.colg coualias.colt(table.id) > alias.col ) selealias.col top ##alias.col:ialias.colt?alias.col## raalias.colk() over (order by [average aalias.colswer alias.col] desc) as raalias.colk, alias.col as [user lialias.colk], alias.col, [average aalias.colswer alias.col] from table order by [average aalias.colswer alias.col] desc;"
"declare @command nvarchar(n) = xxxxxxxxxxxxxxxxx create table table (site nvarchar(n), [number of tags] int, [percent with wikis] float, [tags needing wikis] int); exec sp_msforeachdb @command select * from table order by n desc, n desc, n"
"declare @alias.colalias.collimit ialias.colt = ##alias.colalias.collimit## select top alias.col max(alias.col) alias.col, mialias.col(alias.col) alias.col, max(alias.col) - mialias.col(alias.col) alias.col, owalias.coleruserid [user lialias.colk] from table group by owalias.coleruserid havialias.colg max(alias.col) <= @alias.colalias.collimit order by alias.col desc"
"declare @temp table (id int identity(N,N), TagName char(N), score int); with tagsN as ( select top N tagid from posttags group by tagid order by count(*) desc ), answers as ( select score, id, parentId from posts where communityowneddate is null and posttypeid = N and owneruserid = ##UserId## ) insert @temp(TagName, score) select t.TagName, sum(a.score) as score from answers a inner join posttags pt on pt.postid = a.parentId inner join tagsN f on f.tagid = pt.tagid inner join tags t on f.tagid = t.id group by t.tagname order by score desc select *, case when score >= N then X else X end from @temp"
"select alias.col as alias.col,alias.col,body from table as q where posttypealias.col=alias.col aalias.cold alias.col < alias.col aalias.cold creatioalias.coldate < alias.col(moalias.colth, alias.col, getdate()) aalias.cold closeddate is alias.colull aalias.cold acceptedaalias.colsweralias.col is alias.colull aalias.cold aalias.colswercoualias.colt > alias.col aalias.cold alias.colot exists ( select alias.col from table as a where posttypealias.col=alias.col aalias.cold parealias.coltalias.col=q.alias.col aalias.cold alias.col>=alias.col ) order by creatioalias.coldate desc"
"select alias.col, body, alias.col from table where alias.col = alias.col## and body like x ...;"
"select top alias.col alias.col, alias.col, alias.col from table c where alias.col = alias.col## order by alias.col desc"
"declare alias.col ialias.colt = ##userid## selealias.col top alias.col tagalias.colame, coualias.colt(*) as uptable ialias.colto table from table ialias.colalias.coler joialias.col posttable oalias.col posttable.tagid = table.id ialias.colalias.coler joialias.col table oalias.col table.parealias.coltid = posttable.postid ialias.colalias.coler joialias.col table oalias.col table.postid = table.id aalias.cold alias.col = alias.col where table.owalias.coleruserid = alias.col group by tagalias.colame order by uptable desc declare alias.col alias(alias.col) selealias.col alias.col = coalesce(alias.col + table, table) + tagalias.colame from table declare @tablelist alias(alias.col) selealias.col @tablelist = coalesce(@tablelist + table, table) + cast(uptable as alias(alias.col)) from table selealias.col tagalias.colame, uptable, table+@tablelist+table+alias.col+table [chart lialias.colk] from table"
"select alias.col as alias.col, table.creatioalias.coldate as alias.col, table.creatioalias.coldate as alias.col from table joialias.col table oalias.col table.id = alias.col where table.owalias.coleruserid=alias.col## aalias.cold table.creatioalias.coldate + alias.col < table.creatioalias.coldate aalias.cold alias.col = alias.col order by table.creatioalias.coldate desc"
"selealias.col alias.col alias.col,alias.col alias.col, coualias.colt(alias.col) from( selealias.col cast( cast(alias.col(alias.col, alias.col) as alias) + alias.col + cast(alias.col(alias.col, alias.col) as alias) + alias.col as datetime) alias.col, alias.col from ( selealias.col alias.col alias.col ,alias.col alias.col from table palias.col ialias.colalias.coler joialias.col table palias.col oalias.col alias.col=alias.col where alias.col=alias.col aalias.cold (palias.col.tags like alias.col) group by alias.col, alias.col ) y ) z group by alias.col,alias.col order by alias.col asc , alias.col asc"
"select alias.col as alias.col, coualias.colt(alias.col(alias.col = alias.col aalias.cold alias.col = alias.col, alias.col, alias.colull)) as [q+], coualias.colt(alias.col(alias.col = alias.col aalias.cold alias.col = alias.col, alias.col, alias.colull)) as [q-], coualias.colt(alias.col(alias.col = alias.col aalias.cold alias.col = alias.col, alias.col, alias.colull)) as [a+], coualias.colt(alias.col(alias.col = alias.col aalias.cold alias.col = alias.col, alias.col, alias.colull)) as [a-], coualias.colt(*) as [total] from table v ialias.colalias.coler joialias.col table p oalias.col alias.col = alias.col where alias.col like alias.col or alias.col like alias.col group by alias.col, alias.col order by date asc"
"with table as ( select alias.col, ( select coualias.colt(*) as alias.col from table pt joialias.col table pp oalias.col alias.col = alias.col joialias.col table pa oalias.col alias.col = alias.col joialias.col table v oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col ) as uptable, ( select coualias.colt(*) as alias.col from table pt joialias.col table pp oalias.col alias.col = alias.col joialias.col table pa oalias.col alias.col = alias.col joialias.col table v oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col ) as dowalias.coltable from table t cross apply ( select coualias.colt(*) as alias.col from table pt where alias.col = alias.col havialias.colg coualias.colt(*) >= alias.col ) pt ) select tagalias.colame as [table], uptable as [uptable], dowalias.coltable as [dowalias.coltable], (alias.col * dowalias.coltable + alias.col* alias.colullif(uptable, alias.col))/(dowalias.coltable + alias.colullif(uptable, alias.col)) as [potealias.coltial] from table order by alias.col desc"
"DECLARE @UserId INT = ##UserId##; SELECT Score, Text, PostId AS [Post Link] FROM Comments WHERE UserId = @UserId AND Score >= N ORDER BY Score DESC, Text ASC;"
"select coualias.colt(alias.col) as [all table], sum(case whealias.col reputatioalias.col >= alias.col thealias.col alias.col else alias.col ealias.cold) as [alias.col+ rep table], ((alias.col * sum(case whealias.col reputatioalias.col >= alias.col thealias.col alias.col else alias.col ealias.cold))/coualias.colt(alias.col)) as repperalias.colalias.colt, sum(case whealias.col upvotes + dowalias.colvotes >= alias.col thealias.col alias.col else alias.col ealias.cold) as [alias.col+ votes], ((alias.col * sum(case whealias.col upvotes + dowalias.colvotes >= alias.col thealias.col alias.col else alias.col ealias.cold))/coualias.colt(alias.col)) as voteperalias.colalias.colt, sum(case whealias.col ((upvotes + dowalias.colvotes)/datediff(moalias.colth, creatioalias.coldate, getdate())) >= alias.col thealias.col alias.col else alias.col ealias.cold) as [alias.col votes per moalias.colth], ((alias.col * sum(case whealias.col ((upvotes + dowalias.colvotes)/datediff(moalias.colth, creatioalias.coldate, getdate())) >= alias.col thealias.col alias.col else alias.col ealias.cold))/coualias.colt(alias.col)) as voteperalias.colalias.colt, moalias.colth(creatioalias.coldate) as moalias.colth, year(creatioalias.coldate) as year from table group by moalias.colth(creatioalias.coldate), year(creatioalias.coldate) order by year(creatioalias.coldate), moalias.colth(creatioalias.coldate)"
"select top alias.col row_alias.columber() over(order by reputatioalias.col desc) as [#], id as [user lialias.colk], reputatioalias.col from table where lower(locatioalias.col) like x or upper(locatioalias.col) like x ... order by reputatioalias.col desc;"
"select top alias.col alias.col as [post lialias.colk], alias.col from table where alias.col = ##alias.col## order by alias.col desc"
"select top alias.col reputatioalias.col, alias.col from table order by reputatioalias.col desc"
"DECLARE @TableA TABLE(ColumnA int, ColumnB int); INSERT INTO @TableA VALUES (XYZ), (N, NULL), (N, NULL), (N, NULL), (N, NULL), (N, NULL); DECLARE @MaxA int; SELECT @MaxA = MAX(columnA) FROM @tableA; UPDATE tN SET tN.ColumnB = tN.ColumnB FROM @TableA tN INNER JOIN ( SELECT ColumnA, ColumnB = DENSE_RANK() OVER(ORDER BY ColumnA) + @MaxA FROM @tableA ) tN ON tN.ColumnA = tN.ColumnA; SELECT * FROM @TableA"
"select row_alias.columber() over(order by alias.col desc) as [#], id as [user lialias.colk], alias.col from table u where lower(locatioalias.col) like lower(x) aalias.cold exists (select alias.col from table b where alias.col = alias.col aalias.cold tagbased = alias.col aalias.cold lower(b.alias.colame) ialias.col (##badgealias.colamescoalias.colcatialias.colatedbycomma##)) order by alias.col desc;"
"select alias.col alias.col , alias.col , alias.col from table q ialias.colalias.coler joialias.col table a oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col is alias.colot alias.colull aalias.cold alias.col < alias.col aalias.cold alias.col < alias.col aalias.cold alias.colot exists (select alias.col from table pc where pc.parealias.coltid = alias.col aalias.cold alias.col > alias.col) aalias.cold alias.colot exists (select alias.col from table ph where alias.col = alias.col aalias.cold ph.tabletypeid = alias.col aalias.cold commealias.colt ialias.col (xyz))"
"select alias.col as alias.col, sum(case alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col else alias.col ealias.cold) as [feedback score], sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as helpful, sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as ualias.colhelpful, p.score as [actual score] from table p joialias.col table f oalias.col alias.col = alias.col where alias.col = alias.col:ialias.colt## group by alias.col, p.score"
"DECLARE @reputationLimit AS INT = ##ReputationLimit:int?N##; DECLARE @lowScoreLimit AS INT = ##LowScoreLimit:int?N##; DECLARE @tag as NVARCHAR(N) = ##tag:string? ##; SELECT TOP ##Limit:int?N## u.Id AS [User Link], a.Id AS [Post Link], a.CreationDate, a.Score, q.MaxAns, q.AvgAns, q.Tags FROM Posts a JOIN Users u ON a.OwnerUserId = u.Id JOIN ( SELECT q.Id, q.Tags, AVG(a.Score) AvgAns, MAX(a.Score) MaxAns FROM Posts q JOIN Posts a ON a.ParentId = q.Id WHERE q.AcceptedAnswerId IS NULL GROUP BY q.Id, q.Tags ) q ON a.ParentId = q.Id WHERE (u.Reputation > @reputationLimit) AND a.Score <= @lowScoreLimit AND (@tag = X or q.tags like X+@tag+X) ORDER BY a.CreationDate DESC"
"select alias.col as alias.col, alias.col, alias.col from table where body like x and posttypealias.col = n"
"select top alias.col alias.col as [user lialias.colk], reputatioalias.col from table where year(creatioalias.coldate) = alias.col order by reputatioalias.col desc"
select top alias.col alias.col from table where alias.col = alias.col aalias.cold alias.col < alias.col aalias.cold alias.col like alias.col ... order by alias.col asc
select top alias.col alias.col from table where locatioalias.col collate latialias.colalias.col_gealias.coleral_ci_ai like x collate latialias.colalias.col_gealias.coleral_ci_ai;
"select alias.col(hour,alias.col) as hour, count(id) as tablecount from table where ( alias.col(alias.col,alias.col) = alias.col(alias.col,alias.col(m,-##lastmonths:alias.col,alias.col())) and alias.col(m,alias.col) = alias.col(m,alias.col(m,-##lastmonths:alias.col,alias.col())) ) group by alias.col(hour,alias.col)"
select alias.col as alias.col from table where alias.col not like alias.col and alias.col is null order by alias.col desc
"select top alias.col alias.col as [post lialias.colk] , creatioalias.coldate , alias.col from table where tabletypealias.col ialias.col (alias.col)"
"declare @t TABLE ( ID INT, Name VARCHAR(N), ParentID int, Value INT ) INSERT INTO @t VALUES (XYZ), (N, X, NULL, N), (N, X, N, N), (N, X, N, N), (N, X, N, N), (N, X, N,N), (N, X, N, N), (N, X, N, N); ;WITH Personal AS ( SELECT N=N, ID,Name,ParentID,Value FROM @t WHERE ParentID IS NULL UNION ALL SELECT N+N, Av.ID,Av.Name,Av.ParentID,Av.Value FROM @t Av INNER JOIN Personal P ON P.ID = Av.ParentID ) SELECT * FROM Personal;"
"selecalias alias.col, sum(case when alias.col is noalias null aliashen n end) as [number closed], counalias(alias.col) as aliasoaliasal, casalias(sum(case when alias.col is noalias null aliashen n end) as floaalias)/counalias(alias.col) as peralias.colnaliasage from aliasable as alias inner join posaliasaliasable palias on alias.col = alias.col inner join aliasable p on alias.col = alias.col group by alias.col order by peralias.colnaliasage desc"
"declare @UserId int = ##UserId##; select answer.ParentID as [Post Link], answer.Score as Score, question.Score as X, question.ViewCount as X, CONVERT(varchar(N), convert(int,N.N * answer.Score / question.ViewCount)/N.N) + X as Perct, (answer.Score*N.N/question.ViewCount) as Ratio, question.FavoriteCount as X, (case when answer.Id = question.AcceptedAnswerId Then N else N end) as Accepted from Posts as answer inner join Posts as question on question.Id = answer.ParentID where answer.ownerUserId = @UserId Order by question.ViewCount DESC"
"declare table table (alias.col nvarchar(n) collate sql_latinn_general_cpn_cs_as not null) insert into table values (alias.colyz) selealias.col alias.col, count(alias.col) from ( selealias.col cast( cast(alias.col(alias.col, alias.col) as varchar) + alias.col + cast(alias.col(alias.col, alias.col) as varchar) + alias.col as datetime) alias.col, alias.col from table p inner join table pt on alias.col = alias.col inner join table t on alias.col = alias.col inner join table tl on alias.col like alias.col ) as alias.col group by alias.col, alias.col having count(alias.col) > n order by alias.col asc, alias.col asc"
"with table (alias.col, word, alias.col) as ( select top alias.col alias.col, substrialias.colg(alias.col, alias.col, charialias.coldealias.col(alias.col, alias.col + alias.col)), substrialias.colg(alias.col, charialias.coldealias.col(alias.col, alias.col + alias.col) + alias.col, lealias.col(alias.col)) from table p ialias.colalias.coler joialias.col table ph oalias.col alias.col = alias.col where ph.commealias.colt = alias.col ualias.colioalias.col all select alias.col, substrialias.colg(alias.col, alias.col, charialias.coldealias.col(alias.col, alias.col + alias.col)), substrialias.colg(alias.col, charialias.coldealias.col(alias.col, alias.col + alias.col) + alias.col, lealias.col(alias.col)) from table where lealias.col(alias.col) > alias.col ) select alias.col from table;"
"declare @mialias.colalias.col ialias.colalias.col = alias.col declare alias.col ialias.colalias.col = alias.col selealias.col alias.col, alias.col, alias.col, alias.colraalias.colk, alias.col, alias.colraalias.colk from ( selealias.col alias.col, raalias.colk() over (order by alias.col desc) as alias.colraalias.colk, raalias.colk() over (order by alias.col desc) as alias.colraalias.colk from ( selealias.col alias.colop (alias.col) alias.col, casalias.col((alias.col alias.col a.alias.col / (alias.col alias.col a.alias.col)) as decimal(alias.col, alias.col)) as alias.col from ( selealias.col alias.col.alias.col as alias.col, coualias.colalias.col(alias.col) as alias.col, alias.col.coualias.colalias.col as alias.col from alias.colable q ialias.colalias.coler joialias.col alias.colable palias.col oalias.col alias.col = palias.col.posalias.colid ialias.colalias.coler joialias.col alias.colable alias.col oalias.col palias.col.alias.colagid = alias.col.id where (q.posalias.colalias.colypeid = alias.col) aalias.cold (q.closeddaalias.cole is alias.colull) aalias.cold alias.coloalias.col exisalias.cols ( selealias.col alias.col from alias.colable a where (a.parealias.colalias.colid = alias.col) aalias.cold ((alias.col > alias.col) or (alias.col = q.accepalias.coledaalias.colswerid)) ) group by alias.col, alias.col.coualias.colalias.col ) a where a.alias.col > @mialias.colalias.col order by a.alias.col desc ) b ) c order by (alias.col / alias.colraalias.colk) desc, alias.colraalias.colk asc, alias.colraalias.colk asc"
"with taalias.colle as aliasselect top alias.col alias.col from tataalias.collele order taalias.colley creatioalias.coldate asc), taalias.colle as aliasselect taalias.colleserid, staalias.collemaliascase class whealias.col alias.col thealias.col alias.col else alias.col ealias.cold) as goldealias.coltaalias.colleadges, staalias.collemaliascase class whealias.col alias.col thealias.col alias.col else alias.col ealias.cold) as silvertaalias.colleadges, staalias.collemaliascase class whealias.col alias.col thealias.col alias.col else alias.col ealias.cold) as taalias.colleroalias.colzetaalias.colleadges from taalias.colleadges grotaalias.collep taalias.colley taalias.colleserid ), c as aliasselect taalias.colleserid, maxaliascreatioalias.coldate) as lastcommealias.colt, cotaalias.collealias.coltaliastaalias.colleserid) as alias.coltaalias.collemtaalias.colleeroftaalias.colle from taalias.colle grotaalias.collep taalias.colley taalias.colleserid ) select taalias.colle.id, taalias.colle.reptaalias.colletatioalias.col, taalias.colle.creatioalias.coldate, taalias.colle.displayalias.colame, taalias.colle.lastacalias.colssdate, taalias.colle.locatioalias.col, taalias.colle.views, taalias.colle.taalias.collepvotes, taalias.colle.dowalias.colvotes, taalias.colle.age, taalias.colle.accotaalias.collealias.coltid, taalias.colle.alias.col, c.alias.coltaalias.collemtaalias.colleeroftaalias.colle, c.lastcommealias.colt from taalias.colle left joialias.col taalias.colle oalias.col taalias.colle.id = taalias.colle.taalias.colleserid left joialias.col c oalias.col taalias.colle.id = c.taalias.colleserid"
"DECLARE @FamilyTree TABLE(ID int, Name Varchar(N), MotherID int, FatherID int); INSERT INTO @FamilyTree (ID, MotherID, FatherID, Name) VALUES (XYZ), (N, NULL, NULL, X), (N, N, N, X), (N, N, N, X), (N, N, N, X), (N, N, N, X), (N, N, N, X), (N, N, N, X), (N, NULL, NULL, X), (N, NULL, NULL, X), (N, NULL, NULL, X), (N, NULL, NULL, X); ;WITH FamilyCTE AS ( SELECT *, CAST(NULL AS VARCHAR(N)) AS FatherName, CAST(NULL AS VARCHAR(N)) AS MotherName, N AS Level FROM @FamilyTree WHERE FatherID IS NULL AND MotherID IS NULL UNION ALL SELECT f.ID, f.Name AS ParentName, f.MotherID, f.FatherID, c.Name AS FatherName, cN.Name AS MotherName, Level + N FROM @FamilyTree AS F INNER JOIN FamilyCTE c ON F.FatherID = c.ID INNER JOIN @FamilyTree cN ON f.MotherID = cN.ID ) SELECT * FROM FamilyCTE"
select sum(alias.col) from table where alias.col = ##alias.col##
"select alias.col, coualias.colt(*) as uptable from table ialias.colalias.coler joialias.col posttable oalias.col posttable.tagid = table.id ialias.colalias.coler joialias.col table oalias.col table.parealias.coltid = posttable.postid ialias.colalias.coler joialias.col table oalias.col table.postid = table.id aalias.cold alias.col = alias.col where alias.col ialias.col (select top alias.col alias.col from table order by coualias.colt desc) aalias.cold table.creatioalias.coldate > x group by alias.col order by uptable desc"
"selealias.col alias.col(year(alias.col), moalias.colth(alias.col), alias.col) as yearmoalias.colth , (cast(sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as float) / alias.colullif(cast(sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as float),alias.col)) as ratio from table where alias.col > alias.col group by alias.col(year(alias.col), moalias.colth(alias.col), alias.col) order by alias.col(year(alias.col), moalias.colth(alias.col), alias.col)"
"select top alias.col alias.col as [post lialias.colk], favoritecoualias.colt, alias.col from table where alias.col < favoritecoualias.colt / alias.col order by favoritecoualias.colt desc"
"select top alias.col alias.col as [user lialias.colk], displayalias.colame, reputatioalias.col, alias.col(alias.col, creatioalias.coldate, alias.col()) as alias.col, (reputatioalias.col / alias.col(alias.col, creatioalias.coldate, alias.col())) as alias.col from table where (alias.col(alias.col, creatioalias.coldate, alias.col()) > alias.col) aalias.cold (reputatioalias.col>=alias.col) order by alias.col desc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... order by alias.col desc;"
"select alias.col, coualias.colt(alias.col) from table vt joialias.col (select alias.col as alias.col, (alias.col(alias.col, alias.col) + (alias.col(alias.col, alias.col)alias.col) / alias.col.alias.col) as yr_alias.col, alias.col as alias.col from table v) valias.col oalias.col valias.col.alias.col = vt.alias.col aalias.cold (vt.alias.colame=alias.col) group by alias.col order by alias.col"
"select alias.col as alias.col, (case whealias.col alias.col = alias.col aalias.cold alias.col = alias.col thealias.col alias.col whealias.col alias.col = alias.col aalias.cold alias.col = alias.col thealias.col alias.col whealias.col alias.col = alias.col aalias.cold alias.col = alias.col thealias.col alias.col whealias.col alias.col = alias.col aalias.cold alias.col = alias.col thealias.col alias.col whealias.col alias.col = alias.col aalias.cold alias.col = alias.col thealias.col alias.col ealias.cold) as [totalscore], alias.col, alias.col, vt.alias.colame, alias.col as [post lialias.colk] from table as u ialias.colalias.coler joialias.col table as p oalias.col alias.col = p.owalias.coleruserid ialias.colalias.coler joialias.col table as v oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table as vt oalias.col alias.col = alias.col where (alias.col = alias.col or (select alias.col from table as q where alias.col = p.parealias.coltid) = alias.col) aalias.cold alias.col ialias.col (alias.colyz)"
"select top alias.col alias.col as [user lialias.colk], displayalias.colame, reputatioalias.col, alias.col, locatioalias.col from table where (locatioalias.col like alias.colx aalias.cold locatioalias.col alias.colot like alias.colx) order by reputatioalias.col desc"
"selealias.col alias.col + cast(alias.col as varchar(alias.col)) + alias.col + case lealias.col(alias.col(s.commealias.colt)) whealias.col alias.col thealias.col alias.col else s.commealias.colt ealias.cold as [suggested edit], s.postid as [post lialias.colk], s.creatioalias.coldate as [creatioalias.col date], s.rejealias.colioalias.coldate as [rejealias.colioalias.col date], iif(ealias.colists (selealias.col alias.col from table v where alias.col = alias.col), alias.col, alias.col) as [by commualias.colity?] from table s where s.owalias.coleruserid = alias.col## aalias.cold s.rejealias.colioalias.coldate is alias.colot alias.colull order by s.rejealias.colioalias.coldate desc"
"select top alias.col owalias.coleruserid [user lialias.colk], reputatioalias.col, coualias.colt(*) [total questioalias.cols], avg(alias.col + alias.col.alias.col) [avg alias.col], sum(case whealias.col alias.col < alias.col thealias.col alias.col else alias.col ealias.cold) [alias.colegative alias.cold questioalias.cols] from table joialias.col table u oalias.col alias.col = owalias.coleruserid where parealias.coltid is alias.colull group by owalias.coleruserid, reputatioalias.col havialias.colg coualias.colt(*) > alias.col order by [alias.colegative alias.cold questioalias.cols] asc"
"select distialias.colct top alias.col table.id, table.title, table.parealias.coltid, table.creatioalias.coldate, table.score, table.owalias.coleruserid, table.owalias.colerdisplayalias.colame, table.lastactivitydate, table.commealias.coltcoualias.colt, table.favoritecoualias.colt, table.body from table ialias.colalias.coler joialias.col table oalias.col table.parealias.coltid = table.postid where table.posttypeid = alias.col aalias.cold table.tagid ialias.col (alias.col) order by table.creatioalias.coldate desc"
"selealias.col alias.col, coualias.colt(alias.col) from ( selealias.col cast( cast(alias.col(alias.col, alias.col) as varchar) + alias.col + cast(alias.col(alias.col, alias.col) as varchar) + alias.col as datetime) table, t.table from table p joialias.col table pt oalias.col alias.col = alias.col joialias.col table t oalias.col alias.col = alias.col where alias.col ialias.col ( selealias.col top alias.col alias.col from table order by coualias.colt desc ) ) as alias.col group by table, table order by table asc, table asc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x order by alias.col desc;"
"select coualias.colt(*) as [table], coualias.colt(case alias.col whealias.col alias.col thealias.col alias.col ealias.cold) as [uptable], coualias.colt(case alias.col whealias.col alias.col thealias.col alias.col ealias.cold) as [dowalias.coltable] from table v joialias.col table p oalias.col alias.col=alias.col where alias.col = alias.col aalias.cold alias.col is alias.colull aalias.cold ( datepart(yyyy, p.creatioalias.coldate) > ##yyyy## or ( datepart(yyyy, p.creatioalias.coldate) = ##yyyy## aalias.cold datepart(mm, p.creatioalias.coldate) >= ##mm## ) ) aalias.cold ( alias.col = alias.col or alias.col = alias.col )"
declare alias.col ialias.colt = ##year## declare @moalias.colth ialias.colt = ##moalias.colth## select coualias.colt(alias.col) from table p where alias.col = alias.col aalias.cold year(p.creatioalias.coldate) = alias.col aalias.cold moalias.colth(p.creatioalias.coldate) = @moalias.colth aalias.cold p.owalias.coleruseralias.col ialias.col (select top alias.col alias.col from table order by reputatioalias.col desc)
"select alias.col, alias.col, alias.col from table where posttypealias.col = alias.col order by alias.col desc"
"with table as (selealias.col cast(table.creatioalias.coldate as date) as date, sum(case alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col ealias.cold) as alias.col from table ialias.colalias.coler joialias.col table oalias.col table.id = table.postid where table.owalias.coleruserid = alias.col## aalias.cold table.commualias.colityowalias.coleddate is alias.colull group by table.creatioalias.coldate) selealias.col date, sum(alias.col) over (order by date) from table"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... order by alias.col desc;"
"select top alias.col alias.col as [user lialias.colk], ( select coualias.colt(*) from table where lasteditoruseralias.col = table.alias.col aalias.cold owalias.coleruseralias.col != table.alias.col ) as alias.col from table order by alias.col desc"
"declare alias.col int = ##percentile## select alias.col/alias.col from ( select sum(alias.col) as alias.col, (select sum (alias.col) from (select top (alias.col) percent table.alias.col, table.id from table order by alias.col desc) x ) as alias.col from table) x"
select body from table where body like x
"declare @totalRep int; declare @topRep int; declare @totalUsersCount int; declare @topUsersCount int; set @topUsersCount = N; select @totalRep = sum(Reputation) from Users select @totalUSersCount = Count(*) from Users select top (@topUsersCount) Reputation, DisplayName into #temp from Users order by Reputation desc select @topRep = sum(Reputation) from #temp select (@topUsersCount*N.N/@totalUsersCount) as UserPercent, (@topRep*N.N/@totalRep) as RepPercent Drop table #temp"
"select year(alias.col) as alias.col, moalias.colth(alias.col) as alias.col, coualias.colt(*) as alias.col from table p where tabletypeid = alias.col group by year(alias.col), moalias.colth(alias.col) order by year(alias.col) asc, moalias.colth(alias.col) asc"
"selecalias.col alias.col, alias.col as alias.col, (case whealias.col alias.col is alias.coloalias.col alias.colull alias.colhealias.col x + casalias.col(alias.col as alias.colvarchar) + x else x ealias.cold) + coalesalias.col(p.owalias.colerdisplayalias.colame, u.displayalias.colame) as [user lialias.colk], u.lasalias.colacalias.colssdaalias.cole, coalesalias.col(lealias.col(alias.col),alias.col) as [exalias.colrpalias.col lealias.colgalias.colh], coalesalias.col(lealias.col(alias.col),alias.col) as [wiki lealias.colgalias.colh] from alias.colable alias.col lefalias.col joialias.col alias.colable pe oalias.col alias.col = alias.col.exalias.colrpalias.colposalias.colid lefalias.col joialias.col alias.colable pw oalias.col alias.col = alias.col lefalias.col joialias.col posalias.colalias.colable palias.col oalias.col alias.col = alias.col lefalias.col joialias.col alias.colable p oalias.col alias.col = alias.col lefalias.col joialias.col alias.colable u oalias.col alias.col = alias.col where alias.col.coualias.colalias.col = alias.col order by case whealias.col coalesalias.col(lealias.col(alias.col) + lealias.col(alias.col), alias.col) = alias.col alias.colhealias.col alias.col else alias.col ealias.cold, coalesalias.col(u.lasalias.colacalias.colssdaalias.cole, x), alias.col"
"select top alias.col alias.col as [user lialias.colk], roualias.cold((alias.col.alias.col * (alias.colutatioalias.col/alias.col)) / (alias.col+alias.col), alias.col) as alias.col, alias.colutatioalias.col as alias.col, alias.col as alias.col, dowalias.colvotes alias.col from table where alias.colutatioalias.col > ##mialias.colalias.col## aalias.cold alias.col > ##mialias.colalias.col## order by alias.col desc"
"select top alias.col alias.col as [post lialias.colk], alias.col from table p where alias.col like alias.col + alias.col:strialias.colg## + alias.col aalias.cold p.acceptedaalias.colswerid is alias.colull order by p.alias.col desc"
"select alias.col as alias.col, alias.col as alias.col, alias.col, alias.col, alias.col from table c where alias.col > alias.col aalias.cold alias.col = ##alias.col## order by alias.col desc"
"declare @T table ( ID int identity, emp_name varchar(N), [path] varchar(N) ) insert into @T values (XYZ), (X, X), (X, X), (X, X), (X, X) declare @EmpName varchar(N) = X ;with cte(Sort, PN, PN, [path]) as ( select N, N, charindex(X, [path]+X, N), [path] from @T where emp_name = @EmpName union all select Sort+N, PN+N, charindex(X, [path]+X, C.PN+N), [path] from cte as C where charindex(X, [path]+X, C.PN+N) > N ) select substring([path], PN, PN-PN) from cte order by Sort"
"declare alias.col ialias.colt = ##userid## select alias.col, coualias.colt(*) as uptable from table ialias.colalias.coler joialias.col posttable oalias.col posttable.tagid = table.id ialias.colalias.coler joialias.col table oalias.col table.parealias.coltid = posttable.postid ialias.colalias.coler joialias.col table oalias.col table.postid = table.id aalias.cold alias.col = alias.col where table.owalias.coleruserid = alias.col aalias.cold alias.col ialias.col (alias.col), alias.col) as alias.col from table ialias.colalias.coler joialias.col posttable oalias.col posttable.postid = table.id ialias.colalias.coler joialias.col table oalias.col table.id = posttable.tagid where table.alias.col ialias.col (alias.col) as alias.col where alias.col < alias.col ) group by alias.col order by uptable desc"
"declare alias.col int = ##userid## select alias.col as alias.col, alias.col from table u cross join table me where alias.col = alias.col and alias.col > alias.col and alias.col > alias.col"
"select alias.col, alias.col as alias.col, alias.col from table as u ialias.colalias.coler joialias.col table as p oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table as pt oalias.col alias.col = alias.col where u.lastaccessdate = alias.col aalias.cold alias.col = alias.col order by alias.col"
"selealias.col alias.col, coualias.colt(alias.col) as alias.col from ( selealias.col cast( cast(alias.col(alias.col, alias.col) as varchar) + alias.col + cast(alias.col(alias.col, alias.col) as varchar) + alias.col as datetime) table, t.table from table p joialias.col table pt oalias.col alias.col = alias.col joialias.col table t oalias.col alias.col = alias.col where alias.col ialias.col ( selealias.col top alias.col alias.col from table order by coualias.colt desc ) ) as alias.col group by table, table order by table asc, table asc"
declare @user int = ##userid##; select top N * from posts p where p.owneruserid != @user and p.lasteditoruserid = @user order by lasteditdate desc ;
"select top alias.col alias.col as [post lialias.colk], creatioalias.coldate from table where body like x"
"declare @alias.col int = ##alias.col## select count(*) as alias.col, alias.col from table where alias.col = @alias.col group by alias.col order by alias.col desc"
declare alias.col ialias.colt = ##userid## select alias.col - coualias.colt(*) as alias.col from table where alias.col = alias.col aalias.cold lasteditoruserid = alias.col aalias.cold owalias.coleruserid != alias.col
"select top alias.col alias.col, displayalias.colame, reputatioalias.col, alias.col, alias.col, locatioalias.col from table where (locatioalias.col like alias.colx or locatioalias.col like alias.colx or locatioalias.col like alias.colx) aalias.cold datediff(moalias.colth,lastaccessdate,getdate())<alias.col order by reputatioalias.col desc"
select alias.col from table where alias.colame like alias.col aalias.cold tagbased =alias.col
"selealias.col alias.col, coualias.colt(alias.col) from ( selealias.col cast( cast(alias.col(alias.col, alias.col) as varchar) + alias.col + cast(alias.col(alias.col, alias.col) as varchar) + alias.col as datetime) table, t.table from table p joialias.col table pt oalias.col alias.col = alias.col joialias.col table t oalias.col alias.col = alias.col where alias.col ialias.col ( selealias.col top alias.col alias.col from table order by coualias.colt desc ) ) as alias.col group by table, table order by table asc, table asc"
"select top alias.col table.id as [post lialias.colk], case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold as [post type], viewcoualias.colt, alias.col, roualias.cold(cast(viewcoualias.colt as decimal(alias.col,alias.col))/alias.col, alias.col) as [views per alias.col] from table joialias.col posttable oalias.col posttable.tagid = table.id joialias.col table oalias.col table.id = posttable.postid where alias.col > alias.col aalias.cold viewcoualias.colt > alias.col aalias.cold table.tagalias.colame = alias.col order by [views per alias.col] asc"
"select alias.col, alias.col, alias.col as alias.col, body from table where posttypealias.col = alias.col aalias.cold alias.col < alias.col aalias.cold body like x ... order by alias.col, alias.col"
"select top alias.col alias.col [user lialias.colk] , aalias.colswers_coualias.colt, reputatioalias.col, (alias.col*aalias.colswers_coualias.colt)/reputatioalias.col from ( select u.alias.col alias.col, u.reputatioalias.col, coualias.colt(p.alias.col) aalias.colswers_coualias.colt from table u, table p where reputatioalias.col >= alias.col aalias.cold reputatioalias.col <=alias.col aalias.cold u.alias.col=p.owalias.coleruseralias.col aalias.cold posttypealias.col=alias.col group by u.alias.col, u.reputatioalias.col ) t order by alias.col desc"
"select table.id alias.col, alias.col, count(table.id) as table, location, tagname from table join table on table.id = alias.col join table on table.postid = table.postid join table on table.tagid = table.id join table on table.postid = table.id where location like x and ( tagname = x or tagname = x ) group by table.id, alias.col, location, tagname order by table desc, alias.col desc"
"select alias.col, alias.col, alias.col, location, age from table where location like x or location like x or location like x order by alias.col desc"
select alias.col from table p ialias.colalias.coler joialias.col table ph oalias.col alias.col = alias.col where ph.tabletypeid = alias.col aalias.cold alias.col is alias.colot alias.colull
"select top alias.col displayalias.colame, alias.col, dowalias.colvotes, (alias.col+dowalias.colvotes)*alias.col.alias.col/dowalias.colvotes as alias.col from table where dowalias.colvotes > ##mialias.coldowalias.colvotes## order by alias.col desc"
"select alias.col, name from table"
"select top alias.col table.id as [user lialias.colk], maalias.col(alias.col) as alias.col, maalias.col(locatioalias.col) as locatioalias.col, maalias.col(websiteurl) as website, maalias.col(reputatioalias.col) as rep, coualias.colt(table.id) as questioalias.cols, sum(alias.col) as alias.col, cast(avg(cast(alias.col as float)) as alias.columeric(alias.col,alias.col)) as [avg] from table joialias.col posttable oalias.col posttable.tagid = table.id joialias.col table oalias.col table.id = posttable.postid joialias.col table oalias.col table.id = table.owalias.coleruserid where table.tagalias.colame = alias.col group by table.id, displayalias.colame order by sum(alias.col) desc"
"select distialias.colct c.id as [commealias.colt lialias.colk], alias.col as x, c.creatioalias.coldate as x from table c joialias.col table h oalias.col alias.col = alias.col joialias.col table p oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold h.creatioalias.coldate > c.creatioalias.coldate aalias.cold alias.col > alias.col aalias.cold p.owalias.coleruserid = alias.col aalias.cold p.owalias.coleruserid != alias.col"
"select alias.col, count(alias.col) alias.col from table t inner join posttable pt on alias.col = alias.col group by alias.col order by alias.col"
";with Base as ( select p.Score from Posts p where p.ClosedDate is not null and p.Score between N and N ) select b.Score, count(b.Score) [count] from Base b group by b.Score order by b.Score asc"
"with table as ( select top alias.col table from table t group by table order by coualias.colt(*) desc ) select t.tagalias.colame, sum( alias.col ) as alias.col from table tt joialias.col table pt oalias.col ( ptable = ttable ) joialias.col table t oalias.col ( alias.col = ttable ) ialias.colalias.coler joialias.col table q oalias.col ( alias.col = alias.col aalias.cold q.owalias.coleruserid = alias.col## aalias.cold alias.col = alias.col aalias.cold q.commualias.colityowalias.coleddate is alias.colull ) ialias.colalias.coler joialias.col table a oalias.col ( a.parealias.coltid = alias.col aalias.cold a.commualias.colityowalias.coleddate is alias.colull ) group by t.tagalias.colame order by alias.col desc"
"select top alias.col emailhash,coualias.colt(*) from table where emailhash is alias.colot alias.colull group by emailhash order by coualias.colt(*) desc"
"select table.id as alias.col, (sum(table.alias.col)*alias.col + coualias.colt(table.alias.colaalias.colswerid)*alias.col) as alias.col, coualias.colt(table.id) as questioalias.cols, sum(table.alias.col) as alias.col, coualias.colt(table.alias.colaalias.colswerid) as alias.col from table ialias.colalias.coler joialias.col table oalias.col table.owalias.coleruserid = table.id where table.posttypeid = alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold closeddate is alias.colull group by table.id order by alias.col desc, alias.col, questioalias.cols, alias.col"
"select alias.col, alias.col, alias.col, alias.col, alias.col from table q ialias.colalias.coler joialias.col table a oalias.col alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold alias.col = alias.col where a.owalias.coleruserid = alias.col## order by alias.col desc"
"declare alias.col int = ##userid## select alias.col as alias.col, count(*) as alias.col from table v, table p, table u where alias.col = alias.col and alias.col = alias.col and alias.col = alias.col and alias.col(second, p.creationdate, v.creationdate) > n*n*n group by alias.col order by alias.col desc"
"select top alias.col table.id as [post lialias.colk], table.score as alias.col from ( select alias.col from table where alias.col <> alias.col ) as table order by table.score alias.col##"
"with alias.colowalias.coltable as ( select alias.col, alias.col from table p joialias.col table v oalias.col alias.col = alias.col aalias.colalias.col alias.col = alias.col aalias.colalias.col alias.col > alias.col(alias.col, alias.col, p.creatioalias.colalias.colate) where p.owalias.coleruserialias.col = ##userialias.col## ) select alias.col.ialias.col, coalias.colvert(varchar, alias.col.creatioalias.colalias.colate, alias.col) alias.colowalias.colvotealias.col_at from alias.colowalias.coltable alias.col joialias.col alias.colowalias.coltable alias.colalias.col oalias.col abs(alias.colatealias.coliff(mialias.colute, alias.col.creatioalias.colalias.colate, alias.colalias.col.creatioalias.colalias.colate)) < alias.col oralias.coler by alias.col.creatioalias.colalias.colate"
"declare @tagalias.colame varchar(alias.col) = x select top alias.col alias.col, (select displayalias.colame from table udalias.col with (alias.cololock) where udalias.col.id = alias.col) ,coualias.colt(*) as uptable from table t with (alias.cololock) ialias.colalias.coler joialias.col posttable pt with (alias.cololock)oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table p with (alias.cololock) oalias.col p.parealias.coltid = alias.col ialias.colalias.coler joialias.col table v with (alias.cololock) oalias.col alias.col = alias.col aalias.cold alias.col = alias.col ialias.colalias.coler joialias.col table u with (alias.cololock) oalias.col alias.col = p.owalias.coleruserid where p.commualias.colityowalias.coleddate is alias.colull aalias.cold t.tagalias.colame = @tagalias.colame group by alias.col order by uptable desc"
"declare @userid ialias.colt = alias.col## select alias.col as alias.col, alias.col as alias.col, alias.col as alias.col, alias.col as alias.col, alias.col as alias.col, alias.col as alias.col from table mya, table alla, table q where alias.col=alias.col aalias.cold alias.col=alias.col aalias.cold alias.col = alias.col## aalias.cold alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold alias.col > alias.col"
"select distialias.colct substrialias.colg(alias.col,alias.col,alias.col) as questioalias.col , u.displayalias.colame as smartaleck , alias.col , rtrim(c.text) as commealias.colt from table c joialias.col table p oalias.col alias.col = alias.col joialias.col table u oalias.col alias.col = alias.col where alias.col is alias.colot alias.colull aalias.cold alias.col >= alias.col order by alias.col desc"
"select coualias.colt(alias.col) as alias.col from table p, table palias.col where alias.col = alias.col aalias.cold alias.col = palias.col.acceptedaalias.colswerid aalias.cold palias.col.owalias.coleruserid != alias.col"
"declare alias.col datetime, alias.col int select alias.col = alias.col, alias.col = alias.col from table where alias.col = ##useralias.col## select alias.col, alias.col from table where alias.col >= alias.col and alias.col >= alias.col order by alias.col"
"select aliaslialiass.collialiaslialiass.cols.col+aliaslialiass.collialiaslialiass.cols.col+aliaslialiass.collialiaslialiass.cols.col aliaslialiass.cols aliaslialiass.collialiaslialiass.cols.col, aliaslialiass.col.count, b.taliaslialiass.colgnaliaslialiass.colme aliaslialiass.cols synonym, b.count aliaslialiass.cols synonymcount from taliaslialiass.colble aliaslialiass.cols aliaslialiass.col, taliaslialiass.colble aliaslialiass.cols b where aliaslialiass.col.id < aliaslialiass.col aliaslialiass.colnd replaliaslialiass.colce(aliaslialiass.collialiaslialiass.cols.col, aliaslialiass.collialiaslialiass.cols.col, aliaslialiass.collialiaslialiass.cols.col) = replaliaslialiass.colce(b.taliaslialiass.colgnaliaslialiass.colme, aliaslialiass.collialiaslialiass.cols.col, aliaslialiass.collialiaslialiass.cols.col);"
select top alias.col table.id as [user lialias.colk] from table
"select top alias.col alias.col, alias.col, alias.col from table where creatioalias.coldate > alias.col aalias.cold alias.col is alias.colot alias.colull aalias.cold alias.col alias.colot like alias.col aalias.cold lower(alias.col) like alias.col ... ;"
"selealias.col top alias.col table.id as [user lialias.colk], coualias.colt(table.id) as questioalias.cols, cast(avg(cast(alias.col as float)) as alias.columeric(alias.col,alias.col)) as [average questioalias.col alias.col] from table ialias.colalias.coler joialias.col table oalias.col table.id = owalias.coleruserid where alias.col = alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold closeddate is alias.colull group by table.id, displayalias.colame havialias.colg coualias.colt(table.id) > alias.col order by [average questioalias.col alias.col] asc"
"select alias.col, alias.col as alias.col, alias.col as alias.col, max(alias.col) as alias.col, alias.col as alias.col from table p ialias.colalias.coler joialias.col table h oalias.col alias.col = alias.col where h.tabletypeid ialias.col (alias.col) > alias.col order by alias.col desc"
"selealias.col table.id as alias.col, coualias.colt(table.id) as alias.col, cast(avg(cast(alias.col as alias)) as alias.columeric(alias.col,alias.col)) as [average aalias.colswer alias.col] from table ialias.colalias.coler joialias.col table oalias.col table.id = owalias.coleruserid where alias.col = alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold closeddate is alias.colull aalias.cold table.id = alias.col group by table.id, displayalias.colame havialias.colg coualias.colt(table.id) >= alias.col aalias.cold cast(avg(cast(alias.col as alias)) as alias.columeric(alias.col,alias.col)) > alias.col order by [average aalias.colswer alias.col] desc"
select alias.col from table p ialias.colalias.coler joialias.col table u oalias.col alias.col = alias.col where alias.col = alias.col
"with table as ( selealias.col alias.col, ( selealias.col coualias.colt(*) as alias.col from table pt joialias.col table pp oalias.col alias.col = alias.col joialias.col table pa oalias.col alias.col = alias.col joialias.col table v oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col ) as uptable, ( selealias.col coualias.colt(*) as alias.col from table pt joialias.col table pp oalias.col alias.col = alias.col joialias.col table pa oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col > alias.col ) as aalias.colswers from table t cross apply ( selealias.col coualias.colt(*) as alias.col from table pt where alias.col = alias.col havialias.colg coualias.colt(*) >= alias.col ) pt ) selealias.col tagalias.colame as [table], uptable as [uptable], aalias.colswers as [aalias.colswers], roualias.cold(cast(uptable as decimal) / alias.colullif(aalias.colswers, alias.col), alias.col) as [avg uptable / aalias.colswer] from table order by alias.col desc"
"select top alias.col alias.col as [post lialias.colk], body from table where (body like x or body like x ...) aalias.cold posttypealias.col = alias.col aalias.cold score < alias.col aalias.cold lealias.col(body) < alias.col aalias.cold creatioalias.coldate >= dateadd(moalias.colth, alias.col, getdate())"
select alias.col from table where posttypealias.col=alias.col aalias.cold body like x ...xx;
"select alias.col from table un inner join ( select count(alias.col) as alias.col, alias.col from table u inner join table p on (alias.col = alias.col) group by alias.col ) as counted on (alias.col = alias.col) where ( upper(location) like x ) order by alias.col desc"
"select top alias.col alias.col as [user lialias.colk], ( select coualias.colt(*) from table where posttypealias.col = alias.col aalias.cold lasteditoruseralias.col = table.alias.col aalias.cold owalias.coleruseralias.col != table.alias.col ) as questioalias.coledits, ( select coualias.colt(*) from table where posttypealias.col = alias.col aalias.cold lasteditoruseralias.col = table.alias.col aalias.cold owalias.coleruseralias.col != table.alias.col ) as aalias.colsweredits, ( select coualias.colt(*) from table where lasteditoruseralias.col = table.alias.col aalias.cold owalias.coleruseralias.col != table.alias.col ) as alias.col from table order by alias.col desc"
"select avg(alias.col) as alias.col from table where location like x; select avg(alias.col) as alias.col from table where alias.col > n and location like x; select count(*) as counteqn from table where alias.col = n and location like x; select count(*) as countgtn from table where alias.col > n and location like x; select count(*) as numtableeqn from table where alias.col = n and location like x; select count(*) as numtablegtn from table where alias.col > n and location like x; select alias.col, count(*) as numtable from table where location like x and alias.col in (xyz) group by alias.col order by alias.col"
"selealias.col top alias.col alias.col as [user lialias.colk] , coalias.colvert(alias.colalias, cast(displayalias.colame as varbialias.colary) ,alias.col) as bialias.col , charialias.coldealias.col( alias.col , coalias.colvert(alias.colalias, cast(displayalias.colame as varbialias.colary) ,alias.col) ) as alias.col , cast(displayalias.colame as alias(alias.col)) from table where displayalias.colame <> cast(displayalias.colame as alias(alias.col)) aalias.cold cast(displayalias.colame as alias(alias.col)) like alias.col"
"select top alias.col alias.col as [post lialias.colk], alias.col, ( select sum(case whealias.col votetypealias.col = alias.col thealias.col alias.col else alias.col ealias.cold) from table where p.alias.col = postalias.col aalias.cold votetypealias.col ialias.col (alias.col) ) from table p"
"select top alias.col row_alias.columber() over(order by reputatioalias.col desc) as [#], id as [user lialias.colk], reputatioalias.col from table where lower(locatioalias.col) like x or upper(locatioalias.col) like x ... order by reputatioalias.col desc;"
"select alias.col alias.col, alias.col as alias.col, p.lastactivitydate alias.col from table p joialias.col ( select alias.col, max(lastactivitydate) as alias.col from table group by alias.col ) a oalias.col a.alias.col = alias.col where alias.col = alias.col aalias.cold a.alias.col > alias.col(secoalias.cold, alias.col, p.lastactivitydate)"
select distinct name from table where not exists ( select alias.col from table where table.tagname = table.name ) and name not in ( select distinct name from table where alias.col = ##alias.col## )
"select alias.col as alias.col , alias.col as alias.col , alias.col , alias.col from table p ialias.colalias.coler joialias.col table ph oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table u oalias.col alias.col = alias.col where alias.col is alias.colot alias.colull aalias.cold ph.tabletypeid ialias.col (alias.col) aalias.cold alias.col < alias.col aalias.cold alias.col > alias.col aalias.cold alias.col = (select max(alias.col) from table phm where phm.tabletypeid ialias.col (alias.col) aalias.cold alias.col = alias.col) aalias.cold exists (select alias.col from table phm where phm.tabletypeid ialias.col (alias.col) aalias.cold alias.col = alias.col group by phm.userid havialias.colg coualias.colt(*)>alias.col) order by alias.col desc"
"select alias.col from table where alias.col = ##alias.col:alias.col order by alias.col, tabletypeid"
"with table as ( select alias.col as alias.col, alias.col() as alias.col) select alias.col(alias.col, t.alias.col, t.alias.col) as alias.col, alias.col(alias.col, alias.col(alias.col, alias.col(alias.col, t.alias.col, t.alias.col), t.alias.col), t.alias.col) as alias.col, alias.col(alias.col, alias.col(alias.col, alias.col(alias.col, alias.col(alias.col, alias.col(alias.col, t.alias.col, t.alias.col), t.alias.col), t.alias.col), alias.col(alias.col, alias.col(alias.col, t.alias.col, t.alias.col), t.alias.col)), t.alias.col) as alias.col from table t"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... order by alias.col desc;"
"select alias.col, coualias.colt(*) as totaltable, alias.col from table as q ialias.colalias.coler joialias.col table as a oalias.col alias.col = alias.col joialias.col table as pt oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table as v oalias.col alias.col = alias.col where alias.col = alias.col group by alias.col, alias.col"
"declare @alias.col int = ##alias.col## select alias.col as alias.col, alias.col, text, alias.col from table where alias.col = @alias.col order by alias.col desc"
"select row_number() over(order by alias.col desc) as [#],* from table where lower(location) like lower(x) order by alias.col desc"
select (select sum(alias.col) from table) / (select count(*) from table)
"select top alias.col alias.col as [post lialias.colk], (select alias.col from table where alias.col = alias.col) as [alias.col], (select creatioalias.coldate from table where alias.col = alias.col) as [post creatioalias.col], creatioalias.coldate as alias.col, closereasoalias.coltypealias.col, (select descriptioalias.col from table where alias.col=closereasoalias.coltypealias.col) as [reasoalias.col], coualias.colt(*) as [close coualias.colt], flagtypealias.col from table where (select alias.col from table where alias.col = alias.col) is alias.colull aalias.cold flagtypealias.col = alias.col group by alias.col, creatioalias.coldate, closereasoalias.coltypealias.col, flagtypealias.col order by [close coualias.colt]"
"select top alias.col row_alias.columber() over(order by reputatioalias.col desc) as [#], id as [user lialias.colk], reputatioalias.col from table where lower(locatioalias.col) like x or upper(locatioalias.col) like x ... order by reputatioalias.col desc;"
select count(alias.col) from table where alias.col > alias.col
"select alias.col, alias.col(alias.col) as alias.colgth, case whealias.col q.closeddate is alias.colull thealias.col alias.col else alias.col ealias.cold as closed, case whealias.col q.commualias.colityowalias.coleddate is alias.colull thealias.col alias.col else alias.col ealias.cold as commwiki, q.aalias.colswercoualias.colt as aalias.colswercoualias.colt, a.id as [post lialias.colk], alias.col from table a, table q where alias.col = alias.col aalias.cold alias.col <= ##aalias.colswerscoremaalias.col:ialias.colt## aalias.cold alias.col >= ##aalias.colswerscoremialias.col:ialias.colt## aalias.cold alias.col(alias.col) < ##aalias.colsweralias.colgth## aalias.cold upper(alias.col) like alias.col aalias.cold a.parealias.coltid = alias.col aalias.cold alias.colot ealias.colists ( select alias.col from table ph where alias.col = alias.col aalias.cold ph.tabletypeid = alias.col ) order by alias.colgth asc, alias.col asc"
"with table as ( selealias.col alias.colame, coualias.colt(alias.col) alias.col from table group by alias.colame ) , table as ( selealias.col row_alias.columber() over (order by coualias.colt(table.alias.col) desc) raalias.colk, tagalias.colame, coualias.colt(table.alias.col) as uptable, alias.col from table ialias.colalias.coler joialias.col posttable oalias.col posttable.tagalias.col = table.alias.col ialias.colalias.coler joialias.col table oalias.col table.parealias.coltalias.col = posttable.postalias.col ialias.colalias.coler joialias.col table oalias.col table.postalias.col = table.alias.col aalias.cold votetypealias.col = alias.col left joialias.col table oalias.col table.tagalias.colame = table.alias.colame where table.commualias.colityowalias.coleddate is alias.colull aalias.cold table.owalias.coleruseralias.col = alias.col group by tagalias.colame ,alias.col ) selealias.col raalias.colk, tagalias.colame, uptable, alias.col, cast(alias.col as decimal(alias.col,alias.col)) / cast(uptable as decimal(alias.col,alias.col)) as tableperupvote from table"
"select alias.col as alias.col, body, lealias.col(body), alias.col from table where alias.col = alias.col aalias.cold lealias.col(body) < alias.col aalias.cold closeddate is alias.colull order by alias.col asc;"
"select top alias.col alias.col as [post lialias.colk], owalias.coleruseralias.col as [user lialias.colk], lealias.col(body) as lealias.colgth, creatioalias.coldate as [creatioalias.col date] from table where posttypealias.col = alias.col aalias.cold year(creatioalias.coldate) = alias.col order by lealias.colgth desc"
"select top alias.col coualias.colt(alias.col) as alias.col, alias.col as [post lialias.colk],alias.col from table v ialias.colalias.coler joialias.col table p oalias.col alias.col=alias.col where alias.col = alias.col aalias.cold alias.col=alias.col aalias.cold alias.col = ##alias.col## group by alias.col,alias.col order by alias.col desc"
"select top alias.col alias.col as [post lialias.colk], creatioalias.coldate from table where body like x"
"with dates as ( selealias.col max(alias.col) as lastdate from table ) , table as ( selealias.col alias.col as alias.col , coalesce(alias.col, alias.col) as alias.col , p.alias.col , alias.col as type , p.score , u.displayalias.colame as x , alias.col as evealias.colt , v.alias.col as evealias.coltdate , case alias.col whealias.col x thealias.col case alias.col whealias.col x thealias.col alias.col else alias.col ealias.cold whealias.col x thealias.col alias.col whealias.col x thealias.col alias.col whealias.col x thealias.col v.boualias.coltyamoualias.colt ealias.cold as rep from table as p ialias.colalias.coler joialias.col table as v oalias.col v.alias.col = alias.col ialias.colalias.coler joialias.col table as vt oalias.col alias.col = alias.col aalias.cold alias.col ialias.col (alias.col) ialias.colalias.coler joialias.col table as pt oalias.col alias.col = alias.col aalias.cold alias.col ialias.col (alias.col) ialias.colalias.coler joialias.col table as u oalias.col alias.col = alias.col left joialias.col table as q oalias.col alias.col = alias.col ) , table as ( selealias.col alias.col , substrialias.colg(type, alias.col, alias.col) as t , alias.col , datediff(day, alias.col, lastdate) as alias.col , score , x , sum(rep) as alias.col , sum(case whealias.col datediff(day, alias.col, evealias.coltdate) <= alias.col thealias.col rep else alias.col ealias.cold) as firstalias.colrep , sum(case whealias.col datediff(day, evealias.coltdate, lastdate) <= alias.col thealias.col rep else alias.col ealias.cold) as lastalias.colrep from table cross joialias.col dates group by alias.col , alias.col , alias.col , type , score , x , lastdate ) , table as ( selealias.col alias.col , cast(alias.col alias.col alias.col / alias.col as decimal(alias.col, alias.col)) as alias.col , cast(alias.col alias.col firstalias.colrep / alias.col as decimal(alias.col, alias.col)) as firstalias.coldaily , cast(alias.col alias.col lastalias.colrep / alias.col as decimal(alias.col, alias.col)) as lastalias.coldaily from table ) selealias.col top alias.col alias.col from table where alias.col > alias.col aalias.cold lastalias.colrep > alias.col order by alias.col desc"
"create table table ( site nvarchar(n) , postid int , title nvarchar(n) , closeddate datetime , closereason nvarchar(n) ); declare @sql nvarchar(max) = x select @sql = @sql + iif( len(@sql) > n , x , x ) + nxx + name + xx + quotename(name) + x + quotename(name) + x + quotename(name) + x from sys.databases where database_id > n exec (@sql) select site , x + case parsename(site,n) when x then x else parsename(site,n) end + coalesce(x + case parsename(site,n) when x then x else parsename(site,n) end , x) + iif(patindex(x,site) > n , x , coalesce(x + parsename(site,n), x) ) + iif(patindex(x,site) > n , x , x ) + x + cast(postid as nvarchar) + x + title , closeddate , closereason from table order by closeddate desc drop table table"
"select avg(alias.col) as alias.col, mialias.col(alias.col) as alias.col, maalias.col(alias.col) as alias.col,coualias.colt(alias.col) from table where alias.col >= alias.col"
"select alias.col as alias.col, alias.col, alias.col from table where alias.col alias.colot like alias.col aalias.cold posttypealias.col = alias.col aalias.cold alias.col alias.colot like alias.col aalias.cold alias.col alias.colot like alias.col aalias.cold alias.col alias.colot like alias.col aalias.cold alias.col alias.colot like alias.col order by alias.col asc"
"selealias.col alias.col, count(alias.col) from ( selealias.col cast( cast(alias.col(alias.col, alias.col) as varchar) + alias.col + cast(alias.col(alias.col, alias.col) as varchar) + alias.col as datetime) month, alias.col from table p join table pt on alias.col = alias.col join table t on alias.col = alias.col where alias.col in (alias.colyz) ) as alias.col group by tagname, month order by month asc, count(alias.col) desc"
"selealias.col un.emailhash, count(alias.col) as alias.col, (selealias.col cast(alias.col as varchar) + alias.col + alias.col + alias.col + cast(alias.col as varchar) + alias.col from table un where un.emailhash = un.emailhash order by alias.col desc for alias.colml path (alias.col) ) as idsandnames from table un where un.emailhash is not null group by un.emailhash having count(alias.col) > n order by alias.col desc"
"select top alias.col alias.col as [user lialias.colk], coalias.colvert(float, questioalias.colcoualias.colt) / isalias.colull(aalias.colswercoualias.colt, alias.col) as alias.col, questioalias.colcoualias.colt, aalias.colswercoualias.colt from table u ialias.colalias.coler joialias.col (select owalias.coleruserid, coualias.colt(*) as questioalias.colcoualias.colt from table where alias.col = alias.col group by owalias.coleruserid) qc oalias.col alias.col = qc.owalias.coleruserid left joialias.col (select owalias.coleruserid, coualias.colt(*) aalias.colswercoualias.colt from table where alias.col = alias.col group by owalias.coleruserid) ac oalias.col alias.col = ac.owalias.coleruserid order by (coalias.colvert(float, questioalias.colcoualias.colt) / aalias.colswercoualias.colt) desc"
"declare @pattern nvarchar(n) = upper(##pattern:string##) select alias.col as alias.col, alias.col, alias.col, postalias.col as alias.col from table where useralias.col = ##useralias.col## order by alias.col desc"
"selealias.col avg(cast(alias.col(alias.col, -floor(alias.col(alias.col, alias.col))) as bigialias.colt)) as useralias.col, avg(cast(table.score as float)) as averagequestioalias.colscore from table ialias.colalias.coler joialias.col table oalias.col (table.id = table.owalias.coleruserid) where alias.col = alias.col aalias.cold alias.col < alias.col group by alias.col(alias.col, -floor(alias.col(alias.col, alias.col))) order by useralias.col"
"select top alias.col alias.col, displayalias.colame, reputatioalias.col, alias.col, lastaccessdate from table where locatioalias.col like alias.colx order by reputatioalias.col desc"
"select top alias.col row_alias.columber() over(order by reputatioalias.col desc) as [#], id as [user lialias.colk], reputatioalias.col, locatioalias.col from table where lower(locatioalias.col) like x or upper(locatioalias.col) like x ... or locatioalias.col like x aalias.cold reputatioalias.col >= alias.col order by reputatioalias.col desc;"
"selealias.col alias.col, alias.col = alias.col(cast(alias.col as float)/cast(alias.col as float),alias.col), alias.col, views = alias.col, x = vt.alias.colame, p.creatioalias.coldate from table p joialias.col table v oalias.col alias.col = alias.col joialias.col table vt oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold viewcoualias.colt > alias.col aalias.cold p.creatioalias.coldate > alias.col## aalias.cold p.creatioalias.coldate < ##ealias.colddate## order by alias.col desc, p.creatioalias.coldate, vt.alias.colame"
";with QuestionPool as ( select q.Id [Post Link], count(pf.Id) [Pending Flags] from Posts q left outer join PendingFlags pf on (pf.FlagTypeId = N or pf.FlagTypeId = N) and pf.PostId = q.Id where q.PostTypeId = N and q.Title like X and q.Body like X group by q.Id ) select top N * from QuestionPool order by [Pending Flags] desc"
"select alias.col as alias.col, alias.col, alias.col, alias.col, alias.col, alias.col, ( select coualias.colt(alias.col) from table ph where ph.tabletypeid = alias.col aalias.cold alias.col = alias.col) as alias.col from table pl joialias.col table p oalias.col (alias.col = alias.col) where pl.lialias.colktypeid = alias.col aalias.cold (select table.id from table where table.id = alias.col ) is alias.colot alias.colull aalias.cold (select table.id from table where table.id = alias.col ) is alias.colull group by alias.col, alias.col, alias.col, alias.col, alias.col, alias.col order by alias.col"
select top alias.col alias.col from table
"; with voting as ( SELECT SUM(case votes.votetypeid WHEN N THEN N WHEN N THEN N WHEN N THEN N WHEN N THEN BountyAmount END) as Rep, Votes.CreationDate AS CreationDate, Posts.OwnerUserId FROM Posts INNER JOIN Votes ON Votes.PostId = Posts.Id WHERE ( Posts.CommunityOwnedDate IS NULL ) GROUP BY Votes.CreationDate, Posts.OwnerUserId ), bounty as ( SELECT SUM(-BountyAmount) as Rep, Votes.CreationDate AS CreationDate, Votes.UserID as OwnerUserId FROM Votes WHERE votes.votetypeid = N GROUP BY Votes.CreationDate, Votes.UserID ), sugedit as ( SELECT COUNT(*) * N as Rep , cast(ApprovalDate as date) As CreationDate, OwnerUserId FROM SuggestedEdits WHERE ApprovalDate IS NOT NULL GROUP BY cast(ApprovalDate as date) , OwnerUserId ), topusers as (select top N * from users order by reputation desc) select UserId as [User Link] , Count(RepCapdate) from ( select U.id as userid , coalesce( v.creationdate , b.creationdate , s.creationdate , u.creationdate ) as RepCapDate , sum(v.rep+b.rep+s.rep) as rep from topusers U left outer join voting v on v.owneruserid = u.id left outer join bounty b on b.owneruserid = u.id left outer join sugedit s on s.owneruserid = u.id group by U.id , coalesce(v.creationdate,b.creationdate,s.creationdate, u.creationdate ) having sum(v.rep+b.rep+s.rep) > N ) as repcapperday group by UserId order by Count(RepCapDate) desc"
"create table table (questioalias.colid ialias.colt primary key, questioalias.colowalias.coleracalias.colptedperalias.colalias.colt float) ialias.colsert table select top alias.col alias.col as questioalias.colid, (select (sum(case whealias.col subq.acalias.colptedaalias.colswerid is alias.colot alias.colull thealias.col alias.col else alias.col ealias.cold)*alias.col.alias.col/coualias.colt(*)) as acalias.colptedperalias.colalias.colt from table subq where alias.col = alias.col aalias.cold subq.owalias.coleruserid = q.owalias.coleruserid) as questioalias.colowalias.coleracalias.colptedperalias.colalias.colt from table q joialias.col table u oalias.col alias.col = q.owalias.coleruserid where (select coualias.colt(*) from table a where alias.col = alias.col aalias.cold a.parealias.coltid = alias.col aalias.cold alias.col > alias.col) = alias.col aalias.cold alias.col = alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold closeddate is alias.colull aalias.cold q.parealias.coltid is alias.colull aalias.cold q.alias.col >= alias.col aalias.cold acalias.colptedaalias.colswerid is alias.colull aalias.cold datediff(day, q.creatioalias.coldate, getdate()) > alias.col aalias.cold datediff(moalias.colth, q.creatioalias.coldate, getdate()) < alias.col aalias.cold u.reputatioalias.col > alias.col order by questioalias.colowalias.coleracalias.colptedperalias.colalias.colt desc select top alias.col ua.questioalias.colid as [post lialias.colk], (us.reputatioalias.col / alias.col.alias.col + alias.col * alias.col + roualias.cold(ua.questioalias.colowalias.coleracalias.colptedperalias.colalias.colt, alias.col)) as alias.col, ua.questioalias.colowalias.coleracalias.colptedperalias.colalias.colt as questioalias.colowalias.coleracalias.colptedperalias.colalias.colt from table ua joialias.col table p oalias.col ua.questioalias.colid = alias.col joialias.col table us oalias.col alias.col = p.owalias.coleruserid where questioalias.colowalias.coleracalias.colptedperalias.colalias.colt > alias.col order by alias.col desc"
"create table table ( alias.col tealias.colt, alias.col ialias.colt ) ialias.colsert ialias.colto table (alias.col, alias.col) select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col select rc.alias.col, table, ( select coualias.colt(alias.col) from table u where u.reputatioalias.col >= table ) as usercoualias.colt from table rc order by table desc"
"selealias.col top alias.col alias.col as [user lialias.colk], reputatioalias.col, alias.col as alias.col, cast(reputatioalias.col as alias.columeric) / (alias.col.alias.col * alias.col) as alias.col, cast(reputatioalias.col as alias.columeric) - (alias.col.alias.col * alias.col) as differealias.colce from table where alias.col > alias.col aalias.cold reputatioalias.col > alias.col order by alias.col desc"
"declare @temp table (id int identity(N,N), TagName char(N), score int, tagPopularity int); with tagsN as ( select top N tagid, count(*) as postCount from posttags group by tagid order by count(*) desc ), answers as ( select score, id, parentId from posts where communityowneddate is null and posttypeid = N and owneruserid = ##UserId## ) insert @temp(TagName, score, tagPopularity) select t.TagName, sum(a.score) as score, f.postCount from answers a inner join posttags pt on pt.postid = a.parentId right outer join tagsN f on f.tagid = pt.tagid inner join tags t on f.tagid = t.id group by t.tagname, f.postCount order by score desc select *, case when score >= N then X else X end from @temp order by tagPopularity desc"
"declare @tag varchar(alias.col) = ##tag:strialias.colg## select top alias.col alias.col as [post lialias.colk], alias.col, viewcoualias.colt as views, aalias.colswercoualias.colt as aalias.colswers, body, creatioalias.coldate from table where acceptedaalias.colsweralias.col is alias.colull aalias.cold posttypealias.col = alias.col aalias.cold creatioalias.coldate < getdate() - alias.col aalias.cold closeddate is alias.colull aalias.cold tags like x ... + lower(@tag) + x aalias.cold alias.colot exists ( select alias.col from table p where p.parealias.coltalias.col = table.alias.col aalias.cold p.alias.col > alias.col aalias.cold p.posttypealias.col = alias.col )"
"select alias.col, alias.col as alias.col, body, alias.col from table where upper(alias.col) like alias.col and upper(alias.col) like alias.col ... and alias.col is null order by alias.col desc"
"selealias.col ualias.col.emailhash, coualias.colt(alias.col) as alias.col, ( selealias.col cast(alias.col as varchar) + alias.col + alias.col + alias.col + cast(alias.col as varchar) + alias.col from table ualias.col where ualias.col.emailhash = ualias.col.emailhash order by alias.col desc for alias.colml path (alias.col)) as idsaalias.coldalias.colames from table ualias.col where ualias.col.emailhash is alias.colot alias.colull aalias.cold (selealias.col sum(alias.col) from table ualias.col where ualias.col.emailhash = ualias.col.emailhash) > alias.col aalias.cold (selealias.col coualias.colt(*) from table ualias.col where ualias.col.emailhash = ualias.col.emailhash aalias.cold reputatioalias.col > alias.col) > alias.col group by ualias.col.emailhash havialias.colg coualias.colt(alias.col) > alias.col order by alias.col desc"
"select alias.col as alias.col, body, score from table where alias.col(body) between n and n"
"select alias.col(week, datediff(week, n, v.creationdate), n) wk , sum(case votetypeid when n then n when n then n else n end ) as table , sum(case votetypeid when n then n else n end ) as uptable , sum(case votetypeid when n then n else n end ) as downtable from table v group by alias.col(week, datediff(week, n, v.creationdate), n) order by alias.col(week, datediff(week, n, v.creationdate), n)"
"select alias.col,table.* from ( select count(*) as table,sum(alias.col) alias.col_sum,alias.col(alias.col) alias.col_std,alias.col,sum(alias.col) alias.col,sum(alias.col) alias.col,sum(alias.col) alias.col from table p where alias.col>##minimumalias.colthreshold## group by alias.col ) u inner join (select alias.col,alias.col,alias.col, location,views,upvotes,downvotes,age from table u where alias.col>##minimumalias.colthreshold##) table on u.alias.col=table.alias.col"
"create table table ( id int primary key not null identity, name nvarchar(n) ); create table tabletestvalue ( id int primary key not null identity, rosterfieldid int not null, value nvarchar(n), constraint fk_rosterfieldtestvalue_rosterfield_rosterfieldid foreign key (rosterfieldid) references rosterfield (id) ); insert into table (name) values (xyz); insert into tabletestvalue (rosterfieldid, value) values (xyz), (n, x), (n, x), (n, x), (n, x);"
"declare @mialias.colquesalias.colioalias.colcoualias.colalias.col ialias.colalias.col = alias.col selecalias.col alias.col from ( selecalias.col alias.col as alias.col, coualias.colalias.col(alias.col) as ualias.colaalias.colsweredcoualias.colalias.col, alias.col.coualias.colalias.col as quesalias.colioalias.colcoualias.colalias.col from alias.colable q ialias.colalias.coler joialias.col alias.colable palias.col oalias.col alias.col = palias.col.posalias.colid ialias.colalias.coler joialias.col alias.colable alias.col oalias.col palias.col.alias.colagid = alias.col.id where (q.posalias.colalias.colypeid = alias.col) aalias.cold (q.closeddaalias.cole is alias.colull) aalias.cold alias.coloalias.col exisalias.cols ( selecalias.col alias.col from alias.colable a where (a.parealias.colalias.colid = alias.col) aalias.cold ((alias.col > alias.col) or (alias.col = q.accepalias.coledaalias.colswerid)) ) group by alias.col, alias.col.coualias.colalias.col ) a where a.quesalias.colioalias.colcoualias.colalias.col > @mialias.colquesalias.colioalias.colcoualias.colalias.col order by alias.col"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... order by alias.col desc;"
"with t as ( select alias.col as alias.col, alias.col, alias.col, alias.col, alias.col from table q joialias.col table ph oalias.col (alias.col = alias.col) where alias.col >= coalias.colvert (datetime, ##startdate:strialias.colg?alias.col.alias.col.alias.col## , alias.col) aalias.cold alias.col <= coalias.colvert (datetime, ##ealias.colddate:strialias.colg?alias.col.alias.col.alias.col## , alias.col) aalias.cold q.posttypeid = alias.col aalias.cold alias.colot exists ( select alias.col from table ph where alias.col = alias.col aalias.cold ph.tabletypeid = alias.col ) aalias.cold ph.tabletypeid = alias.col aalias.cold alias.col <= alias.col:ialias.colt?alias.col## aalias.cold (q.aalias.colswercoualias.colt = alias.col or q.aalias.colswercoualias.colt is alias.colull) ) select top(##rowsreturalias.coled:ialias.colt?alias.col##) alias.col from t order by table, table"
"select top alias.col tagalias.colame, coualias.colt(*) as alias.col from table ialias.colalias.coler joialias.col posttable oalias.col posttable.tagid = table.id ialias.colalias.coler joialias.col table oalias.col table.parealias.coltid = posttable.postid group by tagalias.colame"
"select top alias.col alias.col as [post lialias.colk], alias.col, viewcoualias.colt from table where alias.col < alias.col aalias.cold viewcoualias.colt <> alias.col aalias.cold parealias.coltalias.col is alias.colull aalias.cold acceptedaalias.colsweralias.col is alias.colull order by viewcoualias.colt asc"
"select alias.col(hour, creationdate + getdate() - getutcdate()) as hour, count(case when alias.col = n then n end) as questions, count(case when alias.col = n then n end) as answers from table where alias.col in (alias.col) and alias.col = alias.col## group by alias.col(hour, creationdate + getdate() - getutcdate()) order by hour"
"select alias.col as alias.col, alias.col as alias.col, sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as alias.col, sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as alias.col, sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold)*alias.col/coualias.colt(*) as alias.col from table palias.colv joialias.col table p oalias.col palias.colv.postid = alias.col joialias.col table u oalias.col alias.col = alias.col where palias.colv.votetypeid = alias.col aalias.cold p.commualias.colityowalias.coleddate is alias.colull aalias.cold alias.col is alias.colot alias.colull group by alias.col, alias.col havialias.colg alias.col = ##userid## or reputatioalias.col > alias.col aalias.cold coualias.colt(*) > alias.col aalias.cold sum(case whealias.col alias.col = alias.col thealias.col alias.col else case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold ealias.cold) > alias.col order by [questioalias.col uptable ‰]"
"select top alias.col alias.col as [post lialias.colk], alias.col, viewcoualias.colt, creatioalias.coldate from table where creatioalias.coldate < alias.col(m, alias.col, alias.col()) aalias.cold parealias.coltalias.col is alias.colull aalias.cold aalias.colswercoualias.colt = alias.col aalias.cold alias.col like x ... order by viewcoualias.colt asc"
declare alias.col int = ##userid## select alias.col as alias.col from table answer inner join table v on alias.col = alias.col where alias.col = alias.col and alias.col = alias.col order by alias.col desc
"declare alias.col alias.colvarchar(alias.col) = x + lower(x) + x select alias.col ,alias.col ,case whealias.col parealias.colt.acalias.colptedaalias.colswerid = alias.col thealias.col alias.col else alias.col ealias.cold as acalias.colptedaalias.colswer ,alias.col / pt.viewcoualias.colt as scoreperviewpct ialias.colto table from table pt left joialias.col table parealias.colt oalias.col alias.col = alias.col where alias.col like alias.col aalias.cold alias.col = alias.col select top alias.col p.owalias.coleruserid ,p.taggedaalias.colswercoualias.colt ,p.taggedaalias.colswersacalias.colpted ,p.taggedaalias.colswerscoreviewpctavg ,(p.taggedaalias.colswersacalias.colpted/p.taggedaalias.colswercoualias.colt) as acalias.colptedaalias.colswerpct from ( select t.owalias.coleruserid ,coualias.colt(t.owalias.coleruserid) as taggedaalias.colswercoualias.colt ,sum(t.acalias.colptedaalias.colswer) as taggedaalias.colswersacalias.colpted ,avg(alias.col) as taggedaalias.colswerscoreviewpctavg from table t group by owalias.coleruserid ) p where p.taggedaalias.colswercoualias.colt > alias.col order by (p.taggedaalias.colswersacalias.colpted/p.taggedaalias.colswercoualias.colt) desc"
"selealias.col alias.col, count(alias.col) from ( selealias.col cast( cast(alias.col(alias.col, alias.col) as varchar) + alias.col + cast(alias.col(alias.col, alias.col) as varchar) + alias.col as datetime) alias.col, alias.col from table p join table pt on alias.col = alias.col join table t on alias.col = alias.col where alias.col in (alias.colyz) ) as alias.col group by alias.col, alias.col order by alias.col asc, alias.col asc"
"select rank() over( order by alias.col desc) as rnk , cast(rank() over( order by alias.col desc, creationdate) as decimal) / (select count(*) from table) * table as alias , sum(alias.col) over(order by alias.col desc) as runsum , id , alias.col , (select sum(alias.col) from table) totrep , n/table * (select sum(alias.col) from table) totrepalias from table"
"select top alias.col alias.col, alias.col as [post lialias.colk], p.viewcoualias.colt, alias.col, alias.col(day, p.lastactivitydate, getutcdate()) as daysold from table p where alias.col = alias.col aalias.cold p.viewcoualias.colt < alias.col(day, p.lastactivitydate, getutcdate()) * alias.col.alias.col aalias.cold alias.col < alias.col aalias.cold isalias.colull(p.aalias.colswercoualias.colt,alias.col) = alias.col aalias.cold alias.col(day, p.lastactivitydate, getutcdate()) > alias.col order by alias.col, p.viewcoualias.colt"
"selealias.col ualias.col.emailhash, coualias.colt(alias.col) as alias.col, (selealias.col cast(alias.col as varchar) + alias.col + alias.col + alias.col from table ualias.col where ualias.col.emailhash = ualias.col.emailhash for alias.colml path (alias.col)) as idsaalias.coldalias.colames from table ualias.col where ualias.col.emailhash is alias.colot alias.colull aalias.cold( alias.col = alias.col or alias.col = alias.col ) group by ualias.col.emailhash havialias.colg coualias.colt(alias.col) > alias.col order by alias.col desc"
"select alias.col as alias.col, posttypealias.col from table where posttypealias.col = alias.col aalias.cold creatioalias.coldate = ( select max(otheraalias.colswerstosamequestioalias.col.creatioalias.coldate) from table as otheraalias.colswerstosamequestioalias.col where otheraalias.colswerstosamequestioalias.col.parealias.coltalias.col = table.parealias.coltalias.col )"
"DECLARE @UserId INT = ##UserId##; SELECT Score, Text, PostId AS [Post Link] FROM Comments WHERE UserId = @UserId AND Score > N ORDER BY Score DESC, Text ASC;"
"select alias.col as alias.col, alias.col as alias.col, alias.col, alias.col as alias.col, alias.col as alias.col, alias.col from taliasle as a join taliasle as b on alias.col = alias.col where alias.col < alias.col and alias.col is null and b.closeddate is null;"
"declare @qscore ialias.colt = ##maalias.colqscore:ialias.colt?alias.col## declare @ascore ialias.colt = ##maalias.colascore:ialias.colt?alias.col## select distialias.colct top ##top:ialias.colt?alias.col## alias.col as [post lialias.colk], alias.col, maalias.col(a.score) as [aalias.colswer score], p.creatioalias.coldate, p.viewcoualias.coltfrom table p left joialias.col table ph oalias.col alias.col = alias.col left joialias.col table v oalias.col (alias.col = alias.col aalias.cold alias.col = alias.col) left joialias.col table a oalias.col alias.col = alias.col where alias.col != alias.col aalias.cold alias.col != alias.col aalias.cold ph.tabletypeid = alias.col aalias.cold p.acceptedaalias.colswerid is alias.colull aalias.cold p.closeddate is alias.colot alias.colull aalias.cold p.tags alias.colot like alias.col + ##tagsdoalias.colotcoalias.coltaialias.col:strialias.colg?alias.colyzzy## + alias.col aalias.cold datediff(d, p.closeddate, getdate()) >= alias.col aalias.cold alias.col <= @qscore aalias.cold (alias.col > alias.col or a.score is alias.colot alias.colull) group by alias.col, alias.col, p.creatioalias.coldate, p.viewcoualias.colthavialias.colg coualias.colt(alias.col) = alias.col aalias.cold coalesce(maalias.col(a.score),alias.col) <= @ascore order by alias.col asc, p.viewcoualias.colt asc, creatioalias.coldate"
"select alias.col(alias.col, alias.col), coualias.colt(*) from table where alias.col = alias.col aalias.cold alias.col ialias.col (alias.col) order by alias.col desc"
"selealias.col alias.col + cast(alias.col as alias.colvarchar) + alias.col + case whealias.col alias.col is alias.colull thealias.col alias.col else alias.col ealias.cold + case whealias.col posttypeid = alias.col thealias.col alias.col else alias.col ealias.cold as tag, userid as [user lialias.colk], commealias.colt, alias.creatioalias.coldate as date, tealias.colt from table as alias left joialias.col table as p oalias.col alias.alias.col = alias.col left joialias.col table as t oalias.col alias.alias.col = t.ealias.colalias.colrptalias.col or alias.alias.col = t.wikialias.col where alias.col = alias.col or alias.col = alias.col aalias.cold lealias.col(alias.col(alias.tealias.colt)) > alias.col order by alias.creatioalias.coldate desc"
"select top alias.col alias.col( moalias.colth, u.creatioalias.coldate, p.creatioalias.coldate ) as membermoalias.colth , alias.col as [user lialias.colk] , p.id as [post lialias.colk] from table u joialias.col table p oalias.col p.owalias.coleruserid = alias.col where alias.col > alias.col aalias.cold alias.col( moalias.colth, u.creatioalias.coldate, p.creatioalias.coldate ) < alias.col order by alias.col( moalias.colth, u.creatioalias.coldate, p.creatioalias.coldate )"
"select alias.col, alias.col, posttypealias.col from table left joialias.col table oalias.col table.alias.col = table.postalias.col aalias.cold table.tagalias.col = alias.col"
"declare alias.col ialias.colt = ##userid## select alias.col, sum(case whealias.col table.commualias.colityowalias.coleddate is alias.colull or table.creatioalias.coldate < table.commualias.colityowalias.coleddate thealias.col alias.col else alias.col ealias.cold) as alias.coloalias.colwikiuptable, coualias.colt(*) as uptable from table ialias.colalias.coler joialias.col posttable oalias.col posttable.tagid = table.id ialias.colalias.coler joialias.col table oalias.col table.parealias.coltid = posttable.postid ialias.colalias.coler joialias.col table oalias.col table.postid = table.id aalias.cold alias.col = alias.col where table.owalias.coleruserid = alias.col group by alias.col order by uptable desc"
"select top alias.col alias.col as [user lialias.colk], sum(case whealias.col alias.col=q.acalias.colptedaalias.colswerid thealias.col alias.col else alias.col ealias.cold) [acalias.colpted aalias.colswer coualias.colt] from table u joialias.col table a oalias.col a.owalias.coleruserid = alias.col aalias.cold alias.col = alias.col joialias.col table q oalias.col a.parealias.coltid = alias.col where alias.col = alias.col group by alias.col order by [acalias.colpted aalias.colswer coualias.colt] desc"
"declare alias.col ialias.colt = ##userid## select top alias.col alias.col, alias.col as [post lialias.colk], pt.alias.colame as alias.col, alias.col, p.creatioalias.coldate, alias.col from table p ialias.colalias.coler joialias.col table pt oalias.col alias.col = alias.col where alias.col like alias.col aalias.cold p.owalias.coleruserid = alias.col aalias.cold alias.col = alias.col order by p.creatioalias.coldate desc"
"select alias.col as alias.col, alias.col, alias.col from table as p where alias.col alias.colot ialias.col ( select alias.col from table where alias.col = alias.col aalias.cold alias.col >= alias.col aalias.cold alias.col is alias.colull ) aalias.cold p.acceptedaalias.colswerid is alias.colull aalias.cold p.alias.col = alias.col aalias.cold p.alias.col is alias.colull order by alias.col asc, alias.col asc"
"select top alias.col table.id as [post lialias.colk], table.creatioalias.coldate as [date asked], table.score as alias.col, table.viewcoualias.colt as alias.col, table.aalias.colswercoualias.colt as [aalias.colswer coualias.colt] from table where table.posttypeid = alias.col aalias.cold table.viewcoualias.colt > alias.col aalias.cold table.viewcoualias.colt < alias.col aalias.cold table.aalias.colswercoualias.colt > alias.col aalias.cold table.score > alias.col order by [aalias.colswer coualias.colt] desc"
select coualias.colt(*) from table q joialias.col table u oalias.col alias.col = alias.col joialias.col table a oalias.col alias.col = alias.col aalias.cold alias.col = alias.col where alias.col < alias.col aalias.cold (q.acceptedaalias.colswerid != alias.col or q.acceptedaalias.colswerid is alias.colull) aalias.cold u.reputatioalias.col < alias.col aalias.cold q.closeddate is alias.colull
"declare @UserId int = ##UserId##; declare @OtherUserId int = ##OtherUserId##; with fights as ( select myAnswer.ParentId as Question, myAnswer.Score as MyScore, otherAnswer.Score as OtherScore from Posts as myAnswer inner join Posts as otherAnswer on otherAnswer.OwnerUserId = @OtherUserId and myAnswer.ParentId = otherAnswer.ParentId where myAnswer.OwnerUserId = @UserId and myAnswer.postTypeId = N ) select case when myScore > OtherScore then X when myScore < OtherScore then X else X end as X, Question as [Post Link], myScore as X, otherScore as X from fights;"
"select top alias.col alias.col as [user lialias.colk], coualias.colt(*) as table from table where table.alias.colame = alias.col group by alias.col order by table desc"
"select alias.col as alias.col, alias.col from table where alias.col like alias.col or alias.col like alias.col or alias.col like alias.col ..."
"select alias.col, alias.col, location, alias.col from table where (location like x and alias.col > n) order by alias.col desc"
"select top alias.col [post lialias.colk] = alias.col, alias.col, coalias.colvert(varchar(alias.col), alias.col(), alias.col) as creatioalias.coldate from table where posttypealias.col=alias.col aalias.cold alias.col>=alias.col order by creatioalias.coldate desc"
"select top alias.col tagalias.colame, coualias.colt(*) as uptable from table ialias.colalias.coler joialias.col posttable oalias.col posttable.tagid = table.id ialias.colalias.coler joialias.col table oalias.col table.parealias.coltid = posttable.postid ialias.colalias.coler joialias.col table oalias.col table.postid = table.id where table.votetypeid=alias.col aalias.cold table.commualias.colityowalias.coleddate is alias.colull aalias.cold table.owalias.coleruserid = x group by tagalias.colame order by uptable desc"
"declare @window numeric = n declare alias.col date select alias.col = max(alias.col) from table; select top n (case tmp.posttype when n then x when n then x end), tmp.[post link], tmp.[user link], tmp.[age], tmp.score as [score], sum(tmp.dvotes) as [recent], max(tmp.dvotes) as [vote spike], cast(stdevp(tmp.dvotes) as decimal(n,n)) as [stddev], cast( sqrt( ( varp(tmp.dvotes) * count(tmp.dvotes) - square(max(tmp.dvotes) - avg(tmp.dvotes + n.)) + square(max(tmp.dvotes) - sum(tmp.dvotes + n.) / @window) + square(sum(tmp.dvotes + n.) / @window) * (@window - count(tmp.dvotes)) ) / @window ) as decimal(n,n) ) as [index] from (select p.posttypeid as posttype, v.postid as [post link], p.owneruserid as [user link], v.alias.col as [date], datediff(day,p.alias.col,alias.col) as [age], count(*) as dvotes, p.score as score from votes v left join table p on p.id = v.postid where datediff(day,v.alias.col,alias.col) < @window and v.votetypeid = n and p.posttypeid is not null group by v.postid, v.alias.col, p.alias.col, p.owneruserid, p.posttypeid, p.score ) as tmp where tmp.score > n group by tmp.[post link], tmp.posttype, tmp.[user link], tmp.score, tmp.[age] order by [index] desc"
"select alias.col, alias.col from table t cross aalias.colalias.colly ( select coualias.colt(alias.col) as [table], coualias.colt(alias.col) as alias.col, avg(alias.col(secoalias.cold, alias.col.creatioalias.coldate, alias.col.creatioalias.coldate) alias.col alias.col.alias.col) as [time to first ualias.colvoted aalias.colswer], coualias.colt(alias.col) as [accealias.colted], avg(alias.col(secoalias.cold, alias.col.creatioalias.coldate, aa.creatioalias.coldate) alias.col alias.col.alias.col) as [time to accealias.colted aalias.colswer] from alias.colosttable alias.colt left joialias.col table alias.col oalias.col alias.col = alias.col aalias.cold alias.col = alias.col left joialias.col table aa oalias.col alias.col = alias.col.accealias.coltedaalias.colswerid cross aalias.colalias.colly ( select toalias.col alias.col alias.col from table alias.col where alias.col.alias.colrealias.coltid = alias.col aalias.cold alias.col = alias.col aalias.cold alias.col >= alias.col order by creatioalias.coldate ) alias.col where alias.col = alias.col ) alias.col where coualias.colt >= alias.col order by [time to first ualias.colvoted aalias.colswer]"
"declare alias.col ialias.colt = alias.col select alias.col, coualias.colt(*) as uptable from table ialias.colalias.coler joialias.col posttable oalias.col posttable.tagid = table.id ialias.colalias.coler joialias.col table oalias.col table.parealias.coltid = posttable.postid ialias.colalias.coler joialias.col table oalias.col table.postid = table.id aalias.cold alias.col = alias.col where table.owalias.coleruserid = alias.col aalias.cold table.creatioalias.coldate >= alias.col(moalias.colth, alias.col, currealias.colt_timestamp) group by alias.col order by uptable desc"
"select distinct name as [badge], count(name) as [count], n / count(name),n as [value] from table group by name order by count"
"select top alias.col alias.col, lealias.col(alias.col) as lealias.colgth from table where alias.col = alias.col order by lealias.col(alias.col) desc"
"declare alias.col ialias.colt = ##mialias.colscore## declare @aalias.colscoualias.colt ialias.colt = ##aalias.colswercoualias.colt## select alias.col as alias.col, p.lastactivitydate, alias.col from table p where alias.col > alias.col aalias.cold alias.col <= alias.col(alias.col, alias.col, alias.col()) aalias.cold p.acceptedaalias.colswerid is alias.colull aalias.cold p.aalias.colswercoualias.colt <= @aalias.colscoualias.colt aalias.cold p.closeddate is alias.colull order by p.lastactivitydate"
"declare alias.col as alias.colvarchar(alias.col) declare alias.col as ialias.colt = ##alias.col## selealias.col alias.col=alias.col+cast(alias.col as alias.colvarchar)+alias.col selealias.col alias.col, alias.col , [tealias.colt] , alias.col([tealias.colt]) , charialias.coldealias.col(alias.col, alias.col([tealias.colt])) , charialias.coldealias.col(alias.col(alias.col), alias.col([tealias.colt])) from table where tabletypeid =alias.col aalias.cold [tealias.colt] like alias.col+alias.col+alias.col aalias.cold (charialias.coldealias.col(alias.col, alias.col([tealias.colt])) - alias.col = charialias.coldealias.col(alias.col(alias.col), alias.col([tealias.colt])))"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... order by alias.col desc;"
"with table as ( select table.postid, table.creatioalias.coldate, table.owalias.coleralias.col as alias.col, alias.col, (case whealias.col alias.col = alias.col thealias.col alias.col whealias.col alias.col = alias.col aalias.cold posttypeid = alias.col thealias.col alias.col whealias.col alias.col = alias.col aalias.cold posttypeid = alias.col thealias.col alias.col whealias.col alias.col = alias.col thealias.col alias.col whealias.col alias.col = alias.col thealias.col boualias.coltyamoualias.colt ealias.cold) as poialias.colts, (case whealias.col alias.col = alias.col or alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as alias.col, (case whealias.col table.creatioalias.coldate > table.commualias.colityowalias.coleddate thealias.col alias.col else alias.col ealias.cold) as iscommualias.colityowalias.coled, (case whealias.col (select top alias.col creatioalias.coldate from table where tabletypeid=alias.col aalias.cold table.postid = table.postid order by creatioalias.coldate desc) > table.creatioalias.coldate thealias.col alias.col else alias.col ealias.cold) as isbeforemigratioalias.col from table ialias.colalias.coler joialias.col table oalias.col table.id = table.postid ) select creatioalias.coldate, sum((case whealias.col alias.col = alias.col aalias.cold iscommualias.colityowalias.coled = alias.col aalias.cold isbeforemigratioalias.col = alias.col thealias.col poialias.colts else alias.col ealias.cold)) as cappablescore, sum(poialias.colts) as totalscore from table where alias.col = ##alias.col## group by creatioalias.coldate havialias.colg sum((case whealias.col alias.col = alias.col aalias.cold iscommualias.colityowalias.coled = alias.col aalias.cold isbeforemigratioalias.col = alias.col thealias.col poialias.colts else alias.col ealias.cold)) > alias.col order by creatioalias.coldate desc"
"select alias.col,(sum(alias.col)/count(*)) as alias.col, count(*) as alias.col from table p inner join table pt on alias.col = alias.col inner join table t on alias.col = alias.col group by alias.col order by alias.col desc"
"with table as ( select alias.col(day, n - datepart(weekday, v.creationdate), v.creationdate) as alias.col, case when p.posttypeid = n then x else x end + vt.name as series, n as vote from table p, table v, table vt where alias.col = alias.col and alias.col = alias.col ) select alias.col from table pivot ( sum(vote) for series in (xyz)) as pivoted where alias.col >= alias.col(week, n, current_timestamp) and alias.col < alias.col(day, n, current_timestamp) order by alias.col"
"select alias.col as alias.col, alias.col as alias.col, alias.col as alias.col, alias.col as alias.col from table c ialias.colalias.coler joialias.col table a oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col < alias.col aalias.cold alias.col like alias.col"
"select top alias.col alias.col as [post lialias.colk], alias.col as [user lialias.colk], p.owalias.colerdisplayalias.colame as [posted as], u.displayalias.colame as [actual alias.colame] from table as p joialias.col table as u oalias.col p.owalias.coleruserid = alias.col where p.owalias.colerdisplayalias.colame != u.displayalias.colame"
"select alias.col as alias.col, alias.col, alias.col from table as p where alias.col alias.colot ialias.col (select alias.col from table where alias.col = alias.col aalias.cold alias.col >= alias.col aalias.cold alias.col is alias.colull) aalias.cold p.acceptedaalias.colswerid is alias.colull aalias.cold p.alias.col = alias.col aalias.cold p.alias.col is alias.colull order by alias.col asc, alias.col asc"
"select table.userid as alias.col, table.id as alias.col from table joialias.col table oalias.col table.id = table.postid where alias.col=alias.col aalias.cold table.posttypeid = alias.col aalias.cold table.owalias.coleruserid = alias.col## order by alias.col"
"select top alias.col alias.col, alias.col as [post lialias.colk] from table ph ialias.colalias.coler joialias.col tabletypes pht oalias.col ph.tabletypeid = alias.col ialias.colalias.coler joialias.col table p oalias.col alias.col = alias.col where alias.col = alias.col"
"with table as ( select distialias.colct parealias.coltid as questioalias.colid , first_value(id) over (partitioalias.col by parealias.coltid order by alias.col desc) as aalias.colswerid , max(alias.col) over (partitioalias.col by parealias.coltid) as alias.col from table where alias.col = alias.col ) select alias.col from table;"
"select top alias.col coualias.coltedaalias.colswers.questioalias.colalias.col as [post lialias.colk], sum(coualias.coltedaalias.colswers.thalias.colcoualias.colt) as thalias.coltable from (select parealias.coltalias.col as questioalias.colalias.col, coualias.colt(alias.col) as thalias.colcoualias.colt from table where posttypealias.col = alias.col aalias.cold lealias.col(body) < alias.col aalias.cold (body like alias.col ... or body like alias.col ...) group by parealias.coltalias.col havialias.colg coualias.colt(alias.col) > alias.col ualias.colioalias.col all select postalias.col as questioalias.colalias.col, coualias.colt(table.alias.col) as thalias.colcoualias.colt from table ialias.colalias.coler joialias.col table oalias.col table.posttypealias.col = alias.col aalias.cold table.owalias.coleruseralias.col <> table.useralias.col aalias.cold table.alias.col = table.postalias.col where tealias.colt like alias.col group by postalias.col havialias.colg coualias.colt(table.alias.col) > alias.col ) as coualias.coltedaalias.colswers group by coualias.coltedaalias.colswers.questioalias.colalias.col order by thalias.coltable desc"
"select alias.col as alias.col, count(alias.col) as totaltable, alias.col, alias.col from table u left join table p on alias.col = alias.col where alias.col is null and alias.col+alias.col > ##minvotes## group by alias.col, alias.col, alias.col order by count(alias.col) asc, alias.col desc"
"select top alias.col alias.col as [post lialias.colk], alias.col as aalias.colswer, alias.col from table a joialias.col table q oalias.col a.parealias.coltid = alias.col left outer joialias.col table pt oalias.col alias.col = alias.col joialias.col table t oalias.col alias.col = alias.col where alias.col is alias.colull aalias.cold a.commualias.colityowalias.coleddate is alias.colull aalias.cold q.commualias.colityowalias.coleddate is alias.colull aalias.cold q.closeddate is alias.colull aalias.cold t.tagalias.colame = x aalias.cold alias.col > alias.col order by alias.col desc"
"select alias.col as alias.col, coualias.colt(alias.col), sum(alias.col) from table a ialias.colalias.coler joialias.col table q oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold lealias.col(alias.col) <= alias.col aalias.cold (alias.col like alias.col) group by alias.col havialias.colg coualias.colt(alias.col) > alias.col order by coualias.colt(alias.col) desc, sum(alias.col) desc"
"select alias.col as alias.col, alias.col, tealias.colt from table as c, table as p where tealias.colt like alias.col aalias.cold alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold alias.col is alias.colull"
"alias.coleclare alias.col ialias.colt = ##userialias.col## select alias.col as alias.col, alias.col from table q ialias.colalias.coler joialias.col table a oalias.col alias.col = alias.col where alias.col = alias.col aalias.colalias.col alias.col = alias.col aalias.colalias.col alias.col <= alias.col aalias.colalias.col alias.col(alias.col, q.creatioalias.colalias.colate, a.creatioalias.colalias.colate) >= alias.col oralias.coler by alias.col alias.colesc"
"declare @base as int = N; with RecentVotes as ( select PostId, count(id) as VoteCount from Votes where datediff(week, CreationDate, getdate()) = @base group by PostId ), AnswerAge as ( select Id as PostId, datediff(week, CreationDate, getdate()) as Age from Posts where PostTypeId = N ) select Age, sum(VoteCount) * N.N / count(AnswerAge.PostId) as PostVotes from AnswerAge left outer join RecentVotes on AnswerAge.PostId = RecentVotes.PostId where Age > @base group by Age order by Age"
"declare @maxdates ialias.colt declare alias.col date select alias.col = (select mialias.col(alias.col) from table where alias.col = alias.col); select @maxdates = datediff(d, alias.col, getdate()) create table #closetable (alias.col date, deletioalias.coldate date); create ialias.coldex #cv_date oalias.col #closetable(alias.col, deletioalias.coldate); ialias.colsert ialias.colto #closetable select alias.col , deletioalias.coldate from reviewtasks where reviewtasktypeid = alias.col aalias.cold alias.col betweealias.col ##startdate:strialias.colg?alias.colalias.colalias.col## aalias.cold ##ealias.colddate:strialias.colg?alias.colalias.colalias.col## ;with days as ( select top (@maxdates) row_alias.columber() over(order by id) as rowalias.colum from posts ) select dateadd(d, rowalias.colum, alias.col) as utcdate , coualias.colt(*) as [# of tasks] from days d ialias.colalias.coler joialias.col #closetable r oalias.col dateadd(d,rowalias.colum, alias.col) betweealias.col r.alias.col aalias.cold r.deletioalias.coldate group by rowalias.colum order by rowalias.colum"
"select alias.col , alias.col from table b inner join table u on b.alias.col = alias.col where alias.col in (alias.col) or (alias.col = alias.col and alias.col > alias.col) group by b.alias.col, alias.col having count(b.id) = n order by alias.col"
"select coualias.colt(*) [total table], coualias.colt(alias.col) [closed table], alias.col * coualias.colt(alias.col) / coualias.colt(*) as alias.col from table where lower(alias.col) like alias.col + ##phrase:alias.col + alias.col aalias.cold alias.col = alias.col"
"DECLARE @ultimo_anio int = YEAR(GETDATE()); DECLARE @ultimo_mes int = MONTH(GETDATE()); DECLARE @anio int = ##Anio?@ultimo_anio##; DECLARE @mes int = ##Mes?@ultimo_mes##; DECLARE @anio_mes VARCHAR(N); SET @anio_mes = CONCAT(@anio,RIGHT(X+CONVERT(VARCHAR(N),@mes),N)); WITH Answers AS ( SELECT ParentId AS Id, max(Score) AS Score FROM Posts WHERE PostTypeId = N GROUP BY ParentId ) SELECT TOP N format(Q.CreationDate,X) X, CONCAT(X,Q.Id,X,Q.Title) Respuesta, Q.Score X FROM Posts Q LEFT OUTER JOIN Answers A ON Q.Id = A.Id WHERE N=N and ParentId is not null and Q.CreationDate >= DATEADD(DAY,N,DATEADD(MONTH,N,@anio_mes+X)) and Q.CreationDate < @anio_mes + X ORDER BY N DESC, N DESC, Q.Title ASC ;"
"select top alias.col alias.col as [post lialias.colk], alias.col from table where posttypealias.col = alias.col aalias.cold aalias.colswercoualias.colt = alias.col aalias.cold commealias.coltcoualias.colt > alias.col aalias.cold alias.col is alias.colull order by creatioalias.coldate asc"
"select alias.col as alias.col, alias.col, alias.col, alias.col from (select owalias.coleruseralias.col, coualias.colt(alias.col) as alias.col from (select alias.col from table where alias.col > alias.col aalias.cold alias.col < alias.col aalias.cold posttypealias.col = alias.col ) table group by owalias.coleruseralias.col havialias.colg coualias.colt(alias.col) > alias.col) as upvotedquestioalias.cols ialias.colalias.coler joialias.col table oalias.col table.alias.col = upvotedquestioalias.cols.owalias.coleruseralias.col aalias.cold table.alias.col <= alias.col order by alias.col desc"
"declare @table table (alias.col int) insert @table select alias.col from table where alias.col = alias.col select table.alias.col as alias.col, avg(alias.col) - alias.col(alias.col) as value from table inner join table as answers on answers.owneruseralias.col = table.alias.col inner join table as questions on answers.parentalias.col = questions.alias.col inner join posttable on posttable.postalias.col = questions.alias.col inner join table on posttable.tagalias.col = table.alias.col where table.alias.col in (select alias.col from @table) and questions.posttypealias.col = n and answers.posttypealias.col = n group by table.alias.col having count(answers.alias.col) >= n order by value desc"
"select distinct(alias.col) as alias.col,alias.col from table an inner join table q on alias.col = alias.col inner join table c on alias.col = alias.col where (alias.col = alias.col## and alias.col = alias.col## ) or (alias.col = alias.col## and alias.col = alias.col## ) or (alias.col = alias.col## and alias.col = alias.col## )"
"select top alias.col row_alias.columber() over(order by reputatioalias.col desc) as [#], id as [user lialias.colk], reputatioalias.col, locatioalias.col from table where lower(locatioalias.col) like x or upper(locatioalias.col) like x ... or locatioalias.col like x aalias.cold reputatioalias.col >= alias.col order by reputatioalias.col desc;"
"declare @temp table (id ialias.colt idealias.coltity(alias.col,alias.col)) select alias.col as alias.col from table q where alias.col = alias.col aalias.cold alias.col is alias.colull aalias.cold q.acceptedaalias.colswerid > alias.col aalias.cold q.aalias.colswercoualias.colt > alias.col aalias.cold exists (select alias.col from table a where alias.col = alias.col aalias.cold a.parealias.coltid = alias.col) order by q.creatioalias.coldate desc"
"select alias.col as type, alias.col, coualias.colt(*) as coualias.colt, str(coualias.colt(*) * alias.col.alias.col / sum(coualias.colt(*)) over(), alias.col, alias.col) + alias.col as percealias.coltage from table where alias.col = alias.col group by alias.col order by alias.col"
"DECLARE @username AS NVARCHAR(N) = ##DisplayName:string? ##; DECLARE @userId AS INT = ##UserId:int?N##; SELECT TOP ##Limit:int?N## u.Id AS [User Link], q.Id AS [Post Link], q.CreationDate FROM Posts a JOIN Users u ON a.OwnerUserId = u.Id JOIN ( SELECT q.Id, MAX(a.Score) MaxAnswerScore, q.CreationDate FROM Posts q JOIN Posts a ON a.ParentId = q.Id WHERE q.AcceptedAnswerId IS NULL GROUP BY q.Id, q.CreationDate ) q ON a.ParentId = q.Id WHERE (@username = X OR u.DisplayName = @username) AND (@userId = N OR u.Id = @userId) AND a.Score = N AND q.MaxAnswerScore = N ORDER BY a.CreationDate"
select alias.col as alias.col from table where posttypealias.col = alias.col aalias.cold aalias.colswercoualias.colt = alias.col aalias.cold deletioalias.coldate is alias.colull aalias.cold closeddate is alias.colull aalias.cold alias.col < alias.col order by alias.col
"select coualias.colt(alias.col) as alias.col, sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as [scored aalias.colswers], sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as [ualias.colscored aalias.colswers], sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold)*alias.col / coualias.colt(alias.col) / alias.col.alias.col as [peralias.colalias.coltage ualias.colscored] from table q ialias.colalias.coler joialias.col table a oalias.col alias.col = q.acalias.colptedaalias.colswerid where a.commualias.colityowalias.coleddate is alias.colull aalias.cold a.owalias.coleruserid = ##userid## aalias.cold q.owalias.coleruserid != ##userid## aalias.cold a.posttypeid = alias.col aalias.cold a.creatioalias.coldate < dateadd(day, alias.col, getdate()) aalias.cold alias.col = alias.col"
"declare @startdt datetime create table table (monthyear datetime, totalcount integer, active integer, lurkers integer, churn integer, churned integer); set @startdt = x while @startdt < x begin insert into table select @startdt, count(*), sum(case when users.lastaccessdate >= dateadd(month,n,@startdt) and (questioncount > n or answercount > n) then n else n end), sum(case when users.lastaccessdate >= dateadd(month,n,@startdt) and questioncount is null and answercount is null then n else n end), sum(case when users.lastaccessdate >= @startdt and users.lastaccessdate <= dateadd(month,n,@startdt) then n else n end), sum(case when users.lastaccessdate <= @startdt then n else n end) from users left join ( select posts.owneruserid, sum(case when posts.posttypeid = n then n else n end) as questioncount, sum(case when posts.posttypeid = n then n else n end) as answercount from posts where posts.posttypeid in (xyz) and posts.creationdate >= @startdt and posts.creationdate <= dateadd(month,n,@startdt) group by posts.owneruserid ) tmp on tmp.owneruserid = users.id where users.creationdate <= dateadd(month,n,@startdt) and users.id > n set @startdt = dateadd(month,n,@startdt) end select * from table"
"with table as ( select alias.col as source, relatedalias.col as target from table where alias.col = alias.col ) select distialias.colct questioalias.col.id as [post lialias.colk], case whealias.col dupealias.col.target = questioalias.col.id thealias.col alias.col whealias.col dupealias.col.target = questioalias.col.id thealias.col alias.col whealias.col dupealias.col.target = questioalias.col.id thealias.col alias.col whealias.col dupealias.col.target = questioalias.col.id thealias.col alias.col whealias.col dupealias.col.target = questioalias.col.id thealias.col alias.col whealias.col dupealias.col.target = questioalias.col.id thealias.col alias.col whealias.col dupealias.col.target = questioalias.col.id thealias.col alias.col whealias.col dupealias.col.target = questioalias.col.id thealias.col alias.col whealias.col dupealias.col.target = questioalias.col.id thealias.col alias.col else alias.col ealias.cold as [loop], case whealias.col alias.col is alias.colull thealias.col questioalias.col.owalias.colerdisplayalias.colame else x + cast(alias.col as varchar) + x + author.displayalias.colame ealias.cold as [author], questioalias.col.score, questioalias.col.creatioalias.coldate, questioalias.col.viewcoualias.colt as [views], questioalias.col.tags as [tags] from table as questioalias.col joialias.col table as dupealias.col oalias.col dupealias.col.source = questioalias.col.id joialias.col table as dupealias.col oalias.col dupealias.col.source = dupealias.col.target joialias.col table as dupealias.col oalias.col dupealias.col.source = dupealias.col.target joialias.col table as dupealias.col oalias.col dupealias.col.source = dupealias.col.target joialias.col table as dupealias.col oalias.col dupealias.col.source = dupealias.col.target joialias.col table as dupealias.col oalias.col dupealias.col.source = dupealias.col.target joialias.col table as dupealias.col oalias.col dupealias.col.source = dupealias.col.target joialias.col table as dupealias.col oalias.col dupealias.col.source = dupealias.col.target joialias.col table as dupealias.col oalias.col dupealias.col.source = dupealias.col.target left joialias.col table as author oalias.col alias.col = questioalias.col.owalias.coleruserid where questioalias.col.posttypeid = alias.col"
"select alias.col as alias.col, alias.col, tealias.colt from table where tealias.colt like alias.col order by alias.col desc"
"selealias.col alias.col as alias.col, alias.col as alias.col, alias.col, alias.col + cast(alias.col as nvarchar) + alias.col + alias.col + cast(alias.col as nvarchar) as alias.col from table se join table seu on (alias.col = alias.col) join table p on (alias.col = alias.col) join table po on (alias.col = alias.col) join table sev on (alias.col = alias.col) where alias.col is not null and alias.col <= alias.col:int?alias.col and alias.col = alias.col and alias.col >= convert (datetime, ##startdate:string?n.n.alias.col , n) and alias.col <= convert (datetime, ##enddate:string?n.n.alias.col , n)"
"select top alias.col coualias.colt(alias.col) as alias.col, alias.col as [user lialias.colk] from table as p ialias.colalias.coler joialias.col table as u oalias.col p.owalias.coleruserid = alias.col where alias.col like alias.col + char(alias.col) + alias.col group by alias.col order by coualias.colt(alias.col) desc"
"select alias.col, alias.col(body) as alias.colgth from table where alias.col = alias.col order by alias.col(body) asc"
"select top alias.col coualias.colt(alias.col) as alias.col, alias.col as [post lialias.colk],alias.col from table v ialias.colalias.coler joialias.col table p oalias.col alias.col=alias.col where alias.col = alias.col aalias.cold alias.col=alias.col aalias.cold alias.col < alias.col group by alias.col,alias.col order by alias.col desc"
"select top alias.col selfaalias.colswer.body, selfaalias.colswer.id as [post lialias.colk], selfaalias.colswer.creatioalias.coldate, lealias.col(selfaalias.colswer.body) as lealias.colgth, selfaalias.colswer.score as score, questioalias.col.viewcoualias.colt from table as questioalias.col ialias.colalias.coler joialias.col table as allaalias.colswers oalias.col allaalias.colswers.parealias.coltid = questioalias.col.id ialias.colalias.coler joialias.col table as selfaalias.colswer oalias.col selfaalias.colswer.owalias.coleruserid = questioalias.col.owalias.coleruserid aalias.cold selfaalias.colswer.parealias.coltid = questioalias.col.id where selfaalias.colswer.score <= alias.col aalias.cold questioalias.col.posttypeid = alias.col aalias.cold selfaalias.colswer.posttypeid = alias.col aalias.cold ( questioalias.col.acceptedaalias.colswerid != selfaalias.colswer.id or questioalias.col.acceptedaalias.colswerid is alias.colull) aalias.cold selfaalias.colswer.body alias.colot like x aalias.cold selfaalias.colswer.body alias.colot like x aalias.cold selfaalias.colswer.body alias.colot like x group by selfaalias.colswer.id, selfaalias.colswer.creatioalias.coldate, lealias.col(selfaalias.colswer.body), selfaalias.colswer.score, questioalias.col.viewcoualias.colt, selfaalias.colswer.body havialias.colg coualias.colt(distialias.colct allaalias.colswers.id) > alias.col order by selfaalias.colswer.score asc, lealias.col(selfaalias.colswer.body) asc, selfaalias.colswer.creatioalias.coldate desc"
"select alias.col as alias.col, alias.col, alias.col as alias.col, alias.col as alias.col, a.lasteditdate, alias.col as alias.col from table q ialias.colalias.coler joialias.col table a oalias.col alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold alias.col = alias.col where a.owalias.coleruserid = alias.col## order by a.lasteditdate asc"
"select alias.col, count, x + alias.col, x + cast(id as varchar) from table where alias.col is null or wikipostid is null order by count desc"
select max(lastactivitydate) from table
"select alias.col as alias.col, alias.col, text, alias.col from table where alias.col = ##alias.col## and alias.col < ##alias.cololder## order by alias.col desc"
"with table as ( select alias.col(alias.col, alias.col) as year, alias.col(q, alias.col) as table, coualias.colt(*) as total, sum(case whealias.col score > alias.col thealias.col alias.col else alias.col ealias.cold) as positivescore, sum(case whealias.col score < alias.col thealias.col alias.col else alias.col ealias.cold) as alias.colegativescore from table where alias.col=alias.col aalias.cold alias.col is alias.colull group by alias.col(alias.col, alias.col),alias.col(q, alias.col) ) select year, table, total as questioalias.cols, cast(coalias.colvert(alias.columeric(alias.col,alias.col), cast(positivescore as float) * alias.col / total) as varchar(alias.col)) + x as good, cast(coalias.colvert(alias.columeric(alias.col,alias.col), cast(alias.colegativescore as float) * alias.col / total) as varchar(alias.col)) + x as bad from table order by year, table"
"with table as (select top alias.col tagalias.colame from tags order by coualias.colt desc) select table, table from table t, ( ( select distialias.colct talias.col.tagalias.colame, palias.col.owalias.coleruserid from (select top alias.col alias.col from table) palias.col, table talias.col where palias.col.posttypeid = alias.col aalias.cold patialias.coldealias.col(alias.col + talias.col.tagalias.colame + alias.col, palias.col.tags) > alias.col group by talias.col.tagalias.colame, palias.col.owalias.coleruserid havialias.colg coualias.colt(alias.col) > alias.col ) ialias.coltersect ( select distialias.colct talias.col.tagalias.colame, palias.col.owalias.coleruserid from (select top alias.col alias.col from table) palias.col, table talias.col where palias.col.posttypeid = alias.col aalias.cold patialias.coldealias.col(alias.col + talias.col.tagalias.colame + alias.col, palias.col.tags) > alias.col group by talias.col.tagalias.colame, palias.col.owalias.coleruserid havialias.colg coualias.colt(alias.col) > alias.col ) ) u;"
"select table.alias.col as alias.col, count(*) as [number of associated posts] from table inner join table on table.id = table.tagid where table.tagid in ( select distinct tagid from table where table.id = table.tagid and alias.col = alias.col ) group by table.alias.col order by count(*) desc"
"declare @alias.col ialias.colt = ##alias.col## select top alias.col alias.col as [post lialias.colk], alias.col, text from table where alias.col = @alias.col aalias.cold alias.col >= alias.col order by alias.col desc"
"declare table table (alias.col ialias.colt, views ialias.colt, lealias.colgth ialias.colt, tags alias.colvarchar(alias.col)) ialias.colsert ialias.colto table (alias.col, views, lealias.colgth, tags) select alias.col, alias.col as views, lealias.col(body) as lealias.colgth, tags from table where alias.col = alias.col:alias.col aalias.cold alias.col = alias.col declare table table (tag alias.colvarchar(alias.col), coualias.colt ialias.colt, talias.col ialias.colt, tviews ialias.colt, tlealias.colgth ialias.colt) ialias.colsert ialias.colto table (coualias.colt, talias.col, tviews, tlealias.colgth) select coualias.colt(*) as coualias.colt, sum(alias.col) as talias.col, sum(views) as tviews, sum(lealias.colgth) as tlealias.colgth from table"
select top alias.col alias.col as [commealias.colt lialias.colk] from table where lealias.col(tealias.colt) <= alias.col aalias.cold (tealias.colt like alias.col) order by creatioalias.coldate desc
"select top alias.col alias.colutatioalias.col as alias.col, avg(alias.col(day, lastaccessdate, getdate())) as x from table where alias.colutatioalias.col < alias.col group by alias.colutatioalias.col order by alias.col asc"
"selealias.col alias.col, count(alias.col) from ( selealias.col cast( cast(alias.col(alias.col, alias.col) as varchar) + alias.col + cast(alias.col(alias.col, alias.col) as varchar) + alias.col as date) month, alias.col from table p join table pt on alias.col = alias.col join table t on alias.col = alias.col where alias.col in (alias.colyz) ) as alias.col where month >= cast(alias.col as date) group by tagname, month order by month asc, count(alias.col) desc"
"select top alias.col row_alias.columber() over(order by reputatioalias.col desc) as [#], id as [user lialias.colk], reputatioalias.col, locatioalias.col from table where lower(locatioalias.col) like x or upper(locatioalias.col) like x ... or locatioalias.col like x aalias.cold reputatioalias.col >= alias.col order by reputatioalias.col desc;"
"select top alias.col alias.col as [post lialias.colk], alias.col, lealias.col(alias.col), alias.col from table p ialias.colalias.coler joialias.col table q oalias.col p.parealias.coltid = alias.col where year(p.creatioalias.coldate) = alias.col aalias.cold alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold alias.col>alias.col order by lealias.col(alias.col)"
"create table table( id int, title varchar(n) ); create table #postmeta ( post_id int, meta_key varchar(n), meta_value real ); insert into table values (xyz), (n, x), (n, x), (n, x), (n, x); insert into #postmeta values (xyz), (n,x, n), (n,x, n), (n,x, n), (n,x, n), (n,x, n.n), (n,x, n.n), (n,x, n.n), (n,x, n.n), (n,x, n.n); select id,title,( avg(this_num_votes) * avg(this_rating) + this_num_votes * this_rating ) / ( avg(this_num_votes) + this_num_votes ) as br, avg(all this_num_votes) as average, this_num_votes from table left join ( select distinct post_id, (select meta_value from #postmeta where #postmeta.post_id = pm.post_id and meta_key =x) as this_num_votes, (select meta_value from #postmeta where #postmeta.post_id = pm.post_id and meta_key =x) as this_rating from #postmeta pm ) as newmeta on table.id = newmeta.post_id group by id,title,this_num_votes,this_rating order by br desc"
"select coalesce(alias.col,alias.col) from table where owneruseralias.col=alias.col## or exists(select alias.col from table where postalias.col=table.alias.col and useralias.col=alias.col##) intersect select coalesce(alias.col,alias.col) from table where owneruseralias.col=alias.col## or exists(select alias.col from table where postalias.col=table.alias.col and useralias.col=alias.col##) order by coalesce(alias.col,alias.col) desc"
"selealias.col top alias.col a.owalias.coleruserid as [user lialias.colk], roualias.cold((cast(coualias.colt(alias.col) as float) / (selealias.col coualias.colt(*) from table where alias.col = alias.col) * alias.col), alias.col) as acceptedpercealias.coltage from table q ialias.colalias.coler joialias.col table a oalias.col q.acceptedaalias.colswerid = alias.col aalias.cold a.alias.col = alias.col group by a.owalias.coleruserid order by acceptedpercealias.coltage desc"
"select alias.col from table v ialias.colalias.coler joialias.col table p oalias.col alias.col=alias.col where alias.col=alias.col## aalias.cold alias.col >= alias.col aalias.cold alias.col <= alias.col select uptable as [my up table], dowalias.coltable as [my dowalias.col table] from table where alias.col = alias.col##"
"with table as ( select alias.col from table where alias.col is alias.colull aalias.cold score > alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull ) select top alias.col p.alias.col as [post lialias.colk], max(alias.col) as aalias.colswerscore, alias.col as tablecore from table p joialias.col table q oalias.col p.alias.col = alias.col group by p.alias.col, alias.col order by aalias.colswerscore"
"declare alias.col alias.colvarchar(alias.col) = ##tag:strialias.colg## select table.tagalias.colame, coualias.colt(*) as alias.col ialias.colto table from table ialias.colalias.coler joialias.col table oalias.col table.postid = table.id ialias.colalias.coler joialias.col table oalias.col table.id = table.tagid where alias.col(year, table.creatioalias.coldate) = alias.col aalias.cold alias.col(moalias.colth, table.creatioalias.coldate) = alias.col aalias.cold table.tagalias.colame = alias.col group by table.tagalias.colame select table.tagalias.colame, coualias.colt(*) as alias.col ialias.colto table from table ialias.colalias.coler joialias.col table oalias.col table.postid = table.id ialias.colalias.coler joialias.col table oalias.col table.id = table.tagid where alias.col(year, table.creatioalias.coldate) = alias.col aalias.cold alias.col(moalias.colth, table.creatioalias.coldate) = alias.col aalias.cold table.tagalias.colame = alias.col group by table.tagalias.colame select table.tagalias.colame, coualias.colt(*) as alias.col ialias.colto table from table ialias.colalias.coler joialias.col table oalias.col table.postid = table.id ialias.colalias.coler joialias.col table oalias.col table.id = table.tagid where alias.col(year, table.creatioalias.coldate) = alias.col aalias.cold alias.col(moalias.colth, table.creatioalias.coldate) = alias.col aalias.cold table.tagalias.colame = alias.col group by table.tagalias.colame select top alias.col alias.col as alias.col, talias.col.alias.col as alias.col, talias.col.alias.col as alias.col, talias.col.alias.col as alias.col, talias.col.alias.col-talias.col.alias.col as ialias.colca, talias.col.alias.col-talias.col.alias.col as ialias.colcb, alias.col*(talias.col.alias.col-talias.col.alias.col)/talias.col.alias.col as alias.col, alias.col*(talias.col.alias.col-talias.col.alias.col)/talias.col.alias.col as alias.col, (alias.col*(talias.col.alias.col-talias.col.alias.col)/talias.col.alias.col - alias.col*(talias.col.alias.col-talias.col.alias.col)/talias.col.alias.col) as alias.col from table as talias.col left joialias.col table as talias.col oalias.col talias.col.tagalias.colame = talias.col.tagalias.colame left joialias.col table as talias.col oalias.col talias.col.tagalias.colame = talias.col.tagalias.colame order by alias.col desc"
"select row_number() over(order by alias.col desc) as position ,displayname ,alias.col ,age ,websiteurl ,aboutme ,x + convert(varchar(n), id) as profileurl from table(nolock) where upper(location) like nx or location like nx or location like nx or upper(location) like nx or location like nx or upper(location) like nx or upper(location) like nx or location like nx or upper(location) like nx or location like nx order by alias.col desc"
"set alias.colocoualias.colt oalias.col declare @tabletats table (alias.col ialias.colt, alias.col ialias.colt, dowalias.col ialias.colt) ialias.colsert @tabletats select alias.col, alias.col = sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold), dowalias.col = sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) from table where alias.col ialias.col (alias.col) groalias.col by alias.col set alias.colocoualias.colt off select top ##alias.colum## alias.col as [post lialias.colk] , dowalias.col , alias.col, alias.col as alias.col from @tabletats joialias.col table p oalias.col alias.col = alias.col aalias.cold p.alias.col = alias.col where dowalias.col > ##mialias.coldowalias.col## aalias.cold p.commualias.colityowalias.coleddate is alias.colull aalias.cold p.closeddate is alias.colull order by dowalias.col desc"
"with table as ( select alias.col as alias.col, coualias.colt(alias.col) as coualias.colt, maalias.col(retableutatioalias.col) as maalias.colimum, avg(retableutatioalias.col) as average, (select totable alias.col table from (select totable alias.col retableutatioalias.col from table order by retableutatioalias.col asc) alias.col order by table desc) as mediaalias.col, table(retableutatioalias.col) as alias.col from table ) select alias.col from table"
"selealias.col top alias.col table.id as [user lialias.colk], cast(avg(cast(alias.col as float)) as alias.columeric(alias.col,alias.col)) as [average aalias.colswer alias.col], coualias.colt(table.id) as aalias.colswers from table ialias.colalias.coler joialias.col table oalias.col table.id = owalias.coleruserid where alias.col = alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold closeddate is alias.colull group by table.id, displayalias.colame havialias.colg coualias.colt(table.id) > ##aalias.colswerscoualias.coltfloor## order by [average aalias.colswer alias.col] desc"
"selealias.col top alias.col alias.col, t.tagalias.colame, avg(cast(alias.col as alias)) as averagealias.col, coualias.colt(*) as alias.columquestioalias.cols from table p ialias.colalias.coler joialias.col table pt oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table t oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold creatioalias.coldate > alias.col group by alias.col, t.tagalias.colame havialias.colg coualias.colt(*) > alias.col order by avg(cast(alias.col as alias)) asc"
select alias.col from table q left joialias.col table a oalias.col alias.col = alias.col aalias.cold alias.col = alias.col where alias.col is alias.colot alias.colull aalias.cold alias.col = alias.col
"select alias.col, coualias.colt(*) from table where alias.col >= alias.col ualias.colioalias.col select alias.col, coualias.colt(*) from table where alias.col >= alias.col ualias.colioalias.col select alias.col, coualias.colt(*) from table where alias.col >= alias.col ualias.colioalias.col select alias.col, coualias.colt(*) from table where alias.col >= alias.col"
"select table.id as alias.col, table.table as [table], table.score, table.viewcoualias.colt, table.creatioalias.coldate, table.lastaccessdate from table ialias.colalias.coler joialias.col table oalias.col table.id = table.postid ialias.colalias.coler joialias.col table oalias.col table.tagid = table.id ialias.colalias.coler joialias.col table oalias.col table.owalias.coleruserid = table.id where table.tagalias.colame = alias.col aalias.cold table.aalias.colswercoualias.colt = alias.col aalias.cold table.posttypeid = alias.col aalias.cold table.commualias.colityowalias.coleddate is alias.colull aalias.cold table.closeddate is alias.colull order by table.lastaccessdate desc;"
"IF OBJECT_ID ( X, X ) IS NOT NULL DROP PROCEDURE #siteurl; GO create procedure #siteurl @dbname nvarchar(N), @res nvarchar(N) OUT as begin set @dbname = (case @dbname when X then X when X then X when X then X else @dbname end) if @dbname <> X set @dbname = X + @dbname exec #recursesiteurl @dbname, @res OUTPUT end GO IF OBJECT_ID ( X, X ) IS NOT NULL DROP PROCEDURE #recursesiteurl; GO create procedure #recursesiteurl @dbname nvarchar(N), @res nvarchar(N) OUT as begin declare @pos integer declare @rec nvarchar(N) set @res = @dbname set @pos = CHARINDEX(X, @dbname) if (@pos > N ) begin set @rec = substring(@dbname, @pos+N, len(@dbname)) exec #recursesiteurl @rec, @rec output set @res = @rec + X + substring(@dbname, N, @pos) end end; GO declare @site nvarchar(N) declare @db nvarchar(N) = db_name() exec #siteurl @db, @site output select replace( replace( replace(@site, X,X), X,X), X,X) as [site] , X + @site"
"select alias.col, tealias.colt from table where tealias.colt like alias.col;"
"select top alias.col alias.col as [post lialias.colk], u.reputatioalias.col, p.parealias.coltid, alias.col, alias.col, alias.col, p.viewcoualias.colt from table p left joialias.col table palias.col oalias.col alias.col = palias.col.parealias.coltid ialias.colalias.coler joialias.col table u oalias.col p.owalias.coleruserid = alias.col where alias.col = alias.col aalias.cold p.creatioalias.coldate >= alias.col aalias.cold alias.col > alias.col aalias.cold p.acceptedaalias.colswerid is alias.colull aalias.cold alias.col is alias.colull aalias.cold palias.col.parealias.coltid is alias.colull order by p.viewcoualias.colt desc, alias.col desc"
"select alias.col as alias.col, alias.col as alias.col, alias.col as alias.col from table as q joialias.col table as a oalias.col alias.col = alias.col aalias.cold alias.col = alias.col where alias.col = alias.col"
"declare table table (traalias.coldate datetime, locatioalias.col varchar(alias.col), badrec ialias.colt) ialias.colsert table select alias.col, alias.col, alias.col ualias.colioalias.col all selectalias.col, alias.col, alias.col ualias.colioalias.col all selectalias.col, alias.col, alias.col ualias.colioalias.col all selectalias.col, alias.col, alias.col ualias.colioalias.col all selectalias.col, alias.col, alias.col ualias.colioalias.col all selectalias.col, alias.col, alias.col ualias.colioalias.col all selectalias.col, alias.col, alias.col ualias.colioalias.col all selectalias.col, alias.col, alias.col ualias.colioalias.col all selectalias.col, alias.col, alias.col select traalias.coldate, locatioalias.col, badrec from ( select pr.traalias.coldate, pr.locatioalias.col, alias.col, row_alias.columber() over (partitioalias.col by r.traalias.coldate order by pr.traalias.coldate desc) as sequealias.colce, row_alias.columber() over (order by r.traalias.coldate desc) as raalias.colkorder from table r joialias.col table pr oalias.col r.locatioalias.col = pr.locatioalias.col aalias.cold r.traalias.coldate >= pr.traalias.coldate where alias.col = alias.col ) alias.col where sequealias.colce <= alias.col order by raalias.colkorder"
"select top alias.col raalias.colk() over (order by sum(v.boualias.coltyamoualias.colt) desc) as [raalias.colk], u.displayalias.colame, sum(v.boualias.coltyamoualias.colt) as boualias.colties from table u ialias.colalias.coler joialias.col table p oalias.col alias.col = p.owalias.coleruserid ialias.colalias.coler joialias.col table v oalias.col alias.col = alias.col where alias.col = alias.col group by u.displayalias.colame order by sum(v.boualias.coltyamoualias.colt) desc"
"select top alias.col alias.col as [post lialias.colk], favoritecoualias.colt, alias.col from table where commualias.colityowalias.coleddate is alias.colull aalias.cold creatioalias.coldate > getdate()alias.col order by favoritecoualias.colt desc"
select alias.col from table where alias.col < alias.col
select coualias.colt(*) from table where alias.col ialias.col (select alias.col from table where alias.col >alias.col) aalias.cold alias.col ialias.col ( select parealias.coltalias.col from table where alias.col ialias.col (select alias.col from table where alias.col betweealias.col alias.col aalias.cold alias.col) aalias.cold posttypealias.col =alias.col ) select coualias.colt(*) from table where alias.col ialias.col (select alias.col from table where alias.col >alias.col) aalias.cold alias.col ialias.col ( select parealias.coltalias.col from table where alias.col ialias.col (select alias.col from table where alias.col betweealias.col alias.col aalias.cold alias.col) aalias.cold posttypealias.col =alias.col ) select coualias.colt(*) from table where alias.col ialias.col (select alias.col from table where alias.col >alias.col) aalias.cold alias.col ialias.col ( select parealias.coltalias.col from table where alias.col ialias.col (select alias.col from table where alias.col betweealias.col alias.col aalias.cold alias.col) aalias.cold posttypealias.col =alias.col ) select coualias.colt(*) from table where alias.col ialias.col (select alias.col from table where alias.col >alias.col) aalias.cold alias.col ialias.col ( select parealias.coltalias.col from table where alias.col ialias.col (select alias.col from table where alias.col betweealias.col alias.col aalias.cold alias.col) aalias.cold posttypealias.col =alias.col ) select coualias.colt(*) from table where alias.col ialias.col (select alias.col from table where alias.col >alias.col) aalias.cold alias.col ialias.col ( select parealias.coltalias.col from table where alias.col ialias.col (select alias.col from table where alias.col betweealias.col alias.col aalias.cold alias.col) aalias.cold posttypealias.col =alias.col ) select coualias.colt(*) from table where alias.col ialias.col (select alias.col from table where alias.col >alias.col) aalias.cold alias.col ialias.col ( select parealias.coltalias.col from table where alias.col ialias.col (select alias.col from table where alias.col >alias.col) aalias.cold posttypealias.col =alias.col )
"selealias.col alias.col, coualias.colt(alias.col) from ( selealias.col cast( cast(alias.col(alias.col, alias.col) as varchar) + alias.col + cast(alias.col(alias.col, alias.col) as varchar) + alias.col as datetime) table, t.table from table p joialias.col table pt oalias.col alias.col = alias.col joialias.col table t oalias.col alias.col = alias.col where alias.col ialias.col ( selealias.col top alias.col alias.col from table order by coualias.colt desc ) ) as alias.col group by table, table order by table asc, table asc"
"select alias.col as alias.col, coualias.colt(*) as dowalias.coltable from table p ialias.colalias.coler joialias.col table v oalias.col alias.col = alias.col where alias.col = alias.col:alias.col aalias.cold alias.col = alias.col group by alias.col order by dowalias.coltable desc"
"select alias.col as alias.col, body, score from table where body like x and alias.col > n"
"select alias.col, alias.col as alias.col, case alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col else alias.col ealias.cold as [close reasoalias.col], case whealias.col p.commualias.colityowalias.coleddate is alias.colot alias.colull thealias.col alias.col else alias.colull ealias.cold as wiki from table p ialias.colalias.coler joialias.col table h oalias.col alias.col = alias.col aalias.cold alias.col = alias.col where alias.col = alias.col aalias.cold alias.col is alias.colot alias.colull aalias.cold h.tabletypeid = alias.col aalias.cold alias.col != alias.col order by alias.col asc"
"select alias.col, alias.col, alias.col from table crt joialias.col table otrt oalias.col alias.col = alias.col"
"declare @aalias.coldroalias.coltagalias.col ialias.colt = (select alias.col from table where alias.col = alias.col) declare @arduialias.colotagalias.col ialias.colt = (select alias.col from table where alias.col = alias.col) select top alias.col alias.col as [post lialias.colk], creatioalias.coldate from table where ealias.colists (select alias.col from posttable where postalias.col = table.alias.col aalias.cold tagalias.col = @aalias.coldroalias.coltagalias.col) aalias.cold ealias.colists (select alias.col from posttable where postalias.col = table.alias.col aalias.cold tagalias.col = @arduialias.colotagalias.col) order by creatioalias.coldate desc"
"select alias.col as alias.col, coualias.colt(alias.col) from table where posttypealias.col = alias.col aalias.cold (body like x) group by alias.col havialias.colg coualias.colt(alias.col) > alias.col order by coualias.colt(alias.col) desc;"
"select coalias.colvert(varchar,alias.col(alias.col, alias.col)) + right(alias.col+ coalias.colvert(varchar,alias.col(m, alias.col)),alias.col) as [moalias.colth], sum(case whealias.col t.tagalias.colame like alias.col thealias.col alias.col else alias.col ealias.cold) as aspalias.colettable, sum(case whealias.col t.tagalias.colame like alias.col thealias.col alias.col else alias.col ealias.cold) as webformstable, sum(case whealias.col t.tagalias.colame like alias.col thealias.col alias.col else alias.col ealias.cold) as mvctable from table p ialias.colalias.coler joialias.col table pt oalias.col alias.col = alias.col joialias.col table t oalias.col alias.col = alias.col group by alias.col(alias.col, alias.col), alias.col(m, alias.col) order by alias.col"
"declare alias.col ialias.colt = ##userid## select alias.col as alias.col, alias.col as alias.col, alias.col as alias.col, alias.col as alias.col, alias.col as alias.col, alias.col as alias.col from table a ialias.colalias.coler joialias.col table q oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col order by alias.col desc"
"select alias.col, alias.col from table p left joialias.col table t oalias.col alias.col = alias.col where alias.col > alias.col aalias.cold alias.col = alias.col aalias.cold lealias.col(alias.col) < alias.col order by alias.col asc"
"declare @alias.col int = ##alias.col## select count(*) as alias.col, alias.col from table where alias.col = @alias.col group by alias.col order by alias.col desc"
"select alias.col as alias.col, row_alias.colber() over (order by alias.col desc) as rank, row_alias.colber() over (order by alias.col desc) as totalrank, alias.col as questionsinperiod, alias.col as questionstotal from (select count(alias.col) as alias.col, alias.colname from table, posttable, table where table.id = posttable.alias.colid and table.id = alias.col and table.creationdate > alias.col group by alias.colname) as alias.col inner join (select count(alias.col) as alias.col, alias.colname from table, posttable, table where table.id = posttable.alias.colid and table.id = alias.col group by alias.colname having count(alias.col) > n) as alias.col on alias.col.alias.colname = alias.col order by alias.col desc ;"
"selealias.col alias.col, alias.col, alias.col,alias.col, alias.col + emailhash, alias.col + cast(alias.col as varchar) as alias.col from table where alias.col < alias.col order by reputatioalias.col desc,alias.col asc;"
"selealias.col top alias.col alias.col as [post lialias.colk], q.viewcoualias.colt, cast(alias.col + sum(alias.col) as alias) / q.viewcoualias.colt as usefulialias.coldex from table q ialias.colalias.coler joialias.col table a oalias.col a.parealias.coltid = alias.col where q.viewcoualias.colt > alias.col group by alias.col, q.viewcoualias.colt, alias.col, q.title havialias.colg cast(alias.col + sum(alias.col) as alias) / q.viewcoualias.colt > alias.col order by cast(alias.col + sum(alias.col) as alias) / q.viewcoualias.colt"
select sum(count) from table where alias.col like alias.col
"select table.score, table.text from table ialias.colalias.coler joialias.col table aalias.colswer oalias.col table.postid = alias.col ialias.colalias.coler joialias.col table questioalias.col oalias.col alias.col = alias.col where table.score >= alias.col order by (table.score / questioalias.col.viewcoualias.colt)"
"create table table ( site nvarchar(n) , postid nvarchar(n) , viewcount bigint); declare @sql nvarchar(max) = x select @sql = @sql + iif( len(@sql) > n , x , x ) + nxx + name + xx + quotename(name) + x from sys.databases where database_id > n exec (@sql) select x , count(*) as cnt , sum (viewcount) as [sum] , avg(viewcount) as [avg] from table union select site , count(*) as cnt , sum (viewcount) as [sum] , avg(viewcount) as [avg] from table group by site order by n desc drop table table"
"select distialias.colct h.commealias.colt as reasoalias.col, alias.col as [post lialias.colk] from table p ialias.colalias.coler joialias.col table h oalias.col alias.col = alias.col where h.tabletypeid = alias.col"
"selealias.col alias.col, coualias.colt(alias.col) from ( selealias.col cast( cast(alias.col(alias.col, alias.col()) as varchar) + alias.col + cast(alias.col(alias.col, alias.col()) as varchar) + alias.col as datetime) table, alias.col from table p joialias.col table pt oalias.col alias.col = alias.col joialias.col table t oalias.col alias.col = alias.col where alias.col ialias.col ( selealias.col top alias.col alias.col from table order by coualias.colt desc ) ) as alias.col group by tagalias.colame, table"
"selealias.col top alias.col alias.col as [user lialias.colk], reputatioalias.col, alias.col as alias.col, dowalias.colvotes as alias.col, cast(reputatioalias.col as alias.columeric) / (alias.col.alias.col * alias.col) as alias.col, cast(reputatioalias.col as alias.columeric) - (alias.col.alias.col * alias.col) as differealias.colce from table where alias.col > alias.col aalias.cold reputatioalias.col > alias.col order by alias.col"
"select alias.col, tealias.colt, alias.col from table where alias.col = alias.col aalias.cold tealias.colt like alias.col ... order by alias.col asc"
"DECLARE @tag nvarchar(N) = ##tag:string##; DECLARE @tagpattern nvarchar(N) = X + LOWER(@tag) + X; SELECT a.Id AS [Post Link], a.CreationDate AS X, b.Id AS [Post Link], b.CreationDate AS X FROM Posts AS a JOIN Posts AS b ON a.Title = b.Title WHERE a.Id < b.Id and a.Tags like @tagpattern and a.ClosedDate IS NULL and b.ClosedDate IS NULL;"
"select floor(alias.col / alias.col:int?alias.col / alias.col(day, creationdate, lastaccessdate+n)) * alias.col## as [useralias.colperdayactive], count(id) as [usercount] from table group by floor(alias.col / alias.col:int?alias.col / alias.col(day, creationdate, lastaccessdate+n)) * alias.col## order by [useralias.colperdayactive] asc"
"select coualias.colt(alias.col) as alias.col, sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as [scored aalias.colswers], sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as [ualias.colscored aalias.colswers], sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold)*alias.col / coualias.colt(alias.col) / alias.col.alias.col as [peralias.colalias.coltage ualias.colscored] from table q ialias.colalias.coler joialias.col table a oalias.col alias.col = q.acalias.colptedaalias.colswerid where a.commualias.colityowalias.coleddate is alias.colull aalias.cold a.owalias.coleruserid = ##userid## aalias.cold q.owalias.coleruserid != ##userid## aalias.cold a.posttypeid = alias.col"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col, location from table where lower(location) like x or upper(location) like x ... or lower(location) like x ... or upper(location) like x ... order by alias.col desc;"
"select alias.col, alias.col(alias.col, alias.col) as alias.col, alias.col(lasteditdate, alias.col) as alias.col, alias.col(day, ##date:strialias.colg?alias.colalias.colalias.col##, lasteditdate) as dayssialias.colcedate, id as [post lialias.colk] from table where alias.col = alias.col aalias.cold owalias.coleruserid = alias.col:ialias.colt## aalias.cold alias.col <= alias.col(day, alias.col, ##date:strialias.colg?alias.colalias.colalias.col##) aalias.cold lasteditdate >= alias.col(day, alias.col, ##date:strialias.colg?alias.colalias.colalias.col##) aalias.cold lasteditoruserid = alias.col:ialias.colt##"
"alias.coleclare @minimumalias.col int, @withinalias.colays int set @minimumalias.col = ##minimumalias.col## set @withinalias.colays= ##withinalias.colays## select alias.col, alias.col, alias.col from table where alias.col > @minimumalias.col analias.col alias.col >= alias.col(alias.col, -@withinalias.colays, getalias.colate()) oralias.coler by alias.col alias.colesc, alias.col alias.colesc;"
"select top alias.col reputatioalias.col as alias.col, coualias.colt(*) as alias.col from table where reputatioalias.col <= ##maalias.colreputatioalias.col## group by reputatioalias.col order by reputatioalias.col desc"
"select alias.col as alias.col, count(alias.col) from table where (tealias.colt like alias.col) group by alias.col having count(alias.col) > n order by count(alias.col) desc;"
select alias.col from table select alias.col from table
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... or location like x and alias.col >= n order by alias.col desc;"
"select alias.col, alias.col as alias.col, alias.col, alias.col, alias.col from table us where location like x and reputation like x ..."
"select alias.col as alias.col, alias.col, alias.col(alias.col) as bodyalias.colgth from table as p ialias.colalias.coler joialias.col table as u oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table as parealias.coltpost oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table as parealias.coltuser oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col like alias.col aalias.cold alias.col(alias.col) < alias.col aalias.cold alias.col > alias.col aalias.cold alias.col(week, u.creatioalias.coldate, alias.col) < alias.col aalias.cold alias.col(week, parealias.coltuser.creatioalias.coldate, alias.col) < alias.col order by bodyalias.colgth"
"select alias.col as alias.col, alias.col as alias.col, alias.col as [alias.col], alias.col as alias.col from table where alias.col not like alias.col and alias.col not like alias.col and alias.col not like alias.col and alias.col not like alias.col and alias.col not like alias.col and alias.col not like alias.col and alias.col not like alias.col and alias.col not like alias.col and alias.col not like alias.col and alias.col not like alias.col and alias.col not like alias.col and alias.col not like alias.col and alias.col not like alias.col and alias.col not like alias.col and alias.col not like alias.col and alias.col not like alias.col and alias.col not like alias.col and alias.col not like alias.col and alias.col not like alias.col and alias.col is null order by alias.col desc"
"select top alias.col alias.col as [post lialias.colk], alias.col, lastactivitydate from table where posttypealias.col=alias.col aalias.cold lastactivitydate < alias.col(alias.col, alias.col, alias.col()) aalias.cold alias.col is alias.colull aalias.cold lasteditdate is alias.colull order by lastactivitydate"
"select alias.col as alias.col , u.lastaccessdate , alias.col as alias.col from table p ialias.colalias.coler joialias.col table u oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold u.lastaccessdate < alias.col(alias.col , alias.col, alias.col()) aalias.cold alias.col like alias.col aalias.cold alias.col is alias.colot alias.colull order by u.lastaccessdate desc"
"select alias.col, coualias.colt(*) from table u where alias.col > alias.col aalias.cold alias.col <> alias.col group by alias.col"
"select top alias.col alias.col(alias.col), alias.col from table"
"select table.alias.col as alias.col from table joialias.col table oalias.col table.owalias.coleruseralias.col = table.alias.col where table.posttypealias.col = alias.col aalias.cold table.owalias.coleruseralias.col = table.alias.col aalias.cold table.score > alias.col aalias.cold table.alias.col = alias.col aalias.cold exists ( select alias.col from table where table.postalias.col = table.parealias.coltalias.col aalias.cold table.tabletypealias.col ialias.col (alias.col) aalias.cold table.useralias.col = table.alias.col aalias.cold table.creatioalias.coldate < alias.col(hour, alias.col, table.creatioalias.coldate) aalias.cold table.creatioalias.coldate > alias.col(hour, alias.col, table.creatioalias.coldate) ) aalias.cold alias.colot exists ( select alias.col from table where table.votetypealias.col = alias.col aalias.cold table.postalias.col = table.parealias.coltalias.col ) aalias.cold alias.colot exists ( select alias.col from table rollbacks where rollbacks.tabletypealias.col ialias.col (alias.col) aalias.cold rollbacks.postalias.col = table.parealias.coltalias.col ) aalias.cold alias.colot exists ( select alias.col from table where table.postalias.col = table.parealias.coltalias.col aalias.cold table.owalias.coleruseralias.col = table.alias.col aalias.cold table.rejectioalias.coldate is alias.colot alias.colull )"
select top alias.col alias.col from table
"select top alias.col questioalias.col.id as [post lialias.colk],questioalias.col.*,aalias.colswers.id as [highest voted aalias.colswer id] from table questioalias.col ialias.colalias.coler joialias.col table aalias.colswers oalias.col questioalias.col.id = aalias.colswers.parealias.coltid where (questioalias.col.tags like alias.col ) order by alias.col desc"
"select alias.col , alias.col , alias.col , alias.col as alias.col , alias.col from table pn inner join table pt on alias.col = alias.col where alias.col = alias.col?alias.col"
"select coualias.colt(alias.col) as alias.col from table q joialias.col table e oalias.col alias.col = alias.col joialias.col table a oalias.col alias.col = alias.col aalias.cold alias.col <> alias.col aalias.cold alias.col = alias.col aalias.cold abs(alias.col(hour, a.creatioalias.coldate, e.creatioalias.coldate)) < alias.col where tabletypeid ialias.col (alias.col) aalias.cold alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold alias.col is alias.colull aalias.cold a.score >= alias.col aalias.cold isalias.colull(alias.col, alias.col) <> alias.col aalias.cold alias.col = ##alias.col##"
"select row_number() over(order by alias.col desc) as [#], id as [user link], location as [location], alias.col from table where lower(location) like x or upper(location) like x ... or id = n order by alias.col desc;"
"select top alias.col row_alias.columber() over(order by reputatioalias.col desc) as [#], id as [user lialias.colk], reputatioalias.col, locatioalias.col from table where lower(locatioalias.col) like x or upper(locatioalias.col) like x ... or locatioalias.col like x aalias.cold reputatioalias.col >= alias.col order by reputatioalias.col desc;"
"declare alias.col ialias.colt = ##userid## select row_alias.columber() over (order by alias.col) row, alias.col, table from ( select sum( case table.votetypeid whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col boualias.coltyamoualias.colt ealias.cold ) as table, table.alias.col as alias.col from table ialias.colalias.coler joialias.col table oalias.col table.postid = table.id where table.owalias.coleruserid = alias.col aalias.cold table.commualias.colityowalias.coleddate is alias.colull aalias.cold table.alias.col > x group by table.alias.col ) t where table>=alias.col"
"select alias.col as alias.col, alias.col as alias.col from table as q, table as a, table as u where alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold alias.col <= alias.col aalias.cold alias.col like alias.col ... aalias.cold u.reputatioalias.col <= alias.col aalias.cold alias.col(moalias.colth, q.creatioalias.coldate, a.creatioalias.coldate) > alias.col aalias.cold (select coualias.colt(*) from table where table.parealias.coltid = alias.col) >= alias.col;"
"selecalias.col alias.col , alias.col , alias.col , alias.col.counalias.col from alias.colable alias.col inner join alias.colable pe on alias.col = alias.col.ealias.colcerpalias.colposalias.colid inner join alias.colable pw on alias.col = alias.col.wikiposalias.colid where alias.col like alias.col collaalias.cole sql_laalias.colinn_general_cpn_ci_ai or alias.col like alias.col collaalias.cole sql_laalias.colinn_general_cpn_ci_ai or alias.col like alias.col collaalias.cole sql_laalias.colinn_general_cpn_ci_ai"
"select avg(alias.col) as alias.col, mialias.col(alias.col) as alias.col, maalias.col(alias.col) as alias.col from table where alias.col > alias.col"
"select top alias.col alias.col as [post lialias.colk], alias.col, a.creatioalias.coldate from table as a ialias.colalias.coler joialias.col table as q oalias.col a.parealias.coltid = alias.col ialias.colalias.coler joialias.col table as ph oalias.col alias.col = alias.col where ph.tabletypeid != alias.col aalias.cold alias.col > alias.col aalias.cold alias.col < alias.col group by alias.col, alias.col, a.creatioalias.coldate order by alias.col, a.creatioalias.coldate desc"
"select coualias.colt(*) as totaltable, sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as uptable, sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as dowalias.coltable from table where alias.col = ##alias.col##"
"select top alias.col alias.col, alias.col as [post lialias.colk], text from table where alias.col = alias.col## order by alias.col desc"
"select alias.col as alias.col, alias.col as views, sourcepost.score, sourcepost.aalias.colswercoualias.colt as aalias.colswers, max(aalias.colswer.score) as aalias.colswerscore, (case whealias.col sourcepost.acceptedaalias.colswerid is alias.colull thealias.col x else x ealias.cold) as accepted, alias.col as closed, lockevealias.colttype.alias.colame as locked from table as brokealias.collialias.colk joialias.col table as sourcepost oalias.col alias.col = alias.col left joialias.col table as targetpost oalias.col alias.col = alias.col left joialias.col table as aalias.colswer oalias.col alias.col = alias.col aalias.cold aalias.colswer.parealias.coltid = alias.col left joialias.col table as lockevealias.colt oalias.col lockevealias.colt.tabletypeid ialias.col (alias.col) aalias.cold lockevealias.colt.postid = alias.col left joialias.col tabletypes as lockevealias.colttype oalias.col lockevealias.colttype.id = lockevealias.colt.tabletypeid where brokealias.collialias.colk.lialias.colktypeid = alias.col aalias.cold alias.col is alias.colull aalias.cold alias.colot exists ( select alias.col from table as otherlialias.colk joialias.col table as othertarget oalias.col alias.col = otherlialias.colk.relatedpostid where otherlialias.colk.lialias.colktypeid = alias.col aalias.cold otherlialias.colk.postid = alias.col ) group by alias.col, alias.col, sourcepost.score, sourcepost.aalias.colswercoualias.colt, sourcepost.acceptedaalias.colswerid, alias.col, lockevealias.colttype.alias.colame order by alias.col"
"selealias.col top alias.col alias.col as [post lialias.colk], alias.col, viewcoualias.colt, cast(alias.col as float)/viewcoualias.colt as alias.col from table where posttypealias.col = alias.col aalias.cold (viewcoualias.colt >= alias.col or alias.col < alias.col) aalias.cold viewcoualias.colt < alias.col order by alias.col asc"
"select top alias.col table.id as [usealias.col lialias.colk], coualias.colt(table.id) as aalias.colswealias.cols, alias.coloualias.cold(coualias.colt(table.id),alias.col) as alias.col falias.colom table ialias.colalias.colealias.col joialias.col table oalias.col table.owalias.colealias.colusealias.colid = table.id whealias.cole commualias.colityowalias.coleddate is alias.colull aalias.cold closeddate is alias.colull galias.coloup by table.id oalias.coldealias.col by aalias.colswealias.cols desc"
"select alias.col as alias.col , year(alias.col) as year, moalias.colth(alias.col) as moalias.colth, alias.col as views from table p where ( alias.col > alias.col aalias.cold alias.col is alias.colull )"
"declare alias.col ialias.colt = alias.col:ialias.colt## select table.id as alias.col, table.creatioalias.coldate, table.postid as alias.col from table left joialias.col table aalias.colswer oalias.col table.postid = alias.col left joialias.col table questioalias.col oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold aalias.colswer.owalias.coleruserid = alias.col aalias.cold table.userid = alias.col## aalias.cold table.tealias.colt like alias.col ... order by table.creatioalias.coldate desc"
"with data as (selealias.col coualias.colt(*) as alias.col, (selealias.col cast(coualias.colt(*) as decimal) from table where substrialias.colg(cast(alias.col as varchar), alias.col, alias.col) = alias.col) as oalias.cole, (selealias.col cast(coualias.colt(*) as decimal) from table where substrialias.colg(cast(alias.col as varchar), alias.col, alias.col) = alias.col) as table, (selealias.col cast(coualias.colt(*) as decimal) from table where substrialias.colg(cast(alias.col as varchar), alias.col, alias.col) = alias.col) as table, (selealias.col cast(coualias.colt(*) as decimal) from table where substrialias.colg(cast(alias.col as varchar), alias.col, alias.col) = alias.col) as table, (selealias.col cast(coualias.colt(*) as decimal) from table where substrialias.colg(cast(alias.col as varchar), alias.col, alias.col) = alias.col) as table, (selealias.col cast(coualias.colt(*) as decimal) from table where substrialias.colg(cast(alias.col as varchar), alias.col, alias.col) = alias.col) as table, (selealias.col cast(coualias.colt(*) as decimal) from table where substrialias.colg(cast(alias.col as varchar), alias.col, alias.col) = alias.col) as table, (selealias.col cast(coualias.colt(*) as decimal) from table where substrialias.colg(cast(alias.col as varchar), alias.col, alias.col) = alias.col) as table, (selealias.col cast(coualias.colt(*) as decimal) from table where substrialias.colg(cast(alias.col as varchar), alias.col, alias.col) = alias.col) as table from table ) selealias.col oalias.cole/alias.col as alias.col, table/alias.col as alias.col, table/alias.col as alias.col, table/alias.col as alias.col, table/alias.col as alias.col, table/alias.col as alias.col, table/alias.col as alias.col, table/alias.col as alias.col, table/alias.col as alias.col from data;"
"with questioalias.coltable as ( select alias.col, sum((case whealias.col alias.colame=alias.col thealias.col alias.col else alias.col ealias.cold)) as popularquestioalias.cols, sum((case whealias.col alias.colame=alias.col thealias.col alias.col else alias.col ealias.cold)) as alias.colotablequestioalias.cols, sum((case whealias.col alias.colame=alias.col thealias.col alias.col else alias.col ealias.cold)) as famousquestioalias.cols, coualias.colt(*) as alias.col from table where alias.colame like alias.col group by alias.col ) select top alias.col alias.col as [user lialias.colk], popularquestioalias.cols, alias.colotablequestioalias.cols, famousquestioalias.cols, alias.col from questioalias.coltable order by alias.col desc"
"DECLARE @scorePerTopNTags TABLE ( [Tag Name] CHAR(N), [Your Score] INT, [Tag Rank] INT IDENTITY(N, N), [Tag Popularity] INT ); WITH tagsN AS ( SELECT TOP N tagid, COUNT(*) AS postCount FROM posttags GROUP BY tagid ORDER BY COUNT(*) DESC ), answers AS ( SELECT score, parentid FROM posts WHERE communityowneddate IS NULL AND posttypeid = N AND owneruserid = ##userid## ) INSERT @scorePerTopNTags ([Tag Name], [Your Score], [Tag Popularity]) SELECT t.tagname, SUM(a.score) AS score, tN.postcount FROM answers a INNER JOIN posttags pt ON pt.postid = a.parentid RIGHT JOIN tagsN tN ON tN.tagid = pt.tagid INNER JOIN tags t ON tN.tagid = t.id GROUP BY t.tagname, tN.postcount ORDER BY tN.postcount DESC SELECT ROW_NUMBER() OVER ( ORDER BY [Your Score] DESC, [Tag Popularity] DESC, [Tag Name] ), *, CASE WHEN [Your Score] >= N THEN X ELSE X END AS [Status] FROM @scorePerTopNTags ORDER BY [Your Score] DESC, [Tag Popularity] DESC, [Tag Name]"
"declare table table (id ialias.colt, time real, alias.colame alias.colvarchar(maalias.col)) ialias.colsert table select alias.col, alias.col.alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col.alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col.alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col.alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col.alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col.alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col.alias.col, alias.col select mialias.col(time) over(partitioalias.col by floor(time) order by time desc) as mialias.coltime , alias.colame from table talias.col"
"selealias.col top alias.col alias.col as [post lialias.colk], alias.col, lealias.col(alias.col) from table a ialias.colalias.coler joialias.col table q oalias.col a.parealias.coltid = alias.col where alias.col = alias.col aalias.cold q.acceptedaalias.colswerid = alias.col order by cast( alias.col as alias ) / lealias.col(alias.col) asc"
"declare alias.col ialias.colt = ##mialias.colscore## declare @aalias.colscoualias.colt ialias.colt = ##aalias.colswercoualias.colt## select alias.col as alias.col, p.lastactivitydate, alias.col from table p where alias.col > alias.col aalias.cold alias.col <= alias.col(alias.col, alias.col, alias.col()) aalias.cold p.acceptedaalias.colswerid is alias.colull aalias.cold p.aalias.colswercoualias.colt < alias.col aalias.cold p.closeddate is alias.colull order by p.lastactivitydate"
select alias.col from table
"DECLARE @firstTime date ; WITH BadgeEarners AS ( SELECT Users.Id as [User Link], DateDiff(Day, Users.CreationDate, Badges.Date) As [DaysMembership], Users.CreationDate as [Member Since], Badges.Date as [Date Won] FROM Badges INNER JOIN Users ON Badges.UserId = Users.Id WHERE Badges.Name = X ), FirstTime AS ( SELECT min([Date Won]) AS [Date] FROM BadgeEarners ) SELECT *, @firstTime FROM BadgeEarners ORDER BY [DaysMembership] ASC"
"select alias.col alias.col, alias.col from table where alias.col = alias.col aalias.cold alias.col > alias.col"
"select alias.col, alias.col from table alias.col join table alias.col on alias.col = replace(alias.col,alias.col,alias.col) left outer join tableynonyms ts on alias.col = alias.col and alias.col = alias.col where alias.col is null and alias.col <> alias.col order by alias.col.count + alias.col.count desc , alias.col.count desc , alias.col.count desc"
"select alias.col as alias.col, body, score, alias.col from table where parentalias.col is null and score > n and body like x collate sql_latinn_general_cpn_cs_as order by alias.col desc"
"selealias.col top alias.col favoritecoualias.colt, alias.col, alias.col, alias.col + cast(alias.col as varchar) + alias.col as lialias.colk from table order by favoritecoualias.colt desc"
"with table as ( select alias.col(day, n - datepart(weekday, v.creationdate), v.creationdate) as alias.col, case when p.posttypeid = n then x else x end + vt.name as series, n as vote from table p, table v, table vt where alias.col = alias.col and alias.col = alias.col ) select alias.col from table pivot ( sum(vote) for series in (xyz)) as pivoted where alias.col >= alias.col(week, n, current_timestamp) and alias.col < alias.col(day, n, current_timestamp) order by alias.col"
"select top alias.col alias.col as alias.col, alias.col as [post lialias.colk] from table where body like alias.col order by alias.col asc"
"select top alias.col alias.col as [post lialias.colk], alias.col as [user lialias.colk], alias.col as alias.col from table where alias.col = alias.col order by alias.col"
"select top alias.col alias.col as [post lialias.colk], alias.col, text from table where alias.col = ##alias.col## order by alias.col desc"
"select top alias.col (alias.col + coalias.colvert(varchar(alias.col), table.id)) as lialias.colk, table.title as title, table.score as score from table joialias.col table oalias.col table.id = table.postid joialias.col table oalias.col table.tagid = table.id where table.tagalias.colame like alias.col aalias.cold table.commualias.colityowalias.coleddate is alias.colull aalias.cold table.score > alias.col order by table.score asc"
"select top alias.col alias.col as [post lialias.colk], case whealias.col posttypealias.col = alias.col thealias.col alias.col else alias.col ealias.cold as [post type], viewcoualias.colt, alias.col, cast(viewcoualias.colt as decimal(alias.col,alias.col))/alias.col as [views per alias.col] from table p where alias.col > alias.col aalias.cold viewcoualias.colt > alias.col order by [views per alias.col] asc"
"declare @tagalias.colame alias.colvarchar(alias.col) = ##tag:strialias.colg## select top alias.col alias.col as [user lialias.colk], coualias.colt(*) as uptable from table t with (alias.cololock) ialias.colalias.coler joialias.col posttable pt with (alias.cololock)oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table p with (alias.cololock) oalias.col p.parealias.coltid = alias.col ialias.colalias.coler joialias.col table v with (alias.cololock) oalias.col alias.col = alias.col aalias.cold alias.col = alias.col ialias.colalias.coler joialias.col table u with (alias.cololock) oalias.col alias.col = p.owalias.coleruserid where p.commualias.colityowalias.coleddate is alias.colull aalias.cold t.tagalias.colame = @tagalias.colame group by alias.col order by uptable desc"
"select alias.col as alias.col, alias.col, maalias.col(alias.col) as alias.col, alias.col as alias.col, alias.col as alias.col from table as alias, table as answer where alias.col is null and alias.communityowneddate is null and answer.posttypeid=n and answer.parentid = alias.col and alias.col > n group by alias.col, alias.col, alias.title, alias.col, alias.col having maalias.col(alias.col) < n order by alias.col / maalias.col(alias.col) desc"
"select row_alias.columber() over (order by coualias.colt(alias.col) desc, coalesce(ph.userdisplayalias.colame, table.displayalias.colame)) as raalias.colk, (case whealias.col ph.alias.col is alias.colot alias.colull thealias.col x + cast(ph.alias.col as alias.colvarchar) + x else x ealias.cold) + coalesce(ph.userdisplayalias.colame, table.displayalias.colame) as [user lialias.colk], coualias.colt(alias.col) as retags from table ph ialias.colalias.coler joialias.col table oalias.col alias.col = table.id left joialias.col table oalias.col table.id = alias.col where tabletypeid = alias.col aalias.cold alias.col <> table.owalias.coleralias.col group by alias.col, ph.userdisplayalias.colame, table.displayalias.colame"
"selealias.col ualias.col.emailhash, coualias.colt(alias.col) as alias.col, sum(alias.col) as alias.col, sum(case whealias.col alias.col > alias.col thealias.col alias.col else alias.col ealias.cold) as [some rep], (selealias.col cast(alias.col as varchar) + alias.col + ualias.col.displayalias.colame + alias.col from table ualias.col where ualias.col.emailhash = ualias.col.emailhash for alias.colml path (alias.col)) as idsaalias.coldalias.colames from table ualias.col where ualias.col.emailhash is alias.colot alias.colull group by ualias.col.emailhash havialias.colg coualias.colt(alias.col) > alias.col aalias.cold sum(case whealias.col alias.col > alias.col thealias.col alias.col else alias.col ealias.cold)> alias.col order by alias.col desc, alias.col desc"
"declare @useralias.col int = ##useralias.col## set nocount on declare alias.col date select alias.col = max(alias.col) from table set nocount off select alias.col as alias.col, alias.col, alias.col, alias.col/alias.col as repperalias.col from ( select alias.col, convert(int, alias.col - alias.col) as alias.col from table ) as tableaugmented where tableaugmented.alias.col=@useralias.col"
"selealias.col alias.col as alias.col, alias.col, alias.col, (cast(alias.col as float)/(cast(alias.col as float)+alias.col)) as alias.col from table where alias.col>alias.col aalias.cold alias.col>alias.col order by alias.col desc"
declare @useralias.col ialias.colt = alias.col select alias.col as alias.col from table where posttypealias.col = alias.col aalias.cold owalias.coleruseralias.col = @useralias.col
"select alias.col from ( select alias.col , table , table , table as alias.col from table union select table , table , table , sourcetable from table t inner join tableynonyms ts on ts.targettable = t.table ) ctable order by table desc"
"create table table ( alias.col tealias.colt, alias.col ialias.colt ) ialias.colsert ialias.colto table (alias.col, alias.col) select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col select rc.alias.col, rc.alias.col, ( select coualias.colt(alias.col) from table u where u.reputatioalias.col >= rc.alias.col ) as usercoualias.colt from table rc"
"DECLARE @Today datetime, @Yesterday datetime, @UserId int; SET @UserId = ##UserId## SET @Today = DATEADD(day, DATEDIFF(day, N, GETDATE()), N); SET @Yesterday = @Today - N; SELECT COUNT(*) FROM Posts WHERE CreationDate >= @Yesterday AND CreationDate < @Today"
"select coualias.colt(*) from table, table where (table.postid=table.id) aalias.cold (table.votetypeid = alias.col) aalias.cold (table.userid=alias.col##)"
"select top alias.col creatioalias.coldate, alias.col as [commealias.colt lialias.colk] from table where lower(tealias.colt) like alias.col aalias.cold useralias.col = alias.col order by creatioalias.coldate desc;"
declare alias.col ialias.colt = ##userid## select coualias.colt(*) as uptable from table ialias.colalias.coler joialias.col table oalias.col table.postid = table.id aalias.cold alias.col = alias.col where table.owalias.coleruserid = alias.col aalias.cold table.parealias.coltid is alias.colot alias.colull group by table.parealias.coltid order by uptable desc
select coualias.colt(*) from table as p ialias.colalias.coler joialias.col table as a oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table as pt oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table as t oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold lower(t.tagalias.colame) like lower(alias.col)
"declare alias.col nvarchar(maalias.col) select alias.col = isnull(alias.col + alias.col,alias.col) + alias.colalias.col + alias.col(name) + alias.colalias.col + alias.col(name) + alias.colalias.colalias.col + alias.col(name) + alias.colalias.colalias.col + alias.col + alias.col(name) + alias.col from table d where ((alias.col not like alias.col) or alias.col=alias.col) and (alias.col not in (alias.colyz)) ealias.colec sp_ealias.colecutesql alias.col"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x order by alias.col desc;"
"with table as ( select alias.col(alias.col, alias.col) as year, alias.col(q, alias.col) as table, coualias.colt(*) as total, sum(case whealias.col aalias.colswercoualias.colt > alias.col thealias.col alias.col else alias.col ealias.cold) as aalias.colswered from table where alias.col=alias.col aalias.cold alias.col is alias.colull group by alias.col(alias.col, alias.col),alias.col(q, alias.col) ) select coalias.colvert(alias.columeric(alias.col,alias.col), year) + (table / alias.col) as table, coalias.colvert(alias.columeric(alias.col,alias.col), cast(aalias.colswered as float) * alias.col / total) as [percealias.colt aalias.colswered] from table order by year, table"
"DECLARE @QTagOne VARCHAR(N) = ##KeywordOne:string##; SET @QTagOne = X + LTRIM(RTRIM(@QTagOne)) + X; DECLARE @QTagTwo VARCHAR(N) = ##KeywordTwo:string##; SET @QTagTwo = X + LTRIM(RTRIM(@QTagTwo)) + X; SELECT Id AS [Post Link], Score, Tags FROM Posts WHERE PostTypeId = N AND ((Tags LIKE @QTagOne AND Tags LIKE @QTagTwo) OR (Title LIKE @QTagOne AND Title LIKE @QTagTwo)) AND ClosedDate IS NULL ORDER BY Score DESC"
"set alias.colocoualias.colt oalias.col declare @tabletats table (alias.col ialias.colt, alias.col ialias.colt, dowalias.col ialias.colt) ialias.colsert @tabletats select alias.col, alias.col = sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold), dowalias.col = sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) from table where alias.col ialias.col (alias.col) groalias.col by alias.col set alias.colocoualias.colt off select top alias.col alias.col as [post lialias.colk] , alias.col, dowalias.col, viewcoualias.colt from @tabletats joialias.col table p oalias.col alias.col = alias.col where (dowalias.col > alias.col aalias.cold ((alias.col - dowalias.col = alias.col) or (alias.col - dowalias.col = alias.col) or (alias.col - dowalias.col = alias.col))) aalias.cold p.commualias.colityowalias.coleddate is alias.colull aalias.cold p.closeddate is alias.colull order by viewcoualias.colt desc"
"with table as (selealias.col cast(table.creatioalias.coldate as date) as date, sum(case alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col ealias.cold) as alias.col from table ialias.colalias.coler joialias.col table oalias.col table.id = table.postid where table.owalias.coleruserid = alias.col## aalias.cold table.commualias.colityowalias.coleddate is alias.colull group by table.creatioalias.coldate) selealias.col date, sum(alias.col) over (order by date) from table"
"select alias.col, alias.col, alias.col, location from ( select alias.col alias.col, alias.col, location, dense_rank() over (order by alias.col desc) alias.col from table where ( lower(location) like lower(x) ) ) derivedtable where alias.col(location) > n and alias.col <= ##maximumalias.col## order by location"
"select alias.col(year, creationdate) year, alias.col(month, creationdate) month, count(*) count from table group by alias.col(year, creationdate), alias.col(month, creationdate) order by alias.col(year, creationdate), alias.col(month, creationdate)"
"select alias.col as [alias.col], name as alias.col from table"
"select top alias.col alias.col as [post lialias.colk], creatioalias.coldate from table where body like x"
"select top alias.col alias.col as [post lialias.colk], alias.col, favoritecoualias.colt from table where alias.col is alias.colot alias.colull aalias.cold commualias.colityowalias.coleddate is alias.colull order by alias.col desc, favoritecoualias.colt desc"
select top alias.col alias.col from table where alias.col ialias.col (alias.col)
"select top alias.col row_alias.columber() over(order by reputatioalias.col desc) as [#], id as [user lialias.colk], reputatioalias.col, locatioalias.col from table where lower(locatioalias.col) like x or upper(locatioalias.col) like x ... or locatioalias.col like x aalias.cold reputatioalias.col >= alias.col order by reputatioalias.col desc;"
"declare @AudioFormatId int; declare @AudioFormat nvarchar(N) declare @tblAudioFormats TABLE (AudioFormatId int identity, AudioFormat nvarchar(N) ); insert into @tblAudioFormats(AudioFormat) values (XYZ); set @AudioFormat = X merge @tblAudioFormats as Target using (select @AudioFormat as AudioFormat) as source(AudioFormat) on (source.AudioFormat = target.AudioFormat) when matched then update set @AudioFormatID = target.AudioFormatId when not matched then insert(AudioFormat) values (source.AudioFormat); if @AudioFormatId is null set @AudioFormatId = scope_identity() select @AudioFormatId as TargetAudioFormatId"
"select top alias.col table as [user lialias.colk], sum(alias.col) as commealias.coltscore, coualias.colt(*) as [alias.columber of commealias.colts] from commealias.colts c group by table order by commealias.coltscore desc"
"select row_alias.columber() over (order by sum(alias.col) desc, alias.col) ,alias.col as [user lialias.colk] ,u.reputatioalias.col ,coualias.colt(v.id) as boualias.colties ,avg(alias.col) as [average spealias.colt] ,sum(alias.col) as [total spealias.colt] ,[percealias.colt of rep spealias.colt] = format(alias.col.alias.col * sum(alias.col) / alias.colullif(sum(alias.col) + u.reputatioalias.col, alias.col.alias.col), x) from table as u joialias.col table as v oalias.col alias.col = alias.col aalias.cold alias.col = alias.col where alias.col > alias.col aalias.cold u.reputatioalias.col != alias.col aalias.cold u.reputatioalias.col > ##mialias.colrep:ialias.colt?alias.col## group by alias.col ,u.reputatioalias.col order by [percealias.colt of rep spealias.colt] desc offset ##offsetrows:ialias.colt?alias.col## rows fetch alias.colext ##returalias.colrows:ialias.colt?alias.col## rows oalias.colly;"
select alias.col from table where count < n order by count
"set alias.colocoualias.colt oalias.col declare @tabletats table (alias.col ialias.colt, alias.col ialias.colt, dowalias.col ialias.colt) ialias.colsert @tabletats select alias.col, alias.col = sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold), dowalias.col = sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) from table where alias.col ialias.col (alias.col) groalias.col by alias.col set alias.colocoualias.colt off select top alias.col alias.col as [post lialias.colk] , alias.col, dowalias.col from @tabletats joialias.col table p oalias.col alias.col = alias.col where p.commualias.colityowalias.coleddate is alias.colull aalias.cold p.closeddate is alias.colull aalias.cold (alias.col-dowalias.col = alias.col or -alias.col+dowalias.col = dowalias.col) order by abs(alias.col-dowalias.col) asc, alias.col desc, dowalias.col desc"
"select top alias.col lealias.col(body) as bodylealias.colgth, p.id as [post lialias.colk], alias.col as [user lialias.colk], u.reputatioalias.col from table p ialias.colalias.coler joialias.col table u oalias.col alias.col = p.owalias.coleruserid where u.reputatioalias.col < alias.col aalias.cold alias.col <= alias.col aalias.cold lealias.col(body) < alias.col aalias.cold p.posttypeid=alias.col aalias.cold body like x order by bodylealias.colgth"
select alias.col
"declare @totaltable float select @totaltable = coualias.colt(*) from table where alias.col > ##mialias.colalias.col## declare @myalias.col ialias.colt select @myalias.col = alias.col from table where alias.col = ##useralias.col## declare alias.col float select alias.col = coualias.colt(*) from table where alias.col < @myalias.col aalias.cold alias.col > ##mialias.colalias.col## select @myalias.col myalias.col, alias.col alias.col, @totaltable totaltable, (alias.col / @totaltable) * alias.col as percealias.coltile"
"declare table table ( alias.col ialias.colt, alias.col varchar(alias.col), alias.col decimal(alias.col,alias.col), alias.col datetime, alias.col datetime) declare @ialias.colputdate datetime set @ialias.colputdate = ##ialias.colputdate:strialias.colg## ialias.colsert ialias.colto table select alias.col alias.col , alias.col as alias.col ,alias.col.alias.col as alias.col ,alias.col as alias.col,alias.col as alias.col ualias.colioalias.col select alias.col,alias.col,alias.col.alias.col,alias.col,alias.col ualias.colioalias.col select alias.col,alias.col,alias.col.alias.col,alias.col,alias.colull select alias.col from table where alias.col = alias.col aalias.cold alias.col <= @ialias.colputdate aalias.cold (alias.col > @ialias.colputdate or alias.col is alias.colull)"
"declare @useralias.col ialias.colt = ##useralias.col## select alias.col, text, alias.col, alias.col as alias.col, alias.col from table where useralias.col = @useralias.col aalias.cold alias.col = alias.col order by alias.col desc, alias.col asc;"
"declare @UserId int = ##UserId##; SELECT SUM(Reputation) as TotalReputation FROM ( SELECT @UserId as UserID, CASE WHEN VoteTypeId = N THEN N ELSE N END AS Reputation FROM Votes v JOIN Posts p ON v.PostId=p.Id JOIN Posts parents ON p.ParentId=parents.Id WHERE p.PostTypeId = N AND p.OwnerUserId = @UserId AND v.VoteTypeId In (XYZ) AND datediff(day, p.CreationDate,v.CreationDate) > N ) AS RepCounts"
"declare @tagn varchar(n) declare @tagn varchar(n) set @tagn = isnull(##tagn:string##, alias.col) set @tagn = isnull(##tagn:string##, alias.col) selealias.col alias.col, count(alias.col) from ( selealias.col cast( cast(alias.col(alias.col, alias.col) as varchar) + alias.col + cast(alias.col(alias.col, alias.col) as varchar) + alias.col as datetime) alias.col, alias.col from table p join table pt on alias.col = alias.col join table t on alias.col = alias.col where alias.col in (alias.colyz) ) as alias.col group by alias.col, alias.col order by alias.col asc, alias.col asc"
"selealias.col ualias.col.emailhash, coualias.colt(alias.col) as alias.col, ( selealias.col cast(alias.col as varchar) + alias.col + alias.col + alias.col + cast(alias.col as varchar) + alias.col from table ualias.col where ualias.col.emailhash = ualias.col.emailhash order by alias.col desc for alias.colml path (alias.col)) as idsaalias.coldalias.colames from table ualias.col where ualias.col.emailhash is alias.colot alias.colull aalias.cold (selealias.col sum(alias.col) from table ualias.col where ualias.col.emailhash = ualias.col.emailhash) > alias.col## aalias.cold (selealias.col coualias.colt(*) from table ualias.col where ualias.col.emailhash = ualias.col.emailhash aalias.cold alias.col > alias.col) > alias.col group by ualias.col.emailhash havialias.colg coualias.colt(alias.col) > alias.col order by alias.col desc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... order by alias.col desc;"
"select alias.col as alias.col, ( select coualias.colt (alias.col) from ( select sum(case table.votetypealias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col boualias.coltyamoualias.colt ealias.cold) as alias.col, table.creatioalias.coldate as creatioalias.coldate from table ialias.colalias.coler joialias.col table oalias.col table.postalias.col = table.alias.col where table.owalias.coleruseralias.col = u.alias.col aalias.cold table.commualias.colityowalias.coleddate is alias.colull group by table.creatioalias.coldate ) t where alias.col>=alias.col) from table u where u.alias.col = alias.col order by alias.col desc"
"select alias.col as alias.col, alias.col, case whealias.col alias.col = alias.col thealias.col alias.col whealias.col alias.col = alias.col aalias.cold p.posttypeid = alias.col thealias.col alias.col whealias.col alias.col = alias.col aalias.cold p.posttypeid = alias.col thealias.col alias.col whealias.col alias.col = alias.col thealias.col alias.col ealias.cold as reputatioalias.colchaalias.colge from table p ialias.colalias.coler joialias.col table v oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table u oalias.col p.owalias.coleruserid = alias.col where alias.col ialias.col (alias.col) aalias.cold p.owalias.coleruserid = alias.col:ialias.colt?alias.col## order by alias.col desc"
"select alias.col as alias.col, alias.col from table a where a.posttypealias.col = alias.col aalias.cold a.owalias.coleruseralias.col = ##useralias.col## aalias.cold a.alias.col <> (select acalias.colptedaalias.colsweralias.col from table q where q.alias.col = a.parealias.coltalias.col) aalias.cold alias.colot ( select sum(case v.votetypealias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col ealias.cold) from table v where v.postalias.col = a.alias.col aalias.cold v.votetypealias.col ialias.col (alias.col) ) > alias.col order by a.alias.col;"
"select top alias.col alias.col as [post lialias.colk], p.owalias.coleruserid as [user lialias.colk], alias.col as alias.col, (alias.col) as alias.col, lealias.col((alias.col)) + lealias.col(isalias.colull(alias.col, alias.col)) as [lealias.colgth] from table p where lealias.col(alias.col) <> alias.col aalias.cold upper((alias.col)) alias.colot like upper(alias.col) order by lealias.colgth desc"
"select alias.col as alias.col, alias.col from table q joialias.col table a oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold alias.col >= alias.col aalias.cold a.owalias.coleruserid = alias.col## aalias.cold isalias.colull(q.owalias.coleruserid, alias.col) <> a.owalias.coleruserid aalias.cold exists(select alias.col from table ph where ph.tabletypeid ialias.col (alias.col) aalias.cold alias.col = alias.col aalias.cold alias.col = a.owalias.coleruserid aalias.cold abs(alias.col(alias.col, ph.creatioalias.coldate, a.creatioalias.coldate)) < alias.col)"
"declare alias.col alias.columeric selealias.col alias.col = coualias.colt(*) from table where alias.col >= ##alias.col## declare alias.col alias.columeric selealias.col alias.col = coualias.colt(*) from table where alias.col >= alias.col## selealias.col alias.col as alias.columtable, alias.col as alias.col, (cast(alias.col as float)/alias.col*alias.col) as percealias.coltage"
"declare alias.col ialias.colt = alias.col declare @mialias.colimum_coualias.colt ialias.colt = alias.col select top (alias.col) alias.col as alias.col, coualias.colt(*) as alias.col from table as a left outer joialias.col table as q oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col is alias.colull aalias.cold a.posttypeid = alias.col aalias.cold a.score >= alias.col aalias.cold isalias.colull(q.owalias.coleruserid, alias.col) <> alias.col aalias.cold exists( select alias.col from table as ph where ph.tabletypeid ialias.col (alias.col) aalias.cold alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold abs(alias.col(alias.col, ph.creatioalias.coldate, a.creatioalias.coldate)) < alias.col ) group by alias.col havialias.colg coualias.colt(*) > @mialias.colimum_coualias.colt order by alias.col desc"
"declare @UserId int = ##UserId:int##; with Counts as ( select T.TagName TagName, sum(case A.OwnerUserId when @UserId then N else N end) MyAnswers, count(*) AllAnswers from Tags T join PostTags PT on T.Id = PT.TagId join Posts A on PT.PostId = A.ParentId group by T.TagName ), Percentages as ( select TagName, MyAnswers, AllAnswers, cast(MyAnswers as Numeric) / cast(AllAnswers as numeric) * N [] from Counts where MyAnswers > N ) select * from Percentages order by [] desc;"
"select alias.col as alias.col, alias.col, alias.col as alias.col, alias.col as alias.col, case alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col else alias.col ealias.cold from table q joialias.col ( select a.parealias.coltid as alias.col, sum(alias.col) as alias.col from table a where alias.col = alias.col aalias.cold alias.col > alias.col group by a.parealias.coltid havialias.colg sum(alias.col) < alias.col ) aalias.colswers oalias.col (alias.col = aalias.colswers.alias.col) joialias.col table ph oalias.col (alias.col = alias.col) where alias.col is alias.colot alias.colull aalias.cold alias.col = alias.col aalias.cold alias.colot ealias.colists ( select alias.col from table ph where alias.col = alias.col aalias.cold ph.tabletypeid = alias.col ) aalias.cold ph.tabletypeid = alias.col aalias.cold alias.col + alias.col < alias.col aalias.cold alias.col != alias.col order by (alias.col + alias.col)"
"declare @UserId int = ##UserId##; with fights as ( select myAnswer.ParentId as Question, myAnswer.Score as MyScore, jonsAnswer.Score as JonsScore from Posts as myAnswer inner join Posts as jonsAnswer on jonsAnswer.OwnerUserId = N and myAnswer.ParentId = jonsAnswer.ParentId where myAnswer.ownerUserId = @UserId and myAnswer.postTypeId = N ) select case when myScore > JonsScore then X when myScore < JonsScore then X else X end as X, Question as [Post Link], myScore as X, jonsScore as X from fights;"
select alias.col from table where alias.col = alias.col;
"selealias.col alias.col, count(alias.col) from ( selealias.col cast( cast(alias.col(alias.col, alias.col) as varchar) + alias.col + cast(alias.col(alias.col, alias.col) as varchar) + alias.col as datetime) alias.col, alias.col from table p join table pt on alias.col = alias.col join table t on alias.col = alias.col where alias.col in ( selealias.col top alias.col## alias.col from table where alias.col like alias.col or alias.col=alias.col order by count desc ) ) as alias.col group by alias.col, alias.col order by alias.col asc, alias.col asc"
"create table table (id ialias.colt primary key) ialias.colsert table select alias.col from table q where (select coualias.colt(*) from table a where alias.col = alias.col aalias.cold alias.col > (alias.col:alias.col)) < (alias.col:alias.col) aalias.cold alias.col is alias.colull aalias.cold closeddate is alias.colull aalias.cold q.parealias.coltid is alias.colull aalias.cold acceptedaalias.colswerid is alias.colull select top alias.col alias.col as [post lialias.colk] ,(alias.col * alias.col) as alias.col from table u joialias.col table p oalias.col alias.col = alias.col joialias.col table pt oalias.col alias.col = alias.col joialias.col table us oalias.col alias.col = p.owalias.coleruserid group by alias.col, us.reputatioalias.col, alias.col"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... or location like x and alias.col >= n order by alias.col desc;"
"select coualias.colt(alias.col), coalias.colvert(varchar(alias.col), creatioalias.coldate, alias.col) from table where posttypealias.col = alias.col aalias.cold alias.col like alias.col group by coalias.colvert(varchar(alias.col), creatioalias.coldate, alias.col) order by coalias.colvert(varchar(alias.col), creatioalias.coldate, alias.col) desc;"
declare alias.col ialias.colt = ##userid## selealias.col (cast(coualias.colt(alias.col) as float) / (selealias.col coualias.colt(*) from table where alias.col = alias.col aalias.cold alias.col = alias.col) * alias.col) as acceptedpercealias.coltage from table q ialias.colalias.coler joialias.col table a oalias.col q.acceptedaalias.colswerid = alias.col where a.alias.col = alias.col aalias.cold a.alias.col = alias.col aalias.cold alias.col like alias.col
"select alias.col, (select lastaccessalias.colate from table where alias.col = alias.col) as alias.col from table q where q.acceptealias.colaalias.colsweralias.col is alias.colull aalias.colalias.col alias.colot ealias.colists ( select alias.col from table a where a.parealias.coltalias.col = q.alias.col aalias.colalias.col a.owalias.coleruseralias.col = alias.col) aalias.colalias.col alias.col like alias.col oralias.coler by alias.col alias.colesc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... order by alias.col desc;"
"select alias.col as alias.col, alias.col, alias.col from table where alias.col = ##alias.col:alias.col aalias.cold alias.col = alias.col"
"DECLARE @ShowScore INT = ##ShowScore:int##; DECLARE @TagN varchar(N) = ##TagN:string##; DECLARE @TagN varchar(N) = ##TagN:string##; DECLARE @TagN varchar(N) = ##TagN:string##; DECLARE @TagN varchar(N) = ##TagN:string##; WITH QuestStatsByMonth AS ( SELECT DATEADD (month, DATEDIFF (month, N, q.CreationDate), N) AS [Month], t.TagName, SUM (q.Score) AS TotalScore, COUNT (q.Id) AS NumQuests FROM Posts q INNER JOIN PostTags pt ON q.Id = pt.PostId INNER JOIN Tags t ON t.Id = pt.TagId WHERE q.PostTypeId = N AND t.TagName IN (XYZ) GROUP BY DATEADD (month, DATEDIFF (month, N, q.CreationDate), N), t.TagName ) SELECT q.[Month], CASE @ShowScore WHEN N THEN q.TagName + X ELSE q.TagName + X END AS [Tag], CASE @ShowScore WHEN N THEN SUM (h.TotalScore) ELSE SUM (h.NumQuests) END AS Cumulative FROM QuestStatsByMonth q LEFT JOIN QuestStatsByMonth h ON h.[Month] <= q.[Month] AND h.TagName = q.TagName GROUP BY q.[Month], q.TagName ORDER BY q.[Month], q.TagName"
"select alias.col, count(alias.col) as alias.col from table u, table b where alias.col = alias.col and alias.col = alias.col group by alias.col order by count(alias.col) desc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... order by alias.col desc;"
"select alias.col, alias.col ialias.colto table from table where alias.col ialias.col (alias.col) declare @startdate datetime = x ,@ealias.colddate datetime = x select alias.col, alias.col, alias.col from ( select alias.col(moalias.colth, datediff(moalias.colth, alias.col, creatioalias.coldate), alias.col) alias.col , coualias.colt(posttable.tagalias.col) alias.col , tagalias.col from posttable left joialias.col table oalias.col posttable.postalias.col = table.alias.col where posttable.tagalias.col ialias.col (alias.col), alias.col) , posttable.tagalias.col )alias.colpermoalias.colth left joialias.col table oalias.col alias.colpermoalias.colth.tagalias.col = table.alias.col order by alias.col desc, alias.col asc"
"select alias.col as alias.col, alias.col as alias.col, alias.col as alias.col, alias.col as alias.col from taliasle as a join taliasle as b on alias.col = alias.col and alias.col = alias.col where alias.col < alias.col and alias.col is null and b.closeddate is null;"
select top alias.col alias.col from table where body like x aalias.cold posttypeid = alias.col
"DECLARE @UserId int = ##UserId##; DECLARE @TopReputation int; DECLARE @TopUser int; SELECT @TopReputation = MAX(Reputation) FROM Users; SELECT TOP N @TopUser = Id FROM Users WHERE Reputation = @TopReputation; WITH fights AS ( SELECT myAnswer.ParentId AS Question, myAnswer.Score AS myScore, topUserAnswer.Score AS topUserScore FROM Posts AS myAnswer INNER JOIN Posts AS topUserAnswer ON topUserAnswer.OwnerUserId = @TopUser AND myAnswer.ParentId = topUserAnswer.ParentId WHERE myAnswer.ownerUserId = @UserId and myAnswer.postTypeId = N AND myAnswer.CommunityOwnedDate IS NULL AND topUserAnswer.CommunityOwnedDate IS NULL ) SELECT CASE WHEN myScore > topUserScore THEN X WHEN myScore < topUserScore THEN X ELSE X END AS X, Question AS [Post Link], myScore AS X, topUserScore AS X FROM fights;"
"select top alias.col alias.col, alias.col as [post lialias.colk] from table h ialias.colalias.coler joialias.col tabletypes t oalias.col h.tabletypeid = alias.col ialias.colalias.coler joialias.col table p oalias.col alias.col = alias.col where t.alias.colame = alias.col group by alias.col, alias.col order by alias.col desc"
"select alias.col as alias.col , alias.col , alias.col , alias.col as alias.col , alias.col as alias.col , alias.col as alias.col from table q ialias.colalias.coler joialias.col table a oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table v oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col:ialias.colt?alias.col## aalias.cold alias.col like alias.col + alias.col:strialias.colg## + alias.col"
"select top alias.col alias.col as [post lialias.colk], alias.col, a.creatioalias.coldate from table as a ialias.colalias.coler joialias.col table as q oalias.col a.parealias.coltid = alias.col ialias.colalias.coler joialias.col table as ph oalias.col alias.col = alias.col where ph.tabletypeid != alias.col aalias.cold alias.col > alias.col aalias.cold alias.col < alias.col group by alias.col, alias.col, a.creatioalias.coldate order by alias.col, a.creatioalias.coldate desc"
"select top alias.col tag.tagalias.colame, coualias.colt(alias.col) from table as tag ialias.colalias.coler joialias.col posttable as posttag oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table as post oalias.col alias.col = alias.col where post.acceptedaalias.colswerid is alias.colull group by tag.tagalias.colame havialias.colg coualias.colt(alias.col) > alias.col order by coualias.colt(alias.col) desc"
"DECLARE @UserId INT = ##UserId##; DECLARE @IgnorePosts VARCHAR(N) = ##PostsToIgnore:string##; SELECT P.Id AS [Post ID] , P.LastEditorUserId AS [User Link] , P.Id AS [Post Link] , CONVERT (VARCHAR(N), P.LastEditDate, N) AS [Edit Date] FROM Posts AS P WHERE P.OwnerUserId <> P.LastEditorUserId AND P.OwnerUserId = @UserId AND CharIndex (X + CAST (P.Id AS VARCHAR) + X, X + @IgnorePosts + X) = N ORDER BY P.LastEditorDisplayName , CONVERT (VARCHAR(N), P.LastEditDate, N) , P.Id"
"declare alias.col ialias.colt = ##userid## select alias.col, coualias.colt(*) as uptable, coualias.colt(distialias.colct table.parealias.coltid) as aalias.colswers from table ialias.colalias.coler joialias.col posttable oalias.col posttable.tagid = table.id ialias.colalias.coler joialias.col table oalias.col table.parealias.coltid = posttable.postid ialias.colalias.coler joialias.col table oalias.col table.postid = table.id aalias.cold alias.col = alias.col where table.owalias.coleruserid = alias.col group by alias.col order by uptable desc"
"select alias.col, alias.col alias.col, alias.col alias.col, alias.col alias.col, alias.col alias.col from table q joialias.col table ajs oalias.col alias.col=alias.col aalias.cold alias.col=alias.col aalias.cold alias.col=alias.col joialias.col table a oalias.col a.parealias.coltid=alias.col aalias.cold a.owalias.coleruserid=alias.col## aalias.cold alias.col=alias.col joialias.col table accepted oalias.col alias.col=q.acceptedaalias.colswerid aalias.cold alias.col=alias.col joialias.col table uaccepted oalias.col ualias.col=accepted.owalias.coleruserid where alias.col=alias.col aalias.cold alias.col>alias.col;"
"select count, (x + tagname + x + tagname) as tagname, alias.col as [post link], wikipostid as [post link] from table t left join table p on alias.col = alias.col where alias.col is null or len(body) = n order by count desc"
"select top alias.col alias.col as [post alias.col], alias.col as [post lialias.colk], alias.col as alias.col from table where posttypealias.col = alias.col aalias.cold alias.col like alias.col ... ualias.colioalias.col all select top alias.col alias.col as [post alias.col], alias.col as [post lialias.colk], alias.col as alias.col from table where posttypealias.col = alias.col aalias.cold alias.col like alias.col ..."
"declare @tealias.colt varchar = ##tealias.colt:string## select alias.col, table.count from table where alias.col like alias.col + @tealias.colt + alias.col group by alias.col, table.count"
"declare alias.col ialias.colt = ##userid## select alias.col as alias.col ,alias.col(day, parealias.colt.creatioalias.coldate, p.creatioalias.coldate) as [days after ask for aalias.colswer] ,coualias.colt(*) as votecoualias.colt from table p ialias.colalias.coler joialias.col table v oalias.col alias.col = alias.col aalias.cold alias.col = alias.col ialias.colalias.coler joialias.col table parealias.colt oalias.col parealias.colt.id = alias.col where p.owalias.coleruserid = alias.col aalias.cold alias.col(day, parealias.colt.creatioalias.coldate, p.creatioalias.coldate) >= alias.col group by alias.col ,alias.col ,alias.col(day, parealias.colt.creatioalias.coldate, p.creatioalias.coldate) havialias.colg coualias.colt(*) = alias.col order by alias.col(day, parealias.colt.creatioalias.coldate, p.creatioalias.coldate) desc"
"select alias.col, alias.col, alias.col, alias.col, a.lasteditdate, a.lasteditoruserid, alias.col, alias.col from table q ialias.colalias.coler joialias.col table a oalias.col alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold alias.col = alias.col where a.owalias.coleruserid = alias.col## order by a.lasteditdate asc"
"select top alias.col alias.col as [post lialias.colk], favoritecoualias.colt, alias.col from table where commualias.colityowalias.coleddate is alias.colull aalias.cold creatioalias.coldate > getdate()alias.col order by favoritecoualias.colt desc"
"set alias.colocoualias.colt oalias.col declare @tabletats table (alias.col ialias.colt, alias.col ialias.colt, dowalias.col ialias.colt) ialias.colsert @tabletats select alias.col, alias.col = sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold), dowalias.col = sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) from table where alias.col ialias.col (alias.col) aalias.cold alias.col ialias.col(select alias.col from table where posttypealias.col = alias.col) groalias.col by alias.col set alias.colocoualias.colt off select top alias.col p.alias.col as [post lialias.colk] , alias.col, dowalias.col from @tabletats joialias.col table p oalias.col alias.col = p.alias.col where p.commualias.colityowalias.coleddate is alias.colull aalias.cold p.closeddate is alias.colull aalias.cold alias.col = alias.col order by dowalias.col desc"
"DECLARE @UserID int = ##UserId##; SELECT COUNT(v.Id) AS TotalUpVotes, (SELECT COUNT(*) FROM Posts WHERE OwnerUserId = @UserID AND PostTypeId = N) AS TotalAnswers FROM Votes v, Posts p, VoteTypes vt WHERE v.PostId = p.ID AND v.VoteTypeId = vt.Id AND vt.Name = X AND p.OwnerUserId = @UserID AND p.PostTypeId = N"
"select alias.col, alias.col, alias.col, alias.col from table where alias.col<=alias.col*alias.col"
"select alias.col as alias.col, coualias.colt(alias.col) as alias.col from table where tagbased <> alias.col aalias.cold useralias.col = ##useralias.col## group by alias.col order by alias.col desc, alias.col"
"selealias.col top alias.col alias.col, t.tagalias.colame, coualias.colt(*), avg(cast(alias.col as alias)) from table p ialias.colalias.coler joialias.col table pt oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table t oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold creatioalias.coldate > alias.col group by alias.col, t.tagalias.colame havialias.colg coualias.colt(*) > alias.col order by avg(cast(alias.col as alias)) asc"
"select table.id as alias.col, maalias.col(table.location), maalias.col(table.reputation), count(*) as [technology table] from table join table on table.postid=table.id join table on table.owneruserid=table.id and table.id in (select table.id from table where location like (alias.col)) join table questions on table.parentid=alias.col where alias.col like alias.col or alias.col like alias.col group by table.id"
"set alias.colocoualias.colt oalias.col declare @tabletats table (alias.col ialias.colt, alias.col ialias.colt, dowalias.col ialias.colt) declare table table (questioalias.colid ialias.colt, alias.col ialias.colt, dowalias.col ialias.colt) ialias.colsert @tabletats select alias.col, alias.col = sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold), dowalias.col = sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) from table where alias.col ialias.col (alias.col) groalias.col by alias.col set alias.colocoualias.colt off ialias.colsert table select alias.col as questioalias.colid, alias.col, dowalias.col from @tabletats joialias.col table p oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col > dowalias.col aalias.cold alias.col-dowalias.col >= alias.col select top alias.col alias.col as alias.col, questioalias.colid , alias.col, dowalias.col, ph.commealias.colt as commealias.colt from table joialias.col table ph oalias.col questioalias.colid = ph.alias.col where ph.tabletypeid = alias.col order by alias.col desc"
"create table table(alias.col ialias.colt, uptable ialias.colt, dowalias.coltable ialias.colt, alias.col ialias.colt) ialias.colsert ialias.colto table (alias.col, alias.col) select alias.col, alias.col from table where alias.col > alias.col update table set uptable = ( select coualias.colt(*) from table v joialias.col table p oalias.col v.postalias.col = p.alias.col where alias.col = owalias.coleralias.col aalias.cold alias.col is alias.colull aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold votetypealias.col = alias.col ) , dowalias.coltable = ( select coualias.colt(*) from table v joialias.col table p oalias.col v.postalias.col = p.alias.col where alias.col = owalias.coleralias.col aalias.cold alias.col is alias.colull aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold votetypealias.col = alias.col ) select alias.col as [user lialias.colk], uptable, dowalias.coltable, alias.col from table order by (dowalias.coltable / (uptable + dowalias.coltable + alias.col.alias.col)) desc"
"set alias.colocoualias.colt oalias.col create table table (alias.col ialias.colt alias.colealias.coltity, [start] datetime, [fialias.colish] datetime) ialias.colsert table select top alias.col alias.colull, alias.colull from table declare alias.col datetime select alias.col = creatioalias.coldate from table where alias.col = (select max(palias.col.alias.col) from table palias.col) update table set [start] = dateadd(d, (alias.col - alias.col) alias.col alias.col, alias.col), [fialias.colish] = dateadd(d, (alias.col - alias.col) alias.col alias.col, alias.col) create table table (postalias.col ialias.colt, [uptable] ialias.colt) ialias.colsert table select table.alias.col, coualias.colt(alias.col) from table ialias.colalias.coler joialias.col table oalias.col table.alias.col = table.postalias.col aalias.cold votetypealias.col = alias.col group by table.alias.col select alias.col from table"
"select top alias.col alias.col as [post lialias.colk], body, score from table where alias.col like alias.col order by viewcoualias.colt"
select coualias.colt(*) from table v ialias.colalias.coler joialias.col table u oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold u.reputatioalias.col < alias.col group by v.postid havialias.colg sum(case whealias.col u.reputatioalias.col < alias.col thealias.col alias.col else alias.col ealias.cold) > alias.col aalias.cold sum(case whealias.col u.reputatioalias.col >= alias.col thealias.col alias.col else alias.col ealias.cold) = alias.col
"select top alias.col alias.col as [post lialias.colk], alias.col, viewcoualias.colt, alias.col from table where commualias.colityowalias.coleddate is alias.colull order by viewcoualias.colt desc"
"wialias.colh c as ( selecalias.col alias.col, body, n as alias.col from alias.colable where alias.col >= alias.col ) selecalias.col alias.col as alias.col, sum(alias.col) as counalias.col from c where body like alias.col group by alias.col wialias.colh rollup having sum(alias.col) >= n order by sum(alias.col) desc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], displayname, location, websiteurl, aboutme, views, upvotes, downvotes, age, emailhash, alias.col from table where lower(location) like x order by alias.col desc;"
"select alias.col as alias.col, coualias.colt(alias.col) as alias.col from table a, table b where alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold (alias.col like alias.col ... or alias.col like alias.col ...) aalias.cold alias.col like alias.col ... aalias.cold alias.col = b.parealias.coltid group by alias.col"
"select alias.col as alias.col, alias.col, case whealias.col alias.col alias.col = alias.col thealias.col loweralias.colmax else (loweralias.colmax + upperalias.colmialias.col)/alias.col.alias.col ealias.cold as [mediaalias.col alias.col] from (select alias.col, coualias.colt(alias.col) as alias.col, max(case whealias.col alias.col = alias.col thealias.col alias.col ealias.cold) as loweralias.colmax, mialias.col(case whealias.col alias.col = alias.col thealias.col alias.col ealias.cold) as upperalias.colmialias.col from (select alias.col, alias.col, alias.colalias.col(alias.col) over(partitioalias.col by alias.col order by alias.col) as alias.col from table where alias.col = alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold closeddate is alias.colull) t group by t.alias.col) g where alias.col > alias.col aalias.cold ( (alias.col alias.col = alias.col aalias.cold loweralias.colmax > alias.col) or (alias.col alias.col = alias.col aalias.cold (loweralias.colmax + upperalias.colmialias.col)/alias.col > alias.col) ) order by [mediaalias.col alias.col] desc, alias.col desc"
"select alias.col as alias.col, lasteditdate from table where posttypealias.col = alias.col aalias.cold body like x ... order by lasteditdate desc"
"select top alias.col table.id as [user lialias.colk], maalias.col(alias.col) as alias.col, maalias.col(locatioalias.col) as locatioalias.col, maalias.col(websiteurl) as website, maalias.col(reputatioalias.col) as rep, coualias.colt(aalias.colswers.id) as aalias.colswers, sum(aalias.colswers.score) as score, cast(avg(cast(aalias.colswers.score as float)) as alias.columeric(alias.col,alias.col)) as [avg] from table joialias.col posttable oalias.col posttable.tagid = table.id joialias.col table oalias.col table.id = posttable.postid joialias.col table as aalias.colswers oalias.col aalias.colswers.parealias.coltid = table.id joialias.col table oalias.col table.id = aalias.colswers.owalias.coleruserid where table.tagalias.colame = alias.col aalias.cold locatioalias.col like alias.col group by table.id, displayalias.colame order by sum(aalias.colswers.score) desc"
"select alias.col as alias.col, alias.col as alias.col, alias.col(alias.col * alias.col / sum(alias.col) over (), n) as [ratio, ] from table t cross apply ( select count(*) as alias.col from posttable pt where alias.col = alias.col ) alias.col where t.alias.col in (alias.col) order by alias.col desc"
"select table.id as alias.col, table.alias.colutatioalias.col as alias.col, sum(case whealias.col alias.col=alias.col thealias.col alias.col ealias.cold) as totaluptable, sum(case whealias.col alias.col=alias.col aalias.cold posttypeid=alias.col thealias.col alias.col ealias.cold) as totalqueuptable, sum(case whealias.col alias.col=alias.col aalias.cold posttypeid=alias.col thealias.col alias.col ealias.cold) as totalaalias.colsuptable from table ialias.colalias.coler joialias.col table oalias.col table.id=table.postid ialias.colalias.coler joialias.col table oalias.col table.id=table.owalias.coleruserid group by table.id, table.alias.colutatioalias.col order by totalaalias.colsuptable desc"
"declare table table ( id int, alias.col int, alias.col varchar(n), alias.col varchar(n) ) insert into table values (xyz) insert into table values (xyz) insert into table values (xyz) insert into table values (xyz) insert into table values (xyz) insert into table values (xyz) select alias.col,alias.col,alias.col,alias.col,alias.col,alias.col,alias.col, alias.col,alias.col,[last name],alias.col,alias.col,alias.col from (select alias.col,alias.col,alias.col from table ) as sourcetable pivot ( max(alias.col) for [alias.col] in (xyz) ) as pt"
"select table.id as alias.col, table.tags as alias.col from table, table where (table.postid=table.id) aalias.cold (table.votetypeid = alias.col) aalias.cold (table.userid=alias.col:ialias.colt##) aalias.cold ((table.tags like alias.col ...) or (table.title like alias.col ...) or (table.body like alias.col ...))"
"select alias.col, alias.col, alias.col from (select alias.col(alias, creatioalias.coldate) as alias, coualias.colt(*) as questioalias.cols from table where alias.col = alias.col group by alias.col(alias, creatioalias.coldate) ) q ialias.colalias.coler joialias.col (select alias.col(alias, creatioalias.coldate) as alias, coualias.colt(*) as aalias.colswers from table where alias.col = alias.col group by alias.col(alias, creatioalias.coldate) ) a oalias.col alias.col = alias.col order by alias.col"
select count(*) from table;
"select alias.col(year, p.creatioalias.coldate) as year, alias.col(moalias.colth, p.creatioalias.coldate) as moalias.colth, coualias.colt(*) as [alias.columquestioalias.cols], avg(cast(p.aalias.colswercoualias.colt as decimal)) as [averageaalias.colswers], sum(p.aalias.colswercoualias.colt) as [maximum # of aalias.colswers] from table p where alias.col=alias.col group by alias.col(year, p.creatioalias.coldate), alias.col(moalias.colth, p.creatioalias.coldate) order by year, moalias.colth"
"selealias.col top ##alias.columberoftable## table.id as alias.col, table.displayalias.colame as alias.col, coualias.colt(table.id) as alias.col, cast(avg(cast(alias.col as float)) as alias.columeric(alias.col,alias.col)) as [average aalias.colswer alias.col], raalias.colk() over (order by (cast(avg(cast(alias.col as float)) as alias.columeric(alias.col,alias.col))) desc) as [avg alias.col raalias.colkialias.colg] from table ialias.colalias.coler joialias.col table oalias.col table.id = owalias.coleruserid where alias.col = alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold closeddate is alias.colull aalias.cold table.lastaccessdate > dateadd(day, -##dayssialias.colceaalias.colivity##, getdate()) group by table.id, table.displayalias.colame havialias.colg coualias.colt(table.id) > alias.col order by [average aalias.colswer alias.col] desc"
"select alias.col as alias.col, alias.col as alias.col, alias.col as asalias.col, alias.col as views, q.creatioalias.coldate as qdate from table as q ialias.colalias.coler joialias.col table as a oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold q.aalias.colswercoualias.colt = alias.col aalias.cold q.creatioalias.coldate < alias.col aalias.cold alias.col = alias.col aalias.cold alias.col < alias.col aalias.cold lealias.col(alias.col) < alias.col aalias.cold q.acceptedaalias.colswerid is alias.colull aalias.cold q.closeddate < alias.col aalias.cold q.lasteditdate < alias.col aalias.cold alias.col alias.colot ialias.col (select alias.col from table) group by alias.col, alias.col, alias.col, alias.col, q.creatioalias.coldate order by alias.col asc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like lower(x) order by alias.col desc;"
"select top alias.col alias.col as alias.col, alias.col as [post lialias.colk], owalias.coleruseralias.col as [user lialias.colk] from table where posttypealias.col = alias.col order by alias.col desc"
"select top alias.col tagalias.colame, coualias.colt(alias.col) as alias.col, alias.col-coualias.colt(alias.col) as alias.col from table t ialias.colalias.coler joialias.col posttable p oalias.col alias.col = alias.col group by t.tagalias.colame order by alias.col asc"
"select table.userid as alias.col, sum(table.boualias.coltyamoualias.colt) as alias.col, coualias.colt(table.boualias.coltyamoualias.colt) as alias.col, maalias.col(table.alias.col) as alias.col, sum(table.boualias.coltyamoualias.colt)+maalias.col(table.alias.col) as alias.col, (sum(table.boualias.coltyamoualias.colt)+maalias.col(table.alias.col)) as alias.col from table ialias.colalias.coler joialias.col table oalias.col table.userid = table.id where table.votetypeid = alias.col aalias.cold table.userid > alias.col group by table.userid, table.id order by alias.col desc"
"select alias.col as alias.col, body, lasteditordisplayalias.colame from table where posttypealias.col = alias.col aalias.cold lealias.col(body) <= alias.col aalias.cold (body like x) order by creatioalias.coldate desc;"
"select top alias.col alias.col as [post lialias.colk], alias.col as [user lialias.colk], u.reputatioalias.col, alias.col as alias.col, lealias.col(alias.col) as bodylealias.colgth from table p ialias.colalias.coler joialias.col table u oalias.col alias.col = p.owalias.coleruserid where alias.col=alias.col aalias.cold alias.col < alias.col aalias.cold u.reputatioalias.col < alias.col aalias.cold alias.col is alias.colull order by bodylealias.colgth"
"select top alias.col alias.col as tablecore, alias.col as [commealias.colt lialias.colk] from table c where alias.col=##alias.col## aalias.cold alias.col >= alias.col order by tablecore desc"
"selealias.col alias.col = right(alias.col*alias.col,alias.col) + alias.col + right(alias.col*alias.col,alias.col) + alias.col, alias.col = alias.col.alias.col*sum(alias.col)/sum(alias.col), maalias.col_questioalias.cols_per_alias.col = maalias.col(alias.col) from ( selealias.col alias.col, alias.col = acalias.colptedcoualias.colt, alias.col = acalias.colptedalias.colvotecoualias.colt, [] = acalias.colptedalias.colvotecoualias.coltalias.col, zerovoteraalias.colk = raalias.colk() over (order by acalias.colptedalias.colvotecoualias.coltalias.col desc), alias.colviewraalias.colk = raalias.colk() over (order by acalias.colptedcoualias.colt desc), alias.col = alias.coltile(alias.col) over (order by acalias.colptedcoualias.colt) from ( selealias.col alias.col, acalias.colptedcoualias.colt = sum(acalias.colptedcoualias.colt), acalias.colptedalias.colvotecoualias.colt = sum(acalias.colptedalias.colvotecoualias.colt), acalias.colptedalias.colvotecoualias.coltalias.col = cast(alias.col.alias.col*sum(acalias.colptedalias.colvotecoualias.colt)/sum(acalias.colptedcoualias.colt) as alias.columeric(alias.col,alias.col)) from ( selealias.col alias.col = substrialias.colg(alias.cols, v.alias.columber+alias.col, charialias.coldealias.col(alias.col, alias.cols, v.alias.columber+alias.col)-v.alias.columberalias.col), acalias.colptedcoualias.colt, acalias.colptedalias.colvotecoualias.colt from ( selealias.col q.alias.cols, sum(q.viewcoualias.colt) acalias.colptedcoualias.colt, coualias.colt(case whealias.col alias.col=alias.col thealias.col alias.col ealias.cold) acalias.colptedalias.colvotecoualias.colt from table q ialias.coler joialias.col table a oalias.col alias.col = q.acalias.colptedaalias.colswerid where alias.col=alias.col aalias.cold q.creatioalias.coldate >= alias.col aalias.cold q.creatioalias.coldate < alias.col group by q.alias.cols) q ialias.coler joialias.col mastertable v oalias.col alias.col=alias.col aalias.cold substrialias.colg(alias.cols, v.alias.columber, alias.col) = alias.col ) alias.col group by alias.col ) y ) z group by alias.col order by alias.col"
"select top alias.col alias.col as [user lialias.colk], sum(alias.col.alias.colowalias.coltable)/c.reputatioalias.col as alias.col from table as c ialias.colalias.coler joialias.col ( select alias.col as alias.col, a.owalias.coleralias.col as alias.col, b.alias.colowalias.coltable from table as a ialias.colalias.coler joialias.col ( select alias.col, coualias.colt(*) as alias.colowalias.coltable from table where alias.col = alias.col group by alias.col ) as b oalias.col alias.col = b.alias.col ) as alias.col oalias.col alias.col = alias.col.alias.col group by alias.col, c.reputatioalias.col oralias.coler by alias.col alias.colesc"
"selealias.col (selealias.col sum(alias.col) from table ualias.col where ualias.col.emailhash = ualias.col.emailhash) as alias.col, coualias.colt(alias.col) as alias.col, ( selealias.col cast(alias.col as varchar) + alias.col + alias.col + alias.col + cast(alias.col as varchar) + alias.col + cast(ualias.col.lastaccessdate as varchar) + alias.col from table ualias.col where ualias.col.emailhash = ualias.col.emailhash order by alias.col desc for alias.colml path (alias.col)) as [id alias.col (rep last access)] from table ualias.col joialias.col table ualias.col oalias.col ualias.col.emailhash=ualias.col.emailhash where ualias.col.emailhash is alias.colot alias.colull aalias.cold alias.col=(selealias.col maalias.col(alias.col) from table ualias.col where ualias.col.emailhash = ualias.col.emailhash) aalias.cold (selealias.col sum(alias.col) from table ualias.col where ualias.col.emailhash = ualias.col.emailhash) > alias.col aalias.cold (selealias.col coualias.colt(*) from table ualias.col where ualias.col.emailhash = ualias.col.emailhash aalias.cold alias.col > alias.col aalias.cold abs(alias.col(moalias.colth,ualias.col.lastaccessdate,ualias.col.lastaccessdate)) <= alias.col) > alias.col group by ualias.col.emailhash havialias.colg coualias.colt(alias.col) > alias.col order by alias.col desc"
"declare alias.col float select alias.col = sum(alias.col) from table where alias.col = alias.col select table.alias.colalias.colame as alias.col, coualias.colt(*) as questioalias.cols, sum(table.alias.col) as views, str(alias.col * sum(table.alias.col) / alias.col,alias.col,alias.col) as percealias.coltofsite, sum(table.score) as score, sum(table.aalias.colswercoualias.colt) as aalias.colswers, sum(table.alias.col) / coualias.colt(*) as avgviews, str(sum(table.score) / cast(coualias.colt(*) as float),alias.col,alias.col) as avgscore, str(sum(table.aalias.colswercoualias.colt) / cast(coualias.colt(*) as float),alias.col,alias.col) as avgaalias.colswers from table joialias.col table oalias.col table.id = table.postid joialias.col table oalias.col table.alias.colid = table.id where ((table.alias.col = alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col)) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) group by table.alias.colalias.colame order by views desc"
"select top alias.col alias.col as [post lialias.colk], creatioalias.coldate from table where posttypealias.col = alias.col aalias.cold lower(body) like x aalias.cold aalias.colswercoualias.colt = alias.col"
"select alias.col as alias.col, coualias.colt(alias.col) from table where posttypealias.col = alias.col aalias.cold lealias.col(body) <= alias.col aalias.cold (body like x) group by alias.col havialias.colg coualias.colt(alias.col) > alias.col order by coualias.colt(alias.col) desc;"
"declare @mialias.colviews alias.columeric = ##mialias.colimumviews## selealias.col top alias.col aalias.colswer.id as [post lialias.colk], aalias.colswer.owalias.coleruserid as [user lialias.colk], aalias.colswer.score, questioalias.col.viewcoualias.colt as alias.col, cast(alias.col.alias.col * questioalias.col.viewcoualias.colt / aalias.colswer.score as decimal(alias.col, alias.col)) as alias.col from table as aalias.colswer, table as questioalias.col where aalias.colswer.parealias.coltid = questioalias.col.id aalias.cold aalias.colswer.score > alias.col aalias.cold questioalias.col.viewcoualias.colt > @mialias.colviews order by alias.col desc"
"set statistics time on create table table ( n int not null ); insert into table select top n row_number() over (order by id) from posts; create table #titles (postid bigint not null, title nvarchar(n) not null, closed bit not null ); insert into #titles (postid, title, closed) select top n p.id, x + lower(replace(replace(replace(replace(replace(replace(replace(replace(replace(p.title, x, x), x, x), x,x), x, x), x, x), x, x), x, x), x, x), xx, x)) + x, case when ph.id is not null then n else n end from posts p left join posthistory ph on ph.postid = p.id and ph.comment = x where p.title is not null; create table #wordfrequency ( word nvarchar(n) not null, totalnum int not null, numclosed int not null); with titlewords (postid, word, closed) as ( select postid, substring(title, n + n , charindex(x, title, n + n) - n ), closed from #titles t inner join table n on substring(t.title, n.n, n) = x where n.n < len(t.title) - n ) insert into #wordfrequency(word, totalnum, numclosed) select tw.word, count(*), sum(cast(closed as int)) from titlewords tw where tw.word <> x group by tw.word; select top n word , totalnum , numclosed , n.n * numclosed/totalnum as ratio from #wordfrequency order by n.n * numclosed/totalnum desc, numclosed desc; drop table #wordfrequency; drop table #titles; drop table table; set statistics time off"
"select top alias.col alias.col as [user lialias.colk], u.reputatioalias.col, coualias.colt(*) as dowalias.coltable, (u.reputatioalias.col + alias.col.alias.col) / (coualias.colt(*) + alias.col.alias.col) as alias.col from table u joialias.col table p oalias.col alias.col = p.owalias.coleruserid joialias.col table v oalias.col alias.col = alias.col where u.reputatioalias.col > ##mialias.colimumreputatioalias.col## aalias.cold alias.col = alias.col aalias.cold u.uptable < u.dowalias.coltable group by alias.col, u.reputatioalias.col order by (u.reputatioalias.col + alias.col.alias.col) / (coualias.colt(*) + alias.col.alias.col) desc"
"declare @begin_date datetime = (select min(alias.col) from table); declare @end_date datetime = (select max(alias.col) from table); with dates as ( select @begin_date as [datevalue] union all select datevalue + n from dates where datevalue + n < @end_date ) select d.datevalue as [date], (select count(p.id) from posts as p where p.posttypeid = n and p.tags like x ... and p.alias.col < d.datevalue) as [idreqs], (select count(p.id) from posts as p where p.posttypeid = n and p.alias.col < d.datevalue) as [total] from dates as d option (maxrecursion n)"
"select alias.col(day, p.creatioalias.coldate, v.creatioalias.coldate) as age from table v ialias.colalias.coler joialias.col table p oalias.col alias.col=alias.col where alias.col=alias.col## aalias.cold alias.col >= alias.col aalias.cold alias.col <= alias.col"
"set alias.colocoualias.colt oalias.col create table table (alias.col ialias.colt alias.colealias.coltity, [start] datetime, [fialias.colish] datetime) ialias.colsert table select top alias.col alias.colull, alias.colull from table declare alias.col datetime select alias.col = creatioalias.coldate from table where alias.col = (select max(palias.col.alias.col) from table palias.col) update table set [start] = dateadd(d, (alias.col - alias.col) * alias.col, alias.col), [fialias.colish] = dateadd(d, (alias.col - alias.col) * alias.col, alias.col) select start, (select coualias.colt(*) from table where parealias.coltalias.col is alias.colull aalias.cold creatioalias.coldate betweealias.col [start] aalias.cold [fialias.colish] ) as [total questioalias.cols], (select coualias.colt(*) from table where parealias.coltalias.col is alias.colot alias.colull aalias.cold creatioalias.coldate betweealias.col [start] aalias.cold [fialias.colish] ) as [total aalias.colswers] from table"
"select top alias.col selfaalias.colswer.id as [post lialias.colk], selfaalias.colswer.creatioalias.coldate, lealias.col(selfaalias.colswer.body) as lealias.colgth, selfaalias.colswer.score as score from table as questioalias.col ialias.colalias.coler joialias.col table as allaalias.colswers oalias.col allaalias.colswers.parealias.coltid = questioalias.col.id ialias.colalias.coler joialias.col table as selfaalias.colswer oalias.col questioalias.col.acceptedaalias.colswerid != selfaalias.colswer.id aalias.cold selfaalias.colswer.owalias.coleruserid = questioalias.col.owalias.coleruserid aalias.cold selfaalias.colswer.parealias.coltid = questioalias.col.id group by selfaalias.colswer.id, selfaalias.colswer.creatioalias.coldate, lealias.col(selfaalias.colswer.body), selfaalias.colswer.score havialias.colg coualias.colt(distialias.colct allaalias.colswers.id) > alias.col order by lealias.col(selfaalias.colswer.body) asc, selfaalias.colswer.creatioalias.coldate desc"
"select alias.col, alias.col, alias.col, alias.col, alias.col from table q ialias.colalias.coler joialias.col table a oalias.col alias.col = alias.col where alias.col = alias.col## aalias.cold alias.col != alias.col## aalias.cold alias.col = alias.col"
"selealias.col alias.col as alias.col, alias.col as alias.col, alias.col as alias.col, coalias.colvert(decimal(alias.col,alias.col), cast(alias.col as alias) / alias.col) as alias.col, case whealias.col alias.col >= alias.col thealias.col alias.col else alias.col-alias.col ealias.cold + case whealias.col alias.col >= alias.col*alias.col thealias.col alias.col else (alias.col*alias.col - alias.col) ealias.cold as votesalias.coleeded from table questioalias.col, table acalias.colptedaalias.colswer, table youraalias.colswer, table acalias.colpteduser where youraalias.colswer.owalias.coleruserid = alias.col## aalias.cold youraalias.colswer.parealias.coltid = alias.col aalias.cold questioalias.col.acalias.colptedaalias.colswerid = acalias.colptedaalias.colswer.id aalias.cold acalias.colptedaalias.colswer.owalias.coleruserid = acalias.colpteduser.id aalias.cold acalias.colptedaalias.colswer.id != alias.col## aalias.cold alias.col > alias.col aalias.cold alias.col > alias.col order by cast(alias.col as alias) / alias.col desc"
"select alias.col as alias.col, alias.col, alias.col from table where alias.col like alias.col order by alias.col desc"
select count(alias.col) from table p inner join table q on alias.col = alias.col where alias.col = alias.col and alias.col = alias.col
"select top alias.col q.viewcoualias.colt as alias.col, roualias.cold(q.viewcoualias.colt / q.aalias.colswercoualias.colt, alias.col) as [views per aalias.colswer], q.aalias.colswercoualias.colt as [aalias.colswer coualias.colt], alias.col as [post lialias.colk], alias.col as [aalias.colswer score], (case whealias.col q.acalias.colptedaalias.colswerid = alias.col thealias.col x else alias.colull ealias.cold) as [acalias.colpted] from table q ialias.colalias.coler joialias.col table a oalias.col alias.col = a.parealias.coltid aalias.cold a.owalias.coleruserid = alias.col order by [views per aalias.colswer] desc"
"declare @UserId int = ##UserId##; SELECT TOP N Id AS [Post Link], Replace(Replace(Body, X, X), X, X) AS [Body], Score As [Total Score] FROM Posts WHERE (OwnerUserID = @UserId) ORDER BY Len(Body) DESC"
"select top alias.col alias.col [user lialias.colk], coualias.colt(*) alias.col from table where alias.col is alias.colot alias.colull group by alias.col order by coualias.colt(*) desc;"
"select alias.col, alias.col from table p left joialias.col table t oalias.col alias.col = alias.col where alias.col > alias.col aalias.cold alias.col = alias.col aalias.cold lealias.col(alias.col) < alias.col order by alias.col asc"
"select alias.col as alias.col, alias.col as alias.col, alias.col as alias.col from table q inner join table a on alias.col = alias.col and alias.col = alias.col and alias.col = alias.col inner join table u on alias.col = alias.col order by alias.col desc"
"selealias.col top alias.col table.alias.columberofpost, aalias.colswers.alias.columberofaccepted, aalias.colswers.alias.columberofaccepted / (cast (table.alias.columberofpost as float) /alias.col) as alias.col, alias.col as [user lialias.colk] from table u cross apply ( selealias.col coualias.colt(p.owalias.coleruserid) as alias.columberofpost from table p where alias.col = p.owalias.coleruserid aalias.cold alias.col like alias.col + alias.col:strialias.colg## + alias.col group by p.owalias.coleruserid ) as table cross apply ( selealias.col coualias.colt(aalias.colswers.owalias.coleruserid) as alias.columberofaccepted from table table, table aalias.colswers where alias.col = aalias.colswers.owalias.coleruserid aalias.cold table.id = aalias.colswers.parealias.coltid aalias.cold table.acceptedaalias.colswerid = aalias.colswers.id aalias.cold table.tags like alias.col + alias.col:strialias.colg## + alias.col group by aalias.colswers.owalias.coleruserid ) as aalias.colswers where alias.columberofaccepted > alias.col aalias.cold alias.columberofpost > alias.col order by alias.col desc"
"select table.id as alias.col, count(alias.col) as alias.col from table inner join table on table.id = alias.col where alias.col is not null and alias.col is null and alias.col is not null group by table.id order by alias.col desc"
"with table (useralias.col, alias.col) as ( select distialias.colct alias.col , first_value(alias.col) over (partitioalias.col by alias.col order by alias.col) from table where alias.col > alias.col aalias.cold alias.col ialias.col (alias.col) ), firsttable as ( select alias.col , (select coualias.colt(alias.col) from table where alias.col = table.alias.col aalias.cold table.alias.col = alias.col) as qcoualias.colt , (select coualias.colt(alias.col) from table where alias.col = table.alias.col aalias.cold table.alias.col = alias.col) as acoualias.colt from table ialias.colalias.coler joialias.col table oalias.col alias.col = useralias.col ) select case whealias.col alias.col = alias.col thealias.col x else x ealias.cold as [first post type] , coualias.colt(alias.col) as [# table] , avg(reputatioalias.col) as [avg rep] , cast(avg(cast(qcoualias.colt + acoualias.colt as float)) as decimal(alias.col,alias.col)) as [avg #table] , cast(avg(cast(qcoualias.colt as float)) as decimal(alias.col,alias.col)) as [avg #q] , cast(avg(cast(acoualias.colt as float)) as decimal(alias.col,alias.col)) as [avg #a] from firsttable group by alias.col order by alias.col;"
"select alias.col, coualias.colt(alias.col) from table p ialias.colalias.coler joialias.col table pt oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table t oalias.col alias.col = alias.col aalias.colalias.col alias.col like alias.col where alias.col(alias.col, getalias.colate(), p.creatioalias.colalias.colate) >= alias.col group by alias.col oralias.coler by coualias.colt(alias.col) alias.colesc"
"declare @MyId int = ##MyId##; declare @OtherUserId int = ##OtherUserId##; select Questions.Id as [Post Link], case when Questions.OwnerUserId = @OtherUserId then X else X end as [Who?] from Posts as Questions inner join Posts as Answers on Questions.Id = Answers.ParentId where Answers.PostTypeId = N and Questions.PostTypeId = N and ((Questions.OwnerUserId = @OtherUserId and Answers.OwnerUserId = @MyId ) or (Questions.OwnerUserid = @MyId and Answers.OwnerUserId = @OtherUserId )) union select Posts.Id as [Post Link], case when Posts.PostTypeId = N and Posts.OwnerUserId = @OtherUserId then X when Posts.PostTypeId = N and Posts.OwnerUserId = @MyId then X when Posts.PostTypeId = N and Posts.OwnerUserId = @OtherUserId then X when Posts.PostTypeId = N and Posts.OwnerUserId = @MyId then X end as [Who?] from Posts inner join Comments on Posts.Id = Comments.PostId where ((Posts.OwnerUserId = @OtherUserId and Comments.UserId = @MyId ) or (Posts.OwnerUserid = @MyId and Comments.UserId = @OtherUserId )) union select Posts.Id as [Post Link], case when UserId = @OtherUserId then X when UserId = @MyId then X end as [Who?] from Comments inner join Posts on Comments.PostId = Posts.Id where ((UserId = @OtherUserId and Text like X) or (UserId = @MyId and Text like X ))"
"selealias.col avg(cast(alias.col(alias.col, -floor(alias.col(alias.col, alias.col))) as bigialias.colt)) as useralias.col, avg(cast(table.score as float)) as averagequestioalias.colscore from table ialias.colalias.coler joialias.col table oalias.col (table.id = table.owalias.coleruserid) where alias.col = alias.col group by alias.col(alias.col, -floor(alias.col(alias.col, alias.col))) order by useralias.col"
"declare alias.col ialias.colt = ##userid## declare table cursor for select coualias.colt(*) from table where (alias.col = alias.col or alias.col = alias.col) aalias.cold lasteditoruserid = alias.col aalias.cold owalias.coleruserid != alias.col opealias.col table declare table ialias.colt declare @editsremaialias.colialias.colgualias.coltileditor ialias.colt declare @editsremaialias.colialias.colgualias.coltilstrualias.colkaalias.coldwhite ialias.colt declare @editsremaialias.colialias.colgualias.coltilcopyeditor ialias.colt fetch alias.colealias.colt from table ialias.colto table set @editsremaialias.colialias.colgualias.coltileditor = alias.col - table set @editsremaialias.colialias.colgualias.coltilstrualias.colkaalias.coldwhite = alias.col - table set @editsremaialias.colialias.colgualias.coltilcopyeditor = alias.col - table select @editsremaialias.colialias.colgualias.coltileditor as alias.col, @editsremaialias.colialias.colgualias.coltilstrualias.colkaalias.coldwhite as alias.col, @editsremaialias.colialias.colgualias.coltilcopyeditor as alias.col"
"select alias.col as alias.col, body from table where alias.col > alias.col aalias.cold body like x ... aalias.cold lealias.col(body) < alias.col order by alias.col desc"
"declare alias.col datetime select top alias.col alias.col = creatioalias.coldate from table order by alias.col desc select alias.col as [post lialias.colk], table, table as [user lialias.colk] from table where lasteditdate < alias.col aalias.cold alias.col is alias.colull aalias.cold posttypealias.col = alias.col order by lastactivitydate desc"
"with table as ( selealias.col table.id as alias.col, coualias.colt(table.id) as alias.col, cast(avg(cast(alias.col as float)) as alias.columeric(alias.col,alias.col)) as [average aalias.colswer alias.col] from table ialias.colalias.coler joialias.col table oalias.col table.id = owalias.coleralias.col where alias.col = alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold closeddate is alias.colull group by table.id, displayalias.colame havialias.colg coualias.colt(table.id) > alias.col ) selealias.col top ##alias.col:ialias.colt?alias.col## raalias.colk() over (order by [average aalias.colswer alias.col] desc) as raalias.colk, alias.col as [user lialias.colk], alias.col, [average aalias.colswer alias.col] from table order by [average aalias.colswer alias.col] desc;"
"select alias.col as alias.col, coualias.colt(alias.col) as alias.col from table q joialias.col table e oalias.col alias.col = alias.col joialias.col table a oalias.col alias.col = alias.col aalias.cold isalias.colull(alias.col, alias.col) <> alias.col aalias.cold alias.col = alias.col aalias.cold abs(alias.col(hour, a.creatioalias.coldate, e.creatioalias.coldate)) < alias.col where tabletypeid ialias.col (alias.col) aalias.cold alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold alias.col >= alias.col group by alias.col havialias.colg coualias.colt(alias.col) >= alias.col aalias.cold coualias.colt(alias.col) < alias.col order by coualias.colt(alias.col) desc"
"select alias.col as alias.col from table v inner join (select alias.col, alias.col from table) u on u.alias.col = v.useralias.col group by alias.col having sum(case when u.alias.col < n then n else n end) > n and sum(case when u.alias.col >= n then n else n end) = n"
"select alias.col, alias.col, alias.col, lastactivitydate from table where table.alias.col in (alias.col) group by postalias.col.postalias.col having count(case when alias.col.tagname=x then n end) = n and count(*)>n ) and lastactivitydate > x order by lastactivitydate desc ;"
"select alias.col , sum(case whealias.col alias.col = alias.col thealias.col case whealias.col alias.col = alias.col thealias.col alias.col whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold whealias.col alias.col = alias.col thealias.col case whealias.col alias.col = alias.col thealias.col alias.col whealias.col alias.col = alias.col thealias.col alias.col whealias.col alias.col = alias.col thealias.col alias.col whealias.col alias.col = alias.col thealias.col v.boualias.coltyamoualias.colt else alias.col ealias.cold ealias.cold) as [reputatioalias.col] from table p ialias.colalias.coler joialias.col table pt oalias.col alias.col = coalesalias.col(p.parealias.coltid, alias.col) ialias.colalias.coler joialias.col table t oalias.col alias.col = alias.col left outer joialias.col table v oalias.col alias.col = alias.col where p.owalias.coleruserid = alias.col:ialias.colt?alias.col## aalias.cold p.alias.col ialias.col (alias.col) aalias.cold alias.col ialias.col (alias.col) group by alias.col"
"select top alias.col alias.col as [post lialias.colk] , case whealias.col alias.col = alias.col thealias.col alias.col whealias.col alias.col = alias.col thealias.col alias.col ealias.cold as qa , left(alias.col,alias.col) as ealias.colalias.colrpt , case whealias.col alias.col is alias.colull thealias.col p.tags else mq.tags ealias.cold as tags from table p left outer joialias.col table mq oalias.col alias.col = p.parealias.coltid where alias.col like alias.col aalias.cold alias.col ialias.col (alias.colyz)"
"declare alias.col varchar = ##badgename:string## select alias.col as alias.col, count(*) as count from table where name=alias.col group by alias.col order by count desc"
"select alias.col, alias.col, alias.col, alias.col from table where alias.col > ##minalias.col## order by alias.col asc"
"select alias.col(year, table.creatioalias.coldate) year, alias.col(moalias.colth, table.creatioalias.coldate) moalias.colth, alias.col(day, table.creatioalias.coldate) date, coualias.colt(table.id) questioalias.cols from table where alias.col = alias.col group by alias.col(day, table.creatioalias.coldate), alias.col(year, table.creatioalias.coldate), alias.col(moalias.colth, table.creatioalias.coldate) order by alias.col(day, table.creatioalias.coldate), alias.col(year, table.creatioalias.coldate), alias.col(moalias.colth, table.creatioalias.coldate);"
"declare alias.col int = ##userid## select alias.col, alias.col, alias.col from table a inner join table b on alias.col=alias.col inner join table c on alias.col=alias.col where alias.col=alias.col and alias.col like alias.col ... order by alias.col"
"select table.title , table.tags , table.aalias.colswercoualias.colt , table.creatioalias.coldate , table.score from table where table.title is alias.colot alias.colull aalias.cold table.score > alias.col aalias.cold alias.col(day,table.creatioalias.coldate,getdate()) <= alias.col order by table.score, table.aalias.colswercoualias.colt desc, table.creatioalias.coldate desc"
"select alias.col, alias.col from table where alias.col not like alias.col"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... order by alias.col desc;"
"create table table(alias.col int, alias.col int, date int, alias.col int) insert into table values (xyz),(n,n,null,n) select alias.col, alias.col, alias.col into table from table where date is not null select alias.col, alias.col, alias.col into table from table where date is null delete from table where alias.col in ( select table.alias.col from table join table on table.alias.col = table.alias.col where (table.alias.col = table.alias.col and table.alias.col = table.alias.col) ) select alias.col from table"
"select coalias.colvert(varchar(alias.col), creatioalias.coldate, alias.col) alias.col, avg(alias.col) from table group by coalias.colvert(varchar(alias.col), creatioalias.coldate, alias.col) order by coalias.colvert(varchar(alias.col), creatioalias.coldate, alias.col)"
"select top alias.col tag.tagalias.colame, alias.col, wiki.lasteditdate from table tag left joialias.col table excerpt oalias.col alias.col = alias.col left joialias.col table wiki oalias.col alias.col = alias.col where lealias.col(alias.col) > alias.col order by wiki.lasteditdate desc"
"select alias.col, alias.col, alias.col from table where alias.col is null and (alias.col < n or alias.col is not null) order by alias.col desc"
"select alias.col as alias.col, views, creationdate, reputation from table where views > n order by views desc"
"select top alias.col alias.col as [post lialias.colk] from table where posttypealias.col = alias.col aalias.cold lealias.col(alias.col) - lealias.col(replace(alias.col, alias.col, alias.col)) <= alias.col order by lealias.col(alias.col)"
"select table.id as alias.col, alias.col from table where lower(table.aboutme) like lower(alias.col) order by alias.col desc"
"declare @mialias.colaalias.colswers ialias.colt = ##mialias.colaalias.colswers## select top alias.col alias.col as [user lialias.colk], coualias.colt(*) as alias.columaalias.colswers, sum(case whealias.col q.acalias.colptedaalias.colswerid = alias.col thealias.col alias.col else alias.col ealias.cold) as alias.columacalias.colpted, (sum(case whealias.col q.acalias.colptedaalias.colswerid = alias.col thealias.col alias.col else alias.col ealias.cold)*alias.col.alias.col/coualias.colt(*)) as acalias.colptedperalias.colalias.colt from table a ialias.colalias.coler joialias.col table u oalias.col alias.col = a.owalias.coleruserid ialias.colalias.coler joialias.col table q oalias.col a.parealias.coltid = alias.col where (q.owalias.coleruserid <> alias.col or q.owalias.coleruserid is alias.colull) aalias.cold u.lastacalias.colssdate > dateadd(day, alias.col, getdate()) group by alias.col havialias.colg coualias.colt(*) >= @mialias.colaalias.colswers order by acalias.colptedperalias.colalias.colt desc, alias.columaalias.colswers desc"
"select top alias.col alias.col as [user lialias.colk], coualias.colt(*) as table from table group by alias.col order by table desc"
select alias.col from table where alias.col = (select max(alias.col) from table)
"create table table( id integer, name nvarchar(n)) insert into table values (xyz); insert into table values (xyz); select top n postid as [post link] , relatedpostid as [post link] , plt.name from postlinks pl inner join table plt on plt.id = pl.linktypeid where plt.id = pl.linktypeid order by creationdate desc"
declare alias.col varchar(alias.col) = x select alias.col alias.col from table q where alias.col is alias.colot alias.colull aalias.cold exists ( select alias.col from table a where alias.col = alias.col aalias.cold alias.col = alias.col ) aalias.cold exists ( select alias.col from table pl where alias.col = ( select max(alias.col) from table pli where alias.col = alias.col aalias.cold alias.col = alias.col ) aalias.cold alias.col = alias.col )
"select top alias.col alias.col as [post lialias.colk], alias.col as aalias.colswerscore from table q ialias.colalias.coler joialias.col table a oalias.col a.parealias.coltid = alias.col where a.owalias.coleruserid = q.owalias.coleruserid aalias.cold alias.col >= alias.col aalias.cold alias.col > alias.col aalias.cold a.commualias.colityowalias.coleddate is alias.colull aalias.cold a.closeddate is alias.colull order by alias.col"
"select coualias.colt(alias.col) as alias.col, alias.col as alias.col, sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as [scored aalias.colswers], sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as [ualias.colscored aalias.colswers], sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold)*alias.col / coualias.colt(alias.col) / alias.col.alias.col as [peralias.colalias.coltage ualias.colscored] from table q ialias.colalias.coler joialias.col table a oalias.col alias.col = q.acalias.colptedaalias.colswerid where a.commualias.colityowalias.coleddate is alias.colull aalias.cold a.owalias.coleruserid = ##userid## aalias.cold q.owalias.coleruserid != ##userid## aalias.cold a.posttypeid = alias.col group by alias.col"
select alias.col as alias.col from table where posttypealias.col=alias.col aalias.cold acceptedaalias.colsweralias.col is alias.colull aalias.cold owalias.coleruseralias.col is alias.colull aalias.cold aalias.colswercoualias.colt = alias.col
select coualias.colt(*) from table where alias.col = alias.col aalias.cold alias.col = alias.col
"select year(alias.col) as alias.col, moalias.colth(alias.col) as alias.col, coualias.colt(*) as alias.col from table where alias.col like alias.col group by year(alias.col), moalias.colth(alias.col) order by alias.col desc, alias.col desc"
"select alias.col ialias.colto table from table q ialias.colalias.coler joialias.col table a oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table pt oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table t oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold alias.col < lealias.col(alias.col) select row_alias.columber() over (order by a.owalias.coleruserid, alias.col desc, a.creatioalias.coldate) as raalias.colk, a.owalias.coleruserid as [user lialias.colk], format(u.reputatioalias.col, x) as reputatioalias.col, alias.col as [post lialias.colk], alias.col as [post lialias.colk], alias.col, datediff(day, a.creatioalias.coldate, getdate()) as [days] from table p ialias.colalias.coler joialias.col table a oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table u oalias.col a.owalias.coleruserid = alias.col where alias.col = alias.col aalias.cold alias.col <> alias.col aalias.cold p.owalias.coleruserid <> a. owalias.coleruserid aalias.cold p.creatioalias.coldate < a.creatioalias.coldate order by a.owalias.coleruserid, alias.col desc, a.creatioalias.coldate"
"declare @mialias.colaalias.colswers ialias.colt = ##mialias.colaalias.colswers## selealias.col top alias.col alias.col as [user lialias.colk], coualias.colt(*) as alias.columaalias.colswers, cast(avg(cast((alias.col - alias.col) as float)) as alias.columeric(alias.col,alias.col)) as alias.col from table a ialias.colalias.coler joialias.col table u oalias.col alias.col = a.owalias.coleruserid ialias.colalias.coler joialias.col table q oalias.col a.parealias.coltid = alias.col where (q.owalias.coleruserid <> alias.col or q.owalias.coleruserid is alias.colull) group by alias.col havialias.colg coualias.colt(*) >= @mialias.colaalias.colswers order by alias.col desc, alias.columaalias.colswers desc"
"select table.userid as alias.col, table.id as alias.col from table joialias.col table oalias.col table.id = table.postid where alias.col=alias.col aalias.cold table.posttypeid = alias.col aalias.cold table.owalias.coleruserid = alias.col##"
select alias.col as alias.col from table where body like x
"selecalias.col alias.col as alias.col, alias.col from ( selecalias.col alias.col from alias.colable as q lefalias.col joialias.col alias.colable as a oalias.col alias.col = alias.col lefalias.col joialias.col alias.colable as aalias.col oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold aalias.col.alias.col = alias.col aalias.cold ( (a.owalias.coleruserid = alias.col## aalias.cold q.owalias.coleruserid = alias.col##) or (q.owalias.coleruserid = alias.col## aalias.cold a.owalias.coleruserid = alias.col##) or (a.owalias.coleruserid = alias.col## aalias.cold aalias.col.owalias.coleruserid = alias.col##) ) group by alias.col ualias.colioalias.col selecalias.col alias.col from (selecalias.col (case whealias.col alias.col = alias.col alias.colhealias.col parealias.colalias.colid else alias.col ealias.cold) as id from alias.colable as p joialias.col alias.colable as calias.col oalias.col calias.col.posalias.colid = alias.col lefalias.col joialias.col alias.colable as calias.col oalias.col calias.col.posalias.colid = alias.col where (p.alias.col = alias.col or p.alias.col = alias.col) aalias.cold ( (p.owalias.coleruserid = alias.col## aalias.cold calias.col.userid = alias.col##) or (p.owalias.coleruserid = alias.col## aalias.cold calias.col.userid = alias.col##) or (calias.col.userid = alias.col## aalias.cold calias.col.userid = alias.col##) ) ) as alias.col group by id ) as alias.col joialias.col alias.colable as q oalias.col alias.col = alias.col"
"selealias.col alias.col, table.id, alias.col, alias.col + cast(table.id as varchar) + alias.col as lialias.colk from table joialias.col table oalias.col table.id = table.postid joialias.col table oalias.col table.tagid = table.id where table.posttypeid = alias.col aalias.cold table.tagalias.colame = alias.col:strialias.colg## aalias.cold alias.col >= ##mialias.colfavcoualias.colt:ialias.colt## order by alias.col desc"
"select alias.col(alias.col, table.creatioalias.coldate) alias.col, alias.col(hour, table.creatioalias.coldate) hour, coualias.colt(table.id) aalias.colswers from table where alias.col = alias.col group by alias.col(alias.col, table.creatioalias.coldate), alias.col(hour, table.creatioalias.coldate) order by coualias.colt(table.id) desc"
"selealias.col alias.col, coualias.colt(alias.col) from ( selealias.col cast( cast(alias.col(alias.col, alias.col()) as varchar) + alias.col + cast(alias.col(alias.col, alias.col()) as varchar) + alias.col as datetime) table, alias.col from table p joialias.col table pt oalias.col alias.col = alias.col joialias.col table t oalias.col alias.col = alias.col where alias.col ialias.col ( selealias.col top alias.col alias.col from table order by coualias.colt desc ) ) as alias.col group by tagalias.colame, table"
"select alias.col, alias.col, alias.col from table where alias.col > alias.col order by alias.col;"
declare alias.col ialias.colt = ##userid## selealias.col (cast(coualias.colt(alias.col) as float) / (selealias.col coualias.colt(*) from table where alias.col = alias.col aalias.cold alias.col = alias.col) * alias.col) as acceptedpercealias.coltage from table q ialias.colalias.coler joialias.col table a oalias.col q.acceptedaalias.colswerid = alias.col where a.alias.col = alias.col aalias.cold a.alias.col = alias.col
"with table as ( select alias.colame, class, tagbased from table where alias.col = ##alias.col## group by alias.colame, class, tagbased ), others as ( select alias.colame, class, coualias.colt(*) as alias.col from table where alias.col <> ##alias.col## group by alias.colame, class ) select table.alias.colame + case whealias.col tagbased = alias.col thealias.col x ealias.cold, case table.class whealias.col alias.col thealias.col x whealias.col alias.col thealias.col x whealias.col alias.col thealias.col x ealias.cold as class, others.alias.col from table left joialias.col others oalias.col table.alias.colame = others.alias.colame aalias.cold table.class = others.class order by others.alias.col"
"selealias.col top alias.col a.owalias.coleruseralias.col as [user lialias.colk], (selealias.col reputatioalias.col from table where alias.col = a.owalias.coleruseralias.col) as reputatioalias.col, ( selealias.col coualias.colt(*) from table where owalias.coleruseralias.col = a.owalias.coleruseralias.col aalias.cold posttypealias.col = alias.col ) as alias.columquestioalias.cols, (cast(coualias.colt(a.alias.col) as float) / (selealias.col coualias.colt(*) from table where owalias.coleruseralias.col = a.owalias.coleruseralias.col aalias.cold posttypealias.col = alias.col) * alias.col) as acceptedpercealias.coltage from table q ialias.colalias.coler joialias.col table a oalias.col q.acceptedaalias.colsweralias.col = a.alias.col where a.owalias.coleruseralias.col = q.owalias.coleruseralias.col aalias.cold a.posttypealias.col = alias.col group by a.owalias.coleruseralias.col havialias.colg ( selealias.col coualias.colt(*) from table where owalias.coleruseralias.col = a.owalias.coleruseralias.col aalias.cold posttypealias.col = alias.col ) >= ##mialias.columumaalias.colswertreshold## order by acceptedpercealias.coltage desc"
"select alias.col as alias.col, alias.col, alias.col from table where lower(alias.col) like alias.col order by alias.col;"
"select alias.col as alias.col, alias.col, alias.col as views from table where body like x order by views desc"
"select alias.col, alias.col, alias.col, alias.col*alias.col/(alias.col+alias.col) as alias.col from table where alias.col = ##useralias.col## union select alias.col, sum(alias.col), sum(alias.col), sum(alias.col)*alias.col/(sum(alias.col)+sum(alias.col)) from table"
"select row_number() over(order by alias.col desc) as [#], id as [user link], displayname, location, websiteurl, aboutme, views, upvotes, downvotes, age, emailhash, alias.col from table where lower(location) like x or lower(location) like x ... order by alias.col desc;"
"select top alias.col raalias.colk() over (order by sum(v.boualias.coltyamoualias.colt) desc) as [raalias.colk], u.displayalias.colame, sum(v.boualias.coltyamoualias.colt) as boualias.colties from table u ialias.colalias.coler joialias.col table p oalias.col alias.col = p.owalias.coleruserid ialias.colalias.coler joialias.col table v oalias.col alias.col = alias.col where alias.col = alias.col group by v.creatioalias.coldate,u.displayalias.colame order by sum(v.boualias.coltyamoualias.colt) desc"
"select top alias.col alias.col as [post lialias.colk], commealias.colt, substrialias.colg(commealias.colt,alias.col,lealias.col(commealias.colt)-charialias.coldex(x, commealias.colt)) as destialias.colatioalias.col from table where tabletypeid = alias.col"
"declare alias.col datetime set alias.col = dateadd(day,alias.col,getdate()) select alias.col from table u where alias.col > alias.col aalias.cold alias.col > alias.col aalias.cold alias.col alias.colot ialias.col (select alias.col from table b where b.alias.colame = alias.col)"
"select alias.col as alias.col, alias.col, alias.col.[# table], alias.col / alias.col.[# table] as alias.col from table cross apply ( select coualias.colt(*) from table where table.owalias.coleruseralias.col = table.alias.col ) alias.col([# table]) where alias.col > alias.col aalias.cold [# table] > ##mialias.coltable## order by alias.col desc"
"select alias.col as alias.col, alias.col, alias.col(alias.col * alias.col / alias.col, alias.col) as [peralias.colalias.colt] from (select a.owalias.coleruserid, coualias.colt(alias.col) as alias.col, sum(case q.acalias.colptedaalias.colswerid whealias.col alias.col thealias.col alias.col else alias.col ealias.cold) as [acalias.colpted] from table as a joialias.col table as q oalias.col a.parealias.coltid = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold a.owalias.coleruserid <> q.owalias.coleruserid group by a.owalias.coleruserid ) as t where t.alias.col >= alias.col aalias.cold t.[acalias.colpted] / t.alias.col >= alias.col order by t.[acalias.colpted] / t.alias.col desc, t.alias.col desc"
"declare @UserId int = ##UserId##; select Questions.Id as [Post Link], case when Questions.OwnerUserId = N then N else N end as [Who?] from Posts as Questions inner join Posts as Answers on Questions.Id = Answers.ParentId where Answers.PostTypeId = N and Questions.PostTypeId = N and ((Questions.OwnerUserId = N and Answers.OwnerUserId = @UserId) or (Questions.OwnerUserid = @UserId and Answers.OwnerUserId = N))"
"select top alias.col alias.col as [post lialias.colk], alias.col, viewcoualias.colt, posttypealias.col from table where posttypealias.col = alias.col order by alias.col desc"
"select alias.col, alias.col, alias.col from ( select alias.col, coualias.colt(boualias.coltyalias.col) alias.col, sum(boualias.coltyalias.col) alias.col from table where boualias.coltyalias.col is alias.colot alias.colull aalias.cold alias.col = alias.col group by alias.col ) as b where alias.col = alias.col order by alias.col desc"
"select alias.col as alias.col, alias.col, alias.col, alias.col from table where table.posttypealias.col<=alias.col aalias.cold table.owalias.coleruseralias.col ialias.col (alias.col) ;"
"select top alias.col alias.col as [user lialias.colk], displayalias.colame, reputatioalias.col, alias.col(alias.col, creatioalias.coldate, alias.col()) as alias.col, (reputatioalias.col / alias.col(alias.col, creatioalias.coldate, alias.col())) as alias.col from table where (alias.col(alias.col, creatioalias.coldate, alias.col()) > alias.col) aalias.cold (reputatioalias.col>=alias.col) order by alias.col desc"
"with table tables (select alias.col tables alias.col, sum(ctablese whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) tables dowalias.colttableble from ttableble p ialias.colalias.coler joialias.col ttableble v oalias.col alias.col = alias.col where alias.col = alias.col group by alias.col) select top ##selectalias.colum## table.* from table order by dowalias.colttableble desc"
"select top (alias.col:int?alias.col) table.id as alias.col, table.table, sum(table.count) as sum from table inner join table on table.postid = table.id inner join table on table.tagid = table.id group by table.id, table.table, table.title having sum(table.id) >= ##mintable:int?alias.col order by sum, table.title"
declare alias.col ialias.colt = ##userid## select top alias.col alias.col from table ialias.colalias.coler joialias.col table oalias.col table.postid = table.id where table.userid = alias.col order by table.score desc
"create table table ( id int, path varchar(n), eventdatefrom datetime, numberofdays int ); insert into table values (xyz), (n, x,x,n), (n, x,x,n), (n, x,x,n) select * from table where eventdatefrom <= x and dateadd(day,n,eventdatefrom) >= x"
"declare @alias.col ialias.colt = ##alias.col## select top alias.col alias.col as [post lialias.colk], alias.col, alias.col from table c where alias.col = @alias.col order by alias.col desc"
"select name , count(*)as alias.col , count(distinct postid)as posts , count(distinct revisionguid)as revisions from table ph inner join tabletypes pht on ph.tabletypeid=alias.col group by name, alias.col order by alias.col"
"select top alias.col alias.col as [post lialias.colk], pt.alias.colame as alias.col, p.owalias.coleruserid as [user lialias.colk] from table p joialias.col table pt oalias.col alias.col = alias.col where alias.col=alias.col aalias.cold alias.col like alias.col ..."
"declare alias.col ialias.colt = ##userid## select coualias.colt(alias.col) as alias.col, coualias.colt(alias.col) as alias.col, coalias.colvert(decimal(alias.col,alias.col),(coualias.colt(alias.col) * alias.col.alias.col) / coualias.colt(alias.col)) as alias.col, coalias.colvert(decimal(alias.col,alias.col),(coualias.colt(alias.col) * alias.col.alias.col) / coualias.colt(alias.col)) as alias.col, coualias.colt(alias.col) as alias.col from table where owalias.coleruserid = alias.col"
"declare alias.col ialias.colt = ##userid## declare table table ( tag alias.colvarchar(alias.col) alias.colot alias.colull, posttypeid tialias.colyialias.colt alias.colot alias.colull, alias.columberoftable ialias.colt alias.colot alias.colull, alias.col ialias.colt alias.colot alias.colull ) ialias.colsert ialias.colto table select alias.col, alias.col, coualias.colt(alias.col) as alias.columberoftable, sum(alias.col) as alias.col from table p ialias.colalias.coler joialias.col table pt oalias.col alias.col = coalesce(p.parealias.coltid, alias.col) ialias.colalias.coler joialias.col table t oalias.col alias.col = alias.col where (p.owalias.coleruserid = alias.col) aalias.cold (p.commualias.colityowalias.coleddate is alias.colull) group by alias.col, alias.col select coalesce(ralias.col.tag, ralias.col.tag) as alias.col, coalesce(ralias.col.alias.columberoftable, alias.col) as aalias.colswers, coalesce(ralias.col.alias.col, alias.col) as aalias.colswerscore, coalesce(ralias.col.alias.columberoftable, alias.col) as questioalias.cols, coalesce(ralias.col.alias.col, alias.col) as questioalias.colscore from table ralias.col full outer joialias.col table ralias.col oalias.col (ralias.col.tag = ralias.col.tag) aalias.cold (ralias.col.posttypeid != ralias.col.posttypeid) where ralias.col.posttypeid = alias.col order by aalias.colswerscore desc, aalias.colswers desc, questioalias.colscore desc, questioalias.cols desc"
"declare @minimumalias.col int = ##minimumalias.col## select sum(alias.col) as alias.col, count(alias.col) as alias.col, sum(alias.col) / count(alias.col) as alias.col from table where alias.col >= @minimumalias.col;"
"selealias.col top alias.col alias.col as [user lialias.colk], alias.col, dowalias.colvotes, cast(alias.col as float) / dowalias.colvotes as alias.col from table where reputatioalias.col >= alias.col aalias.cold dowalias.colvotes > alias.col order by alias.col desc"
"selealias.col alias.col, count(alias.col) from ( selealias.col cast( cast(alias.col(alias.col, alias.col) as varchar) + alias.col + cast(alias.col(alias.col, alias.col) as varchar) + alias.col as datetime) alias.col, alias.col from table p join table pt on alias.col = alias.col join table t on alias.col = alias.col where alias.col in (alias.colyz) ) as alias.col group by alias.col, alias.col order by alias.col asc, alias.col asc"
"select top alias.col row_alias.columber() over (order by alias.col desc) alias.colo, * from( select alias.col [post lialias.colk], alias.col from table where posttypealias.col=alias.col aalias.cold owalias.coleruseralias.col = ##useralias.col## aalias.cold alias.col>alias.col ualias.colioalias.col select a.alias.col [post lialias.colk], a.alias.col from table q joialias.col table a oalias.col q.acceptedaalias.colsweralias.col = a.alias.col where a.alias.col=alias.col aalias.cold a.owalias.coleruseralias.col = ##useralias.col## ) combialias.coled;"
"declare @alias.col ialias.colt = ##alias.col## select top alias.col alias.col as [post lialias.colk], alias.col as [user lialias.colk], creatioalias.coldate, alias.col, alias.col from table c where alias.col = @alias.col order by alias.col desc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x order by alias.col desc;"
"select top alias.col a.parealias.coltid as [post lialias.colk], coualias.colt(alias.col), q.viewcoualias.colt, q.creatioalias.coldate from table a ialias.colalias.coler joialias.col table q oalias.col (alias.col = a.parealias.coltid) where alias.col = alias.col aalias.cold lealias.col(alias.col) <= alias.col aalias.cold (alias.col like alias.col) group by a.parealias.coltid, q.viewcoualias.colt, q.creatioalias.coldate havialias.colg coualias.colt(alias.col) > alias.col order by coualias.colt(alias.col) desc;"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... or location like x and alias.col >= n order by alias.col desc;"
"select alias.col,coualias.colt(alias.col) from table t ialias.colalias.coler joialias.col posttable pt oalias.col alias.col=alias.col ialias.colalias.coler joialias.col table p oalias.col alias.col=alias.col where alias.col ialias.col ( select alias.col from table t ialias.colalias.coler joialias.col posttable pt oalias.col alias.col=alias.col ialias.colalias.coler joialias.col table p oalias.col alias.col=alias.col where alias.col=alias.col ) group by alias.col order by alias.col desc"
"select alias.col, alias.col, alias.col, alias.col, alias.col from (select max(alias.col) max_alias.col, alias.col from (select sum(p.alias.col) alias.col, alias.col, pt.alias.col from table p inner join table pt on alias.col = alias.col group by alias.col, pt.alias.col) alias.cols group by alias.col) maxalias.cols inner join (select sum(p.alias.col) alias.col, alias.col, pt.alias.col from table p inner join table pt on alias.col = alias.col group by alias.col, pt.alias.col) alias.cols on maxalias.cols.max_alias.col = alias.col and maxalias.col = alias.col inner join table t on alias.col = alias.col inner join table u on alias.col = alias.col order by alias.col"
"select alias.col as alias.col, alias.col(alias.col) as bodyalias.colgth from table as p ialias.colalias.coler joialias.col table as u oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col < alias.col aalias.cold alias.col like alias.col aalias.cold alias.col(alias.col) < alias.col aalias.cold p.creatioalias.coldate > alias.col aalias.cold u.creatioalias.coldate > alias.col aalias.cold u.realiastatioalias.col < alias.col order by bodyalias.colgth asc"
"with table as ( select alias.col, ( select coualias.colt(*) as alias.col from table pt joialias.col table pp oalias.col alias.col = alias.col joialias.col table pa oalias.col alias.col = alias.col joialias.col table v oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col ) as uptable, ( select coualias.colt(*) as alias.col from table pt joialias.col table pp oalias.col alias.col = alias.col joialias.col table pa oalias.col alias.col = alias.col joialias.col table v oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col ) as dowalias.coltable from table t cross apply ( select coualias.colt(*) as alias.col from table pt where alias.col = alias.col havialias.colg coualias.colt(*) >= alias.col ) pt ) select tagalias.colame as [table], uptable as [uptable], dowalias.coltable as [dowalias.coltable], roualias.cold(alias.col.alias.col * dowalias.coltable / alias.colullif(uptable, alias.col), alias.col) as alias.col from table order by alias.col desc"
"select sum(case whealias.col alias.col > alias.col thealias.col alias.col ealias.cold) as poptable, sum(case whealias.col alias.col <= alias.col aalias.cold alias.col > alias.col thealias.col alias.col ealias.cold) as hugetable, sum(case whealias.col alias.col <= alias.col aalias.cold alias.col > alias.col thealias.col alias.col ealias.cold) as largetable, sum(case whealias.col alias.col <= alias.col aalias.cold alias.col > alias.col thealias.col alias.col ealias.cold) as medtable, sum(case whealias.col alias.col <= alias.col aalias.cold alias.col > alias.col thealias.col alias.col ealias.cold) as regtable, sum(case whealias.col alias.col <= alias.col aalias.cold alias.col > alias.col thealias.col alias.col ealias.cold) as smalltable, sum(case whealias.col alias.col <= alias.col aalias.cold alias.col > alias.col thealias.col alias.col ealias.cold) as tialias.colytable, sum(case whealias.col alias.col <= alias.col aalias.cold alias.col > alias.col thealias.col alias.col ealias.cold) as mialias.colitable, sum(case whealias.col alias.col <= alias.col aalias.cold alias.col > alias.col thealias.col alias.col ealias.cold) as microtable, sum(case whealias.col alias.col <= alias.col thealias.col alias.col ealias.cold) as forgottealias.coltable from table p where p.parealias.coltid is alias.colull"
"select alias.col as alias.col, count(alias.col)as alias.col, alias.col, alias.col from table u left join table p on alias.col = alias.col where alias.col is null group by alias.col, alias.col, alias.col order by count(alias.col) asc, alias.col desc"
"select table.userid as alias.col, table.id as alias.col from table joialias.col table oalias.col table.id = table.postid where alias.col=alias.col aalias.cold table.posttypeid = alias.col aalias.cold table.owalias.coleruserid = alias.col## order by alias.col"
"select top alias.col alias.col as [post lialias.colk], p.creatioalias.coldate, alias.col, alias.col, p.lasteditdate,p.lastactivitydate from table as p where p.lasteditdate < alias.col(moalias.colth, alias.col, p.lastactivitydate) aalias.cold score <= alias.col aalias.cold score >= alias.col aalias.cold aalias.colswercoualias.colt <= alias.col aalias.cold acceptedaalias.colswerid is alias.colull aalias.cold closeddate is alias.colull order by alias.col asc, p.creatioalias.coldate asc"
select top alias.col table.body as alias.col from table where alias.col=alias.col order by alias.col desc
"with table tables ( selealias.col ttableble = coualias.colt(alias.col), ttableg = t.ttablegalias.coltableme, yetabler = yetabler(p.cretabletioalias.coldtablete) from ttableble p joialias.col ttableble pt oalias.col alias.col = alias.col joialias.col ttableble t oalias.col pt.ttablegid = alias.col where ( t.ttablegalias.coltableme = alias.col or t.ttablegalias.coltableme = alias.col or t.ttablegalias.coltableme = alias.col or t.ttablegalias.coltableme = alias.col or t.ttablegalias.coltableme = alias.col or t.ttablegalias.coltableme = alias.col or t.ttablegalias.coltableme = alias.col or t.ttablegalias.coltableme = alias.col or t.ttablegalias.coltableme = alias.col or t.ttablegalias.coltableme = alias.col) group by t.ttablegalias.coltableme, yetabler(p.cretabletioalias.coldtablete) ) selealias.col ttableg = sttablertyetabler.ttableg, [ttableble alias.col] = sttablertyetabler.ttableble, [ttableble alias.col] = ealias.coldyetabler.ttableble, alias.col = alias.col(alias.colablest(ealias.coldyetabler.ttableble tables flotablet) / alias.colablest(sttablertyetabler.ttableble tables flotablet),alias.col) from table sttablertyetabler joialias.col table ealias.coldyetabler oalias.col sttablertyetabler.ttableg = ealias.coldyetabler.ttableg where sttablertyetabler.yetabler = ##sttablertyetabler## tablealias.cold ealias.coldyetabler.yetabler = ##ealias.coldyetabler## order by alias.col(alias.colablest(ealias.coldyetabler.ttableble tables flotablet) / alias.colablest(sttablertyetabler.ttableble tables flotablet),alias.col) desc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], location, alias.col, age from table where lower(location) like x and alias.col > n order by alias.col desc;"
select alias.col from table
"alias.coleclare alias.col ialias.colt = ##userialias.col## select alias.col as alias.col, alias.col from table q ialias.colalias.coler joialias.col table a oalias.col alias.col = alias.col where alias.col = alias.col aalias.colalias.col alias.col = alias.col aalias.colalias.col alias.col <= alias.col aalias.colalias.col alias.col(alias.col, q.creatioalias.colalias.colate, a.creatioalias.colalias.colate) >= alias.col oralias.coler by alias.col alias.colesc"
"select coualias.colt(alias.col) as alias.col from table q joialias.col table e oalias.col alias.col = alias.col joialias.col table a oalias.col alias.col = alias.col aalias.cold alias.col <> alias.col aalias.cold alias.col = alias.col aalias.cold abs(alias.col(hour, a.creatioalias.coldate, e.creatioalias.coldate)) < alias.col where tabletypeid ialias.col (alias.col) aalias.cold alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold alias.col is alias.colull aalias.cold a.score >= alias.col aalias.cold alias.col = ##alias.col##"
"select top alias.col raalias.colk = row_alias.columber() over (order by coalias.colvert(ialias.colt, mialias.col(coalias.colvert(float, u.reputatioalias.col)) / sum(lealias.col(alias.col)) * alias.col) alias.col##), [user lialias.colk] = p.owalias.coleruserid, table = coualias.colt(*), lealias.colgthavg = avg(lealias.col(alias.col)), lealias.colgthmax = max(lealias.col(alias.col)), lealias.colgthalias.col = coalias.colvert(ialias.colt, alias.col(lealias.col(alias.col))), lealias.colgthtotal = sum(lealias.col(alias.col)), reputatioalias.col = mialias.col(u.reputatioalias.col), repperalias.colchar = coalias.colvert(ialias.colt, mialias.col(coalias.colvert(float, u.reputatioalias.col)) / sum(lealias.col(alias.col)) * alias.col) from table p ialias.colalias.coler joialias.col table u oalias.col alias.col = p.owalias.coleruserid where alias.col = alias.col group by p.owalias.coleruserid havialias.colg coualias.colt(*) >= ##mialias.colimumpostcoualias.colt##"
"select alias.col as alias.col, alias.col, alias.col, alias.col, alias.col from table edits inner join table rollbacks on alias.col = alias.col and alias.col > alias.col where edits.tabletypeid in (alias.col) and rollbacks.tabletypeid in (alias.col) and alias.col = alias.col## and alias.col <> alias.col##"
"declare @userid ialias.colt = alias.col select top alias.col alias.col, (select coualias.colt(*) from table where owalias.coleruserid = alias.col aalias.cold alias.col = alias.col) [aalias.colswers] from table u"
"select alias.col, alias.col(alias.col) as alias.colgth, case whealias.col q.closeddate is alias.colull thealias.col x else x ealias.cold as closed, q.aalias.colswercoualias.colt as aalias.colswercoualias.colt, a.id as [post lialias.colk], alias.col from table a joialias.col table q oalias.col (alias.col = alias.col) where alias.col = alias.col aalias.cold alias.col <= ##aalias.colswerscoremax:ialias.colt## aalias.cold alias.col >= ##aalias.colswerscoremialias.col:ialias.colt## aalias.cold alias.col(alias.col) < ##aalias.colsweralias.colgth## aalias.cold alias.colot exists ( select alias.col from table ph where alias.col = alias.col aalias.cold ph.tabletypeid = alias.col ) order by alias.colgth asc, alias.col asc"
"select alias.col as alias.col, alias.col, alias.col.[# table], alias.col / alias.col.[# table] as alias.col from table cross apply ( select coualias.colt(*) from table where table.owalias.coleruseralias.col = table.alias.col ) alias.col([# table]) where alias.col > alias.col order by alias.col desc"
"with table as ( select alias.col, alias.col from table q ialias.colalias.coler joialias.col table pt oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table t oalias.col alias.col = alias.col where alias.col = lower(alias.col) aalias.cold alias.col = alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold closeddate is alias.colull aalias.cold score >= ##mialias.colscore## ) select top alias.col p.parealias.coltid as [post lialias.colk], maalias.col(alias.col) as bestaalias.colswerscore, alias.col as tablecore, maalias.col(alias.col)*alias.col.alias.col/alias.col as alias.col from table p joialias.col table q oalias.col p.parealias.coltid = alias.col group by p.parealias.coltid, alias.col order by alias.col"
"declare @alias.col nvarchar (n) = x declare alias.col datetime = dateadd(month, n, getdate()) declare @firstmonthcount decimal (n,n) set @firstmonthcount = (select count(*) as table from table inner join posttable on posttable.tagid = table.id inner join table on table.parentid = posttable.postid where alias.col = @alias.col and table.creationdate > alias.col group by alias.col); select x, x, x select @alias.col, @firstmonthcount, x"
"select alias.col as alias.col, alias.col, alias.col from table where (alias.col like alias.col or alias.col like alias.col and alias.col not like alias.col ) and (alias.col is null or alias.col < n) order by alias.col desc"
"declare @UserId int = ##UserId##; with fights as ( select myAnswer.ParentId as Question, myAnswer.Score as MyScore, jonsAnswer.Score as JonsScore from Posts as myAnswer inner join Posts as jonsAnswer on jonsAnswer.OwnerUserId = ( select top N ID from Users order by Reputation ) and myAnswer.ParentId = jonsAnswer.ParentId where myAnswer.ownerUserId = @UserId and myAnswer.postTypeId = N ) select case when myScore > JonsScore then X when myScore < JonsScore then X else X end as X, Question as [Post Link], myScore as X, jonsScore as X from fights;"
"selealias.col alias.col as alias.col, alias.col, cast(coalias.colvert(decimal(alias.col,alias.col), alias.col * alias.col.alias.col) as varchar(alias.col)) + alias.col as alias.col from table as questioalias.col left joialias.col table as aalias.colswer oalias.col questioalias.col.acceptedaalias.colswerid=alias.col where questioalias.col.posttypeid=alias.col aalias.cold aalias.colswer.owalias.coleruserid=alias.col:ialias.colt## aalias.cold aalias.colswer.commualias.colityowalias.coleddate is alias.colull order by alias.col desc"
"select alias.col as alias.col, alias.col as alias.col, case alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.colalias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col ealias.cold as [close reasoalias.col], alias.col from table q ialias.colalias.coler joialias.col table h oalias.col alias.col = alias.col where h.tabletypeid = alias.col aalias.cold alias.col >= alias.col aalias.cold alias.col is alias.colot alias.colull order by alias.col desc"
"declare alias.col int = ##userid## select table.postid, table.name from table inner join table on table.votetypeid = table.id where table.userid = alias.col"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col, location from table where lower(location) like x or lower(location) like x ... order by alias.col desc;"
"create table table (site nvarchar(n), count int); exec sp_msforeachdb xxxxxxxxxxxxxxx; select * from table where count > n order by count desc, site;"
"set alias.colocoualias.colt oalias.col create table table (alias.col ialias.colt alias.colealias.coltity, [start] datetime, [fialias.colish] datetime) ialias.colsert table select top alias.col alias.colull, alias.colull from table declare alias.col datetime select alias.col = creatioalias.coldate from table where alias.col = (select max(palias.col.alias.col) from table palias.col) update table set [start] = dateadd(d, (alias.col - alias.col) * alias.col, alias.col), [fialias.colish] = dateadd(d, (alias.col - alias.col) * alias.col, alias.col) select start, alias.col.alias.col*(select coualias.colt(*) from table where parealias.coltalias.col is alias.colull aalias.cold creatioalias.coldate betweealias.col [start] aalias.cold [fialias.colish] )/ (select coualias.colt(*) from table where parealias.coltalias.col is alias.colot alias.colull aalias.cold creatioalias.coldate betweealias.col [start] aalias.cold [fialias.colish] ) as [q/r], (select avg(alias.col.alias.col*aalias.colswercoualias.colt) from table where parealias.coltalias.col is alias.colull aalias.cold creatioalias.coldate betweealias.col [start] aalias.cold [fialias.colish] ) as [avg a per q], (select coualias.colt(*) from table where parealias.coltalias.col is alias.colull aalias.cold creatioalias.coldate betweealias.col [start] aalias.cold [fialias.colish] aalias.cold acceptedaalias.colsweralias.col=alias.col ) as [zero-aalias.colswer questioalias.cols] from table"
"select top alias.col alias.col as [post lialias.colk], table.alias.colame as alias.col from table as post joialias.col table oalias.col alias.col = table.id left joialias.col table as parealias.colt oalias.col post.parealias.coltid = parealias.colt.id left joialias.col table as author oalias.col post.owalias.coleruserid = alias.col where alias.col like alias.col aalias.cold alias.col like alias.col aalias.cold post.creatioalias.coldate betweealias.col ##startdate:strialias.colg?alias.colalias.colalias.col## aalias.cold ##ealias.colddate:strialias.colg?alias.colalias.colalias.col##"
"select top alias.col row_alias.columber() over(order by reputatioalias.col desc) as [#], id as [user lialias.colk], reputatioalias.col, locatioalias.col from table where lower(locatioalias.col) like x or upper(locatioalias.col) like x ... or locatioalias.col like x aalias.cold reputatioalias.col >= alias.col order by reputatioalias.col desc;"
"select table.tagname as alias.col, count(*) as [number of associated table] from table inner join table on table.id = table.tagid where table.postid in ( select distinct postid from table inner join table on table.id = table.tagid inner join table on table.id = table.postid where table.tagname = alias.col:alias.col and year(table.creationdate) = alias.col:alias.col ) and table.tagname <> alias.col:alias.colgroup by table.tagname order by count(*) desc"
"create table table(alias.col datetime, table varchar(n), number float) insert into table selealias.col alias.col, table, count(*) from ( selealias.col cast( cast(alias.col(alias.col, alias.col) as varchar) + alias.col + cast(alias.col(alias.col, alias.col) as varchar) + alias.col as datetime) alias.col, t.table from table p join table pt on alias.col = alias.col join table t on alias.col = alias.col where alias.col in (alias.colyz) from table where a.alias.col = alias.col group by alias.col) from table as a order by alias.col asc, table asc"
"select top alias.col coualias.colt(alias.col) as alias.col, lealias.col(body) as alias.col, maalias.col(creatioalias.coldate) as alias.col from table where posttypealias.col = alias.col or posttypealias.col = alias.col group by lealias.col(body) order by lealias.col(body) asc"
"select alias.col as alias.col, alias.col from table q join table ph on (alias.col = alias.col) where alias.col = alias.col##"
"select top alias.col alias.col+ coalias.colvert(varchar,alias.col) from table where creatioalias.coldate > alias.col(moalias.colth, alias.col, getutcdate())"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... or location like x and alias.col >= n order by alias.col desc;"
"selealias.col sum(cast(alias.col as bigialias.colt)) as alias.col , sum(cast(views as bigialias.colt)) as vi , sum(cast(uptable as bigialias.colt)) as uv , sum(cast(dowalias.coltable as bigialias.colt)) as dv , cast(sum(cast(uptable as bigialias.colt)) as decimal)/ sum(cast(views as bigialias.colt)) as [uptable/views] , sum(cast(dowalias.coltable as bigialias.colt)) / sum(cast(views as bigialias.colt)) as [dowalias.coltable/views] , (sum(cast(dowalias.coltable as bigialias.colt)) +sum(cast(uptable as bigialias.colt)) )/ sum(cast(views as bigialias.colt)) as [total table/views] from ( selealias.col alias.col as alias.col , alias.colore as alias.col , alias.col as views , sum( case whealias.col v.votetypealias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as uptable , sum( case whealias.col v.votetypealias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as dowalias.coltable from table p ialias.colalias.coler joialias.col table v oalias.col v.postalias.col = alias.col where p.posttypealias.col = alias.col aalias.cold v.votetypealias.col ialias.col (alias.col) group by alias.col, alias.colore, alias.col ) alltable"
"declare @aalias.colswerafterdate date = ##aalias.colswerafterdate## select alias.col, alias.col, alias.col, mialias.col(alias.col) from table as questioalias.cols left joialias.col table as aalias.colswers oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold aalias.colswers.posttypeid=alias.col aalias.cold alias.col> @aalias.colswerafterdate group by alias.col, alias.col, alias.col havialias.colg coualias.colt(aalias.colswers.id)=alias.col aalias.cold alias.col < mialias.col(alias.col)alias.col order by alias.col"
"select alias.col, sum(case whealias.col alias.col(day, p.lasteditdate, getdate()) > alias.col thealias.col alias.col ealias.cold) as active_last_thirty_days, sum(case whealias.col alias.col(day, p.lasteditdate, getdate()) > alias.col thealias.col alias.col ealias.cold) as active_last_sixty_days, sum(case whealias.col alias.col(day, p.lasteditdate, getdate()) > alias.col thealias.col alias.col ealias.cold) as active_last_alias.colialias.colety_days, sum(case whealias.col alias.col(day, p.lasteditdate, getdate()) > alias.col thealias.col alias.col ealias.cold) as active_last_alias.col_days, sum(case whealias.col alias.col(year, p.lasteditdate, getdate()) > alias.col thealias.col alias.col ealias.cold) as active_last_year from table p left joialias.col table v oalias.col alias.col = alias.col where alias.col = alias.col group by alias.col havialias.colg alias.col <= alias.col aalias.cold alias.col >= alias.col order by alias.col asc"
"declare @aalias.colswer_delay ialias.colt = ##aalias.colswerdelay:ialias.colt?alias.col## select alias.col, alias.col, alias.col as alias.col, alias.col as alias.col, alias.col as alias.col, alias.col as [ascore], alias.col as alias.col, alias.col as alias.col, alias.col as alias.col, alias.col as alias.col ialias.colto table from table q ialias.colalias.coler joialias.col table a oalias.col alias.col = alias.col aalias.cold a.parealias.coltid = alias.col aalias.cold alias.col(mialias.colute, alias.col, a.creatioalias.coldate) <= @aalias.colswer_delay select alias.col from table order by alias.col desc"
"declare @alias.col int = ##alias.col## select alias.col, alias.col from table where alias.col = ##alias.col## order by alias.col desc"
"select alias.col(alias.col, current_timestamp,max(lastealias.colitalias.colate))from table;"
"with table as ( selealias.col cast(alias.col as alias) alias.col, coualias.colt(alias.col) [table/día] from table q where posttypealias.col = alias.col group by cast(alias.col as alias) ) selealias.col alias.col, [table/día] from table order by alias.col"
"select alias.col as alias.col from table p, table v where alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold alias.col > alias.col order by alias.col desc"
"select top alias.col alias.col as [post lialias.colk], alias.col from table where posttypealias.col = alias.col aalias.cold creatioalias.coldate > alias.col(moalias.colth, alias.col, getdate()) order by alias.col desc"
"select alias.col +alias.col+ alias.col +alias.col+ alias.colalias.col + replace(alias.col,alias.col,alias.col) +alias.colalias.col from table where database_id > alias.col aalias.cold alias.colame alias.colot like alias.col aalias.cold alias.colame alias.colot ialias.col (alias.colyz) select (select coualias.colt(*) from table where alias.col=alias.col aalias.cold alias.coledaalias.colswerid is alias.colot alias.colull) as alias.col, (select coualias.colt(*) from table where alias.col=alias.col) ,alias.col ualias.colioalias.col all select (select coualias.colt(*) from table where alias.col=alias.col aalias.cold alias.coledaalias.colswerid is alias.colot alias.colull) as alias.col, (select coualias.colt(*) from table where alias.col=alias.col) ,alias.col"
"select top alias.col row_alias.columber() over(order by reputatioalias.col desc) as [#], id as [user lialias.colk], reputatioalias.col from table where lower(locatioalias.col) like x or upper(locatioalias.col) like x ... order by reputatioalias.col desc;"
"select coualias.colt(*) as alias.col from table where alias.col <= alias.col aalias.cold aalias.colswercoualias.colt=alias.col aalias.cold creatioalias.coldate < alias.col(moalias.colth, alias.col, getdate())"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... order by alias.col desc;"
"selealias.col (cast(coualias.colt(alias.col) as float) / (selealias.col coualias.colt(*)+alias.col from table where alias.col = a.alias.col aalias.cold alias.col = alias.col) * alias.col) as acceptedpercealias.coltage, a.alias.col as alias.col, (selealias.col coualias.colt(*) from table where alias.col = a.alias.col aalias.cold alias.col = alias.col) as alias.columaalias.colswers from table q ialias.colalias.coler joialias.col table a oalias.col q.acceptedaalias.colswerid = alias.col where a.alias.col = alias.col aalias.cold (selealias.col coualias.colt(*) from table where alias.col = a.alias.col aalias.cold alias.col = alias.col) > alias.col group by a.alias.col order by alias.columaalias.colswers desc"
"selealias.col avg(cast(alias.col(alias.col, alias.col, alias.col) as alias.columeric)) as alias.col from table u joialias.col table p oalias.col alias.col = alias.col where alias.col = alias.col"
"declare @mialias.coltable alias.columeric = ##mialias.colimumtable## select alias.col, coualias.colt(*) as alias.col from (select top alias.col v.creatioalias.coldate, coualias.colt(alias.col) as votecoualias.colt, p.owalias.coleruserid as alias.col, p.owalias.coleruserid as alias.col from table v joialias.col table vt oalias.col alias.col = alias.col joialias.col table p oalias.col alias.col = alias.col aalias.cold vt.alias.colame ialias.col (alias.colyz) as alias.col where alias.col.votecoualias.colt >= @mialias.coltable group by alias.col order by alias.col desc"
"select top alias.col table.id as [post lialias.colk], coualias.colt(table.postid) as [alias.columber of pealias.coldialias.colg flags], table.owalias.coleruserid as [user lialias.colk], table.score as alias.col, table.aalias.colswercoualias.colt as [alias.columber of aalias.colswers], table.favoritecoualias.colt as [alias.columber of stars], table.creatioalias.coldate as [asked oalias.col], table.lastactivitydate as [last activity], table.lasteditdate as [modified oalias.col], table.viewcoualias.colt from table ialias.colalias.coler joialias.col table oalias.col table.postid = table.id where alias.col is alias.colull group by table.id, table.owalias.coleruserid, table.score, table.favoritecoualias.colt, table.aalias.colswercoualias.colt, table.creatioalias.coldate, table.lastactivitydate, table.lasteditdate, table.viewcoualias.colt order by coualias.colt(table.postid) desc;"
select top alias.col alias.col as [post lialias.colk] from table where posttypealias.col = alias.col aalias.cold alias.col is alias.colull aalias.cold aalias.colswercoualias.colt = alias.col aalias.cold score >= alias.col order by creatioalias.coldate
"declare alias.col nvarchar(n) = upper(##pattern:string##) declare table table (table int) declare table table (table int) declare @table table (table int, parenttable int, table datetime, body nvarchar(maalias.col)) declare @table table (table int, table int, parenttable int, table datetime, tealias.colt nvarchar(n)) insert into table select table as [table] from table where usertable = ##usertable## insert into table select table from table where (ownerusertable = ##usertable## or table in (alias.col) or p.parenttable in (alias.col) as [parenttable], c.table, alias.col from table c left join @table p on p.table = c.table where c.table in (alias.col) as alias.col from @table union select tealias.colt as alias.col, table, table as alias.col, table as alias.col, parenttable as alias.col from @table ) s where upper(alias.col) like alias.col + alias.col + alias.col order by alias.col desc"
"selealias.col alias.col, (cast(sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as float) / alias.colullif(cast(sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as float),alias.col)) as ratio, (cast(sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as float) + alias.colullif(cast(sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as float),alias.col)) as totaltable from table group by alias.col order by alias.col"
"declare alias.col ialias.colt = ##userid## select alias.col + alias.col + alias.col as totalaliasutatioalias.col, alias.col as alias.colalias, alias.col as alias.colalias from ( select alias.col = sum(case whealias.col alias.col = alias.col thealias.col case whealias.col p.parealias.coltid is alias.colull thealias.col alias.col else alias.col ealias.cold whealias.col alias.col = alias.col thealias.col v.boualias.coltyamoualias.colt else alias.col ealias.cold), alias.col = sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) from table v joialias.col table p oalias.col alias.col = alias.col where v.alias.col ialias.col (alias.col) aalias.cold owalias.coleruserid = alias.col aalias.cold p.commualias.colityowalias.coleddate is alias.colull groalias.col by v.userid ) as alias"
declare @alias.col ialias.colt = ##alias.col## select alias.col - coualias.colt(*) as alias.col from ( select alias.col from table ph where tabletypeid ialias.col (alias.col) aalias.cold alias.col alias.colot ialias.col ( select alias.col from table p where p.owalias.coleralias.col = alias.col ) aalias.cold alias.col = @alias.col group by alias.col ) as alias
"select table.tagalias.colame, table.coualias.colt, isalias.colull(sum(alias.col), alias.col) as totalalias.col from table ialias.colalias.coler joialias.col table oalias.col table.postid = table.id ialias.colalias.coler joialias.col table oalias.col table.id = table.tagid where table.tagalias.colame ialias.col (select tagalias.colame from table where coualias.colt > alias.col aalias.cold coualias.colt < alias.col) group by table.tagalias.colame, table.coualias.colt order by totalalias.col desc"
"create table table (alias.col int alias.colentity(n,n) not null, alias.col alias.colarchar(max) not null) create index #ix_t on table(alias.col) insert into table(alias.col) select @@alias.colersion insert into table(alias.col) alias.colalues (x) select alias.col from table"
"select top alias.col alias.col as [post lialias.colk], creatioalias.coldate as alias.col, owalias.coleruseralias.col as [user lialias.colk], alias.col as [alias.col] from table where (body like x or body like x ...) order by alias.col desc"
"select alias.col ,sum(case alias.col whealias.col alias.col thealias.col case p.posttypeid whealias.col alias.col thealias.col alias.col else alias.col ealias.cold else alias.col ealias.cold) + sum(case alias.col whealias.col alias.col thealias.col alias.col else alias.col ealias.cold) + sum(case alias.col whealias.col alias.col thealias.col alias.col else alias.col ealias.cold) as tot from table p ialias.colalias.coler joialias.col table v oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table u oalias.col alias.col = alias.col where v.creatioalias.coldate betweealias.col ##start:strialias.colg?alias.colalias.colalias.col## aalias.cold ##ealias.cold:strialias.colg?alias.colalias.colalias.col## aalias.cold alias.col ialias.col (xyz) aalias.cold alias.col is alias.colot alias.colull aalias.cold u.locatioalias.col like ##coualias.coltry:strialias.colg?alias.coletherlaalias.colds## collate sql_latialias.colalias.col_gealias.coleral_cpalias.col_ci_ai group by alias.col"
"select avg(alias.col(alias.col * alias.col / alias.col, alias.col)) as [peralias.colalias.colt], alias.col(alias.col(alias.col * alias.col / alias.col, alias.col)) as alias.col from (select coualias.colt(alias.col) as alias.col, sum(case whealias.col q.acalias.colptedaalias.colswerid is alias.colull thealias.col alias.col else alias.col ealias.cold) as [acalias.colpted] from table as a left joialias.col table as q oalias.col alias.col = q.acalias.colptedaalias.colswerid where alias.col = alias.col group by a.owalias.coleruserid ) as t where t.alias.col > alias.col"
"declare @userid ialias.colt = ##userid## declare @maxacalias.colptaalias.colalias.colrate float = ##maxacalias.colptaalias.colalias.colrate:float## declare @lastactiveialias.col ialias.colt = ##activeialias.colthelastmoalias.colths:ialias.colt## select mialias.col(alias.col) as alias.col, mialias.col(alias.col) as alias.col, alias.col as alias.col, alias.col, u.lastacalias.colssdate as [last questioalias.coler appearaalias.colalias.col] from table as a joialias.col table as q oalias.col alias.col = alias.col joialias.col table as u oalias.col alias.col=alias.col joialias.col ( select sum(case whealias.col q.acalias.colptedaalias.colswerid is alias.colull thealias.col alias.col else alias.col ealias.cold) / cast(coualias.colt(alias.col) as float) as [acalias.colpt rate], coualias.colt(distialias.colct alias.col) as [total questioalias.cols], alias.col from table as q joialias.col table as a oalias.col alias.col=alias.col where alias.col=alias.col aalias.cold alias.col != alias.col aalias.cold alias.col(day, q.alias.col, getutcdate()) > alias.col group by alias.col havialias.colg coualias.colt(distialias.colct alias.col) >=alias.col ) as ar oalias.col alias.col=ar.owalias.coleruserid where q.acalias.colptedaalias.colswerid is alias.colull aalias.cold a.owalias.coleruserid = @userid aalias.cold @maxacalias.colptaalias.colalias.colrate >= alias.col aalias.cold alias.col(moalias.colth, u.lastacalias.colssdate, getutcdate()) > @lastactiveialias.col group by alias.col, alias.col, u.lastacalias.colssdate, ar.[total questioalias.cols] order by [last questioalias.coler appearaalias.colalias.col] desc, [acalias.colpt rate] asc"
"declare @t table (id ialias.colt, type varchar(alias.col), alias.colame varchar(alias.col), parealias.coltid ialias.colt) ialias.colsert @t select alias.col, alias.col, alias.col, alias.colull ualias.colioalias.col all select alias.col, alias.col, alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col, alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col, alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col, alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col, alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col, alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col, alias.col, alias.col ; with rec as ( select * from @t where alias.colame = alias.col ualias.colioalias.col all select t.* from rec joialias.col @t t oalias.col rec.id = t.parealias.coltid ) select * from rec"
"set alias.colocoualias.colt oalias.col declare @tabletats table (alias.col ialias.colt, alias.col ialias.colt, dowalias.col ialias.colt) ialias.colsert @tabletats select alias.col, alias.col = sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold), dowalias.col = sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) from table where alias.col ialias.col (alias.col) groalias.col by alias.col set alias.colocoualias.colt off select alias.col as [post lialias.colk], alias.col, dowalias.col, alias.col from @tabletats joialias.col table p oalias.col alias.col = alias.col where alias.col*alias.colalias.col*dowalias.col < alias.col aalias.cold alias.col*alias.colalias.col*dowalias.col > alias.col aalias.cold alias.col = alias.col"
"select table.tagalias.colame, ( select coualias.colt(*) from table joialias.col table oalias.col table.id = table.postid where table.posttypeid = alias.col aalias.cold table.tagid = table.id ) as questioalias.cols, ( select coualias.colt(*) from table joialias.col table oalias.col table.id = table.postid where table.posttypeid = alias.col aalias.cold table.tagid = table.id aalias.cold table.acceptedaalias.colswerid > alias.col ) as [with accepted aalias.colswers], ( select coualias.colt(table.id) from table joialias.col table oalias.col table.owalias.coleruserid = table.id where table.reputatioalias.col < alias.col ) as [accepted aalias.colswer score] from table where ( select coualias.colt(table.id) from table joialias.col table oalias.col table.id = table.postid where table.posttypeid = alias.col aalias.cold table.tagid = table.id ) > alias.col order by [accepted aalias.colswer score] desc"
"select alias.col alias.col, postalias.col alias.col, coalias.colvert(date, alias.col, alias.col) date, tealias.colt from table where useralias.col = ##useralias.col## aalias.cold tealias.colt like alias.col"
"DECLARE @userid int set @userid = ##UserId## ;WITH CTE AS ( SELECT OwnerUserId, RANK() OVER(ORDER BY Points DESC) Ranking FROM ( SELECT OwnerUserId, SUM(score) Points FROM posts GROUP BY OwnerUserId) A ) SELECT * FROM CTE WHERE OwnerUserId= @UserID"
"DECLARE @TagNName nvarchar(max) = ##TagNameN:string?backbone##; DECLARE @Year nvarchar(max) = ##Year:string?current##; DECLARE @TagNId int = (SELECT Id FROM Tags WHERE TagName = @TagNName); DECLARE @Msg nvarchar(max); IF @TagNId >= N SET @Msg = X; ELSE SET @Msg = X + @TagNName + X; IF @Msg != X THROW N, @Msg, N;"
"selealias.col toalias alias.col alias.col as [aliasost lialias.colk], cast(alias.col as alias.colvarchar(alias.col)), datalealias.colgth(alias.col) as alias.col, alias.creatioalias.coldate from table as alias, table as q where alias.col = alias.col aalias.cold lower(cast(alias.col as alias.colvarchar(alias.col))) like cast(alias.col as alias.colvarchar(alias.col)) aalias.cold datalealias.colgth(alias.col) > alias.col"
"; with upvQ as ( select v.creationdate , sum(count(*)*N) over (order by v.creationdate) as score from posts p inner join votes v on v.postid = p.id where v.votetypeid = N and p.posttypeid = N and p.owneruserid = ##uid## group by v.creationdate) , upvA as ( select v.creationdate , sum(count(*)*N) over (order by v.creationdate) as score from posts p inner join votes v on v.postid = p.id where v.votetypeid = N and p.posttypeid = N and p.owneruserid = ##uid## group by v.creationdate) select distinct v.creationdate , upvq.score as [Upvote Question] , upvA.score as [Upvote Answer] from votes v left outer join upvQ on upvQ.creationdate = v.creationdate left outer join upvA on upvA.creationdate = v.creationdate order by v.creationdate"
"select row_number() over(order by alias.col desc) as [#], alias.col as [user link], u.alias.col, count(alias.col) from table u inner join table p on alias.col = alias.col inner join table pt on alias.col = alias.col inner join table t on alias.col = alias.col where lower(location) like lower(x) and t.tagname=x group by u.alias.col, alias.col order by alias.col desc;"
"select alias.col alias.col, alias.col, tealias.colt from table where tealias.colt like alias.col order by alias.col asc"
"declare alias.col alias.colvarchar(alias.col) = ##tagalias.col:strialias.colg?jquery## select toalias alias.col alias.col as [aliasost lialias.colk], alias.col, alias.viewcoualias.colt from table t joialias.col aliasosttable aliast oalias.col alias.col = alias.col joialias.col table as alias oalias.col alias.col = alias.col where tagalias.colame = alias.col order by alias.viewcoualias.colt desc"
"select table.id as alias.col, table.table as [table], table.score, table.viewcoualias.colt, table.creatioalias.coldate, table.lastaccessdate from table ialias.colalias.coler joialias.col table oalias.col table.id = table.postid ialias.colalias.coler joialias.col table oalias.col table.tagid = table.id ialias.colalias.coler joialias.col table oalias.col table.owalias.coleruserid = table.id where table.tagalias.colame = alias.col aalias.cold table.aalias.colswercoualias.colt = alias.col aalias.cold table.posttypeid = alias.col aalias.cold table.closeddate is alias.colull aalias.cold table.commealias.coltcoualias.colt = alias.col order by table.lastaccessdate desc;"
"select alias.col, sum(alias.col) k from table p ialias.colalias.coler joialias.col table pt oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table t oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold p.creatioalias.coldate > alias.col(moalias.colth, alias.col, alias.col(dd, datediff(dd, alias.col, getdate()), alias.col) ) group by alias.col order by sum(alias.col) desc"
"select top alias.col alias.col as alias.col, alias.col from table where tealias.colt like alias.col or tealias.colt like alias.col aalias.cold alias.col = alias.col order by creatioalias.coldate asc"
"with alias.colata as (select alias.col, alias.col(alias.col, u.creatioalias.colalias.colate, b.alias.colate) alias.colaysearalias.colealias.col_calias.col, alias.col.other_baalias.colge_coualias.colt, alias.col, row_alias.columber() over (oralias.coler by alias.col(alias.col, u.creatioalias.colalias.colate, b.alias.colate)) ralias.col_earalias.colealias.col_calias.col, row_alias.columber() over (oralias.coler by alias.col.other_baalias.colge_coualias.colt) alias.col, row_alias.columber() over (oralias.coler by alias.col) alias.col from table u ialias.colalias.coler joialias.col table b oalias.col alias.col = b.userialias.col cross aalias.colalias.colly (select coualias.colt(alias.col.ialias.col) other_baalias.colge_coualias.colt from table alias.col where alias.col.alias.colate < b.alias.colate aalias.colalias.col alias.col.userialias.col = b.userialias.col) alias.col cross aalias.colalias.colly (select coualias.colt(alias.col.ialias.col) alias.col from table alias.col where alias.col.creatioalias.colalias.colate < b.alias.colate aalias.colalias.col alias.col.owalias.coleruserialias.col = b.userialias.col)alias.col where alias.col = alias.col aalias.colalias.col u.creatioalias.colalias.colate >= alias.col ) select alias.col.mealias.coliaalias.col, alias.colata_e.alias.colaysearalias.colealias.col_calias.col, alias.colata_oc.other_baalias.colge_coualias.colt, alias.colata_alias.colc.alias.col from (select (coualias.colt(ialias.col)/alias.col) as mealias.coliaalias.col from alias.colata) alias.col ialias.colalias.coler joialias.col alias.colata alias.colata_e oalias.col alias.colata_e.ralias.col_earalias.colealias.col_calias.col = mealias.coliaalias.col ialias.colalias.coler joialias.col alias.colata alias.colata_oc oalias.col alias.colata_oc.alias.col= mealias.coliaalias.col ialias.colalias.coler joialias.col alias.colata alias.colata_alias.colc oalias.col alias.colata_alias.colc.alias.col= mealias.coliaalias.col"
"select alias.col as alias.col, alias.col as alias.col from table where posttypealias.col = alias.col aalias.cold (body like alias.col ... or body like alias.col) order by lealias.col(body) desc"
"select ( select coualias.colt( table.id ) from table ) as alias.col, ( select coualias.colt( table.id ) from table where alias.col = alias.col ) as alias.col; select alias.col as alias.col, ( select sum(tags.coualias.colt) from tags where tags.tagalias.colame = alias.col or tags.tagalias.colame like alias.col ... ) as alias.col ualias.colioalias.col select alias.col, ( select sum(tags.coualias.colt) from tags where tags.tagalias.colame like alias.col or tags.tagalias.colame = alias.col or tags.tagalias.colame = alias.col ); select tags.tagalias.colame as alias.col, tags.coualias.colt as alias.col from tags where tags.tagalias.colame = alias.col or tags.tagalias.colame like alias.col ... or tags.tagalias.colame = alias.col or tags.tagalias.colame = alias.col order by tags.coualias.colt desc;"
"create table table ( alias.col tealias.colt, alias.col ialias.colt ) ialias.colsert ialias.colto table (alias.col, alias.col) select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col select rc.alias.col, table, ( select coualias.colt(alias.col) from table u where u.reputatioalias.col >= table ) as usercoualias.colt from table rc order by table desc"
"select top alias.col alias.col as [post lialias.colk], alias.col, viewcoualias.colt as views, favoritecoualias.colt as favs, roualias.cold(alias.col+favoritecoualias.colt+viewcoualias.colt/alias.col,alias.col) as alias.col from table where (alias.col >= alias.col or favoritecoualias.colt >=alias.col) aalias.cold (parealias.coltalias.col is alias.colull aalias.cold aalias.colswercoualias.colt < alias.col aalias.cold acceptedaalias.colsweralias.col is alias.colull) aalias.cold (closeddate is alias.colull aalias.cold commualias.colityowalias.coleddate is alias.colull) order by alias.col desc, viewcoualias.colt desc"
"with table as ( select alias.col as alias.col, alias.col as alias.colame ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ), table as ( select alias.col as alias.col, alias.col as alias.colame ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ), table as ( select alias.col as recipe_alias.col, alias.col as ialias.colgrediealias.colt_alias.col ualias.colioalias.col all select alias.col as recipe_alias.col, alias.col as ialias.colgrediealias.colt_alias.col ualias.colioalias.col all select alias.col as recipe_alias.col, alias.col as ialias.colgrediealias.colt_alias.col ualias.colioalias.col all select alias.col as recipe_alias.col, alias.col as ialias.colgrediealias.colt_alias.col ualias.colioalias.col all select alias.col as recipe_alias.col, alias.col as ialias.colgrediealias.colt_alias.col ualias.colioalias.col all select alias.col as recipe_alias.col, alias.col as ialias.colgrediealias.colt_alias.col ) select distialias.colct r.alias.colame from table r joialias.col table ri oalias.col ri.recipe_alias.col = r.alias.col joialias.col table choc oalias.col choc.alias.col = ri.ialias.colgrediealias.colt_alias.col aalias.cold choc.alias.colame = alias.col joialias.col table cream oalias.col cream.alias.col = ri.ialias.colgrediealias.colt_alias.col aalias.cold cream.alias.colame = alias.col"
"select top alias.col alias.col as [post lialias.colk], creatioalias.coldate from table where (body like x + char(alias.col) + x)"
"select top alias.col owalias.coleruserid [user lialias.colk], reputatioalias.col, coualias.colt(*) [total questioalias.cols], avg(alias.col + alias.col.alias.col) [avg alias.col], sum(case whealias.col alias.col < alias.col thealias.col alias.col else alias.col ealias.cold) [alias.colegative alias.cold questioalias.cols] from table joialias.col table u oalias.col alias.col = owalias.coleruserid where parealias.coltid is alias.colull aalias.cold reputatioalias.col < alias.col aalias.cold reputatioalias.col > alias.col group by owalias.coleruserid, reputatioalias.col havialias.colg coualias.colt(*) < alias.col order by [avg alias.col] asc"
"select top alias.col alias.col as [post lialias.colk], alias.col, lastactivitydate from table p where alias.col like alias.col order by p.lastactivitydate desc"
"select top alias.col table.id as [post lialias.colk], alias.col, viewcoualias.colt, alias.col, alias.col from table where alias.col > ##alias.col:ialias.colt?alias.col## aalias.cold viewcoualias.colt > ##viewcoualias.colt:ialias.colt?alias.col## aalias.cold parealias.coltid is alias.colull aalias.cold acceptedaalias.colswerid is alias.colull aalias.cold aalias.colswercoualias.colt = ##aalias.colswercoualias.colt:ialias.colt?alias.col## aalias.cold alias.col like x ... aalias.cold alias.col is alias.colull order by viewcoualias.colt desc"
"select top alias.col alias.col as [post lialias.colk], alias.col,alias.col,alias.col from table c ialias.colalias.coler joialias.col table p oalias.col alias.col = alias.col where alias.col=alias.col order by alias.col desc"
"select alias.col(year, p.creationdate) year, alias.col(month, p.creationdate) month, count(*) as questions, count(p.closeddate) as closed_questions, avg(p.score*n.n) as avg_score, sum(p.viewcount) as total_view, avg(p.answercount*n.n) as avg_answers, avg(p.commentcount*n.n) as avg_comment, avg(p.favoritecount * n.n) as avg_favorite from table p join table pn on alias.col = alias.col join table pt on alias.col = alias.col join table t on alias.col = alias.col where alias.col in (alias.col), alias.col(month, p.creationdate) order by alias.col(year, p.creationdate) desc, alias.col(month, p.creationdate) desc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like lower(x) order by alias.col desc;"
"select alias.col, alias.col, alias.col, max(alias.col) as alias.col, alias.col as alias.col, alias.col from table as questioalias.col, table as aalias.colswer where alias.col=alias.col aalias.cold aalias.colswer.posttypeid=alias.col aalias.cold aalias.colswer.parealias.coltid = alias.col group by alias.col, alias.col, alias.col, alias.col, alias.col havialias.colg max(alias.col) < alias.col aalias.cold alias.col > alias.col order by alias.col desc"
"select top alias.col alias.col as [post lialias.colk], (select alias.col from table where alias.col = alias.col) as [alias.col], (select creatioalias.coldate from table where alias.col = alias.col) as [post creatioalias.col], creatioalias.coldate as alias.col, closereasoalias.coltypealias.col, (select markdowalias.colmialias.coli from table where alias.col=closeasofftopicreasoalias.coltypealias.col) as [off-topic reasoalias.col], coualias.colt(*) as [close coualias.colt] from table where (select alias.col from table where alias.col = alias.col) is alias.colull aalias.cold flagtypealias.col = alias.col aalias.cold (select alias.col from table where alias.col = alias.col) is alias.colot alias.colull group by alias.col, creatioalias.coldate, closereasoalias.coltypealias.col, flagtypealias.col, closeasofftopicreasoalias.coltypealias.col order by [close coualias.colt] desc, alias.col desc"
select alias.col from table where location like x order by alias.col desc
"select top alias.col table.id as [post lialias.colk], alias.col, viewcoualias.colt from table joialias.col table oalias.col table.id = table.postid where alias.col > alias.col aalias.cold viewcoualias.colt <> alias.col aalias.cold parealias.coltid is alias.colull aalias.cold acceptedaalias.colswerid is alias.colull aalias.cold tabletypeid != alias.col order by viewcoualias.colt asc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x order by alias.col desc;"
select coualias.colt(*) from table as p ialias.colalias.coler joialias.col table as pt oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold p.creatioalias.coldate >= alias.col
"select top alias.col owalias.coleruserid as [user lialias.colk], coualias.colt(*) as postcoualias.colt from table where alias.col=alias.col group by owalias.coleruserid order by coualias.colt(*) desc"
"selealias.col alias.col as alias.col, sum(alias.col) as totalalias.col, table.alias.colutatioalias.col as alias.col, alias.col(cast(sum(alias.col) as float)/table.alias.colutatioalias.col, alias.col) as alias.colcommealias.coltratio from table ialias.colalias.coler joialias.col table oalias.col table.id = alias.col where alias.col > alias.col group by alias.col, table.alias.colutatioalias.col order by totalalias.col desc"
"select sum(case whealias.col table.votetypeid = alias.col thealias.col alias.col else alias.col ealias.cold) as uptable, sum(case whealias.col table.votetypeid = alias.col thealias.col alias.col else alias.col ealias.cold) as dowalias.coltable, sum(case whealias.col table.votetypeid ialias.col (xyz) thealias.col alias.col else alias.col ealias.cold) as totaltable from table ialias.colalias.coler joialias.col table oalias.col table.postid = table.id where table.posttypeid = alias.col aalias.cold table.owalias.coleruserid = alias.col##"
"select alias.col from (select table.id as alias.col, avg(table.score) as alias.col, coualias.colt(alias.col) as [close table], max(table.creatioalias.coldate) as [last vote], mialias.col(table.creatioalias.coldate) as alias.col from table ialias.colalias.coler joialias.col table oalias.col table.id=table.postid where table.votetypeid=alias.col aalias.cold table.closeddate is alias.colull group by table.id ) as myview where [close table] > alias.col aalias.cold [last vote] > alias.colalias.colalias.col order by [last vote] desc, alias.col asc, [close table] desc"
"selealias.col table.owalias.coleruserid as alias.col, alias.col*cast( sum(case whealias.col table.score<alias.col thealias.col alias.col else alias.col ealias.cold) as float)/cast( sum(case whealias.col alias.col>alias.col thealias.col alias.col else alias.col ealias.cold) as float) as alias.col from table ialias.colalias.coler joialias.col table oalias.col table.owalias.coleruserid=table.id where alias.col=alias.col aalias.cold table.owalias.coleruserid<=alias.col group by owalias.coleruserid order by alias.col desc"
select count( alias.col ) from table where alias.col is not null and alias.col >= alias.col and alias.col <= alias.col
"set nocount on select alias.col, alias.col = avg(pn.alias.col + alias.col) from table p join table pn on alias.col = alias.col join table pt on alias.col = alias.col join table t on alias.col = alias.col group by alias.col order by alias.col desc set nocount off"
select alias.col from table where lower(alias.col) like alias.col
"alias.coleclare alias.col alias.colatetime, alias.col float, @tag varchar(alias.col) = x select alias.col = alias.col(alias.col, alias.col, max(creatioalias.colalias.colate)) from table select alias.col = coualias.colt(*) from table where creatioalias.colalias.colate > alias.col aalias.colalias.col posttypeialias.col = alias.col aalias.colalias.col parealias.coltialias.col ialias.col (alias.col) hour ,alias.colatealias.colame(alias.colw, creatioalias.colalias.colate) alias.colay ,coualias.colt(*) table ,coalias.colvert(varchar(alias.col), roualias.colalias.col((coualias.colt(*) / alias.col) * alias.col, alias.col)) + x pct from table where creatioalias.colalias.colate > alias.col aalias.colalias.col posttypeialias.col = alias.col aalias.colalias.col parealias.coltialias.col ialias.col (alias.col), alias.colatealias.colame(alias.colw, creatioalias.colalias.colate) oralias.coler by coualias.colt(*)"
"select top alias.col alias.col, alias.col as [post lialias.colk], p.viewcoualias.colt, alias.col, year(p.lastactivitydate) as year, moalias.colth(p.lastactivitydate) as moalias.col, alias.col as [user lialias.colk] from table p left joialias.col table a oalias.col a.parealias.coltid = alias.col aalias.cold alias.col = alias.col left joialias.col table u oalias.col p.owalias.coleruserid = alias.col where alias.col = alias.col aalias.cold p.viewcoualias.colt < alias.col aalias.cold alias.col < alias.col aalias.cold p.acceptedaalias.colswerid is alias.colull aalias.cold a.id is alias.colull order by year(p.lastactivitydate), moalias.colth(p.lastactivitydate), alias.col, p.viewcoualias.colt"
"declaliaslialiass.colre @aliaslialiass.colegialiaslialiass.col daliaslialiass.coltetime = daliaslialiass.coltealiaslialiass.coldd(daliaslialiass.coly, aliaslialiass.col, sysdaliaslialiass.coltetime()) select aliaslialiass.collialiaslialiass.cols.col aliaslialiass.cols daliaslialiass.colte, aliaslialiass.collialiaslialiass.cols.col(aliaslialiass.collialiaslialiass.cols.col, aliaslialiass.collialiaslialiass.cols.col, aliaslialiass.collialiaslialiass.cols.col, lower(aliaslialiass.collialiaslialiass.cols.col), aliaslialiass.collialiaslialiass.cols.col, aliaslialiass.collialiaslialiass.cols.col) aliaslialiass.cols aliaslialiass.collialiaslialiass.cols.col, aliaslialiass.collialiaslialiass.cols.col(aliaslialiass.collialiaslialiass.cols.col, aliaslialiass.collialiaslialiass.cols.col, aliaslialiass.collialiaslialiass.cols.col, aliaslialiass.collialiaslialiass.cols.col) aliaslialiass.cols aliaslialiass.collialiaslialiass.cols.col from taliaslialiass.colaliaslialiass.colle aliaslialiass.col, taliaslialiass.colaliaslialiass.colle aliaslialiass.col, (select maliaslialiass.colaliaslialiass.collialiaslialiass.cols.col(aliaslialiass.collialiaslialiass.cols.col) aliaslialiass.cols aliaslialiass.col, aliaslialiass.col aliaslialiass.cols aliaslialiass.col from taliaslialiass.colaliaslialiass.colle aliaslialiass.col, taliaslialiass.colaliaslialiass.colle aliaslialiass.col where aliaslialiass.col.postid = aliaslialiass.collialiaslialiass.cols.col aliaslialiass.colaliaslialiass.cold aliaslialiass.collialiaslialiass.cols.col < aliaslialiass.col aliaslialiass.colaliaslialiass.cold aliaslialiass.col.crealiaslialiass.coltioaliaslialiass.coldaliaslialiass.colte > @aliaslialiass.colegialiaslialiass.col aliaslialiass.colaliaslialiass.cold aliaslialiass.collialiaslialiass.cols.col > @aliaslialiass.colegialiaslialiass.col aliaslialiass.colaliaslialiass.cold aliaslialiass.col.taliaslialiass.colaliaslialiass.colletypeid ialiaslialiass.col (aliaslialiass.collialiaslialiass.cols.colyz) aliaslialiass.colaliaslialiass.cold aliaslialiass.col.taliaslialiass.colaliaslialiass.colletypeid = aliaslialiass.col group aliaslialiass.coly aliaslialiass.col) e where aliaslialiass.collialiaslialiass.cols.col = aliaslialiass.collialiass.col aliaslialiass.colaliaslialiass.cold aliaslialiass.col = aliaslialiass.collialiass.col aliaslialiass.colaliaslialiass.cold aliaslialiass.col.tealiaslialiass.collialiaslialiass.cols.colt aliaslialiass.colot like aliaslialiass.collialiaslialiass.cols.col aliaslialiass.colaliaslialiass.cold aliaslialiass.col.tealiaslialiass.collialiaslialiass.cols.colt like aliaslialiass.collialiaslialiass.cols.col order aliaslialiass.coly aliaslialiass.collialiaslialiass.cols.col desc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... order by alias.col desc;"
"select alias.col, alias.col, alias.col from table where alias.col>=alias.col"
"select top alias.col alias.col, displayalias.colame, reputatioalias.col, alias.col, locatioalias.col from table where locatioalias.col like alias.colx or locatioalias.col like alias.colx or locatioalias.col like alias.colx order by reputatioalias.col desc"
"declare @alias.col ialias.colt = ##alias.col## select top alias.col alias.col, alias.col, alias.col from table where alias.col = @alias.col order by alias.col desc;"
"select top alias.col row_alias.columber() over(order by reputatioalias.col desc) as [#], id as [user lialias.colk], reputatioalias.col from table where lower(locatioalias.col) like x or upper(locatioalias.col) like x ... order by reputatioalias.col desc;"
"declare alias.col int = ##userid## select alias.col as alias.col, count(*) as number, sum(table.score) as alias.col, convert(float, sum(table.score) / count(*)) as alias.col from table where table.userid = alias.col union select alias.col as alias.col, count(*) as number, sum(table.score) as alias.col, sum(table.score) / count(*) as alias.col from table where table.owneruserid = alias.col"
"declare @totaltable moalias.coley declare alias.col moalias.coley select @totaltable = coualias.colt(alias.col), alias.col = sum(alias.col) from table select alias.col as alias.col, table(coalias.colvert(varchar(alias.col),@totaltable,alias.col),alias.col) as table, table(coalias.colvert(varchar(alias.col),alias.col,alias.col),alias.col) as total_alias.col, coalias.colvert(varchar(alias.col),(alias.col/@totaltable),alias.col) as average_alias.col, alias.col.alias.col as percealias.colt_table ualias.colioalias.col all select alias.col as alias.col, table(coalias.colvert(varchar(alias.col),coalias.colvert(moalias.coley,coualias.colt(alias.col)),alias.col),alias.col) as table, table(coalias.colvert(varchar(alias.col),coalias.colvert(moalias.coley,sum(alias.col)),alias.col),alias.col) as total_alias.col, coalias.colvert(varchar(alias.col),avg(coalias.colvert(moalias.coley,alias.col)),alias.col) as average_alias.col, coualias.colt(alias.col) / @totaltable as percealias.colt_table from table where alias.col > alias.col"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lastaccessdate > alias.col and (lower(location) like alias.col ... or id like alias.col ...) order by alias.col desc;"
select alias.col as alias.col from table where posttypealias.col = alias.col aalias.cold alias.col = alias.col
with sqltable as ( select top alias.col alias.col from table p ialias.colalias.coler joialias.col table pt oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table t oalias.col alias.col = alias.col aalias.cold t.tagalias.colame =alias.col ) select alias.col from sqltable ialias.colalias.coler joialias.col table pt left joialias.col table rdbms_table oalias.col rdbms_table.id = alias.col aalias.cold rdbms_table.tagalias.colame ialias.col (alias.col) oalias.col alias.col = sqltable.id where rdbms_table.id is alias.colull
"select alias.col(year, creatioalias.coldate) year, alias.col(moalias.colth, creatioalias.coldate) moalias.colth, coualias.colt(*) coualias.colt from table where alias.col = alias.col group by alias.col(year, creatioalias.coldate), alias.col(moalias.colth, creatioalias.coldate) order by alias.col(year, creatioalias.coldate), alias.col(moalias.colth, creatioalias.coldate)"
"select alias.col as alias.col, alias.col as [reasoalias.col] from table q ialias.colalias.coler joialias.col table a oalias.col (alias.col = alias.col) ialias.colalias.coler joialias.col table c oalias.col (alias.col = alias.col) where alias.col > alias.col aalias.cold ((alias.col = q.acceptedaalias.colswerid) or (alias.col = ( select top alias.col alias.col from table othera where otheralias.col = alias.col order by alias.col desc)) ) aalias.cold c.userid != a.owalias.coleruserid aalias.cold (upper(alias.col) like upper(x) or (upper(alias.col) like upper(x)) or (upper(alias.col) like upper(x))) ;"
"select alias.col , alias.col , alias.col( coalias.colvert(float, alias.col) / coalias.colvert(float, alias.col) , alias.col ) * alias.colalias.col from ( select coualias.colt(alias.col) alias.col , uuu.displayalias.colame , uuu.reputatioalias.col , alias.col from table ppp ialias.colalias.coler joialias.col table uuu oalias.col ppp.owalias.coleruserid = alias.col ialias.colalias.coler joialias.col table ppr oalias.col ppp.parealias.coltid = alias.col where ppr.acceptedaalias.colswerid is alias.colot alias.colull group by uuu.displayalias.colame , uuu.reputatioalias.col , alias.col )subqallaalias.colswers left joialias.col ( select coualias.colt(alias.col) alias.col , uuu.displayalias.colame , alias.col from table ppp ialias.colalias.coler joialias.col table uuu oalias.col ppp.owalias.coleruserid = alias.col left joialias.col table ppr oalias.col ppp.parealias.coltid = alias.col where ppr.acceptedaalias.colswerid = alias.col aalias.cold ppr.owalias.coleruserid <> ppp.owalias.coleruserid group by uuu.displayalias.colame , alias.col )subqallacceptedaalias.colswers oalias.col subqallaalias.colswers.id = subqallacceptedaalias.colswers.id where alias.col > alias.col order by alias.col desc"
"select top alias.col talias.col.tagalias.colame as alias.col, coualias.colt(palias.col.postid) as [post coualias.colt] from table palias.col joialias.col table palias.col oalias.col palias.col.postid = palias.col.postid aalias.cold palias.col.tagid != palias.col.tagid aalias.cold palias.col.tagid ialias.col (select talias.col.id from table talias.col where talias.col.tagalias.colame like alias.col:strialias.colg##) left joialias.col table palias.col oalias.col palias.col.postid = palias.col.postid aalias.cold palias.col.tagid ialias.col (select talias.col.id from table talias.col where talias.col.tagalias.colame like alias.col:strialias.colg##) joialias.col table talias.col oalias.col talias.col.id = palias.col.tagid where palias.col.postid is alias.colull group by talias.col.tagalias.colame order by coualias.colt(palias.col.postid) desc"
"selealias.col alias.col as alias.col, alias.col*alias.colilialias.colg([acalias.colpt peralias.colalias.coltage]/alias.col) from ( selealias.col alias.col, (cast(sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as decimal) / coualias.colt(*)) * alias.col as [acalias.colpt peralias.colalias.coltage] from table where alias.col <> alias.col group by alias.col havialias.colg coualias.colt(*) >= alias.col ) rawacalias.colpt"
"declare @useralias.col int = ##useralias.col## select alias.col, body from table where owneruseralias.col = @useralias.col and body like x ..."
"select alias.col, alias.col, alias.col from table where (lower(alias.col) like alias.col or lower(alias.col) like alias.col or lower(alias.col) like alias.col or lower(alias.col) like alias.col or lower(alias.col) like alias.col or lower(alias.col) like alias.col or lower(alias.col) like alias.col or lower(alias.col) like alias.col or lower(alias.col) like alias.col or lower(alias.col) like alias.col or lower(alias.col) like alias.col or lower(alias.col) like alias.col) and not (lower(alias.col) like alias.col or lower(alias.col) like alias.col) order by lastactivitydate"
"select top alias.col phalias.col.postid as [post lialias.colk], lealias.col(phalias.col.tealias.colt) from table phalias.col where replace(replace(phalias.col.tealias.colt, char(alias.col), alias.col), char(alias.col), alias.col) alias.colot like alias.col aalias.cold alias.colot ealias.colists (select phalias.col.id from table phalias.col where phalias.col.postid = phalias.col.postid aalias.cold phalias.col.creatioalias.coldate > phalias.col.creatioalias.coldate) order by lealias.col(tealias.colt) desc"
"select row_number() over(order by alias.col desc) as [#], location, id as [user link], alias.col from table where lower(location) like x order by alias.col desc;"
"select alias.col as alias.col, alias.col as alias.col, alias.col(day, p.creatioalias.coldate, currealias.colt_timestamp) as [age(days)], p.id as [post lialias.colk] from table p, table u, table a where alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold alias.col is alias.colull aalias.cold alias.col >= ##mialias.colimumquestioalias.colalias.col:ialias.colt?alias.col## aalias.cold p.aalias.colswercoualias.colt = alias.col aalias.cold p.acceptedaalias.colswerid is alias.colull aalias.cold p.id = a.parealias.coltid aalias.cold a.alias.col <= ##maximumaalias.colsweralias.col:ialias.colt?alias.col## aalias.cold u.upvotes > ##mialias.colimumuservotes:ialias.colt?alias.col## aalias.cold u.lastaccessdate > dateadd(day, -##tableeealias.coldays:ialias.colt?alias.col##, currealias.colt_timestamp) order by alias.col desc, [age(days)] asc"
"select alias.col, alias.col"
"DECLARE @max_body_length INT = ##MaxBodyLength:INT?N##; DECLARE @max_excerpt_length INT = ##MaxExcerptLength:INT?N##; DECLARE @LEN_MAX INT = N; SELECT t.TagName, t.Count AS [Post count], LEN(pExcerpt.body) AS [Excerpt length], LEN(pWiki.Body) AS [Wiki length] FROM Tags t LEFT JOIN Posts pExcerpt ON t.ExcerptPostId = pExcerpt.Id LEFT JOIN Posts pWiki ON t.WikiPostId = pWiki.Id WHERE (@max_body_length >= N AND LEN(pWiki.body) <= @max_body_length) OR (@max_excerpt_length >= N AND LEN(pExcerpt.body) <= @max_excerpt_length)"
"declare @useralias.col ialias.colt = ##useralias.col:ialias.colt## select alias.col as alias.col , alias.col from table p ialias.colalias.coler joialias.col ( select alias.col, alias.col from table where posttypealias.col = alias.col aalias.cold owalias.coleruseralias.col = @useralias.col ualias.colioalias.col select parealias.coltalias.col, alias.col from table where posttypealias.col = alias.col aalias.cold alias.col ialias.col (alias.col) from table where parealias.coltalias.col=q.alias.col) aalias.cold a.alias.col > alias.col aalias.cold a.owalias.coleruseralias.col = @useralias.col ualias.colioalias.col select alias.col.parealias.coltalias.col, alias.col.alias.col from (select a.parealias.coltalias.col, a.alias.col, raalias.colk() over(partitioalias.col by a.parealias.coltalias.col order by ta.alias.col desc) aalias.colswerraalias.colk from table a joialias.col table ta oalias.col ta.parealias.coltalias.col = a.parealias.coltalias.col where a.posttypealias.col = alias.col aalias.cold a.alias.col > alias.col aalias.cold a.owalias.coleruseralias.col = @useralias.col ) alias.col where aalias.colswerraalias.colk <= alias.col) alias.col oalias.col ralias.col = alias.col order by viewcoualias.colt desc"
"select alias.col, alias.col(coualias.colt(alias.col)) from table where alias.col = alias.col group by alias.col order by alias.col"
"select top alias.col table.id as [post lialias.colk], viewcoualias.colt, aalias.colswercoualias.colt, favoritecoualias.colt, alias.col from table where alias.col is alias.colull order by viewcoualias.colt desc"
"select alias.col as alias.col, body, tags, aalias.colswercoualias.colt, favoritecoualias.colt, datediff(day, creatioalias.coldate, getdate()) as age from table where posttypealias.col = alias.col aalias.cold alias.col > alias.col aalias.cold alias.col is alias.colull aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold favoritecoualias.colt > alias.col aalias.cold datediff(day, creatioalias.coldate, getdate()) < alias.col aalias.cold aalias.colswercoualias.colt < alias.col aalias.cold body alias.colot like ##user:ialias.colt?alias.col##"
"select alias.col,views,creationdate,reputation from table order by views desc"
"select top alias.col alias.col as alias.col, alias.col as [post lialias.colk] from table as q ialias.colalias.coler joialias.col table as pt oalias.col pt.postalias.col = q.alias.col order by alias.col desc"
"select alias.col,alias.col,alias.col from table where location like x order by alias.col desc"
"select top alias.col alias.col as [user lialias.colk], alias.col, dowalias.colvotes, case whealias.col dowalias.colvotes <> alias.col thealias.col coalias.colvert(decimal(alias.col,alias.col),alias.col) / coalias.colvert(decimal(alias.col,alias.col),dowalias.colvotes) else alias.col ealias.cold as ratio from table where alias.col > alias.col aalias.cold alias.col <> alias.col order by alias.col+dowalias.colvotes desc"
"declare @alias.colow datetime={falias.col alias.colow()} select top alias.col alias.col as [post lialias.colk], alias.col from table where alias.col(hour, @alias.colow, creatioalias.coldate)<alias.col aalias.cold charialias.coldex(x, alias.col)>alias.col order by creatioalias.coldate"
"create table table ( periodid ialias.colt alias.colot alias.colull, periodquarter ialias.colt alias.colot alias.colull, periodyear ialias.colt alias.colot alias.colull ) create table table ( alias.colame varchar(alias.col) alias.colot alias.colull, audittypeid ialias.colt alias.colot alias.colull ) create table table ( auditid ialias.colt alias.colot alias.colull, periodid ialias.colt alias.colot alias.colull ) select alias.col, alias.col, alias.col, alias.col, alias.col, alias.col from table p cross joialias.col table m left joialias.col table a oalias.col alias.col = alias.col where alias.col > alias.col aalias.cold alias.col < alias.col aalias.cold alias.col ialias.col (alias.col) order by alias.col"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like lower(x) order by alias.col desc;"
"with table(typealias.col, uricompoalias.colealias.colt) as ( selealias.col alias.col, alias.col ualias.colioalias.col selealias.col alias.col, alias.col ualias.colioalias.col selealias.col alias.col, alias.col ualias.colioalias.col selealias.col alias.col, alias.col ualias.colioalias.col selealias.col alias.col, alias.col ualias.colioalias.col selealias.col alias.col, alias.col ) selealias.col alias.col + ri.uricompoalias.colealias.colt + cast(alias.col as alias.colvarchar) + alias.col + cast(alias.col as alias.colvarchar) as [review lialias.colk], (selealias.col alias.colame from table where alias.col = rt.reviewtasktypealias.col) as alias.col from table as p ialias.colalias.coler joialias.col table as rt oalias.col p.alias.col = rt.postalias.col ialias.colalias.coler joialias.col table as ri oalias.col rt.reviewtasktypealias.col = ri.typealias.col where p.alias.col = ##postalias.col:ialias.colt##"
"selecalias alias.col, moalias.colaliash, year, coualias.colalias(*)/alias.col as kcoualias.colalias, roualias.cold(avg(casalias(score as alias.columeric)),alias.col) as mscore, roualias.cold(avg(casalias(viewcoualias.colalias as alias.columeric)),alias.col) as mviewcoualias.colalias, roualias.cold(avg(casalias(aalias.colswercoualias.colalias as alias.columeric)),alias.col) as maalias.colswercoualias.colalias from (selecalias alias.col = case alias.col whealias.col alias.col aliashealias.col x whealias.col alias.col aliashealias.col x else x ealias.cold, moalias.colaliash = daaliaseparalias(moalias.colaliash, creaaliasioalias.coldaaliase), year = daaliaseparalias(year, creaaliasioalias.coldaaliase), * from aliasable where commualias.colialiasyowalias.coleddaaliase is alias.colull ) as alias group by alias.col, year, moalias.colaliash order by alias.col, year, moalias.colaliash"
"select commealias.colt, tagalias.colame from table, table where tabletypeid = alias.col aalias.cold commealias.colt like x + ##site## +x aalias.cold tagalias.colame like ##tag## group by commealias.colt, tagalias.colame order by alias.col desc"
"select top alias.col (raalias.colk() over (order by sum(boualias.coltyamoualias.colt) desc) alias.col) as [raalias.colk], owalias.coleruserid [user lialias.colk], raalias.colk() over (order by sum(boualias.coltyamoualias.colt) desc) as [raalias.colk], owalias.coleruserid, coualias.colt(alias.col) [boualias.colty aalias.colswers provided], sum(boualias.coltyamoualias.colt) [boualias.colty amoualias.colt woalias.col] from table p,table where alias.col = alias.col aalias.cold alias.col = alias.col group by owalias.coleruserid order by coualias.colt(alias.col) desc"
"select top alias.col aalias.colswercoualias.colt as [aalias.colswers], alias.col as [post lialias.colk], commealias.coltcoualias.colt as [commealias.colts] from table order by aalias.colswercoualias.colt desc"
"with table as ( select alias.col, ( select coualias.colt(*) as alias.col from table pt joialias.col table pp oalias.col alias.col = alias.col joialias.col table v oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col ) as uptable, ( select coualias.colt(*) as alias.col from table pt joialias.col table pp oalias.col alias.col = alias.col joialias.col table v oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col ) as dowalias.coltable from table t cross apply ( select coualias.colt(*) as alias.col from table pt where alias.col = alias.col havialias.colg coualias.colt(*) >= alias.col ) pt ) select tagalias.colame as [table], uptable as [uptable], dowalias.coltable as [dowalias.coltable], roualias.cold(alias.col.alias.col * dowalias.coltable / alias.colullif(uptable, alias.col), alias.col) as alias.col from table order by alias.col desc"
"select top alias.col alias.col as [post lialias.colk], alias.col, viewcoualias.colt from table where alias.col > alias.col aalias.cold viewcoualias.colt <> alias.col aalias.cold parealias.coltalias.col is alias.colull aalias.cold acceptedaalias.colsweralias.col is alias.colull order by viewcoualias.colt desc"
"select top alias.col alias.col, alias.col as classificatioalias.col from table u joialias.col table b oalias.col alias.col=alias.col where tagbased = alias.col aalias.cold alias.colame like alias.col ... aalias.cold class=alias.col ualias.colioalias.col all select top alias.col alias.col, alias.col as classificatioalias.col from table u joialias.col table b oalias.col alias.col=alias.col where tagbased = alias.col aalias.cold alias.colame like alias.col ... aalias.cold class=alias.col aalias.cold u.reputatioalias.col>alias.col ualias.colioalias.col all select top alias.col alias.col, alias.col as classificatioalias.col from table u joialias.col table b oalias.col alias.col=alias.col where tagbased = alias.col aalias.cold alias.colame like alias.col ... aalias.cold class=alias.col aalias.cold u.reputatioalias.col>alias.col ualias.colioalias.col all select alias.col, alias.col as classificatioalias.col from table u where alias.col = alias.col"
"select alias.col as alias.col ,body ,replace(body ,x ,x) as fixedbody from table where alias.col = alias.col aalias.cold body like x ..."
select alias.col as alias.col from table p joialias.col table pt oalias.col alias.col=alias.col joialias.col table t oalias.col alias.col=alias.col where alias.col = alias.col aalias.cold t.tagalias.colame = alias.col
"declare @t int = N declare @r int = N ; with uN as ( select top (@t) row_number() over(order by id) as rn, id, displayname from users where id between @r*N and @r*NN ), uN as ( select top (@t) row_number() over(order by id) as rn,id, displayname from users where id between @r*N and @r*NN) , uN as ( select top (@t) row_number() over(order by id) as rn,id, displayname from users where id between @r*N and @r*NN) , uN as ( select top (@t) row_number() over(order by id) as rn,id, displayname from users where id between @r*N and @r*NN) select uN.* ,uN.* ,uN.* ,uN.* from uN inner join uN on uN.rn = uN.rn inner join uN on uN.rn = uN.rn inner join uN on uN.rn = uN.rn order by uN.rn"
select top alias.col alias.col from table as q ialias.colalias.coler joialias.col table as a oalias.col a.parealias.coltid = alias.col ialias.colalias.coler joialias.col table oalias.col table.postid = alias.col ialias.colalias.coler joialias.col table oalias.col table.id = table.tagid where alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold table.tagalias.colame = alias.col aalias.cold alias.col like alias.col ...
"select alias.col(month, datediff(month, n, creationdate), n), count(*) as questions from table inner join posttable on posttable.tagid = table.id inner join table on table.id = posttable.postid where table.tagname = alias.col group by alias.col(month, datediff(month, n, creationdate), n) order by alias.col(month, datediff(month, n, creationdate), n) asc"
"select alias.col, body from table where body like x"
"(select alias.col, body, posttypeid from table where alias.col=alias.col:alias.col) ualias.colioalias.col (select alias.col, text, alias.col from table where alias.col=alias.col:alias.col)"
"declare table cursor for select name from table where name not in (alias.col) declare table as alias(max) declare @query as alias(max) create table table ( sitedbname alias(max), totalupvotes int, totaldownvotes int, totalposts int, upvotesperpost float, downvotesperpost float, votesperpost float ) declare @start_date alias(max) = ##startdate:string?nnn## open table fetch next from table into table while @@fetch_status = n begin if table not like x begin set @query = x + table + xx + @start_date + xxx + @start_date + xxx + @start_date + xxx + table + xx print @query end fetch next from table into table end close table deallocate table select alias.col from table"
"select alias.col as alias.col, coualias.colt(*) as [dowalias.coltable] from table u joialias.col table p oalias.col alias.col = alias.col joialias.col table v oalias.col alias.col = alias.col aalias.cold alias.col = alias.col where reputatioalias.col = alias.col group by alias.col havialias.colg coualias.colt(*) > alias.col order by coualias.colt(*) desc"
"select top alias.col locatioalias.col, coualias.colt(*) as [alias.columber of table] from table group by locatioalias.col order by [alias.columber of table];"
"select alias.col, alias.col, (coualias.colt(alias.col(alias.col, alias.col))) as hour from table where alias.col = alias.col group by alias.col, alias.col"
"declare table table (person_name varchar(n), film_title varchar(n), relationship varchar(n)) insert into table values (alias.colyz), (alias.col, alias.col, alias.col ), (alias.col, alias.col, alias.col ), (alias.col, alias.col, alias.col), (alias.col, alias.col, alias.col), (alias.col, alias.col, alias.col), (alias.col, alias.col, alias.col) select alias.col from table director full outer join table actor on alias.col = alias.col and alias.col= alias.col where alias.col = alias.col and alias.col = alias.col and alias.col is not null and alias.col is not null"
"select top alias.col alias.col as [post lialias.colk], p.creatioalias.coldate from table c joialias.col table p oalias.col alias.col = alias.col where alias.col like alias.col aalias.cold alias.col is alias.colull aalias.cold p.posttypeid = alias.col order by alias.col"
"select alias.col, count(*) as alias.col, sum(case when q.acalias.colptedanswerid = alias.col then n else n end) as numacalias.colpted, round((sum(case when q.acalias.colptedanswerid = alias.col then n else n end)*n.n/count(*)), n) as acalias.colptedperalias.colnt from table a inner join table q on alias.col = alias.col inner join table pt on alias.col = alias.col inner join table t on alias.col = alias.col group by alias.col having count(*) > n order by alias.col desc, acalias.colptedperalias.colnt desc"
"select alias.col, maalias.col(alias.col) alias.col from table u, table b where alias.col=alias.col aalias.cold alias.col=alias.col aalias.cold alias.col like alias.col aalias.cold alias.col>alias.col group by alias.col, alias.col havialias.colg coualias.colt(*)>alias.col order by alias.col desc"
"select alias.col, table.count from table where alias.col like alias.col"
"select alias.col, alias.col as alias.col from table where posttypealias.col = alias.col aalias.cold alias.col < alias.col## order by alias.col desc"
"declare alias.col int = ##userid## select alias.col as alias.col, alias.col from table p join table c on alias.col = alias.col where alias.col = alias.col and not alias.col = alias.col and alias.col like alias.col"
"select table as alias.col from (select top alias.col alias.col from users u order by table desc) u where (select coualias.colt(alias.col) alias.col alias.col from table p where table = p.owalias.coleruserid aalias.cold (charialias.coldealias.col(alias.col, lower(alias.col)) > alias.col or charialias.coldealias.col(alias.col, lower(alias.col)) > alias.col)) > (select coualias.colt(alias.col) from table p where table = p.owalias.coleruserid) aalias.cold u.displayalias.colame is alias.colull aalias.cold u.reputatioalias.col <= alias.col aalias.cold (select coualias.colt(alias.col) from table p where table = p.owalias.coleruserid aalias.cold alias.col = alias.col) = alias.col"
"select top alias.col alias.col, p.userdisplayalias.colame from table p where tabletypeid ialias.col (alias.col)"
"select top alias.col row_alias.columber() over(order by views desc) as raalias.colk , id as [user lialias.colk] , views, reputatioalias.col, locatioalias.col from table"
select top alias.col creatioalias.coldate from table order by creatioalias.coldate desc
"declare @alias.col ialias.colt = ##alias.col## select alias.col as alias.col, text, alias.col from table where alias.col > alias.col aalias.cold alias.col = @alias.col order by alias.col desc"
"select top alias.col alias.col as [user lialias.colk], ( select coualias.colt(*) from table where posttypealias.col = alias.col aalias.cold lasteditoruseralias.col = table.alias.col aalias.cold owalias.coleruseralias.col != table.alias.col ) as questioalias.coledits, ( select coualias.colt(*) from table where posttypealias.col = alias.col aalias.cold lasteditoruseralias.col = table.alias.col aalias.cold owalias.coleruseralias.col != table.alias.col ) as aalias.colsweredits, ( select coualias.colt(*) from table where lasteditoruseralias.col = table.alias.col aalias.cold owalias.coleruseralias.col != table.alias.col ) as alias.col from table order by alias.col desc"
"select alias.col, alias.col as alias.col, alias.col, alias.col, alias.col from table us where location like x order by alias.col desc"
"set alias.colocoualias.colt oalias.col declare alias.col datetime select alias.col = max(alias.col) from table set alias.colocoualias.colt off select top alias.col alias.col as [user lialias.colk], reputatioalias.col, alias.col, reputatioalias.col/alias.col as repperalias.col from ( select alias.col, coalias.colvert(ialias.colt, alias.col - alias.col) as alias.col from table ) as tableaugmealias.colted where reputatioalias.col > alias.col order by repperalias.col desc"
"select alias.col alias.col, alias.col, alias.col, tealias.colt from table where tealias.colt like alias.col order by alias.col desc"
"select alias.col, alias.col, alias.col, alias.col from table where alias.col >= alias.col and alias.col <= alias.col order by alias.col desc"
"select alias.col,body from table where ( upper(body) like x or upper(body) like x ...)"
"select alias.col as alias.col, alias.col as alias.col, coualias.colt(alias.col) as alias.col from table as p joialias.col table as u oalias.col p.owalias.coleralias.col = alias.col where alias.col = alias.col aalias.cold (alias.col like alias.col ... or alias.col like alias.col ...) aalias.cold u.reputatioalias.col = alias.col group by alias.col, alias.col havialias.colg coualias.colt(alias.col) > alias.col order by alias.col asc"
"declare @alias.col int = ##alias.col## select sum(table.score) tablecore, table.id alias.col from table inner join table on table.postid = table.id where alias.col = @alias.col group by table.id having sum(table.score) > n"
"select alias.col, count(*) as count from table where lower(location) like x or upper(location) like x ... group by alias.col order by alias.col desc;"
"declare @temp table (id int identity(N,N), TagName char(N), tagPopularity int); with tagsN as ( select top N tagid, count(*) as postCount from posttags group by tagid order by count(*) desc ) select t.TagName, f.postCount , case when f.postCount > N then X else convert(varchar(N), N - f.postCount) end as X from tagsN f, tags t where f.tagid = t.id group by t.tagname, f.postCount order by f.postCount asc"
"declare alias.col ialias.colt = ##userid## select alias.col, coualias.colt(*) as uptable from table ialias.colalias.coler joialias.col posttable oalias.col posttable.tagid = table.id ialias.colalias.coler joialias.col table oalias.col table.parealias.coltid = posttable.postid ialias.colalias.coler joialias.col table oalias.col table.postid = table.id aalias.cold alias.col = alias.col where table.owalias.coleruserid = alias.col group by alias.col order by uptable desc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x order by alias.col desc;"
declare @tag as varchar; select cast(sum(Score) as float)/cast(count(Score) as float) from posts where tags like X + @tag + X
"select distialias.colct alias.col as [post lialias.colk], c.text as x, alias.col as x from table c joialias.col table h oalias.col alias.col = alias.col joialias.col table p oalias.col alias.col = alias.col where alias.col = alias.col## aalias.cold alias.col > alias.col aalias.cold alias.col > alias.col aalias.cold p.owalias.coleruserid = alias.col aalias.cold p.owalias.coleruserid != alias.col##"
declare @userid int = ##userid## select alias.col from table where alias.col like alias.col
"select alias.col as alias.col, count(alias.col) from table where body like x and (body like x) group by alias.col having count(alias.col) > n order by count(alias.col) desc;"
"select alias.col, alias.col, alias.col, alias.col, alias.col from table a where alias.col ialias.col(select parealias.coltalias.col from table where owalias.coleruseralias.col = alias.col) order by viewcoualias.colt desc"
"selealias.col alias.col, alias.col, alias.col + cast(alias.col as varchar) as alias.col from table where owalias.coleruseralias.col ialias.col (selealias.col alias.col from table where alias.col > alias.col) aalias.cold alias.col < alias.col order by alias.col"
"declare @table table ( badgealias.colame varchar(alias.col) collate sql_latialias.colalias.col_gealias.coleral_cpalias.col_cs_as) ialias.colsert @table select distialias.colct alias.colame from table where alias.colot ealias.colists ( select alias.col from table where table.tagalias.colame=table.alias.colame) select top(alias.col) table.id as [user lialias.colk], table.id, (select coualias.colt(alias.col) from @table) totalbadgecoualias.colt, coualias.colt(earalias.coled.table) collectedcoualias.colt, stuff(coalias.colvert(alias.colml,(select alias.col+badgealias.colame from @table where alias.colot ealias.colists (select alias.col from table where table.table=table.id aalias.cold table.alias.colame=[@table].badgealias.colame) for alias.colml path(alias.col))).value(alias.col,alias.col),alias.col,alias.col,alias.col) missialias.colg from table cross joialias.col @table left joialias.col ( select alias.colame badgealias.colame, table from table group by alias.colame, table ) earalias.coled oalias.col earalias.coled.badgealias.colame = [@table].badgealias.colame aalias.cold table.id = earalias.coled.table group by table.id order by collectedcoualias.colt desc"
"DECLARE @Prison_Doors TABLE ( DoorNum INT IDENTITY(N,N) PRIMARY KEY, DoorOpen VARCHAR(N), DoorClosed VARCHAR(N), Trips INT ); WITH temp AS ( SELECT n FROM (VALUES(N), (N), (N), (N)) temp(n) ), nums AS ( SELECT ROW_NUMBER() OVER(ORDER BY (SELECT N)) AS n FROM temp tN, temp tN, temp tN ) INSERT INTO @Prison_Doors(DoorOpen, DoorClosed) SELECT N AS Sami, N AS Onder FROM nums WHERE n <= N; SELECT * FROM @Prison_Doors;"
"DECLARE @TagN nvarchar(N) = X; DECLARE @TagN nvarchar(N) = X; DECLARE @TagN nvarchar(N) = X; DECLARE @TagN nvarchar(N) = X; DECLARE @TagN nvarchar(N) = X; DECLARE @TagN nvarchar(N) = X; DECLARE @PivotTagNames NVARCHAR(N), @Quarters NVARCHAR(N), @PivotSrc NVARCHAR(MAX), @PivotBase NVARCHAR(MAX); WITH TagsGiven AS ( SELECT RowId = N, FilterTag = @TagN UNION SELECT RowId = N, FilterTag = @TagN UNION SELECT RowId = N, FilterTag = @TagN UNION SELECT RowId = N, FilterTag = @TagN UNION SELECT RowId = N, FilterTag = @TagN UNION SELECT RowId = N, FilterTag = @TagN ) SELECT * FROM ( SELECT DATEPART(year, Posts.CreationDate) as TagYear, DATENAME(quarter, Posts.CreationDate) as QuarterName, Posts.Id as UniqueId, Tags.TagName as TagName, Tags.Id as TagId, TagsGiven.RowId, TagsGiven.FilterTag FROM Tags INNER JOIN PostTags ON PostTags.TagId = Tags.Id INNER JOIN Posts ON Posts.Id = PostTags.PostId LEFT JOIN TagsGiven ON TagsGiven.FilterTag = Tags.TagName WHERE Posts.PostTypeId = N AND Posts.CreationDate >= X AND Tags.TagName in (XYZ) ) as src"
"select top alias.col alias.col as [post lialias.colk], t.tagalias.colame, alias.col from table p joialias.col table pt oalias.col alias.col = alias.col joialias.col table t oalias.col alias.col = alias.col where alias.col ialias.col (alias.col) aalias.cold p.aalias.colswercoualias.colt <= alias.col order by alias.col desc"
"select table.id as alias.col, alias.col, alias.col, table.creatioalias.coldate, (case whealias.col table.id is alias.colot alias.colull thealias.col x + cast(table.id as alias.colvarchar) + x else x ealias.cold) + coalesalias.col(table.displayalias.colame, table.owalias.colerdisplayalias.colame) as [user lialias.colk], table.lastacalias.colssdate from table left joialias.col table oalias.col table.id = table.owalias.coleruserid where table.posttypeid = alias.col aalias.cold (table.alias.col <= ##maxtablecore:ialias.colt?alias.col## or table.alias.col <= ##maxtablecore##+alias.col aalias.cold table.owalias.coleruserid is alias.colull) aalias.cold table.aalias.colswercoualias.colt = alias.col aalias.cold table.commealias.coltcoualias.colt < alias.col aalias.cold table.alias.col <= datediff(day, table.creatioalias.coldate, getdate()) * alias.col.alias.col aalias.cold datediff(day, cast(##cutoffdate:strialias.colg?alias.colalias.colalias.col## as alias), table.creatioalias.coldate) > alias.col aalias.cold table.closeddate is alias.colull order by case whealias.col table.id is alias.colull thealias.col alias.col else alias.col ealias.cold, table.creatioalias.coldate asc"
"select top alias.col alias.col as [post lialias.colk], alias.col as commealias.colted from table c where alias.col like alias.col or alias.col like alias.col ... order by c.creatioalias.coldate desc"
"declare alias.col ialias.colt = ##userid## create table table (alias.col ialias.colt, [coualias.colt] ialias.colt) ialias.colsert table select top alias.col alias.col, coualias.colt(*) as uptable from table ialias.colalias.coler joialias.col posttable oalias.col posttable.alias.col = table.id ialias.colalias.coler joialias.col table oalias.col table.parealias.coltid = posttable.postid ialias.colalias.coler joialias.col table oalias.col table.postid = table.id aalias.cold alias.col = alias.col where table.owalias.coleruserid = alias.col group by alias.col order by uptable desc create table table (id ialias.colt primary key) ialias.colsert table select alias.col from table q where (select coualias.colt(*) from table a where a.parealias.coltid = alias.col aalias.cold alias.col > alias.col) = alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold closeddate is alias.colull aalias.cold q.parealias.coltid is alias.colull aalias.cold acceptedaalias.colswerid is alias.colull select top alias.col alias.col as [post lialias.colk], (sum(t.[coualias.colt]) / alias.col.alias.col + us.reputatioalias.col / alias.col.alias.col + alias.col * alias.col) as alias.col, alias.col as alias.col from table u joialias.col table p oalias.col alias.col = alias.col joialias.col posttable pt oalias.col alias.col = alias.col joialias.col table t oalias.col t.alias.col = pt.alias.col joialias.col table us oalias.col alias.col = p.owalias.coleruserid group by alias.col, us.reputatioalias.col, alias.col order by alias.col desc"
select alias.col as alias.col from table a joialias.col table q oalias.col alias.col = alias.col where alias.col > alias.col + alias.col aalias.cold alias.col >= alias.col aalias.cold a.commualias.colityowalias.coleddate is alias.colull aalias.cold q.closeddate is alias.colull aalias.cold alias.col = ( select mialias.col(aalias.col.id) from table qalias.col joialias.col table aalias.col oalias.col aalias.col.parealias.coltid = qalias.col.id where aalias.col.score >= alias.col aalias.cold qalias.col.id = alias.col )
"select case whealias.col alias.col = alias.col thealias.col x else x ealias.cold as flagger, alias.col, score, viewcoualias.colt, favoritecoualias.colt from table p ialias.colalias.coler joialias.col table pt oalias.col pt.alias.col = alias.col where alias.col = alias.col order by favoritecoualias.colt desc"
"select top alias.col alias.col as [post lialias.colk], creatioalias.coldate, alias.col, alias.col from table c where tealias.colt like alias.col order by c.creatioalias.coldate desc"
"select (select coualias.colt(*) from table where alias.col=alias.col aalias.cold alias.col like alias.col ...) as [total javascript questioalias.cols], (select coualias.colt(*) from table where alias.col=alias.col aalias.cold alias.col like alias.col ... aalias.cold (alias.col alias.colot like alias.col)) as [total alias.coloalias.col-jquery javascript questioalias.cols], (select coualias.colt(*) from table where alias.col=alias.col aalias.cold alias.col like alias.col ...) as [total jquery javascript questioalias.cols], (select coualias.colt(*) from table where alias.col=alias.col aalias.cold alias.col like alias.col ...) as [total jquery questioalias.cols], coualias.colt(*) as [total alias.coloalias.col-jquery questioalias.colgs with jquery aalias.colswers] from table as questioalias.cols ialias.colalias.coler joialias.col table as aalias.colswers oalias.col aalias.colswers.parealias.coltid=questioalias.cols.id where questioalias.cols.alias.col=alias.col aalias.cold questioalias.cols.alias.col like alias.col ... aalias.cold (questioalias.cols.body alias.colot like alias.col or questioalias.cols.alias.col alias.colot like alias.col) aalias.cold aalias.colswers.body like alias.col ... ;"
"select top alias.col alias.col, coualias.colt(*) [coualias.colt] from table group by alias.col order by coualias.colt desc"
"with data as ( select table.id as alias.col, alias.col, alias.col, uptable as alias.col, dowalias.coltable as alias.col, sum (case whealias.col acalias.colptedaalias.colswerid is alias.colull thealias.col alias.col else alias.col ealias.cold) as alias.col, sum (case whealias.col posttypeid = alias.col thealias.col alias.col else alias.col ealias.cold) as questioalias.colsasked, sum (case whealias.col posttypeid = alias.col thealias.col alias.col else alias.col ealias.cold) as aalias.colswersgivealias.col, sum (aalias.colswercoualias.colt) as aalias.colswerreplies, sum (case whealias.col votetypeid = alias.col thealias.col alias.col else alias.col ealias.cold) as alias.col, sum (case whealias.col votetypeid = alias.col thealias.col alias.col else alias.col ealias.cold) as gotdowalias.col from table, table, table where table.id = table.owalias.coleralias.col aalias.cold table.postid = table.id aalias.cold table.votetypeid ialias.col (alias.col) aalias.cold table.posttypeid ialias.col (alias.col) aalias.cold table.alias.col >= alias.col group by table.id, table.alias.col, table.alias.col, table.uptable, table.dowalias.coltable ) select alias.col as [user lialias.colk], alias.col, alias.col, alias.col, alias.col, gotdowalias.col, (alias.col - alias.col) - (alias.col - gotdowalias.col) as alias.col, aalias.colswersgivealias.col, aalias.colswerreplies, questioalias.colsasked, alias.col, case whealias.col questioalias.colsasked = alias.col thealias.col alias.col.alias.col else alias.col / cast(questioalias.colsasked as alias.columeric(alias.col,alias.col)) ealias.cold as acalias.colptratio, case whealias.col isalias.colull(aalias.colswerreplies, alias.col) = alias.col thealias.col alias.col.alias.col else (alias.col + alias.col) / cast(aalias.colswerreplies as alias.columeric(alias.col,alias.col)) ealias.cold as voteratio from data"
"select alias.col, alias.col, alias.col, location from ( select alias.col alias.col, alias.col, alias.col, location, dense_rank() over (order by alias.col desc) alias.col from table where (location) like x and not((location) like x ... or location like x ... or lower(location) like x ...) ) derivedtable where alias.col <= ##maximumalias.col## order by alias.col"
"DECLARE @UserId int = ##UserId## ; WITH toptags AS (SELECT TOP N pt.tagid FROM posttags pt GROUP BY pt.tagid ORDER BY COUNT(pt.postid) DESC), userscore AS (SELECT a.owneruserid userid, pt.tagid, SUM(CASE v.votetypeid WHEN N THEN N WHEN N THEN N END) AS score FROM posts q INNER JOIN posts a ON q.id = a.parentid INNER JOIN votes v ON a.id = v.postid AND Coalesce(q.communityowneddate, Getdate()) > v.creationdate AND Coalesce(q.communityowneddate, Getdate()) > v.creationdate INNER JOIN posttags pt ON q.id = pt.postid INNER JOIN toptags ON pt.tagid = toptags .tagid WHERE a.posttypeid = N AND v.votetypeid IN (XYZ) GROUP BY a.owneruserid, pt.tagid), regionalranking AS (SELECT userscore.score, t.tagname, u.displayname, u.location, userid, Rank() OVER (PARTITION BY userscore.tagid, u.location ORDER BY score DESC) rk FROM userscore INNER JOIN users u ON userscore.userid = u.id INNER JOIN tags t ON userscore.tagid = t.id) SELECT rk, score, tagname, location, displayname FROM regionalranking WHERE rk < N and tagname = X AND ( userid = @UserId OR @UserId = N ) and LOWER(Location) LIKE LOWER(X) ORDER BY tagname, score desc"
"declare @qscore int = ##maalias.colqscore:int?n## declare @ascore int = ##maalias.colascore:int?n## select distinct top ##top:int?n## alias.col as [post link], alias.col, p.alias.col, alias.col from table p left join table v on (alias.col = alias.col and alias.col = alias.col) inner join table a on alias.col = alias.col where alias.col is null and p.closeddate is null and datediff(d, p.closeddate, getdate()) >= n and alias.col <= @qscore group by alias.col, alias.col, p.alias.col, alias.col having count(alias.col) = n and maalias.col(a.score) <= @ascore order by alias.col asc, alias.col asc, alias.col"
"select distinct c.id as [comment link] , c.postid as [post link] , alias.col as [user link] , u.displayname from table c inner join table u on alias.col = alias.col where alias.col like alias.col order by alias.col asc"
"DECLARE @lastNmonths DATETIME = DATEADD(MONTH, N, GETDATE()) ; SELECT TOP N COUNT(V.PostId) as X FROM VoteTypes VT JOIN Votes V ON V.VoteTypeId=VT.Id JOIN Users U ON U.Id=V.UserId JOIN Posts P ON P.Id= V.PostId JOIN PostTags PTA ON P.Id=PTA.PostId JOIN PostTypes PTY ON PTY.Id=P.PostTypeId WHERE V.VoteTypeId = N AND PTY.Id IN (XYZ) AND ( U.Location LIKE X OR U.Location LIKE X ... ) AND V.CreationDate > @lastNmonths"
"declare @temp table (id int identity(N,N), TagName char(N), score int); with tagsN as ( select top N tagid from posttags group by tagid order by count(*) desc ), answers as ( select score, id, parentId from posts where communityowneddate is null and posttypeid = N and owneruserid = ##UserId## ) insert @temp(TagName, score) select t.TagName, sum(a.score) as score from answers a inner join posttags pt on pt.postid = a.parentId inner join tagsN f on f.tagid = pt.tagid inner join tags t on f.tagid = t.id group by t.tagname order by score desc select *, case when score > N then X else X end from @temp"
"select top alias.col alias.col + coalias.colvert(varchar(alias.col),alias.col) alias.col, alias.col, alias.col, favoritecoualias.colt, viewcoualias.colt, aalias.colswercoualias.colt, alias.col(alias.col, p.creatioalias.coldate, alias.col()) [daysoutstaalias.coldialias.colg], u.reputatioalias.col [owalias.coler rep] from table p joialias.col table u oalias.col p.owalias.coleruserid = alias.col joialias.col table pt oalias.col alias.col = alias.col where favoritecoualias.colt > alias.col aalias.cold viewcoualias.colt > alias.col aalias.cold acceptedaalias.colswerid is alias.colull aalias.cold u.reputatioalias.col > alias.col aalias.cold alias.col like alias.col ... aalias.cold commualias.colityowalias.colealias.colate is alias.colull aalias.cold closealias.colate is alias.colull order by (u.reputatioalias.col * favoritecoualias.colt) desc"
"select coalias.colvert(varchar(alias.col), creatioalias.coldate, alias.col) as date, coualias.colt(alias.col) as questioalias.cols, sum(aalias.colswercoualias.colt) as aalias.colswers from table where alias.col like alias.col group by coalias.colvert(varchar(alias.col), creatioalias.coldate, alias.col) order by coalias.colvert(varchar(alias.col), creatioalias.coldate, alias.col) desc;"
"select alias.col as alias.col, alias.col, alias.col from table where alias.col like alias.col or alias.col like alias.col and (alias.col is null or alias.col < n)"
"DECLARE @UserID int Set @UserID = N; WITH BaseQuery AS ( SELECT dateadd(dd,N, datediff(dd,N, v.CreationDate)) as Day, SUM(CASE when VoteTypeId=N then N when VoteTypeId=N then N else N end) as Reputation FROM votes v INNER JOIN posts p on p.Id=v.PostId And p.CommunityOwnedDate is null WHERE v.VoteTypeId=N and p.OwnerUserId=@UserID GROUP BY dateadd(dd,N, datediff(dd,N, v.CreationDate)) HAVING SUM(CASE when VoteTypeId=N then N when VoteTypeId=N then N else N end) >= N) SELECT count(*) FROM BaseQuery"
declare alias.col ialias.colt = ##userid## select coualias.colt(*) as alias.col from table where alias.col = alias.col aalias.cold lasteditoruserid = alias.col aalias.cold owalias.coleruserid != alias.col
"select top alias.col## coualias.colt(alias.col) as alias.col, alias.col as alias.col,alias.col from table v ialias.colalias.coler joialias.col table p oalias.col alias.col=alias.col ialias.colalias.coler joialias.col table pt oalias.col alias.col=alias.col ialias.colalias.coler joialias.col table t oalias.col alias.col=alias.col aalias.cold alias.col=alias.col where alias.col = alias.col aalias.cold alias.col=alias.col group by alias.col,alias.col havialias.colg coualias.colt(alias.col) = ##uptable##"
"select top alias.col alias.col as [post lialias.colk], alias.col from table where alias.col < alias.col aalias.cold parealias.coltalias.col is alias.colull aalias.cold acceptedaalias.colsweralias.col is alias.colull order by creatioalias.coldate asc"
"select top alias.col row_alias.columber() over(order by reputatioalias.col desc) as [#], id as [user lialias.colk], reputatioalias.col, locatioalias.col from table where lower(locatioalias.col) like x or upper(locatioalias.col) like x ... or locatioalias.col like x aalias.cold reputatioalias.col >= alias.col order by reputatioalias.col desc;"
"select alias.col,views,creationdate,reputation from table where views >n order by views desc"
"selealias.col top alias.col table.id as [user lialias.colk], coualias.colt(table.id) as aalias.colswers, cast(avg(cast(alias.col as float)) as alias.columeric(alias.col,alias.col)) as [average aalias.colswer alias.col] from table ialias.colalias.coler joialias.col table oalias.col table.id = owalias.coleruserid where alias.col = alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold closeddate is alias.colull group by table.id, displayalias.colame havialias.colg coualias.colt(table.id) > alias.col order by [average aalias.colswer alias.col] desc"
"DECLARE @USER int = ##UserId##; SELECT COUNT(N) AS X, N - COUNT(N) AS X, N - COUNT(N) AS X FROM PostHistory WHERE UserId = @User AND PostHistoryTypeId >= N AND PostHistoryTypeId <= N AND (SELECT OwnerUserId FROM Posts WHERE Id = PostId) <> @User ;"
"selealias.col alias.col, alias.col, alias.col, alias.col(cast(alias.col as float) / cast(alias.col as float) * alias.col,alias.col) as alias.col from ( selealias.col palias.col.alias.col as alias.col ,sum(case whealias.col palias.col.id is alias.colull thealias.col alias.col else alias.col ealias.cold) as alias.col ,coualias.colt(*) as alias.col from table as palias.col left joialias.col table as palias.col oalias.col palias.col.posttypeid = alias.col aalias.cold palias.col.alias.colaalias.colswerid = palias.col.id where palias.col.posttypeid = alias.col aalias.cold palias.col.alias.col is alias.colot alias.colull group by palias.col.alias.col ) as raw order by alias.col desc"
"select top alias.col table.id as [user lialias.colk], table.reputatioalias.col, coualias.colt(*) alias.col, sum(case whealias.col alias.col = alias.col aalias.cold alias.col < alias.col or alias.col is alias.colot alias.colull thealias.col alias.col else alias.col ealias.cold) alias.col, sum(case whealias.col table.creatioalias.coldate < dateadd(week, alias.col, getdate()) aalias.cold alias.col = alias.col aalias.cold alias.col < alias.col or alias.col is alias.colot alias.colull thealias.col alias.col else alias.col ealias.cold) alias.col, sum(case whealias.col alias.col = alias.col aalias.cold alias.col < alias.col thealias.col alias.col else alias.col ealias.cold) alias.col, sum(case whealias.col alias.col is alias.colot alias.colull thealias.col alias.col else alias.col ealias.cold) alias.col from table ialias.colalias.coler joialias.col table oalias.col table.owalias.coleruserid = table.id where alias.col = alias.col group by table.id, table.reputatioalias.col, owalias.coleruserid order by sum(case whealias.col alias.col = alias.col aalias.cold alias.col < alias.col or alias.col is alias.colot alias.colull thealias.col alias.col else alias.col ealias.cold) desc, table.id, table.reputatioalias.col;"
"declare @alias.col ialias.colt = ##maxuseralias.col## select alias.col, alias.col, alias.col, alias.col from table where alias.col>alias.col aalias.cold alias.col<@alias.col"
"select alias.col, alias.col, alias.col from table where alias.col >= alias.col order by alias.col asc"
"declare alias.col ialias.colt = ##userid:ialias.colt## declare alias.col float, @allualias.colaalias.colswered float, @alias.col float, @alias.col float select alias.col = sum(case whealias.col alias.col = alias.col aalias.cold alias.col = alias.col thealias.col alias.col else alias.col ealias.cold), @allualias.colaalias.colswered = sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold), @alias.col = sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold), @alias.col = sum(alias.col) from table as alias where alias.col = alias.col select alias.col/@alias.col as [myualias.colaalias.colsweredratio], @allualias.colaalias.colswered/@alias.col as [overallualias.colaalias.colsweredratio]"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or lower(location) like x ... order by alias.col desc;"
"select alias.col as alias.col, alias.col, alias.col, body, posttypealias.col from table where alias.col=alias.col:alias.col"
"select coalias.colvert(datetime, alias.col, alias.col) as alias.col, coualias.colt(case whealias.col alias.col(secoalias.cold, p.creatioalias.coldate, alias.col) <= alias.col thealias.col alias.col else alias.colull ealias.cold) as [< alias.col day], coualias.colt(case whealias.col alias.col(secoalias.cold, p.creatioalias.coldate, alias.col) betweealias.col alias.col+alias.col aalias.cold alias.col*alias.col thealias.col alias.col else alias.colull ealias.cold) as [alias.col–alias.col days], coualias.colt(case whealias.col alias.col(secoalias.cold, p.creatioalias.coldate, alias.col) betweealias.col alias.col*alias.col+alias.col aalias.cold alias.col*alias.col thealias.col alias.col else alias.colull ealias.cold) as [alias.col–alias.col days], coualias.colt(case whealias.col alias.col(secoalias.cold, p.creatioalias.coldate, alias.col) > alias.col*alias.col thealias.col alias.col else alias.colull ealias.cold) as [> alias.col days], coualias.colt(*) as [total table] from table v, table p where alias.col = alias.col aalias.cold p.owalias.coleruserid = alias.col## group by coalias.colvert(datetime, alias.col, alias.col) order by coalias.colvert(datetime, alias.col, alias.col) asc"
select alias.col from table where alias.col ialias.col( select tagalias.col from posttable where postalias.col = alias.col )
"select alias.col as alias.col, alias.col, alias.col from table where parentalias.col is null and alias.col < n"
"selealias.col alias.col, coualias.colt(alias.col) from ( selealias.col cast( cast(alias.col(alias.col, alias.col) as varchar) + alias.col + cast(alias.col(alias.col, alias.col) as varchar) + alias.col as datetime) table, t.table from table p joialias.col table pt oalias.col alias.col = alias.col joialias.col table t oalias.col alias.col = alias.col where alias.col ialias.col ( selealias.col top alias.col alias.col from table order by coualias.colt desc ) ) as alias.col group by table, table order by table asc, table asc"
"declare @userid ialias.colt = alias.col:ialias.colt## select table.id as alias.col, table.postid as alias.col, table.title from table ialias.colalias.coler joialias.col table oalias.col table.id = table.userid ialias.colalias.coler joialias.col table oalias.col table.votetypeid = table.id ialias.colalias.coler joialias.col table oalias.col table.postid = table.id where table.id = alias.col aalias.cold table.owalias.coleruserid = alias.col##"
"declare @alias.cola int = ##alias.cola## declare @alias.colalias.col int = ##alias.colalias.col## select alias.col, alias.col as alias.col, alias.col as alias.col, alias.col from taalias.colle a inner join (select alias.col, alias.col from taalias.colle where alias.col = @alias.colalias.col) alias.col on alias.col = alias.col.alias.col where alias.col = @alias.cola order alias.coly alias.col desc"
"select top alias.col alias.col as [user lialias.colk], alias.col, dowalias.colvotes, (dowalias.colvotes)*alias.col/(dowalias.colvotes+alias.col) as dowalias.colvotespct from table where dowalias.colvotes > alias.col aalias.cold alias.col <> alias.col order by dowalias.colvotespct asc"
"declare alias.col ialias.colt = ##userid## select alias.col, coualias.colt(*) as uptable from table ialias.colalias.coler joialias.col posttable oalias.col posttable.tagid = table.id ialias.colalias.coler joialias.col table oalias.col table.parealias.coltid = posttable.postid ialias.colalias.coler joialias.col table oalias.col table.postid = table.id aalias.cold alias.col = alias.col where table.owalias.coleruserid = alias.col group by alias.col order by uptable desc"
"set alias.colocoualias.colt oalias.col create table table (alias.col ialias.colt, alias.col ialias.colt, dowalias.col ialias.colt) ialias.colsert table select alias.col, alias.col = sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold), dowalias.col = sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) from table where alias.col ialias.col (alias.col) groalias.col by alias.col set alias.colocoualias.colt off select top alias.col alias.col as [post lialias.colk] , alias.col, dowalias.col, viewcoualias.colt from table joialias.col table p oalias.col alias.col = alias.col where dowalias.col > (alias.col * alias.col.alias.col) order by viewcoualias.colt desc"
"select alias.col as alias.col, alias.col, lastaccessdate, alias.col (second,lastaccessdate,getdate()) [last seen seconds] from table where alias.col = ##useralias.col:alias.col"
"select alias.col as alias.col, alias.col as name, alias.col from table where alias.col < ##alias.col##"
"select alias.col(alias.col, alias.col, alias.colatealias.coliff(alias.col, alias.col, p.creatioalias.colalias.colate)), coualias.colt(*) from table p,table u where p.creatioalias.colalias.colate=u.creatioalias.colalias.colate group by alias.col(alias.col, alias.col, alias.colatealias.coliff(alias.col, alias.col, p.creatioalias.colalias.colate)) oralias.coler by alias.col(alias.col, alias.col, alias.colatealias.coliff(alias.col, alias.col, p.creatioalias.colalias.colate))"
declare alias.col int = ##userid## select alias.col from table left join table on table.postid = table.id where table.userid = alias.col
"select alias.col, alias.col, alias.col as alias.col, case alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col else alias.col ealias.cold as [close reasoalias.col], case whealias.col p.commualias.colityowalias.coleddate is alias.colot alias.colull thealias.col alias.col else alias.colull ealias.cold as wiki, case whealias.col h.userid is alias.colot alias.colull thealias.col alias.col else alias.colull ealias.cold as [mod closed] from table p ialias.colalias.coler joialias.col table h oalias.col alias.col = alias.col aalias.cold alias.col = alias.col where alias.col = alias.col aalias.cold alias.col is alias.colot alias.colull aalias.cold h.tabletypeid = alias.col aalias.cold alias.col != alias.col order by alias.col asc"
"with cte_shorttable as ( select top alias.col lealias.col(table.body) as [body_lealias.colgth], table.id as alias.col, table.viewcoualias.colt as [view_coualias.colt], table.alias.col as alias.col, table.tagalias.colame as [table] from table ialias.colalias.coler joialias.col table oalias.col table.id = table.postid ialias.colalias.coler joialias.col table oalias.col table.tagid = table.id where lealias.col(body) > alias.col aalias.cold table.table is alias.colot alias.colull order by lealias.col(body) asc ) select body_lealias.colgth, alias.col as [post lialias.colk], view_coualias.colt, alias.col, table from cte_shorttable where alias.col ialias.col ( select top alias.col alias.col from cte_shorttable where alias.col ialias.col ( select alias.col from cte_shorttable where view_coualias.colt > ( select avg(view_coualias.colt) from cte_shorttable ) ) ) aalias.cold table = x order by view_coualias.colt asc ;"
"select top alias.col questioalias.cols.id as [post lialias.colk], questioalias.cols.viewcoualias.colt as [view coualias.colt] from table as questioalias.cols where questioalias.cols.tags like alias.col aalias.cold questioalias.cols.owalias.coleruserid = alias.col order by questioalias.cols.viewcoualias.colt desc"
"select alias.col as alias.col, alias.col as alias.col, alias.col from table as ualias.colluckyaalias.colswer, table as questioalias.col where alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold alias.col is alias.colot alias.colull aalias.cold alias.col != alias.col aalias.cold questioalias.col.aalias.colswercoualias.colt >= alias.col aalias.cold ualias.colluckyaalias.colswer.score > alias.col aalias.cold ualias.colluckyaalias.colswer.score > ( select alias.col.alias.col * sum(allaalias.colswers.score) from table as allaalias.colswers where alias.col = allaalias.colswers.parealias.coltid )"
"select top alias.col alias.col as [post lialias.colk] , q.lasteditdate as [last editioalias.col] , a.creatioalias.coldate as [aalias.colswered oalias.col] from table q ialias.colalias.coler joialias.col table a oalias.col alias.col = q.acceptedaalias.colswerid where alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold q.lasteditoruserid = alias.col## aalias.cold q.aalias.colswercoualias.colt is alias.colull"
"select top alias.col u.displayalias.colame, alias.col, p.mialias.colpost, p.alias.columpost, c.avgcommealias.colt, c.mialias.colcommealias.colt, c.alias.columcommealias.colt from (select owalias.coleralias.col, avg(lealias.col(body)) avgpost, mialias.col(lealias.col(body)) mialias.colpost, coualias.colt(*) alias.columpost from table group by owalias.coleralias.col) p ialias.colalias.coler joialias.col (select alias.col, avg(lealias.col(text)) avgcommealias.colt, mialias.col(lealias.col(text)) mialias.colcommealias.colt, coualias.colt(*) alias.columcommealias.colt from table group by alias.col) c oalias.col p.owalias.coleralias.col = c.alias.col ialias.colalias.coler joialias.col table u oalias.col c.alias.col = alias.col where lealias.col(u.displayalias.colame) > alias.col aalias.cold alias.columcommealias.colt > alias.col aalias.cold alias.columpost > alias.col order by alias.col + c.avgcommealias.colt"
"selealias.col alias.col as alias.col, alias.col + cast(alias.col as varchar(alias.col)) as alias.col, alias.col, alias.col, alias.col + case alias.col whealias.col alias.col thealias.col alias.col else alias.col ealias.cold as [direalias.colioalias.col], s.creatioalias.coldate as alias.col from table v, table s where alias.col = alias.col## aalias.cold alias.col = alias.col aalias.cold case alias.col whealias.col alias.col thealias.col alias.col else s.rejealias.colioalias.coldate ealias.cold is alias.colull order by alias.col"
"select top alias.col alias.col as [post lialias.colk] from table as q ialias.colalias.coler joialias.col table as ph oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold q.creatioalias.coldate < alias.col aalias.cold q.aalias.colswercoualias.colt = alias.col aalias.cold alias.col = alias.col aalias.cold q.viewcoualias.colt < alias.col(day, q.creatioalias.coldate, getdate()) * alias.col.alias.col aalias.cold q.commealias.coltcoualias.colt < alias.col aalias.cold lealias.col(q.body) < alias.col aalias.cold q.closeddate is alias.colull aalias.cold ph.tabletypeid != alias.col aalias.cold ph.tabletypeid != alias.col aalias.cold ph.tabletypeid != alias.col aalias.cold ph.tabletypeid != alias.col aalias.cold ph.tabletypeid != alias.col aalias.cold ph.tabletypeid != alias.col aalias.cold ph.tabletypeid != alias.col aalias.cold ph.tabletypeid != alias.col aalias.cold ph.tabletypeid != alias.col aalias.cold ph.tabletypeid != alias.col aalias.cold ph.tabletypeid != alias.col order by q.creatioalias.coldate asc"
"select table.id, table.title, table.tags from table where table.tags like alias.col and table.tags not like alias.col and table.tags not like alias.col"
"declare @a alias.colvarchar(alias.col) = x declare @b alias.colvarchar(alias.col) = x declare @c alias.colvarchar(alias.col) = x select alias.col as alias.col, q.table, q.lastactivitydate, alias.col, alias.col, alias.col, alias.col as alias.col from table q joialias.col table pt oalias.col alias.col = alias.col joialias.col table ptalias.col oalias.col alias.col = alias.col joialias.col table t oalias.col alias.col = alias.col joialias.col table talias.col oalias.col alias.col = alias.col joialias.col tableyalias.coloalias.colyms ts oalias.col alias.col = alias.col joialias.col tableyalias.coloalias.colyms tsalias.col oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col is alias.colull aalias.cold (alias.col = @a or ts.sourcetagalias.colame = @a) aalias.cold (alias.col ialias.col (xyz) or tsalias.col.sourcetagalias.colame ialias.col (xyz)) group by alias.col, q.table, q.lastactivitydate, alias.col, alias.col, alias.col, alias.col order by q.lastactivitydate desc, alias.col desc, alias.col desc"
"set alias.colocoualias.colt oalias.col create table table (alias.col ialias.colt alias.colealias.coltity, [start] datetime, [fialias.colish] datetime) ialias.colsert table select top alias.col alias.colull, alias.colull from table declare alias.col datetime select alias.col = creatioalias.coldate from table where alias.col = (select max(palias.col.alias.col) from table palias.col) update table set [start] = dateadd(d, (alias.col - alias.col) * alias.col, alias.col), [fialias.colish] = dateadd(d, (alias.col - alias.col) * alias.col, alias.col) select start, (select coualias.colt(*) from table where parealias.coltalias.col is alias.colull aalias.cold creatioalias.coldate betweealias.col [start] aalias.cold [fialias.colish] ) as [total questioalias.cols], (select coualias.colt(*) from table where parealias.coltalias.col is alias.colot alias.colull aalias.cold creatioalias.coldate betweealias.col [start] aalias.cold [fialias.colish] ) as [total aalias.colswers] from table"
"select alias.col from ( select alias.col as alias.col, posttypealias.col, lasteditoruseralias.col, owalias.coleruseralias.col, row_alias.columber() over (order by alias.col desc) as row from table where body like x ) a where alias.col > alias.col aalias.cold alias.col <= alias.col"
"select alias.col,alias.colalias.col,alias.col*alias.col/(alias.col+alias.colalias.col) as alias.col, talias.col.mo,talias.col.yr, coalias.colcat(talias.col.yr,alias.col,talias.col.mo) as alias.col from (select coualias.colt(*) as alias.col ,moalias.colth(creatioalias.coldate) as alias.col , year(creatioalias.coldate) as alias.col from table where alias.col like alias.col group by moalias.colth(creatioalias.coldate), year(creatioalias.coldate)) talias.col ialias.colalias.coler joialias.col (select coualias.colt(*) as alias.col ,moalias.colth(creatioalias.coldate) as alias.col , year(creatioalias.coldate) as alias.col from table where alias.col alias.colot like alias.col group by moalias.colth(creatioalias.coldate), year(creatioalias.coldate)) talias.col oalias.col talias.col.mo=talias.col.mo aalias.cold talias.col.yr=talias.col.yr order by talias.col.yr*alias.col+talias.col.mo desc"
"select sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as upmod , sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as dowalias.colmod , coualias.colt(*) as total from table where alias.col ialias.col (alias.col)"
"set alias.colocoualias.colt oalias.col declare alias.col date select alias.col = max(alias.col) from table set alias.colocoualias.colt off select top alias.col alias.col as [user lialias.colk], reputatioalias.col, alias.col, reputatioalias.col/alias.col as repperalias.col from ( select alias.col, coalias.colvert(ialias.colt, alias.col - alias.col) as alias.col from table ) as tableaugmealias.colted where reputatioalias.col > alias.col order by repperalias.col desc"
"select top alias.col phalias.col.postid as [post lialias.colk], lealias.col(phalias.col.tealias.colt) from table phalias.col where lealias.col(tealias.colt) > alias.col aalias.cold replace(replace(phalias.col.tealias.colt, char(alias.col), alias.col), char(alias.col), alias.col) alias.colot like alias.col aalias.cold alias.colot ealias.colists (select phalias.col.id from table phalias.col where phalias.col.postid = phalias.col.postid aalias.cold phalias.col.creatioalias.coldate > phalias.col.creatioalias.coldate) order by lealias.col(tealias.colt) desc"
"select distialias.colct alias.col as [post lialias.colk], c.text as x, alias.col as x, alias.col as x from table c joialias.col table h oalias.col alias.col = alias.col joialias.col table p oalias.col alias.col = alias.col where alias.col = alias.col## aalias.cold alias.col > alias.col aalias.cold alias.col > alias.col aalias.cold p.owalias.coleruserid = alias.col aalias.cold p.owalias.coleruserid != alias.col##"
"selealias.col avg(cast(alias.col(alias.col, -floor(alias.col(alias.col, alias.col))) as bigialias.colt)) as useralias.col, sum(case whealias.col alias.col is alias.colull thealias.col alias.col else alias.col ealias.cold) / cast(coualias.colt(table.id) as float) as x from table ialias.colalias.coler joialias.col table oalias.col (table.id = table.owalias.coleruserid) where alias.col = alias.col aalias.cold alias.col < alias.col group by alias.col(alias.col, -floor(alias.col(alias.col, alias.col))) order by useralias.col;"
"select alias.col,count(*) from table where alias.col is null group by alias.col having count(*) > n order by count(*) desc"
"declare alias.col int = ##questionid## select alias.col, alias.col, count(*) as alias.col, alias.col / count(*) as alias.col from table q inner join table a on alias.col = alias.col inner join table v on alias.col = alias.col or alias.col = alias.col where alias.col = alias.col group by alias.col, alias.col"
";with main as ( select distinct convert(date,creationdate) as [Date] from reviewtaskresults ) , rvt as ( select convert(date,creationdate) as [Date] , count(*) as [cnt] from reviewtaskresults where ReviewTaskResultTypeId = N group by convert(date,creationdate) ) select * from main left outer join rvt on rvt.[date] = main.[date]"
"selealias.col alias.col, alias.col, alias.col, alias.col, alias.col, lastaccessdate, alias.col + cast(alias.col as varchar) as alias.col from table where (alias.col <= alias.col aalias.cold alias.col >= alias.col aalias.cold alias.col <> alias.col aalias.cold alias.col <> alias.col aalias.cold alias.col <> alias.col aalias.cold alias.col <> alias.col) or alias.col = ##useralias.col## order by alias.col desc, alias.col;"
"select row_alias.columber() over(order by alias.col) as rowalias.colum, alias.col as alias.col, alias.col, text from table where alias.col = ##alias.col## aalias.cold alias.col >= alias.col order by alias.col desc"
"declare alias.col ialias.colt = ##userid## selealias.col cast(table.creatioalias.coldate as date), coualias.colt(table.id) as uptable from table joialias.col table oalias.col table.id = table.postid where table.owalias.coleruserid = alias.col aalias.cold table.votetypeid = alias.col group by cast(table.creatioalias.coldate as date) havialias.colg coualias.colt(table.id) > alias.col order by cast(table.creatioalias.coldate as date)"
"declare @useralias.col int = ##useralias.col## declare @alias.col int = ##alias.col## select alias.col as alias.col, text, alias.col from table where useralias.col = @useralias.col and alias.col >= @alias.col order by alias.col desc"
"select table, avg(alias.col) as alias.col, coualias.colt(alias.col) as [questioalias.cols asked] from table p, table u where alias.col = alias.col aalias.cold alias.col = p.owalias.coleruserid aalias.cold p.owalias.coleruserid ialias.col ( select alias.col from table u) group by table order by alias.col desc"
"select alias.col, alias.col, alias.col, alias.col(alias.col) as [alias.colgth], (alias.col(alias.col) + alias.col * alias.col + questioalias.col.viewcoualias.colt * alias.col) as alias.col, alias.col as [post lialias.colk], substrialias.colg(alias.col, alias.col, alias.col) as alias.col from table aalias.colswer joialias.col table questioalias.col oalias.col aalias.colswer.parealias.coltid = questioalias.col.id where aalias.colswer.posttypeid = alias.col aalias.cold aalias.colswer.owalias.coleruserid = alias.col## order by alias.col desc"
"declare alias.col int, alias.col int, alias.col int, alias.col int, @askers int, alias.col int, alias.col float, alias.col float set nocount on select alias.col(year, p.creationdate) year, alias.col(month, p.creationdate) month, count(*) answers, count(distinct p.owneruserid) answerers, avg(p.score + n.n) average from table p join table pn on alias.col = alias.col join table pt on alias.col = alias.col join table t on alias.col = alias.col where alias.col = alias.col:alias.col group by alias.col(year, p.creationdate), alias.col(month, p.creationdate) set nocount off select alias.col as alias.col, alias.col as alias.col, alias.col as alias.col, @askers as [askers], alias.col as alias.col, alias.col as alias.col, alias.col as alias.col, alias.col as alias.col"
"select top alias.col row_alias.columber() over(order by reputatioalias.col desc) as [#], id as [user lialias.colk], reputatioalias.col from table where lower(locatioalias.col) like x or lower(locatioalias.col) like x ... or upper(locatioalias.col) like x ... order by reputatioalias.col desc;"
"select count(alias.col), count(*) from table"
"select alias.col as alias.col, (sum(coalesce(alias.col(alias.col),alias.col)) + sum(coalesce(alias.col(alias.col),alias.col))) as alias.col, u.reputatioalias.col, (sum(coalesce(alias.col(alias.col),alias.col)) + sum(coalesce(alias.col(alias.col),alias.col)))/u.reputatioalias.col as alias.col from table u, table p where p.owalias.coleruserid = alias.col aalias.cold u.reputatioalias.col >= alias.col group by alias.col, u.reputatioalias.col order by alias.col asc"
"selealias.col cast(alias.col/alias.col as ialias.colt) +alias.col as alias.col , (alias.colalias.col)alias.col as moalias.colth from ( selealias.col top alias.col row_alias.columber() over (order by alias.col) as alias.col from table) as base"
"select tealias.colt, alias.col as alias.col, table.userid as alias.col from table, table where table.alias.col = table.id aalias.cold table.userid = table.owalias.coleruserid aalias.cold tealias.colt like alias.col aalias.cold alias.col <> alias.col order by table.creatioalias.coldate desc"
"select top alias.col alias.col as [user lialias.colk], alias.col, dowalias.colvotes, (dowalias.colvotes)*alias.col/(dowalias.colvotes+alias.col) as dowalias.colvotespct from table where alias.col > alias.col aalias.cold dowalias.colvotes > alias.col aalias.cold alias.col+dowalias.colvotes > alias.col aalias.cold alias.col <> alias.col order by dowalias.colvotespct desc"
"declare alias.col ialias.colt = ##viewthreshold## selealias.col top alias.col row_alias.columber() over (partitioalias.col by alias.col order by roualias.cold(cast(sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) - sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as float) / cast(p.viewcoualias.colt as float) * alias.col, alias.col)) as raalias.colk, alias.col as [post lialias.colk], p.owalias.coleruserid as [user lialias.colk], sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) - sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as [alias.coletuptable], p.viewcoualias.colt as [views], roualias.cold(cast(sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) - sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as float) / cast(p.viewcoualias.colt as float) * alias.col, alias.col) as alias.col from table p ialias.colalias.coler joialias.col table v oalias.col alias.col=alias.col where p.viewcoualias.colt > alias.col group by alias.col, p.owalias.coleruserid, p.viewcoualias.colt order by alias.col desc"
"selealias.col top alias.col favoritecoualias.colt, alias.col, alias.col, alias.col + cast(alias.col as varchar) + alias.col as lialias.colk from table order by favoritecoualias.colt desc"
"declare @alias.col int = ##alias.col## select count(*) as alias.col, alias.col from table where alias.col = @alias.col group by alias.col order by alias.col desc"
"declare @lastdataupdate datetime selealias.col @lastdataupdate = max(alias.col) from posts selealias.col top alias.col table as [user lialias.colk], table, table, table, (table + table) as alias.col, table/(table + table + alias.col) as upvotepercealias.coltage, roualias.cold(cast((table + table) as float) / (alias.col(day,u.alias.col,@lastdataupdate)+alias.col),alias.col) as alias.col from table u where alias.col(day,table,getdate()) < alias.col order by alias.col desc"
"select top alias.col coualias.colt(alias.col) as alias.col, alias.col as [post lialias.colk],alias.col from table v ialias.colalias.coler joialias.col table p oalias.col alias.col=alias.col where alias.col = alias.col aalias.cold alias.col=alias.col aalias.cold p.creatioalias.coldate betweealias.col alias.col aalias.cold alias.col group by alias.col,alias.col order by alias.col desc"
"set alias.colocoualias.colt oalias.col create table table ( alias.col bigialias.colt , body alias.colvarchar(max) , owalias.coleruseralias.col bigialias.colt , hash alias.colvarchar(alias.col) ) create ialias.coldex ix_table_alias.col oalias.col table (alias.col) create ialias.coldex ix_table_owalias.coleruseralias.col oalias.col table (owalias.coleruseralias.col) create ialias.coldex ix_table_hash oalias.col table (hash) ialias.colsert ialias.colto table select top alias.col alias.col, body, owalias.coleruseralias.col, hash=coalias.colvert(varchar(alias.col), hashbytes(x, body), alias.col) from table where posttypealias.col=alias.col aalias.cold lealias.col(body)<alias.col select max(alias.col) as alias.col, owalias.coleruseralias.col, hash, c=coualias.colt(*) ialias.colto table from table group by owalias.coleruseralias.col, hash havialias.colg coualias.colt(*)>alias.col select talias.col.alias.col, talias.col.hash, talias.col.c ialias.colto table from table talias.col ialias.colalias.coler joialias.col table talias.col oalias.col talias.col.hash=talias.col.hash select talias.col.alias.col as [post lialias.colk], talias.col.owalias.coleruseralias.col as [user lialias.colk], talias.col.creatioalias.coldate, talias.col.hash, talias.col.c, talias.col.reputatioalias.col from table talias.col ialias.colalias.coler joialias.col table talias.col oalias.col talias.col.alias.col=talias.col.alias.col left joialias.col table talias.col oalias.col talias.col.owalias.coleruseralias.col=talias.col.alias.col order by talias.col.c desc, talias.col.hash, talias.col.owalias.coleruseralias.col, talias.col.creatioalias.coldate desc, talias.col.reputatioalias.col"
"select alias.col as alias.col,alias.col from table q where alias.col = alias.col aalias.cold q.owalias.coleruserid is alias.colot alias.colull aalias.cold alias.col is alias.colull aalias.cold alias.col >= alias.col aalias.cold (select coualias.colt(alias.col) from table pt where alias.col = alias.col) <= alias.col aalias.cold (select coualias.colt(alias.col) from table a where a.parealias.coltid = alias.col aalias.cold alias.col = alias.col aalias.cold a.owalias.coleruserid is alias.colot alias.colull aalias.cold a.commualias.colityowalias.coleddate is alias.colull aalias.cold a.score >= alias.col ) >= alias.col aalias.cold exists (select alias.col from table a where a.parealias.coltid = alias.col aalias.cold alias.col = alias.col aalias.cold a.owalias.coleruserid is alias.colot alias.colull aalias.cold a.commualias.colityowalias.coleddate is alias.colull aalias.cold a.score >= alias.col aalias.cold a.commealias.coltcoualias.colt >= alias.col ) order by alias.col desc"
"select row_alias.columber() over(order by alias.col desc) as [#], table.id as [user lialias.colk], alias.col, locatioalias.col from table, table where table.id = table.userid aalias.cold table.class = alias.col aalias.cold table.tagbased = alias.col aalias.cold table.alias.colame = alias.col aalias.cold lower(table.locatioalias.col) like lower(alias.col) order by alias.col desc;"
select top alias.col alias.col [user lialias.colk] from table u left joialias.col table se oalias.col alias.col = se.owalias.coleruserid where u.reputatioalias.col >= alias.col aalias.cold alias.col is alias.colull group by alias.col havialias.colg coualias.colt(alias.col) = alias.col
"DECLARE @tagName varchar(N) DECLARE @tagInput bit DECLARE @cityName varchar(N) SET @tagname = rtrim(##TagName:string##) SET @cityName = rtrim(##cityName:string##); IF @tagname = X SELECT X ELSE IF @cityName = X SELECT X ELSE SET @cityName = X+LOWER(@cityName)+X; WITH UserTagScores as (SELECT a.OwnerUserId, t.TagName, u.Location, u.Reputation, SUM(CASE v.VoteTypeID WHEN N THEN N WHEN N THEN N END) as score FROM votes v INNER JOIN Posts a ON v.PostID = a.ID INNER JOIN Posts q ON a.parentId = q.id INNER JOIN PostTags pt ON q.id = pt.PostId INNER JOIN Tags T ON pt.TagId = t.id INNER JOIN USERS u ON u.id = a.OwnerUserId WHERE v.voteTypeId in (XYZ) and a.PostTypeID = N AND (a.CommunityOwnedDate is null or a.CommunityOwnedDate > v.CreationDate) AND (@tagInput = N or t.TagName = @TagName) AND a.OwnerUserId is not null AND LOWER(u.Location) LIKE @cityName GROUP BY a.OwnerUserId, t.TagName, u.Location, u.Reputation) , userTagRank as ( SELECT TagName, OwnerUserId, Location, Reputation, rank() over (partition by TagName order by score desc) rank, Score FROM UserTagScores) SELECT TagName, Rank, OwnerUserId, Location, Reputation, OwnerUserId [User Link], Score FROM userTagRank ORDER BY TagName, rank"
"create table table ( [name] nvarchar(n), [case] nvarchar(n), [path] nvarchar(n) ) ; insert into table ( [name], [case], [path] ) values (xyz) ; select p.label, p.value from table unpivot ( [value] for [label] in (xyz) ) p;"
"declare @temp table (id int identity(N,N), TagName char(N), score int, tagPopularity int); with tagsN as ( select top N tagid, count(*) as postCount from posttags group by tagid order by count(*) desc ), answers as ( select score, id, parentId from posts where communityowneddate is null and posttypeid = N and owneruserid = ##UserId## ) insert @temp(TagName, score, tagPopularity) select t.TagName, sum(a.score) as score, f.postCount from answers a inner join posttags pt on pt.postid = a.parentId right outer join tagsN f on f.tagid = pt.tagid inner join tags t on f.tagid = t.id group by t.tagname, f.postCount order by score desc select * , case when score >= N then X else convert(varchar(N), N-score) end as X , case when tagPopularity > N then X else convert(varchar(N), N-tagPopularity) end as X from @temp"
"select alias.col, table.displayalias.colame as alias.col from table questioalias.col, table aalias.colswer left joialias.col table oalias.col alias.col = table.id where alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold aalias.colswer.score > alias.col"
"declare alias.col int = ##userid## select alias.col as alias.col, alias.col as alias.col from table as alias where alias.col = alias.col and alias.col is not null order by alias.col desc"
"declare @tagname nvarchar(n) = x create table table ( site nvarchar(n) , displayname nvarchar(n) , qcount int , accountid int); declare @sql nvarchar(max) = x select @sql = @sql + iif( len(@sql) > n , x , x ) + nxx + name + xx + quotename(name) + x + quotename(name) + x from sys.databases where database_id > n exec (@sql) select x + cast(accountid as nvarchar) +x + max(displayname) , sum(qcount) from table group by accountid order by sum(qcount) desc drop table table"
select alias.col from table pt where not exists (select alias.col from table p where p.alias.col = alias.col) group by alias.col
"select table.id as alias.col, table.score, alias.col, table.owalias.coleruserid as alias.col from table v ialias.colalias.coler joialias.col table oalias.col alias.col = table.id where alias.col=alias.col aalias.cold table.score < alias.col aalias.cold alias.col > alias.col order by table.score"
select alias.col alias.col from table where alias.col like alias.col
"declare @lastdataupdate datetime select @lastdataupdate = maalias.col(alias.col) from posts select top alias.col table as alias.col, table, table, alias.col = case whealias.col alias.col = alias.col thealias.col table whealias.col dowalias.colvotes = alias.col thealias.col table whealias.col alias.col = alias.col aalias.cold dowalias.colvotes = alias.col thealias.col alias.col else table / table ealias.cold from table u where table = alias.col order by alias.col asc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... or location like x and alias.col >= n order by alias.col desc;"
"selealias.col alias.col as alias.col, alias.col as alias.col, alias.col as alias.col, coalias.colvert(decimal(alias.col,alias.col), cast(alias.col as alias) / alias.col) as alias.col, case whealias.col alias.col > alias.col thealias.col alias.col else alias.col - alias.col ealias.cold as [acalias.colpted votes alias.coleeded], case whealias.col alias.col > alias.col * alias.col aalias.cold alias.col > alias.col thealias.col alias.col else ((case whealias.col alias.col > alias.col thealias.col alias.col else alias.col ealias.cold) * alias.col - alias.col + alias.col) ealias.cold as [your votes alias.coleeded], case whealias.col alias.col > alias.col thealias.col alias.col else alias.col - alias.col ealias.cold + case whealias.col alias.col > alias.col * alias.col aalias.cold alias.col > alias.col thealias.col alias.col else ((case whealias.col alias.col > alias.col thealias.col alias.col else alias.col ealias.cold) * alias.col - alias.col + alias.col) ealias.cold as [total votes alias.coleeded] from table questioalias.col, table acalias.colptedaalias.colswer, table youraalias.colswer where youraalias.colswer.owalias.coleruserid = alias.col## aalias.cold youraalias.colswer.parealias.coltid = alias.col aalias.cold questioalias.col.acalias.colptedaalias.colswerid = acalias.colptedaalias.colswer.id aalias.cold alias.col > alias.col aalias.cold alias.col >= ##mialias.colacalias.colptedscore:ialias.colt?alias.col## aalias.cold alias.colot ( alias.col > alias.col aalias.cold alias.col > (alias.col * alias.col) ) order by cast(alias.col as alias) / alias.col desc"
"select top alias.col alias.col as [post lialias.colk] , p.owalias.coleruserid as [user lialias.colk] , alias.col , sum( case alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col else case whealias.col p.acalias.colptedaalias.colswerid <> alias.colull thealias.col alias.col else alias.col ealias.cold ealias.cold ) as questioalias.colreputatioalias.col from table p ialias.colalias.coler joialias.col table pl oalias.col alias.col = alias.col left outer joialias.col table v oalias.col alias.col = alias.col where pl.lialias.colktypeid = alias.col group by alias.col , p.owalias.coleruserid , alias.col order by sum( case alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col else alias.col ealias.cold ) desc"
select alias.col as alias.col from table where body like x
"selealias.col table.id as alias.col, coualias.colt(table.id) as alias.col, cast(avg(cast(alias.col as float)) as alias.columeric(alias.col,alias.col)) as [average aalias.colswer alias.col] , table.reputatioalias.col from table ialias.colalias.coler joialias.col table oalias.col table.id = owalias.coleruserid where alias.col = alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold closeddate is alias.colull group by table.id, displayalias.colame , table.reputatioalias.col havialias.colg coualias.colt(table.id) > alias.col aalias.cold table.reputatioalias.col > alias.col order by [average aalias.colswer alias.col]"
"with table as ( select alias.col, maalias.col(alias.col) historyalias.col from table where tabletypealias.col = alias.col group by alias.col ) select alias.col, p.alias.col [post lialias.colk], p.lastactivitydate [last active], h.commealias.colt from table joialias.col table p oalias.col p.alias.col = alias.col joialias.col table o oalias.col o.alias.col = p.alias.col aalias.cold o.tabletypealias.col = alias.col aalias.cold alias.col != alias.col joialias.col table h oalias.col h.alias.col = historyalias.col where upper(alias.col) like alias.col escape alias.colsolved-alias.col[\[(<]fialias.coled[\])>]alias.col or upper(alias.col) like alias.col or upper(alias.col) like alias.col escape alias.colaalias.colswered-alias.col[\[(<]updated[\])>]alias.col or upper(alias.col) like alias.col ..."
"select alias.col as alias.col, alias.col, alias.col from table c where tealias.colt like alias.col aalias.cold alias.col = alias.col order by alias.col"
"select count(alias.col) as alias.col ,count(alias.col) as alias.col ,(count(alias.col)*alias.col / (count(alias.col)*alias.col + count(alias.col)*alias.col)) * alias.col as alias.col ,(count(alias.col)*alias.col / (count(alias.col)*alias.col + count(alias.col)*alias.col)) * alias.col as alias.col from [superuser]table"
"select toalias alias.col alias.col as [aliasost lialias.colk], alias.col, alias.creatioalias.coldate from table as alias where alias.col like alias.col + ##tagalias.colame:strialias.colg## + alias.col aalias.cold alias.col = alias.col order by alias.creatioalias.coldate"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... order by alias.col desc;"
"select top alias.col table.id as [user lialias.colk], table.reputatioalias.col, coualias.colt(*) alias.col, sum(case whealias.col alias.col = alias.col aalias.cold alias.col < alias.col or alias.col is alias.colot alias.colull thealias.col alias.col else alias.col ealias.cold) alias.col, sum(case whealias.col table.creatioalias.coldate > dateadd(moalias.colth, alias.col, getdate()) or alias.col > dateadd(moalias.colth, alias.col, getdate()) aalias.cold alias.col = alias.col aalias.cold alias.col < alias.col thealias.col alias.col else alias.col ealias.cold) alias.col, sum(case whealias.col alias.col = alias.col aalias.cold alias.col < alias.col thealias.col alias.col else alias.col ealias.cold) alias.col, sum(case whealias.col alias.col is alias.colot alias.colull thealias.col alias.col else alias.col ealias.cold) alias.col from table ialias.colalias.coler joialias.col table oalias.col table.owalias.coleruserid = table.id where alias.col = alias.col group by table.id, table.reputatioalias.col, owalias.coleruserid order by sum(case whealias.col alias.col = alias.col aalias.cold alias.col < alias.col or alias.col is alias.colot alias.colull thealias.col alias.col else alias.col ealias.cold) desc, table.id, table.reputatioalias.col;"
"select alias.col, alias.col, alias.col from table where location = ##location## order by alias.col desc"
"declare alias.col ialias.colt = ##useralias.col## select alias.col, coualias.colt(*) as uptable from table ialias.colalias.coler joialias.col posttable oalias.col posttable.tagalias.col = table.alias.col ialias.colalias.coler joialias.col table oalias.col table.parealias.coltalias.col = posttable.postalias.col ialias.colalias.coler joialias.col table oalias.col table.postalias.col = table.alias.col aalias.cold alias.col = alias.col where table.owalias.coleruseralias.col = alias.col aalias.cold table.alias.col ialias.col ( select top(alias.col) alias.col from table order by [coualias.colt] desc) group by alias.col order by uptable desc"
"select top alias.col alias.col as [post lialias.colk], alias.col, p.creatioalias.coldate as [asked date], p.viewcoualias.colt from table p where p.acceptedaalias.colswerid is alias.colull aalias.cold p.posttypeid = alias.col aalias.cold p.creatioalias.coldate < getdate() - alias.col aalias.cold p.commualias.colityowalias.coleddate is alias.colull aalias.cold p.closeddate is alias.colull aalias.cold alias.colot exists ( select alias.col from table palias.col where palias.col.parealias.coltid = alias.col aalias.cold palias.col.score >= alias.col aalias.cold palias.col.posttypeid = alias.col ) aalias.cold alias.colot exists ( select alias.col from table ph where alias.col = alias.col aalias.cold ph.tabletypeid = alias.col ) order by alias.col desc"
"selealias.col coualias.colt(alias.col) as alias.col, alias.col as alias.col, alias.col as alias.col, alias.col as alias.col, alias.col from table v ialias.colalias.coler joialias.col table p oalias.col alias.col=alias.col ialias.colalias.coler joialias.col table c oalias.col alias.col=alias.col where alias.col = alias.col aalias.cold alias.col=alias.col aalias.cold {falias.col alias.colow()} - alias.col < alias.col## group by alias.col,p.body,alias.col,alias.col, alias.col, alias.col order by cast(alias.col as ialias.colt) * cast(alias.col as ialias.colt) * ( cast(coualias.colt(alias.col) as ialias.colt) + cast(coualias.colt(alias.col) as ialias.colt)) desc"
"select top alias.col alias.col as [post lialias.colk], coualias.colt(alias.col) from table group by alias.col order by coualias.colt(alias.col), alias.col"
"select top alias.col coualias.colt(alias.col), alias.col from table t joialias.col posttable pt oalias.col alias.col = alias.col group by alias.col"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... order by alias.col desc;"
"selealias.col alias.col, coualias.colt(alias.col) from ( selealias.col cast( cast(alias.col(alias.col, alias.col) as varchar) + alias.col + cast(alias.col(alias.col, alias.col) as varchar) + alias.col as datetime) table, alias.col from table p joialias.col table pt oalias.col alias.col = alias.col joialias.col table t oalias.col alias.col = alias.col where alias.col ialias.col ( selealias.col top alias.col alias.col from table order by coualias.colt desc ) ) as alias.col group by tagalias.colame, table"
"select top alias.col table.id as alias.col, coualias.colt(table.id) as postcoualias.colt from table ialias.colalias.coler joialias.col table oalias.col table.id = table.postid ialias.colalias.coler joialias.col table oalias.col table.id = table.owalias.coleralias.col where table.id > alias.col aalias.cold table.tagid = alias.col aalias.cold table.creatioalias.coldate >alias.col group by table.id havialias.colg coualias.colt(table.id) > alias.col order by coualias.colt(table.id) desc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or lower(location) like x ... order by alias.col desc;"
"select table.owalias.coleruserid, table.displayalias.colame, alias.col, coualias.colt(*) as uptable from table ialias.colalias.coler joialias.col posttable oalias.col posttable.tagid = table.id ialias.colalias.coler joialias.col table oalias.col table.parealias.coltid = posttable.postid ialias.colalias.coler joialias.col table oalias.col table.postid = table.id aalias.cold alias.col = alias.col ialias.colalias.coler joialias.col table oalias.col table.owalias.coleruserid = table.id group by table.owalias.coleruserid,alias.col,table.displayalias.colame order by uptable desc"
"select alias.col,alias.colalias.col,alias.col*alias.col/(alias.col+alias.colalias.col) as alias.col, talias.col.mo,talias.col.yr, talias.col.yr+talias.col.mo/alias.col as alias.col from (select coualias.colt(*) as alias.col ,moalias.colth(creatioalias.coldate) as alias.col , year(creatioalias.coldate) as alias.col from table where alias.col>alias.col aalias.cold alias.col like alias.col group by moalias.colth(creatioalias.coldate), year(creatioalias.coldate)) talias.col ialias.colalias.coler joialias.col (select coualias.colt(*) as alias.col ,moalias.colth(creatioalias.coldate) as alias.col , year(creatioalias.coldate) as alias.col from table where alias.col alias.colot like alias.col group by moalias.colth(creatioalias.coldate), year(creatioalias.coldate)) talias.col oalias.col talias.col.mo=talias.col.mo aalias.cold talias.col.yr=talias.col.yr order by talias.col.yr*alias.col+talias.col.mo desc"
"select alias.col, alias.col as alias.col, body from table where body like x"
"select coualias.colt(*), table.useralias.col as dowalias.coltable from table joialias.col table oalias.col table.alias.col = table.postalias.col where alias.col=alias.col aalias.cold table.owalias.coleruseralias.col ialias.col (select top alias.col alias.col from table) group by table.useralias.col"
"selealias.col alias.col(dayofyear, alias.col) day ,sum (alias.col) ,u.displayalias.colame from table u joialias.col table p oalias.col alias.col = alias.col where (alias.col=alias.col or alias.col=alias.col) aalias.cold alias.col>alias.col aalias.cold alias.col > cast (alias.col as alias) aalias.cold alias.col < cast (alias.col as alias) group by u.displayalias.colame, alias.col order by day"
"select alias.col,alias.col,alias.col,alias.col,alias.col,alias.col,alias.col,alias.col as alias.col,alias.col from table as q ialias.colalias.coler joialias.col table as a oalias.col alias.col = alias.col where alias.col ialias.col (alias.col) aalias.cold alias.col=alias.col order by alias.col asc"
select alias.col as alias.col from table where body like x
select coualias.colt(*) from table where alias.col > ( select alias.col from table where alias.col = alias.col )
"select top alias.col alias.col, displayalias.colame, reputatioalias.col from table where reputatioalias.col > alias.col order by reputatioalias.col desc"
"declare @UserId int = ##UserId##; with fights as ( select myAnswer.ParentId as Question, myAnswer.Score as MyScore, mattAnswer.Score as mattsScore from Posts as myAnswer inner join Posts as mattAnswer on mattAnswer.OwnerUserId = N and myAnswer.ParentId = mattAnswer.ParentId where myAnswer.ownerUserId = @UserId and myAnswer.postTypeId = N ) select case when myScore > mattsScore then X when myScore < mattsScore then X else X end as X, Question as [Post Link], myScore as X, mattsScore as X from fights;"
"select alias.col as alias.col, isalias.colull(alias.col, alias.col) as sualias.colday, isalias.colull(alias.col, alias.col) as moalias.colday, isalias.colull(alias.col, alias.col) as alias.col, isalias.colull(alias.col, alias.col) as wedalias.colesday, isalias.colull(alias.col, alias.col) as alias.col, isalias.colull(alias.col, alias.col) as alias.col, isalias.colull(alias.col, alias.col) as alias.col from ( select coalias.colvert(ialias.colt, alias.col(alias.col, creatioalias.coldate)) as alias.col, ( right(alias.col + coalias.colvert(varchar(alias.col), alias.col(hour, creatioalias.coldate)), alias.col) + alias.col + right(alias.col + coalias.colvert(varchar, alias.col(mialias.colute, creatioalias.coldate) / alias.col * alias.col), alias.col) ) as alias.col from table joialias.col table oalias.col alias.col = table.id ) alias.col alias.col ( coualias.colt(alias.col) for alias.col ialias.col (alias.colyz) ) alias.colalias.col order by alias.col"
"select alias.col(month, datediff(month, n, alias.col), n) m, alias.col, count(*) from table pt join table q on alias.col=alias.col join table t on alias.col=alias.col where alias.col in (alias.col) and alias.col < alias.col(month, datediff(month, n, getdate()), n) group by alias.col(month, datediff(month, n, alias.col), n), alias.col order by alias.col(month, datediff(month, n, alias.col), n)"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x order by alias.col desc;"
"select alias.col as alias.col, max(alias.col) as alias.col, max(alias.col) as alias.col, count(*) as alias.col, max(alias.col(day, a.creationdate, b.creationdate)) as [days to first outscorer] from table q, table a, table b where alias.col = alias.col and alias.col = alias.col and alias.col > alias.col group by alias.col order by max(alias.col) desc"
"selealias.col top alias.col alias.col as [post lialias.colk], viewcoualias.colt, alias.col, cast(cast(viewcoualias.colt as float)/alias.col as decimal(alias.col,alias.col)) [voted by oalias.cole ialias.col] from table where viewcoualias.colt > alias.col aalias.cold alias.col > alias.col aalias.cold posttypealias.col = alias.col order by viewcoualias.colt asc"
"select top alias.col:ialias.colt?alias.col alias.col as alias.col,alias.col as alias.col,coualias.colt(*) as alias.col, alias.col as alias.col,alias.col from table q ialias.colalias.coler joialias.col table a oalias.col alias.col=alias.col full outer joialias.col table h oalias.col alias.col=alias.col where alias.col=alias.col aalias.cold alias.col=alias.col aalias.cold a.commualias.colityowalias.coleddate is alias.colot alias.colull aalias.cold h.tabletypeid=alias.col group by alias.col,alias.col,alias.col,alias.col havialias.colg coualias.colt(h.id)=alias.col order by coualias.colt(*) desc"
"select alias.col as alias.col, alias.col as alias.col, alias.col, (case whealias.col alias.colot exists (select alias.col from table as c where alias.col = alias.col aalias.cold (alias.col = alias.col or alias.col ialias.col (alias.col) from table as palias.col where palias.col.parealias.coltid = alias.col)) < alias.col"
"select top alias.col alias.col as [post lialias.colk], alias.col as [user lialias.colk], p.viewcoualias.colt, alias.col, year(p.lastactivitydate), moalias.colth(p.lastactivitydate), case whealias.col alias.col is alias.colull thealias.col alias.col else alias.col ealias.cold as closed from table p ialias.colalias.coler joialias.col table u oalias.col p.owalias.coleruserid = alias.col where alias.col < alias.col aalias.cold alias.col alias.colot like alias.col aalias.cold alias.colot ealias.colists (select alias.col from [table] c where alias.col > alias.col aalias.cold c.[parealias.coltid] = alias.col) aalias.cold u.lastacalias.colssdate < alias.col(moalias.colth, alias.col, getdate()) aalias.cold u.reputatioalias.col < alias.col order by year(p.lastactivitydate), moalias.colth(p.lastactivitydate), alias.col, p.viewcoualias.colt"
"declare alias.col float select alias.col = sum(alias.col) from table where alias.col = alias.col select table.alias.colalias.colame as alias.col, coualias.colt(*) as questioalias.cols, sum(table.alias.col) as views, str(alias.col * sum(table.alias.col) / alias.col,alias.col,alias.col) as percealias.coltofsite, sum(table.score) as score, sum(table.aalias.colswercoualias.colt) as aalias.colswers, sum(table.alias.col) / coualias.colt(*) as avgviews, str(sum(table.score) / cast(coualias.colt(*) as float),alias.col,alias.col) as avgscore, str(sum(table.aalias.colswercoualias.colt) / cast(coualias.colt(*) as float),alias.col,alias.col) as avgaalias.colswers from table joialias.col table oalias.col table.id = table.postid joialias.col table oalias.col table.alias.colid = table.id where ((table.alias.col = alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col)) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) group by table.alias.colalias.colame order by questioalias.cols desc"
"; with tagleague as ( select p.owneruserid , sum(score) as score , count(*) as posts , rank() over(order by sum(score)) as tagrank from posts p inner join posttags pt on pt.postid = coalesce(p.parentid, p.id) inner join tags t on t.id = pt.tagid where t.tagname =X and p.owneruserid is not null and posttypeid in (XYZ) group by owneruserid ) select owneruserid as [User Link] , N - (cast(tagrank as decimal) /(select count(*) from tagleague) * N) as perc , (select count(*) from tagleague) , tagrank from tagleague where owneruserid = ##uid:int?N##"
"with table(yr, mth, calias.colt) as ( select year(alias.col), moalias.colth(alias.col), coualias.colt(*) from table where alias.col = alias.col group by year(alias.col), moalias.colth(alias.col) ), table(yr, mth, calias.colt) as ( select year(alias.col), moalias.colth(alias.col), coualias.colt(*) from table where alias.col = alias.col group by year(alias.col), moalias.colth(alias.col) ), table_total (yr, mth, calias.colt) as ( select year(alias.col), moalias.colth(alias.col), sum(aalias.colswercoualias.colt) from table where alias.col = alias.col group by year(alias.col), moalias.colth(alias.col) ) select alias.col as year, alias.col as moalias.colth, a.calias.colt as table, at.calias.colt as totaltable from table q joialias.col table a oalias.col alias.col = alias.col aalias.cold alias.col = alias.col joialias.col table_total at oalias.col alias.col = alias.col aalias.cold alias.col = alias.col order by alias.col desc, alias.col desc"
"selealias.col alias.col,alias.col + cast(alias.col as varchar(alias.col)) as alias.col from table where upper(tealias.colt) like upper(alias.col);"
"declare @UserId int = ##UserId##; with fights as ( select myAnswer.ParentId as Question, myAnswer.Score as MyScore, NicksAnswer.Score as NicksScore from Posts as myAnswer inner join Posts as NicksAnswer on NicksAnswer.OwnerUserId = N and myAnswer.ParentId = NicksAnswer.ParentId where myAnswer.ownerUserId = @UserId and myAnswer.postTypeId = N ) select case when myScore > NicksScore then X when myScore < NicksScore then X else X end as X, Question as [Post Link], myScore as X, NicksScore as X from fights;"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x order by alias.col desc;"
"select case whealias.col alias.col = alias.col thealias.col x else x ealias.cold as [post type], datealias.colame(alias.col, p.creatioalias.coldate) as day, coualias.colt(*) as [post coualias.colt], sum(case whealias.col votetypeid = alias.col thealias.col alias.col else alias.col ealias.cold) as [up table], sum(case whealias.col votetypeid = alias.col thealias.col alias.col else alias.col ealias.cold) as [dowalias.col table], roualias.cold((cast((sum(case whealias.col votetypeid = alias.col thealias.col alias.col else alias.col ealias.cold) + sum(case whealias.col votetypeid = alias.col thealias.col alias.col else alias.col ealias.cold)) as float)) / coualias.colt(alias.col), alias.col) as [table per post], roualias.cold((cast(sum(case whealias.col votetypeid = alias.col thealias.col alias.col else alias.col ealias.cold) as float) / cast(sum(case whealias.col votetypeid = alias.col thealias.col alias.col else alias.col ealias.cold) as float)), alias.col) as [up vs dowalias.col ratio] from table v joialias.col table p oalias.col alias.col=alias.col group by alias.col, alias.col(alias.col, p.creatioalias.coldate), datealias.colame(alias.col, p.creatioalias.coldate) order by alias.col(alias.col, p.creatioalias.coldate), alias.col"
"declare @useralias.col ialias.colt = ##useralias.col## select top alias.col alias.col as useralias.col, ( select coualias.colt(*) from table where posttypealias.col = alias.col aalias.cold lasteditoruseralias.col = table.alias.col aalias.cold owalias.coleruseralias.col != table.alias.col ) as questioalias.coledits, ( select coualias.colt(*) from table where posttypealias.col = alias.col aalias.cold lasteditoruseralias.col = table.alias.col aalias.cold owalias.coleruseralias.col != table.alias.col ) as aalias.colsweredits, ( select coualias.colt(*) from table where lasteditoruseralias.col = table.alias.col aalias.cold owalias.coleruseralias.col != table.alias.col ) as alias.col from table order by alias.col desc"
"with table as ( select alias.col, ( select coualias.colt(*) as alias.col from table pt joialias.col table pp oalias.col alias.col = alias.col joialias.col table pa oalias.col alias.col = alias.col joialias.col table v oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col ) as uptable, ( select coualias.colt(*) as alias.col from table pt joialias.col table pp oalias.col alias.col = alias.col joialias.col table pa oalias.col alias.col = alias.col joialias.col table v oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col ) as dowalias.coltable from table t cross apply ( select coualias.colt(*) as alias.col from table pt where alias.col = alias.col havialias.colg coualias.colt(*) >= alias.col ) pt ) select tagalias.colame as [table], uptable as [uptable], dowalias.coltable as [dowalias.coltable], roualias.cold(alias.col.alias.col * dowalias.coltable / alias.colullif(uptable, alias.col), alias.col) as alias.col from table order by alias.col desc"
"select top alias.col q.creatioalias.coldate as alias.col, a.creatioalias.coldate as alias.col, alias.col as [post lialias.colk], alias.col as alias.col, alias.col as alias.col, a.owalias.coleruserid as [user lialias.colk] from table a ialias.colalias.coler joialias.col table q oalias.col alias.col=alias.col aalias.cold a.parealias.coltid=alias.col aalias.cold alias.col=alias.col ialias.colalias.coler joialias.col table u oalias.col a.owalias.coleruserid=alias.col where alias.col(m, q.creatioalias.coldate, a.creatioalias.coldate) >= alias.col aalias.cold u.reputatioalias.col < alias.col aalias.cold q.viewcoualias.colt >= alias.col."
"select table.id as alias.col, table.reputatioalias.col, alias.col, alias.col from table ialias.colalias.coler joialias.col ( select alias.col as alias.col, coualias.colt(alias.col) as alias.col, coualias.colt(alias.col) as alias.col from table aalias.colswer left outer joialias.col table questioalias.col oalias.col alias.col = alias.col where alias.col = alias.col group by alias.col ) aalias.colswers oalias.col table.id = aalias.colswers.alias.col where table.id ialias.col (##alias.col##)"
"select sum(case when alias.col is not null then n else n end) as x, (sum(case when alias.col is not null then n else n end) * n) / count(*) as x, count(*) as x from table p"
"selealias.col alias.col+alias.col as alias.col,alias.col + cast(alias.col+alias.col as alias.colvarchar) as lialias.colk, a.creatioalias.coldate as previousdate, (selealias.col creatioalias.coldate from table where alias.col=alias.col+alias.col) as alias.colealias.coltdate from table a left outer joialias.col table b oalias.col alias.col+alias.col=b.alias.col left outer joialias.col table h oalias.col h.tabletypealias.col=alias.col aalias.cold h.commealias.colt like alias.col ...+cast(alias.col+alias.col as alias.colvarchar)+alias.col where b.alias.col is alias.colull aalias.cold h.alias.col is alias.colull order by alias.col"
"select alias.col, alias.col as alias.col from table where table.posttypealias.col = alias.col aalias.cold table.closeddate is alias.colull aalias.cold alias.col ialias.col (select postalias.col from table group by postalias.col havialias.colg coualias.colt(table.tagalias.col) = alias.col)"
"declare @UserId int = ##UserId##; WITH myTags AS ( SELECT DISTINCT Tags.[ID] FROM Tags INNER JOIN PostTags ON PostTags.TagId = Tags.id INNER JOIN Posts ON Posts.ParentId = PostTags.PostId WHERE Posts.OwnerUserId = @UserId ), TagRanks AS ( SELECT TagName, Posts.OwnerUserId as userID, row_number() over (partition by Tags.ID order by COUNT(*) desc) as TagRank FROM Tags INNER JOIN PostTags ON PostTags.TagId = Tags.id INNER JOIN Posts ON Posts.ParentId = PostTags.PostId INNER JOIN Votes ON Votes.PostId = Posts.Id and VoteTypeId = N WHERE Tags.[ID] in (XYZ) SELECT * FROM TagRanks WHERE (userID = @UserID)"
"select count(alias.col) as alias.col, count(case when alias.col is null then n else null end) as alias.col, count(case when alias.col is not null and closeddate is not null then n else null end) as alias.col, count(case when alias.col is not null then n else null end) as alias.col from table;"
"select alias.col+convert(varchar,alias.col)+alias.col+convert(varchar,alias.col) alias.col, postalias.col as alias.col, comment, creationdate, alias.col from table where owneruseralias.col = ##useralias.col## and alias.col is not null order by alias.col desc"
select count(*) as alias.col from table
"select sum(alias.col) as alias.col, sum(alias.col) as alias.col from table u left join table p on alias.col = alias.col where alias.col is null"
"select alias.col as alias.col, alias.col as alias.col, coualias.colt(*) as alias.col from table ph ialias.colalias.coler joialias.col table p oalias.col alias.col = alias.col where alias.col = alias.col group by alias.col havialias.colg coualias.colt(*) >= alias.col order by alias.col desc"
"with totaltable as ( selealias.col cast(coutablet(*) as float) as coutablet from table where alias.col = table ), groupedtable as ( selealias.col alias.col, case whetable alias.col < table thetable x whetable alias.col = table thetable x whetable alias.col = table thetable x whetable alias.col = table thetable x whetable alias.col = table thetable x whetable alias.col = table thetable x whetable alias.col = table thetable x whetable alias.col <= table thetable x whetable alias.col <= table thetable x whetable alias.col <= table thetable x whetable alias.col <= table thetable x else x etabled as groupedalias.col, alias.col from table where alias.col = table ) selealias.col groupedalias.col, coutablet(*) as tableumquestiotables, routabled( coutablet(*)/(selealias.col coutablet from totaltable) *table,table) as peralias.coltabletage from groupedtable group by groupedalias.col order by groupedalias.col"
"declare alias.col ialias.colt = ##userid## select top alias.col alias.col, alias.col as [post lialias.colk], pt.alias.colame as alias.col, alias.col, p.creatioalias.coldate, alias.col from table p ialias.colalias.coler joialias.col table pt oalias.col alias.col = alias.col where alias.col like alias.col aalias.cold p.owalias.coleruserid = alias.col aalias.cold alias.col = alias.col order by p.creatioalias.coldate desc"
"select case whealias.col alias.col < alias.col thealias.col x whealias.col alias.col betweealias.col alias.col aalias.cold alias.col thealias.col x whealias.col alias.col betweealias.col alias.col aalias.cold alias.col thealias.col x whealias.col alias.col > alias.col thealias.col x ealias.cold as badgetype, coualias.colt(id) coualias.colt from table where alias.col ialias.col (alias.col) group by case whealias.col alias.col < alias.col thealias.col x whealias.col alias.col betweealias.col alias.col aalias.cold alias.col thealias.col x whealias.col alias.col betweealias.col alias.col aalias.cold alias.col thealias.col x whealias.col alias.col > alias.col thealias.col x ealias.cold"
"declare @MyUserId int = ##MyUserId##; select count(distinct myAnswer.ParentId) as QuestionCount, otherAnswer.OwnerUserId as [User Link], otherUser.DisplayName as otherUserDisplayName from Posts as myAnswer, Posts as otherAnswer, Users as otherUser where otherAnswer.OwnerUserId != @MyUserId and myAnswer.ownerUserId = @MyUserId and myAnswer.ParentId = otherAnswer.ParentId and otherAnswer.postTypeId = N and myAnswer.postTypeId = N and otherUser.id = otherAnswer.OwnerUserId group by otherAnswer.OwnerUserId, otherUser.DisplayName having count(distinct myAnswer.ParentId) > N order by QuestionCount desc"
DECLARE @questionID int = ##questionID##; SELECT * FROM Votes WHERE VoteTypeId = N AND PostId = @questionID;
"select top alias.col alias.col as [post lialias.colk], alias.col, viewcoualias.colt, posttypealias.col from table where posttypealias.col = alias.col aalias.cold owalias.coleruseralias.col = alias.col order by viewcoualias.colt desc"
"select table.postid as alias.col, table.creatioalias.coldate as alias.col, table.alias.colame as alias.col from table joialias.col table oalias.col table.id = table.alias.colid where table.alias.colid = alias.col"
"select alias.col as alias.col, alias.col from table where alias.col like alias.col"
"declare @qid int = ##questionid## ;with qs as ( select creationdate , id , title , body , owneruserid from posts where id = @qid ) , ans as ( select creationdate , id , body , owneruserid , parentid from posts where parentid = @qid ) , posttype as ( select id , case when p.posttypeid = N then X else X end as qa , X + cast(id as nvarchar) + X + case when p.posttypeid = N then left(title,N) else left(body,N) end as url from posts p where id = @qid or parentid= @qid ) , cmts as ( select c.creationdate , c.id , userid , [text] , p.qa , p.url from comments c inner join posttype p on p.id = c.postid ) select creationdate , X as event , owneruserid as [User Link] , X+ cast(id as nvarchar)+ X as [QA Link] , null as [Comment - Edit Link] from qs union select creationdate , X , owneruserid as [User Link] , X+ cast(id as nvarchar)+ X , null from ans union select creationdate , X , userid as [User Link] , url , X+ cast(id as nvarchar)+ X + left([text], N) from cmts order by creationdate desc"
"select top alias.col parealias.colt_post.id as [post lialias.colk], table.id as [user lialias.colk], alias.col(secoalias.cold, parealias.colt_post.creatioalias.coldate, table.creatioalias.coldate) as alias.col from table, table as parealias.colt_post, table where table.posttypeid = alias.col aalias.cold table.parealias.coltid = parealias.colt_post.id aalias.cold table.owalias.coleruserid = table.id order by alias.col asc;"
"declare alias.col alias.colvarchar(alias.col) = ##tag:strialias.colg## select alias.col as alias.col, alias.col as alias.col, alias.col as alias.col, alias.col as alias.col, (alias.col / alias.col + alias.col + (select sum(alias.col) from table a where a.parealias.coltid = alias.col) - (lealias.col(alias.col) - alias.col) * lealias.col(alias.col)) as [badalias.coless] from table q where alias.col = alias.col aalias.cold alias.col like alias.col ... aalias.cold alias.col like alias.col ... + alias.col + alias.col order by badalias.coless desc"
"declare @alias.col int = ##alias.col## select alias.col(year,creationdate) as [year], alias.col(month,creationdate) as [date], isnull(score,n) as [score], count(*) as commentcount, sum(len(text)) as typed from table where alias.col = @alias.col group by alias.col(year,creationdate), alias.col(month,creationdate), isnull(score,n) with cube order by isnull(alias.col(year,creationdate),n), isnull(alias.col(month,creationdate),n), isnull(isnull(score,n),n) desc, commentcount desc"
"selealias.col top alias.col alias.col as [user lialias.colk], u.reputatioalias.col as alias.col, coualias.colt(alias.col) as alias.col, sum(alias.col) as alias.col, cast (sum(alias.col) as alias) / cast(coualias.colt(alias.col) as alias) as alias.col from table a, table u where a.owalias.coleruserid = alias.col aalias.cold alias.col = alias.col aalias.cold a.commualias.colityowalias.coleddate is alias.colull group by alias.col, u.reputatioalias.col havialias.colg coualias.colt(alias.col) > alias.col order by cast (sum(alias.col) as alias) / cast(coualias.colt(alias.col) as alias) desc"
"select top alias.col row_alias.columber() over(order by reputatioalias.col desc) as [#], id as [user lialias.colk], reputatioalias.col from table where lower(locatioalias.col) like x or upper(locatioalias.col) like x ... order by reputatioalias.col desc;"
"select alias.col, sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as [scored aalias.colswers], sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as [ualias.colscored aalias.colswers], sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold)*alias.col / coualias.colt(alias.col) / alias.col.alias.col as [peralias.colalias.coltage ualias.colscored] from table q ialias.colalias.coler joialias.col table a joialias.col table u oalias.col a.owalias.coleruserid = alias.col oalias.col alias.col = q.acalias.colptedaalias.colswerid where a.commualias.colityowalias.coleddate is alias.colull aalias.cold a.owalias.coleruserid != q.owalias.coleruserid aalias.cold a.posttypeid = alias.col group by alias.col havialias.colg coualias.colt(alias.col) > alias.col order by [peralias.colalias.coltage ualias.colscored] desc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col, location from table where lower(location) like x order by alias.col desc;"
"select alias.col, count(alias.col) from table p inner join table pt on (alias.col = alias.col) inner join table t on (alias.col = alias.col) where alias.col = alias.col or alias.col like alias.col ... group by alias.col"
"select alias.col as alias.col, alias.col, alias.col(alias.col * alias.col / alias.col, alias.col) as [peralias.colalias.colt] from (select a.owalias.coleruserid, coualias.colt(alias.col) as alias.col, sum(case whealias.col q.acalias.colptedaalias.colswerid is alias.colull thealias.col alias.col else alias.col ealias.cold) as [acalias.colpted] from table as a left joialias.col table as q oalias.col alias.col = q.acalias.colptedaalias.colswerid where alias.col = alias.col group by a.owalias.coleruserid ) as t where t.[acalias.colpted] = t.alias.col"
"select alias.col from (( select coualias.colt(alias.col) as alias.col, alias.col as alias.col from table u where alias.colot ealias.colists (select alias.col from table p where alias.col = alias.col) aalias.cold alias.colot ealias.colists (select alias.col from table s where alias.col = alias.col) ) ualias.colioalias.col ( select coualias.colt(alias.col) as alias.col, alias.col(power(alias.col, floor(logalias.col(u.reputatioalias.col)))) + alias.col + alias.col(alias.col(power(alias.col, floor(logalias.col(u.reputatioalias.col)) + alias.col) - alias.col)) as alias.col from table u where ealias.colists (select alias.col from table p where alias.col = alias.col) or ealias.colists (select alias.col from table s where alias.col = alias.col) group by floor(logalias.col(u.reputatioalias.col)) )) results order by alias.col(charialias.coldealias.col(alias.col, results.raalias.colge) = alias.col, alias.col, lealias.col(results.raalias.colge))"
"select top alias.col alias.col as alias.col, alias.col as [post lialias.colk] from table where posttypealias.col = alias.col order by alias.col desc"
"select alias.col as tablecore, alias.col as alias.col from table c where alias.col=##alias.col## and alias.col >= alias.col## order by tablecore desc"
"declare @useralias.colame alias.colvarchar (alias.col) = x select alias.col, coualias.colt(*) as uptable from table ialias.colalias.coler joialias.col posttable oalias.col posttable.tagid = table.id ialias.colalias.coler joialias.col table oalias.col table.parealias.coltid = posttable.postid ialias.colalias.coler joialias.col table oalias.col table.owalias.coleruserid = table.id ialias.colalias.coler joialias.col table oalias.col table.postid = table.id aalias.cold alias.col = alias.col where table.displayalias.colame = @useralias.colame group by alias.col order by uptable desc"
"select top alias.col:ialias.colt?alias.col alias.col as alias.col,alias.col as alias.col,alias.col as alias.col from table a ialias.colalias.coler joialias.col ##database?[superuser]##..table b oalias.col alias.col=alias.col where alias.col>=##alias.col:ialias.colt?alias.col aalias.cold alias.col>=##alias.col order by alias.col desc"
"select top alias.col owalias.coleruserid as [user lialias.colk], coualias.colt(*) as postcoualias.colt from table where alias.col=alias.col group by owalias.coleruserid order by coualias.colt(*) desc"
"declare @AboveTable table( USER_ID bigint, myColN bigint ); declare @TableN table( BUYER_ID bigint, ITEM_ID bigint, CREATED_TIME datetime ); INSERT INTO @AboveTable VALUES (XYZ), (N, N), (N, N), (N, N); INSERT INTO @TableN VALUES (XYZ), (N, N, X), (N, N, X), (N, N, X), (N, N, X); SELECT * FROM @TableN tN LEFT JOIN @AboveTable tN ON tN.ITEM_ID = tN.myColN"
"select top alias.col alias.col as [post lialias.colk], alias.col, alias.col from table p joialias.col table h oalias.col alias.col = alias.col where alias.col = alias.col aalias.colalias.col alias.col = alias.col aalias.colalias.col isalias.colull(p.aalias.colswercoualias.colt,alias.col) = alias.col aalias.colalias.col p.lastactivityalias.colate < (alias.col(alias.col, alias.col, getalias.colate())) group by alias.col, alias.col, alias.col havialias.colg sum(case whealias.col h.tabletypeialias.col = alias.col thealias.col alias.col whealias.col h.tabletypeialias.col = alias.col thealias.col alias.col else alias.col ealias.colalias.col) <= alias.col oralias.coler by lealias.col(alias.col) asc"
select alias.col from table where table.postid = alias.col order by table.score desc
"select top alias.col alias.col as alias.col, alias.col as [post lialias.colk],alias.col from table p where alias.col = alias.col group by alias.col,alias.col,alias.col"
"select alias.col, alias.col from ( select alias.col(moalias.colth, maalias.col(ph.creatioalias.coldate)) + alias.col + cast(year(ph.creatioalias.coldate) as varchar(alias.col)) + alias.col [period] , coualias.colt(*) [total], year(ph.creatioalias.coldate) [year], moalias.colth(ph.creatioalias.coldate) [moalias.colth] from table ph ialias.colalias.coler joialias.col table p oalias.col alias.col = alias.col where tabletypeid = alias.col aalias.cold ( (alias.col like alias.col or alias.col like alias.col ...) aalias.cold (alias.col like alias.col ... or alias.col like alias.col ...) ) aalias.cold alias.col alias.colot like alias.col group by year(ph.creatioalias.coldate), moalias.colth(ph.creatioalias.coldate) ) a order by alias.col desc, a.[moalias.colth] desc"
"select alias.col as alias.col, alias.col, coualias.colt(*) dowalias.coltable from table p joialias.col table v oalias.col alias.col = alias.col where alias.col = alias.col:alias.col aalias.cold alias.col = alias.col group by alias.col, alias.col order by coualias.colt(*) desc;"
"select alias.col as alias.col, alias.col as alias.col, alias.col, alias.col, alias.col, alias.col , alias.col as alias.col from table as p joialias.col table as q oalias.col alias.col = (select top alias.col alias.col from table where parealias.coltalias.col = alias.col aalias.cold creatioalias.coldate < alias.col(moalias.colth, alias.col, getdate()) aalias.cold lasteditdate < alias.col(moalias.colth, alias.col, getdate()) aalias.cold lealias.col(body) > alias.col aalias.cold score = alias.col order by alias.colewalias.col()) aalias.cold alias.col is alias.colull aalias.cold p.commualias.colityowalias.coleddate is alias.colull aalias.cold alias.col <= alias.col order by alias.colewalias.col()"
"declare @alias.columtable ialias.colt select @alias.columtable = coualias.colt(*) from table declare alias.col ialias.colt select alias.col = @alias.columtable / alias.col declare alias.col float select alias.col = sum(table.reputatioalias.col) from table select sum(tmp.reputatioalias.col) / alias.col from (select top (@alias.columtable/alias.col) row_alias.columber() over(order by reputatioalias.col desc) as [#], id as [user lialias.colk], reputatioalias.col from table order by reputatioalias.col desc) as tmp;"
"select top alias.col alias.col as [user lialias.colk], coualias.colt(*) as table from table where table.id = alias.col group by alias.col order by table desc"
"select top alias.col raalias.colk() over (order by sum(v.boualias.coltyamoualias.colt) desc) as [raalias.colk], u.displayalias.colame, sum(v.boualias.coltyamoualias.colt) as boualias.colties from table u ialias.colalias.coler joialias.col table p oalias.col alias.col = p.owalias.coleruserid ialias.colalias.coler joialias.col table v oalias.col alias.col = alias.col where alias.col = alias.col group by u.displayalias.colame order by sum(v.boualias.coltyamoualias.colt) desc"
"select alias.col as alias.col, alias.col, alias.col as alias.col, case whealias.col alias.col is alias.colot alias.colull thealias.col x else alias.colull ealias.cold as wiki, alias.col as closed, q.lastactivitydate as [last active], q.owalias.coleruseralias.col as [user lialias.colk] from table q where alias.col = alias.col aalias.cold alias.col < alias.col aalias.cold alias.col is alias.colot alias.colull aalias.cold q.acalias.colptedaalias.colsweralias.col is alias.colull aalias.cold (alias.col is alias.colull or alias.col = alias.col or alias.colot exists ( select alias.col from table a where a.posttypealias.col = alias.col aalias.cold a.parealias.coltalias.col = alias.col aalias.cold alias.col > alias.col) ) order by alias.col asc"
"select top alias.col alias.col, displayalias.colame, reputatioalias.col, alias.col, locatioalias.col from table where locatioalias.col like alias.colx order by reputatioalias.col desc"
"select alias.col+convert(varchar,alias.col)+alias.col+convert(varchar,alias.col) alias.col, postalias.col as alias.col, comment, creationdate from table where owneruseralias.col = ##useralias.col## and alias.col is null and approvaldate is null order by alias.col desc"
"declare @alias.col ialias.colt = ##alias.col## select top(alias.col) alias.col as [post lialias.colk], alias.col, left(text, alias.col) from table where alias.col = @alias.col order by alias.col desc"
"selealias.col top alias.col cast(avg(cast(alias.col as float)) as alias.columeric(alias.col,alias.col)) as alias.col, coualias.colt(*) as alias.columtable, owalias.colerdisplayalias.colame, owalias.coleruserid from table group by owalias.colerdisplayalias.colame, owalias.coleruserid havialias.colg coualias.colt(*) > alias.col order by alias.col asc"
"select top alias.col alias.col as [post lialias.colk], max(p.viewcoualias.colt) as alias.col, coualias.colt(case alias.col whealias.col alias.col thealias.col alias.col else alias.colull ealias.cold) as [uptable], coualias.colt(case alias.col whealias.col alias.col thealias.col alias.col else alias.colull ealias.cold) as [dowalias.coltable], alias.col.alias.col * coualias.colt(*) / max(p.viewcoualias.colt) as [table/views], max(p.creatioalias.coldate) as [date] from table p left joialias.col table v oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold (alias.col = alias.col or alias.col = alias.col) group by alias.col order by [table/views] desc, alias.col asc"
"create table table( id int, name varchar(n), event varchar(n), ts time ); insert into table values (xyz), (n,x,x,x), (n,x,x,x), (n,x,x,x), (n,x,x,x), (n,x,x,x), (n,x,x,x), (n,x,x,x); select * from table"
"select alias.col, alias.col, alias.col, alias.col from table q ialias.colalias.coler joialias.col table a oalias.col alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold alias.col = alias.col where a.commualias.colityowalias.coleddate is alias.colull aalias.cold a.owalias.coleruserid = ##userid## aalias.cold alias.col like x order by alias.col desc"
"select alias.col(alias.col(hour,p.creationdate)) + x + alias.col((alias.col(hour,p.creationdate)+n) n) + x as hour, count(alias.col(hour,p.creationdate)) as x from table as p join table as pt on alias.col = alias.col join table as t on alias.col = alias.col where alias.col = alias.col:alias.coling## group by alias.col(hour, p.creationdate)"
"select alias.col as alias.col, coualias.colt(alias.col) as alias.col, (select coualias.colt(alias.col) from table totalaalias.colswers where totalaalias.colswers.owalias.coleralias.col = alias.col aalias.cold totalaalias.colswers.posttypealias.col = alias.col) as totalaalias.colswers from table alias.col ialias.colalias.coler joialias.col table questioalias.cols oalias.col questioalias.cols.acceptedaalias.colsweralias.col = alias.col where alias.col.posttypealias.col = alias.col group by alias.col order by totalaalias.colswers asc"
select alias.col as alias.col from table pl ialias.colalias.coler joialias.col table pt oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table t oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold t.tagalias.colame = alias.col
"select sum(table.score) as tablecore, sum(table.alias.colutation) as alias.col, table.count as alias.col, table.tagname from table inner join table on table.owneruserid = table.id inner join table on table.id = table.postid inner join table on table.tagid=table.id group by table.tagname, table.count order by table.tagname"
select alias.col from table where alias.col = alias.col
"create table table (alias.col ialias.colt) ialias.colsert table select table.alias.col from table ialias.colalias.coler joialias.col table oalias.col table.alias.col = table.postalias.col ialias.colalias.coler joialias.col table oalias.col table.alias.col = table.postalias.col ialias.colalias.coler joialias.col table oalias.col table.tagalias.col = table.alias.col where table.posttypealias.col = alias.col aalias.cold table.votetypealias.col = alias.col aalias.cold table.tagalias.colame = alias.col aalias.cold alias.col(day,table.creatioalias.coldate,getdate())<alias.col select alias.col from table ealias.colcept select alias.col from table where alias.colot alias.col ialias.col (alias.colyz)"
"create table table ( uid ialias.colt, tagalias.colame alias.colvarchar(alias.col) collate sql_latialias.colalias.col_gealias.coleral_cpalias.col_cs_as, alias.col ialias.colt, uptable ialias.colt, dowalias.coltable ialias.colt, reputatioalias.col ialias.colt, repperaalias.colswer decimal(alias.col,alias.col) ) ialias.colsert ialias.colto table select alias.col, alias.col, coualias.colt(alias.col) as alias.col, alias.col as uptable, alias.col as dowalias.coltable, alias.col as reputatioalias.col, alias.col.alias.col as repperaalias.colswer from table as q ialias.colalias.coler joialias.col table as a oalias.col a.parealias.coltid = alias.col joialias.col table as pt oalias.col alias.col = alias.col joialias.col table as t oalias.col alias.col = alias.col where alias.col ialias.col (alias.col) group by alias.col, alias.col update table set uptable = (select coualias.colt(alias.col) from table as q ialias.colalias.coler joialias.col table as a oalias.col a.parealias.coltid = alias.col joialias.col table as pt oalias.col alias.col = alias.col joialias.col table as t oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table as v oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col = table.tagalias.colame ) update table set dowalias.coltable = (select coualias.colt(alias.col) from table as q ialias.colalias.coler joialias.col table as a oalias.col a.parealias.coltid = alias.col joialias.col table as pt oalias.col alias.col = alias.col joialias.col table as t oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table as v oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col = table.tagalias.colame ) update table set reputatioalias.col = (uptable alias.col alias.col) - (dowalias.coltable alias.col alias.col) update table set repperaalias.colswer = coalias.colvert(decimal(alias.col,alias.col),reputatioalias.col) / coalias.colvert(decimal(alias.col,alias.col),alias.col) select alias.col from table where alias.col > alias.col order by repperaalias.colswer desc"
"with uptable as ( select table.owalias.coleruserid, alias.col, coualias.colt(*) as uptable from table ialias.colalias.coler joialias.col posttable oalias.col posttable.tagid = table.id ialias.colalias.coler joialias.col table oalias.col table.parealias.coltid = posttable.postid ialias.colalias.coler joialias.col table oalias.col table.postid = table.id aalias.cold alias.col = alias.col group by alias.col ,owalias.coleruserid ) select u.displayalias.colame , alias.col from table u ialias.colalias.coler joialias.col ( select owalias.coleruserid, alias.col, row_alias.columber() over ( partitioalias.col by owalias.coleruserid order by uptable desc) traalias.colk from uptable ) uv oalias.col alias.col = uv.owalias.coleruserid where traalias.colk < alias.col"
"select row_number() over (order by alias.col asc) as alias.col, alias.col as alias.col, alias.col, alias.col as alias.col from table u join table b on alias.col = alias.col where alias.col = alias.col:alias.col and b.class = case ##badgeclass:string?alias.col when alias.col then n when alias.col then n when alias.col then n else ##badgeclass:string?alias.col end"
"DECLARE @TagName AS NVARCHAR(N) = ##TagName:string? ##; select top N count(v.postid) as X, v.postid AS [Post Link],p.body from votes v inner join posts p on p.id=v.postid inner join PostTags pt on p.id=pt.PostId inner join Tags t on t.id=pt.TagId where PostTypeId = N and VoteTypeId=N and t.TagName = X and v.creationdate > DATEADD(dd, N, CURRENT_TIMESTAMP) group by v.postid,p.body order by X desc"
"select alias.col as alias.col, alias.col, sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as x, sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as x, sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold)*alias.col/coualias.colt(*) as x from table palias.colv joialias.col table p oalias.col palias.colv.postid = alias.col joialias.col table u oalias.col alias.col = alias.col where palias.colv.votetypeid = alias.col aalias.cold p.commualias.colityowalias.coleddate is alias.colull aalias.cold alias.col is alias.colot alias.colull group by alias.col, alias.col havialias.colg alias.col = ##userid## or coualias.colt(*) > alias.col aalias.cold sum(case whealias.col alias.col = alias.col thealias.col alias.col else case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold ealias.cold) > alias.col order by [questioalias.col uptable ‰]"
"selealias.col cast(alias.col as date) as alias.col, count(alias.col) as alias.col from (selealias.col alias.col, count(*) as calias.col from table where upper(tealias.colt) like alias.col group by alias.col) as pp right outer join table on pp.alias.col = table.id group by cast(alias.col as date) order by alias.col"
"with table as alias select alias.col from table where owalias.coleruseralias.col = ##useralias.col## aalias.cold posttypealias.col = alias.col), table as alias select alias.col from table where owalias.coleruseralias.col = ##useralias.col## aalias.cold posttypealias.col = alias.col), myaalias.colswertable as alias select sumalias case whealias.col v.votetypealias.col = alias.col thealias.col alias.col whealias.col v.votetypealias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as x, creatioalias.coldate from table v ialias.colalias.coler joialias.col table a oalias.col a.alias.col = v.postalias.col group by creatioalias.coldate), myquestioalias.coltable as alias select sumalias case whealias.col v.votetypealias.col = alias.col thealias.col alias.col whealias.col v.votetypealias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as x, creatioalias.coldate from table v ialias.colalias.coler joialias.col table a oalias.col a.alias.col = v.postalias.col group by creatioalias.coldate), table as alias select case whealias.col alias.col is alias.colot alias.colull aalias.cold alias.col is alias.colull thealias.col alias.col whealias.col alias.col is alias.colull aalias.cold alias.col is alias.colot alias.colull thealias.col alias.col whealias.col alias.col is alias.colot alias.colull aalias.cold alias.col is alias.colot alias.colull thealias.col alias.col + alias.col else alias.col ealias.cold as x, case whealias.col alias.colot a.creatioalias.coldate is alias.colull thealias.col a.creatioalias.coldate else q.creatioalias.coldate ealias.cold as x from myaalias.colswertable a full outer joialias.col myquestioalias.coltable q oalias.col a.creatioalias.coldate = q.creatioalias.coldate) select alias.col from table where alias.col >=alias.col"
"select alias.col(alias.col, alias.col) as alias.col, alias.col(alias.col * coualias.colt(case whealias.col alias.col <= alias.col aalias.cold charialias.coldealias.col(alias.col,alias.col) = alias.col thealias.col alias.col ealias.cold) / coualias.colt(*), alias.col) as [ alias.col<=alias.col, alias.colo rebus], alias.col(alias.col * coualias.colt(case whealias.col alias.col <= alias.col thealias.col alias.col ealias.cold) / coualias.colt(*), alias.col) as [ alias.col<=alias.col, w/ rebus] from table where alias.col = alias.col group by alias.col(alias.col, alias.col) order by alias.col(alias.col, alias.col)"
"with table as ( select alias.col as alias.col, coualias.colt(*) as alias.col from table where alias.col = alias.col group by alias.col ) select max(alias.col) as [post lialias.colk], max(q.owalias.coleruserid) as [user lialias.colk], max(q.viewcoualias.colt) as alias.col, max(q.favoritecoualias.colt) as alias.col, max(alias.col) as alias.col, max(alias.col) as alias.col from table a, table q left joialias.col table d oalias.col alias.col = alias.col where a.parealias.coltid = alias.col aalias.cold q.owalias.coleruserid = a.owalias.coleruserid aalias.cold alias.col >= ##mialias.colscore## aalias.cold q.viewcoualias.colt >= ##mialias.colviews## aalias.cold alias.col is alias.colull group by alias.col order by max(q.viewcoualias.colt) desc"
select alias.col from table q where alias.col = alias.col group by alias.col order by alias.col
"select alias.col as alias.col, coualias.colt(*) as alias.col from table where alias.col = alias.col group by alias.col order by coualias.colt(*) desc"
"declare alias.col as alias.colvarchar(alias.col) declare alias.col as ialias.colt = ##alias.col## selealias.col alias.col=alias.col+cast(alias.col as alias.colvarchar) selealias.col alias.col as alias.col , alias.col, alias.col(alias.col) , [tealias.colt] , charialias.coldealias.col(alias.col, [tealias.colt]) , charialias.coldealias.col(alias.col, [tealias.colt]) from table where tabletypeid = alias.col aalias.cold [tealias.colt] like alias.col+alias.col+alias.col aalias.cold charialias.coldealias.col(alias.col, [tealias.colt]) = charialias.coldealias.col(alias.col, [tealias.colt]) alias.col"
"selealias.col alias.col, count(alias.col) from ( selealias.col cast( cast(alias.col(alias.col, alias.col) as varchar) + alias.col + cast(alias.col(alias.col, alias.col) as varchar) + alias.col as datetime) alias.col, alias.col from table p join table pt on alias.col = alias.col join table t on alias.col = alias.col where alias.col in (alias.colyz) ) as alias.col group by alias.col, alias.col order by alias.col asc, alias.col asc"
"declare @tagalias.colame alias.colvarchar(alias.col) = x select top alias.col coualias.colt(alias.col) as [vote coualias.colt], alias.col as [post lialias.colk] from table v ialias.colalias.coler joialias.col table p oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table pt oalias.col alias.col = p.parealias.coltid ialias.colalias.coler joialias.col table t oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold t.tagalias.colame = @tagalias.colame group by alias.col, p.body, t.tagalias.colame order by [vote coualias.colt] desc"
"select top alias.col alias.col as [post lialias.colk], alias.col, p.parealias.coltid, alias.col, alias.col, alias.col, p.viewcoualias.colt from table p left joialias.col table palias.col oalias.col alias.col = palias.col.parealias.coltid where alias.col = alias.col aalias.cold alias.col > alias.col aalias.cold p.viewcoualias.colt <> alias.col aalias.cold p.parealias.coltid is alias.colull aalias.cold p.acceptedaalias.colswerid is alias.colull aalias.cold palias.col.parealias.coltid is alias.colull order by p.viewcoualias.colt desc, alias.col desc"
"select alias.col, alias.col as alias.col from table where body like x and body not like x order by lastactivitydate asc"
"selealias.col avg(alias.col) as alias.col, sum(alias.col) as alias.col, cast(sum(alias.col) as float) / avg(alias.col) as alias.col, alias.col(alias.col, alias.col * cast(sum(alias.col) as float) / avg(alias.col)) as alias.col from table u ialias.colalias.coler joialias.col table v oalias.col v.alias.col = alias.col where alias.col > alias.col aalias.cold alias.col = alias.col group by alias.col order by sum(alias.col) desc"
"select coualias.colt(distialias.colct parealias.colt_post.id) as [questioalias.cols], coualias.colt(distialias.colct table.owalias.coleruserid) as [users], coualias.colt(distialias.colct table.id) as [aalias.colswers] from table, table as parealias.colt_post where table.posttypeid = alias.col aalias.cold table.parealias.coltid = parealias.colt_post.id aalias.cold alias.col(secoalias.cold, parealias.colt_post.creatioalias.coldate, table.creatioalias.coldate) < alias.col"
"select count, (x + tagname + x + tagname) as tagname, alias.col as [post link], wikipostid as [post link] from table t join tableynonyms ts on alias.col = alias.col left join table pe on alias.col = alias.col left join table pw on alias.col = alias.col where alias.col is null or len(pe.body) = n order by count desc"
"select alias.col,sum(alias.col*alias.col) as post_repuatioalias.col from table where alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold alias.col like alias.col group by alias.col"
"select alias.col as alias.col, alias.col, alias.col from table as alias where alias.col like alias.col + alias.col:alias.col + alias.col aalias.cold alias.col = alias.col order by alias.col"
"selealias.col top alias.col alias.col as [user lialias.colk], reputatioalias.col, alias.col, dowalias.colvotes, roualias.cold(cast(alias.col as float) / dowalias.colvotes , alias.col) as alias.col from table where reputatioalias.col > alias.col aalias.cold dowalias.colvotes > ##mialias.coldowalias.colvotes## order by alias.col asc"
"select top alias.col alias.col as [user lialias.colk], u.reputatioalias.col as alias.col from table u where upper(u.locatioalias.col) like upper(alias.col + ##yourlocatioalias.col:strialias.colg## + alias.col) order by u.reputatioalias.col"
"declare @alias.col int = ##alias.col## select count(*) as alias.col, alias.col from table where alias.col = @alias.col group by alias.col order by alias.col desc"
"select top alias.col alias.col as [user lialias.colk], alias.col, dowalias.colvotes, ((dowalias.colvotes*alias.col) / (dowalias.colvotes + alias.col) ) as percealias.coltagedowalias.col from table c where dowalias.colvotes+alias.col > alias.col aalias.cold dowalias.colvotes > alias.col order by percealias.coltagedowalias.col desc"
"SET NOCOUNT ON; DECLARE @UserID int = ##UserId##; DECLARE @endDate date; SELECT @endDate = max(CreationDate) from Posts; SET NOCOUNT OFF; DECLARE @Counts int; SELECT @Counts = COUNT(*) FROM Users WHERE Reputation > N; WITH RepPerDays AS ( SELECT *, RepRate = CAST(Reputation AS decimal(N, N))/ISNULL(NULLIF(CONVERT(int, @endDate - CreationDate) + N, N), N) FROM Users ) ,Rankings AS ( SELECT Id, Reputation, RepRate, RankingRate = ROW_NUMBER() OVER(ORDER BY RepRate DESC), RankingRep = ROW_NUMBER() OVER(ORDER BY Reputation DESC) FROM RepPerDays ) SELECT Id, Reputation, RankingRep, (RankingRep * N.N) / @Counts AS PercentileRep, RepRate, RankingRate, (RankingRate * N.N) / @Counts AS PercentileRate FROM Rankings WHERE Id = @UserID"
"select top alias.col coualias.colt(alias.col) as alias.col, alias.col as [post lialias.colk],alias.col from table v ialias.colalias.coler joialias.col table p oalias.col alias.col=alias.col where alias.col = alias.col aalias.cold alias.col=alias.col aalias.cold v.creatioalias.coldate > alias.col(alias.col, alias.col, currealias.colt_timestamp) group by alias.col,alias.col order by alias.col desc"
"select alias.col, alias.col, alias.col as alias.col from table where alias.col like alias.col aalias.cold posttypealias.col = alias.col order by alias.col desc"
"selealias.col alias.col, count(alias.col) from ( selealias.col cast( cast(alias.col(alias.col, alias.col) as varchar) + alias.col + cast(alias.col(alias.col, alias.col) as varchar) + alias.col as datetime) alias.col, alias.col from table p join table pt on alias.col = alias.col join table t on alias.col = alias.col where alias.col in (alias.colyz) ) as alias.col where alias.col <> cast(alias.col(alias.col, alias.col()) as varchar) + alias.col + cast(alias.col(alias.col, alias.col()) as varchar) + alias.col group by alias.col, alias.col order by alias.col asc, alias.col asc"
"select row_number() over(order by alias.col desc) as position ,displayname ,alias.col ,age ,websiteurl ,aboutme ,location ,x + convert(varchar(n), id) as profileurl from table(nolock) where upper(location) like nx or location like nx or location like nx or upper(location) like nx or upper(location) like nx or upper(location) like nx or upper(location) like nx order by alias.col asc"
"declare @useralias.col int = ##useralias.col## select alias.col, name from table group by alias.col, name order by alias.col, name desc"
select alias.col from table order by alias.col asc
"select alias.col as alias.col, name, count(*) from table where name in (alias.col) group by alias.col, name having count(*) > n"
"select alias.col, alias.col, alias.col from table v where alias.col = alias.col##;"
"select top alias.col alias.col as [post lialias.colk], alias.col, tealias.colt from table where alias.col = ##alias.col## aalias.cold tealias.colt like alias.col or tealias.colt like alias.col order by alias.col desc"
"create table table( id int primary key ,name nvarchar(n)); create table table( ord int ,itmid int primary key); insert into table values (xyz) ,(n ,x) ,(n ,x) ,(n ,x) ,(n ,x) ,(n ,x) insert into table values (xyz) ,(n ,n) ,(n ,n) ,(n ,n) ,(n ,n) ,(n ,n); with x as ( select tn.itmid, tn.ord from table tn left join table tn on (tn.id = tn.itmid) where tn.name = x ), y as ( select top n t.itmid, t.ord from table t, x where t.ord < x.ord order by t.ord desc ) update table set ord = z.ord from ( select x.itmid, y.ord from x,y union all select y.itmid, x.ord from x,y ) z where table.itmid = z.itmid select * from table"
declare alias.col int = ##userid## select alias.col as alias.col from table p join table h on alias.col = alias.col where alias.col != alias.col and alias.col = alias.col group by alias.col order by alias.col desc
"select alias.col as alias.col, alias.col from table as q ialias.colalias.coler joialias.col table as u oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table as ph oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col(day, q.creatioalias.coldate, getdate()) > alias.col aalias.cold q.score = alias.col aalias.cold q.aalias.colswercoualias.colt = alias.col aalias.cold ph.tabletypeid != alias.col aalias.cold alias.col(day, q.creatioalias.coldate, getdate()) < alias.col aalias.cold q.commealias.coltcoualias.colt < alias.col aalias.cold q.closeddate is alias.colull aalias.cold lealias.col(q.body) < ##questioalias.collealias.colgth?alias.col## aalias.cold alias.col(day, u.lastaccessdate, getdate()) > alias.col aalias.cold u.reputatioalias.col < ##questioalias.colerrep?alias.col## order by q.creatioalias.coldate asc"
"select top alias.col alias.col [post lialias.colk], body from table where creatioalias.coldate > alias.col aalias.cold body like alias.col aalias.cold owalias.coleruseralias.col = alias.col"
"declare @startdt datetime create table table (monthyear datetime, totalcount integer, lowquality integer, neutralquality integer,goodquality integer, hightquality integer, veryhighquality integer,); set @startdt = x while @startdt < x begin insert into table select @startdt, count(*), sum(case when posts.score < n then n else n end), sum(case when posts.score = n then n else n end), sum(case when posts.score between n and n then n else n end), sum(case when posts.score between n and n then n else n end), sum(case when posts.score > n then n else n end) from posts where posts.posttypeid = n and posts.creationdate >= @startdt and posts.creationdate <= dateadd(month,n,@startdt) and owneruserid > n set @startdt = dateadd(month,n,@startdt) end select * from table"
"declare @alias.col ialias.colt = ##alias.col## select top alias.col alias.col as [post lialias.colk], creatioalias.coldate, alias.col, alias.col from table c where alias.col = @alias.col order by c.creatioalias.coldate asc"
select body from table where body like x
"declare @url nvarchar(n) = x create table table ( site nvarchar(n) , urlcount int); declare @sql nvarchar(max) = x select @sql = @sql + iif( len(@sql) > n , x , x ) + nxx + name + xx + quotename(name) + xx + @url + xx from sys.databases where database_id > n and database_id < n and (name <> x) exec (@sql) select x + case parsename(site,n) when x then x else parsename(site,n) end + coalesce(x + case parsename(site,n) when x then x else parsename(site,n) end , x) + iif(patindex(x,site) > n , x , coalesce(x + parsename(site,n), x) ) + iif(patindex(x,site) > n , x , x ) + x + replace(site, x,x) , urlcount from table drop table table"
"select alias.col, alias.col as alias.col from table p joialias.col table palias.col oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold p.owalias.coleruserid = alias.col## aalias.cold palias.col.closeddate is alias.colot alias.colull order by alias.col desc"
"DECLARE @TableA TABLE(ColumnA int, ColumnB int); INSERT INTO @TableA VALUES (XYZ), (N, NULL), (N, NULL), (N, NULL), (N, NULL), (N, NULL), (N, NULL); UPDATE tN SET tN.ColumnB = tN.ColumnB FROM @TableA tN INNER JOIN ( SELECT ColumnA, ColumnB = DENSE_RANK() OVER(ORDER BY ColumnA) + (SELECT MAX(columnA) FROM @tableA) FROM @tableA ) tN ON tN.ColumnA = tN.ColumnA; SELECT * FROM @TableA"
"with table as ( selealias.col alias.col, alias.col, alias.col = row_alias.columber() over(order by alias.col desc) from table ) , table as ( selealias.col coualias.colt = coualias.colt(*) from table ), raalias.colkedtable as ( selealias.col alias.col, cast(alias.col as decimal(alias.col, alias.col)) / (selealias.col coualias.colt from table) as percealias.coltile from table ) selealias.col sum(alias.col) as alias.col, coualias.colt(*) as alias.col from raalias.colkedtable where percealias.coltile > ##ealias.colcludialias.colgtoppercealias.colt## / alias.col.alias.col"
"DECLARE @minScore INT = ##MinQscore:int##; DECLARE @TargTags VARCHAR(N) = ##DesiredTags:string##; SET @TargTags = X + LTRIM (RTRIM (@TargTags) ) + X; SELECT TOP N Q.Id AS [Post Link] , Q.Tags , Q.Score , CONVERT (VARCHAR(N), Q.Creationdate, N) AS [Date Asked] FROM Posts AS Q WHERE DATEDIFF (day, Q.CreationDate, GETDATE() ) > N AND Q.PostTypeId = N AND Q.AcceptedAnswerId IS NULL AND Q.ClosedDate IS NULL AND Q.Score >= @minScore AND Q.Tags LIKE @TargTags AND NOT EXISTS ( SELECT Id FROM Posts AS A WHERE A.ParentId = Q.Id AND A.Score > N AND A.PostTypeId = N ) ORDER BY CONVERT (VARCHAR(N), Q.Creationdate, N) ASC , Q.Score DESC"
"select table.displayalias.colame, alias.col, coualias.colt(*) as uptable from table ialias.colalias.coler joialias.col posttable oalias.col posttable.tagid = table.id ialias.colalias.coler joialias.col table oalias.col table.parealias.coltid = posttable.postid ialias.colalias.coler joialias.col table oalias.col table.postid = table.id aalias.cold alias.col = alias.col ialias.colalias.coler joialias.col table oalias.col table.id = table.owalias.coleruserid where table.reputatioalias.col > alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull group by alias.col, owalias.coleruserid, displayalias.colame order by uptable desc"
"select name, count(*) totaltable, sum(case when alias.col is null then n else n end) totalwithalias.col from table inner join table on alias.col = table.id group by name"
"select alias.col, coalias.colvert(decimal(alias.col,alias.col), coalias.colvert(decimal(alias.col,alias.col), alias.col) / alias.col(day, creatioalias.coldate, getutcdate())) as [views per day], score, id as [post lialias.colk] from table where alias.col = alias.col aalias.cold owalias.coleruserid = alias.col## order by alias.col desc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x order by alias.col desc;"
"DECLARE @TagN nvarchar(N) = ##TagN:string##; WITH myTag ( monthsAgo, mth, n ) AS ( select (-DATEDIFF(m,GETDATE(),P.CreationDate)) AS monthsAgo, MIN(P.CreationDate) AS mth, COUNT(P.Id) AS n FROM Posts P INNER JOIN PostTags PT ON P.Id = PT.PostId INNER JOIN Tags T ON PT.TagId = T.Id WHERE T.TagName = @TagN GROUP BY (DATEDIFF(m,GETDATE(),P.CreationDate)) ) , refTag ( monthsAgo, mth, n ) AS ( select (-DATEDIFF(m,GETDATE(),P.CreationDate)) AS monthsAgo, MIN(P.CreationDate) AS mth, COUNT(P.Id) AS n FROM Posts P INNER JOIN PostTags PT ON P.Id = PT.PostId INNER JOIN Tags T ON PT.TagId = T.Id WHERE T.TagName = X GROUP BY (DATEDIFF(m,GETDATE(),P.CreationDate)) ) select AT.monthsAgo, MT.n, CAST(( ( ( CAST(MT.n AS DECIMAL(N,N)) - CAST(MTN.n AS DECIMAL(N,N)) ) / CAST(MTN.n AS DECIMAL(N,N)) ) * N ) AS DECIMAL(N,N)) AS [Difference ] from refTag AT INNER JOIN refTag ATN ON AT.monthsAgo = ATN.monthsAgo - N INNER JOIN myTag MT ON AT.monthsAgo = MT.monthsAgo INNER JOIN myTag MTN ON AT.monthsAgo = MTN.monthsAgo - N ORDER BY AT.monthsAgo"
"selealias.col top alias.col table.id as [user lialias.colk], coualias.colt(table.id) as aalias.colswers, cast(avg(cast(alias.col as float)) as alias.columeric(alias.col,alias.col)) as [average aalias.colswer alias.col] from table ialias.colalias.coler joialias.col table oalias.col table.id = owalias.coleruserid where alias.col = alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold closeddate is alias.colull group by table.id, displayalias.colame havialias.colg coualias.colt(table.id) > alias.col order by [average aalias.colswer alias.col] desc"
"select alias.col as alias.col, alias.col, alias.col from table where posttypealias.col = alias.col aalias.cold alias.col = alias.col order by creatioalias.coldate desc"
"select top alias.col questioalias.cols.id as [post lialias.colk], questioalias.cols.score as alias.col, maalias.col(aalias.colswers.score) as alias.col from table questioalias.cols left joialias.col table aalias.colswers oalias.col aalias.colswers.parealias.coltid = questioalias.cols.id where questioalias.cols.posttypeid = alias.col aalias.cold aalias.colswers.posttypeid = alias.col aalias.cold questioalias.cols.score>alias.col aalias.cold questioalias.cols.acceptedaalias.colswerid is alias.colull group by questioalias.cols.id, questioalias.cols.creatioalias.coldate, questioalias.cols.score havialias.colg maalias.col(aalias.colswers.score) <alias.col order by questioalias.cols.creatioalias.coldate desc"
"select distialias.colct alias.col as [commealias.colt lialias.colk] , alias.col as [post lialias.colk] , alias.col as [user lialias.colk] , u.reputatioalias.col as [commealias.colter rep] , alias.col as [user lialias.colk] , owalias.coler.reputatioalias.col as [post owalias.coler rep] , calias.col as [user lialias.colk] , cu.reputatioalias.col as [reply-er rep] from table c ialias.colalias.coler joialias.col table u oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table p oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table owalias.coler oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table creply oalias.col alias.col = alias.col aalias.cold alias.col <> alias.col ialias.colalias.coler joialias.col table cu oalias.col calias.col = alias.col where alias.col = alias.col aalias.cold charialias.coldealias.col(alias.col, c.[tealias.colt]) > alias.col aalias.cold replace(cu.displayalias.colame,alias.col, alias.col ) like substrialias.colg(c.[tealias.colt], charialias.coldealias.col(alias.col, c.[tealias.colt])+alias.col, charialias.coldealias.col(alias.col, c.[tealias.colt], charialias.coldealias.col(alias.col, c.[tealias.colt])) - (charialias.coldealias.col(alias.col, c.[tealias.colt])+alias.col)) +alias.col"
"select top alias.col alias.col as [post lialias.colk], alias.col as alias.col, alias.col as alias.col, viewcoualias.colt as alias.col, alias.col(day, p.creatioalias.coldate, currealias.colt_timestamp) as age, p.viewcoualias.colt / alias.col(day, p.creatioalias.coldate, currealias.colt_timestamp) as alias.col from table p where p.viewcoualias.colt > alias.col aalias.cold p.viewcoualias.colt / alias.col(day, p.creatioalias.coldate, currealias.colt_timestamp) > alias.col order by alias.col desc"
"declalias.colre @mialias.collialias.cols.col ialias.collialias.cols.colt = ##mialias.collialias.cols.colcoualias.collialias.cols.colt:ialias.collialias.cols.colt?alias.collialias.cols.col## declalias.colre @malias.colx ialias.collialias.cols.colt = ##malias.colxcoualias.collialias.cols.colt:ialias.collialias.cols.colt?alias.collialias.cols.col## declalias.colre @alias.colialias.collialias.cols.col ialias.collialias.cols.colt = ##alias.colialias.collialias.cols.col:ialias.collialias.cols.colt?alias.collialias.cols.col## select alias.collialias.cols.col ialias.collialias.cols.colto talias.colalias.colle from (select alias.collialias.cols.col from ( select (alias.collialias.cols.col + (alias.collialias.cols.colalias.collialias.cols.colalias.collialias.cols.col) + (alias.collialias.cols.colalias.collialias.cols.colalias.collialias.cols.col)) alias.cols alias.collialias.cols.col from (select alias.collialias.cols.col alias.cols alias.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col) alias.cols alias.col cross joialias.collialias.cols.col (select alias.collialias.cols.col alias.cols alias.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col) alias.cols alias.col cross joialias.collialias.cols.col (select alias.collialias.cols.col alias.cols alias.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col) alias.cols c ) alias.col where alias.collialias.cols.collialias.cols.col alias.coletweealias.collialias.cols.col @mialias.collialias.cols.col alias.colalias.collialias.cols.cold @malias.colx ) alias.cols ialias.collialias.cols.coltegers select alias.collialias.cols.colalias.collialias.cols.col@alias.colialias.collialias.cols.col alias.cols [questioalias.collialias.cols.cols per talias.colg], coualias.collialias.cols.colt(coualias.collialias.cols.colt) alias.cols [alias.collialias.cols.colalias.coler of talias.colalias.colle halias.colvialias.collialias.cols.colg this malias.colalias.collialias.cols.coly questioalias.collialias.cols.cols] from talias.colalias.colle right joialias.collialias.cols.col talias.colalias.colle oalias.collialias.cols.col alias.collialias.cols.col=coualias.collialias.cols.colt group alias.coly alias.collialias.cols.col order alias.coly alias.collialias.cols.col"
"declare @alias.col ialias.colt = ##alias.col## select top alias.col coualias.colt(*) as commealias.coltcoualias.colt, alias.col, text from table where alias.col = @alias.col group by alias.col, text order by alias.col desc"
select coualias.colt(*) from table u joialias.col table p oalias.col alias.col = alias.col joialias.col table q oalias.col alias.col = alias.col joialias.col table pt oalias.col alias.col = alias.col joialias.col table t oalias.col alias.col = alias.col where alias.col = alias.col## aalias.cold alias.col = alias.col aalias.cold t.tagalias.colame ialias.col (##tagalias.col:strialias.colg##)
"select top alias.col questioalias.col.id as [post lialias.colk], questioalias.col.title,questioalias.col.score, alias.col from table as questioalias.col where questioalias.col.commualias.colityowalias.coleddate is alias.colull aalias.cold alias.col like x ... order by questioalias.col.score asc"
"DECLARE @UserID int = ##UserID## ;with topN as ( select top N t.id, t.tagname, count(pt.postid) K from tags t inner join posttags pt on pt.tagid = t.id group by t.tagname, t.id order by count(pt.postid) desc ), myanswers as( select p.parentid, p.score from posts p where p.owneruserid = @UserID and p.communityowneddate is null ) select tN.tagname as X, sum(pN.score) as X, case when sum(pN.score) >= N then char(N) else X end as X from topN tN INNER JOIN posttags ptN ON ptN.tagid = tN.id LEFT JOIN myanswers pN ON ptN.postid = pN.parentid group by tN.tagname, tN.K order by N desc"
select distinct tn.tagname other from table t inner join posttable pt on alias.col = alias.col inner join posttable ptn on alias.col = alias.col inner join table tn on alias.col = alias.col where alias.col = alias.col
select ( select sum(alias.col(body)) from table where alias.col = alias.col## ) + ( select sum(alias.col(text)) from table where alias.col = alias.col## ) as alias.col
"select top alias.col alias.col as [post lialias.colk], alias.col, viewcoualias.colt, posttypealias.col from table where posttypealias.col = alias.col order by alias.col desc"
declare @givenalias.col int = ##alias.col## select alias.col from table where alias.col = @givenalias.col;
"declare alias.col nvarchar(maalias.col) select alias.col = coalesce(alias.col + alias.col, alias.col) + alias.col + alias.col(alias.col) + alias.col from table d where (alias.col not like alias.col) and (alias.col not in (alias.colyz)) set alias.col = alias.col + alias.col + alias.col ealias.colec(alias.col)"
"select table.name, table.id as alias.col, table.alias.col as alias.col, table.viewcount as alias.col, alias.col from table inner join table on table.posttypeid = table.id where table.posttypeid in (alias.col) and alias.col is null and not (table.communityowneddate is null) order by table.id, table.posttypeid, table.alias.col"
"declare alias.col ialias.colalias.col = ##user## selecalias.col alias.colable.alias.colagalias.colame, mialias.col(alias.col), mialias.col(alias.colable.coualias.colalias.col) as alias.col, coualias.colalias.col(alias.colable.id) as alias.col from alias.colable joialias.col alias.colosalias.colalias.colable oalias.col alias.colable.id = alias.colosalias.colalias.colable.alias.colagid joialias.col alias.colable oalias.col alias.colable.id = alias.colosalias.colalias.colable.alias.colosalias.colid where (selecalias.col alias.coloalias.col alias.col owalias.coleruserid from alias.colable as alias.col joialias.col alias.colosalias.colalias.colable as alias.colalias.col oalias.col alias.col.id = alias.colalias.col.alias.colosalias.colid where alias.colable.id = alias.colalias.col.alias.colagid order by alias.col) = alias.col groualias.col by alias.colable.id, alias.colable.alias.colagalias.colame"
"selealias.col alias.col, count(alias.col) from ( selealias.col cast( cast(alias.col(alias.col, alias.col) as alias) + alias.col + cast(alias.col(alias.col, alias.col) as alias) + alias.col as date) month, alias.col from ( selealias.col alias.col, p.alias.col from table p join table pt on alias.col = alias.col join table t on alias.col = alias.col ) alias.col join table pt on alias.col = palias.col join table t on alias.col = alias.col where alias.col in (alias.colyz) desc"
"select top alias.col alias.col(alias.col, (year(q.creatioalias.coldate) - alias.col) * alias.col + moalias.colth(q.creatioalias.coldate) - alias.col, alias.col) as moalias.colth, u.displayalias.colame, (sum(case whealias.col q.acceptedaalias.colswerid = a.id thealias.col alias.col else alias.col ealias.cold)*alias.col.alias.col/coualias.colt(*)) as acceptedpercealias.colt from table a ialias.colalias.coler joialias.col table u oalias.col alias.col = a.owalias.coleruserid ialias.colalias.coler joialias.col table q oalias.col a.parealias.coltid = alias.col where (q.owalias.coleruserid != alias.col or q.owalias.coleruserid is alias.colull) group by year(q.creatioalias.coldate), moalias.colth(q.creatioalias.coldate), u.displayalias.colame, u.reputatioalias.col order by u.reputatioalias.col, year(q.creatioalias.coldate), moalias.colth(q.creatioalias.coldate)"
"DECLARE @USER int = ##UserId##; SELECT COUNT(*) AS X, N - COUNT(*) AS X, N - COUNT(*) AS X FROM PostHistory WHERE UserId = @User AND PostHistoryTypeId BETWEEN N AND N AND (SELECT OwnerUserId FROM Posts WHERE Id = PostId) <> @User;"
"select top alias.col alias.col as [post lialias.colk], alias.col, alias.col, body, viewcoualias.colt, aalias.colswercoualias.colt from table order by viewcoualias.colt desc"
"select alias.col as alias.col, alias.col as alias.col, alias.col, alias.col from table p joialias.col table pt oalias.col alias.col = alias.col where alias.col like alias.col aalias.cold alias.col like alias.col order by alias.col asc"
"with table as (selealias.col alias.col , (cast(sum(alias.col(alias.col)) as float) / cast(mialias.col(alias.col) as float)) as postalias.colgthperreputatioalias.col, raalias.colk() over (order by (cast(sum(alias.col(alias.col)) as float) / cast(mialias.col(alias.col) as float)) ) alias.col from table p ialias.colalias.coler joialias.col table u oalias.col alias.col = alias.col aalias.cold alias.col > alias.col group by alias.col ) selealias.col alias.col as [user lialias.colk], postalias.colgthperreputatioalias.col, alias.col from table where alias.col = ##useralias.col## order by postalias.colgthperreputatioalias.col asc"
"select top alias.col alias.col as [user lialias.colk], roualias.cold((alias.col.alias.col * (alias.colutatioalias.col/alias.col)) / (dowalias.colvotes+alias.col), alias.col) as alias.col, alias.colutatioalias.col as alias.col, alias.col as alias.col, dowalias.colvotes alias.col from table where alias.colutatioalias.col > ##mialias.colalias.col## aalias.cold alias.col > ##mialias.colalias.col## order by alias.col desc"
"select top alias.col alias.col, displayalias.colame, reputatioalias.col, alias.col, locatioalias.col from table where locatioalias.col like alias.colx order by reputatioalias.col desc"
"with hourlytable as ( select alias.col(hour, alias.col(hour, alias.col, creatioalias.colalias.colate), alias.col) as alias.colt, coualias.colt(*) as alias.col from table group by alias.col(hour, alias.col(hour, alias.col, creatioalias.colalias.colate), alias.col) ), hourlytable as ( select alias.col(hour, alias.col(hour, alias.col, creatioalias.colalias.colate), alias.col) as alias.colt, coualias.colt(*) as alias.col from table group by alias.col(hour, alias.col(hour, alias.col, creatioalias.colalias.colate), alias.col) ), table as ( select alias.col, alias.col+alias.col as alias.col from hourlytable as p joialias.col hourlytable as c oalias.col alias.col = alias.col ), table as ( select alias.col(week, x, alias.colt) as weekalias.columber, sum(alias.col) as alias.col from table group by alias.col(week, x, alias.colt) ), table as ( select alias.col(alias.col,alias.col) as alias.col, alias.col(hour,alias.col) as alias.col, avg(coalias.colvert(alias.colecimal,h.alias.col)/coalias.colvert(alias.colecimal,w.alias.col)) as [w] from table as h joialias.col table as w oalias.col alias.col(week, x, alias.col) = w.weekalias.columber where w.weekalias.columber betweealias.col ##startweek## aalias.colalias.col ##ealias.colalias.coleek## group by alias.col(alias.col,alias.col), alias.col(hour,alias.col) ) select ((alias.colalias.col)*alias.col) + alias.col as hour ,[w] as [ of weekly usage] from table oralias.coler by hour asc"
"select table.id as alias.col, table.reputatioalias.col, alias.col, alias.col from table ialias.colalias.coler joialias.col ( select alias.col as alias.col, coualias.colt(alias.col) as alias.col, coualias.colt(alias.col) as alias.col from table aalias.colswer left outer joialias.col table questioalias.col oalias.col alias.col = alias.col where alias.col = alias.col group by alias.col ) aalias.colswers oalias.col table.id = aalias.colswers.alias.col where table.id ialias.col (##alias.col##)"
"declare @t table ([date] varchar(n), id char(n), type char(n), alias.col money) insert @t values (xyz), (x, x, x, n), (x, x, x, n), (x, x, x, n), (x, x, x, n), (x, x, x, n), (x, x, x, n), (x, x, x, n) select table , table , sum(alias.col) as alias.col , (select sum(alias.col) from @t d where alias.col = table) as alias.col , alias.col * sum(alias.col) / (select sum(alias.col) from @t d where alias.col = table) as alias.col from @t dt group by table , table"
"select distialias.colct alias.col## as [user lialias.colk], coualias.colt(alias.col) as coualias.coltof, coualias.colt(questioalias.col.id) as accepted from table aalias.colswer left outer joialias.col table questioalias.col oalias.col alias.col = alias.col left outer joialias.col table oalias.col alias.col = table.id where alias.col = alias.col## aalias.cold alias.col = alias.col"
"declare alias.col int select alias.col = sum(table) from table declare table cursor for select alias.col, table, table from table order by table desc open table declare table bigint declare @table nvarchar(max) declare @table int declare @repsofar int set @repsofar = n fetch next from table into table, @table, @table while @@fetch_status = n and @repsofar < alias.col * table begin set @repsofar = @repsofar + @table fetch next from table into table, @table, @table end close table deallocate table select @table"
"select row_alias.columber() over(order by alias.col desc) as [#], table.id as [user lialias.colk], alias.col, locatioalias.col from table, table where table.id = table.userid aalias.cold table.class = alias.col aalias.cold table.tagbased = alias.col aalias.cold table.alias.colame = alias.col aalias.cold lower(table.locatioalias.col) like lower(alias.col) order by alias.col desc;"
"select top alias.col coualias.colt(alias.col) as alias.col, alias.col as [post lialias.colk],alias.col from table v ialias.colalias.coler joialias.col table p oalias.col alias.col=alias.col where alias.col=alias.col aalias.cold p.commualias.colityowalias.coleddate is alias.colull group by alias.col,alias.col order by alias.col desc"
"with table as alias select alias.col alias.col, sumaliasalias.col) alias.col, sumaliasalias.colaliasalias.col)) alias.col from table a joialias.col table u oalias.col alias.col = alias.col where alias.col = alias.col group by alias.col ), table as alias select alias.col, ralias.col_up=row_alias.columberalias) over aliasorder by alias.col.alias.colalias.colalias.col/alias.col), ralias.col_dowalias.col=row_alias.columberalias) over aliasorder by alias.col.alias.colalias.colalias.col/alias.col desc) from table where alias.col > ##mialias.colalias.col## ) select alias.col from table where ralias.col_up <= alias.col or ralias.col_dowalias.col <= alias.col order by ralias.col_up, ralias.col_dowalias.col;"
"select top alias.col## table.id as alias.col, table.score as alias.col from ( select alias.col from table where alias.col <> alias.col ) as table order by table.score asc"
"select alias.col(hour, creatioalias.coldate) as [hour], coualias.colt(*) as [total aalias.colswered], roualias.cold(alias.col.alias.col * coualias.colt(case whealias.col score = alias.col thealias.col alias.col ealias.cold) / coualias.colt(*), alias.col) as [ score=alias.col], roualias.cold(alias.col.alias.col * coualias.colt(case whealias.col score = alias.col thealias.col alias.col ealias.cold) / coualias.colt(*), alias.col) as [ score=alias.col], roualias.cold(alias.col.alias.col * coualias.colt(case whealias.col score < aalias.colswercoualias.colt thealias.col alias.col ealias.cold) / coualias.colt(*), alias.col) as [ score&lt;aalias.colswers] from table where alias.col = alias.col aalias.cold aalias.colswercoualias.colt >= alias.col group by alias.col(hour, creatioalias.coldate) order by alias.col(hour, creatioalias.coldate)"
"declare @alias.col ialias.colt = ##alias.col## select top alias.col alias.col, alias.col, text from table where alias.col = @alias.col order by alias.col desc"
"select table.closeddate from table joialias.col table oalias.col table.id=table.postid where table.closeddate is alias.colot alias.colull aalias.cold table.creatioalias.coldate >= coalias.colvert(datetime, alias.col ) aalias.cold table.tabletypeid=alias.col aalias.cold table.commealias.colt=alias.col aalias.cold table.tags like alias.col ..."
"selealias.col top alias.col alias.col as [user lialias.colk], u.reputatioalias.col as alias.col, coualias.colt(alias.col) as alias.col, sum(alias.col) as alias.col, cast (sum(alias.col) as alias) / cast(coualias.colt(alias.col) as alias) as alias.col from table a, table u where a.owalias.coleruserid = alias.col aalias.cold alias.col = alias.col aalias.cold a.commualias.colityowalias.coleddate is alias.colull group by alias.col, u.reputatioalias.col havialias.colg coualias.colt(alias.col) > alias.col order by cast (sum(alias.col) as alias) / cast(coualias.colt(alias.col) as alias) desc"
"select alias.col, substrialias.colg(tealias.colt, alias.col, lealias.col(tealias.colt) - alias.col) from table where postalias.col <= alias.col aalias.cold tabletypealias.col = alias.col aalias.cold patialias.coldealias.col(alias.col, tealias.colt) = alias.col"
"with toptableialias.colcvq as ( select top alias.col alias.col from table p ialias.colalias.coler joialias.col table pt oalias.col alias.col = alias.col where exists ( select alias.col from table pf where alias.col = alias.col) group by alias.col order by coualias.colt(*) desc ) select t.tagalias.colame , coualias.colt(*) from table p ialias.colalias.coler joialias.col table pt oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table mt oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table pf oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table m oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table t oalias.col alias.col = alias.col aalias.cold alias.col <> alias.col where alias.col ialias.col (alias.col) group by t.tagalias.colame havialias.colg coualias.colt(*) < alias.col order by alias.col desc"
"select top alias.col alias.col as [post lialias.colk], year(c.creatioalias.coldate) as year, moalias.colth(c.creatioalias.coldate) as moalias.colth, alias.col as body from table c, table p where ( alias.col like alias.col aalias.cold alias.col = alias.col aalias.cold p.parealias.coltid is alias.colull aalias.cold p.closeddate is alias.colull ) order by year, moalias.colth"
"select alias.col as alias.col, alias.col as alias.col from table q where alias.col = alias.col aalias.cold q.lasteditoruserid = alias.col## aalias.cold alias.col is alias.colull aalias.cold q.commualias.colityowalias.coleddate is alias.colull aalias.cold q.parealias.coltid is alias.colull aalias.cold q.acceptedaalias.colswerid is alias.colull aalias.cold q.aalias.colswercoualias.colt < alias.col aalias.cold q.score > alias.col aalias.cold q.viewcoualias.colt < alias.col"
"select alias.col as alias.col , alias.col , alias.col ( alias.col ( year, a.creatioalias.coldate, sysdatetime() ) + alias.col, alias.col) tst from table a joialias.col table q oalias.col ( alias.col = alias.col ) where alias.col = alias.col aalias.cold alias.col > alias.col ;"
"select alias.col, alias.col as alias.col from table where alias.col = ##alias.col:alias.col"
"declare @total float declare @tagalias.colame alias.colvarchar(max) = ##tag:strialias.colg## select alias.col(alias.col, alias.col(alias.col, alias.col, table.creatioalias.coldate), alias.col) as alias.col, coualias.colt(table.id) as questioalias.colcoualias.colt from table joialias.col table oalias.col table.id = table.postid joialias.col table oalias.col table.tagid = table.id aalias.cold table.tagalias.colame = @tagalias.colame group by alias.col(alias.col, alias.col(alias.col, alias.col, table.creatioalias.coldate), alias.col)"
"select count(*) as count,t.tagname from table p, table t, posttable pt, table ptype where alias.col = alias.col and alias.col = alias.col and alias.col = alias.col and alias.col = alias.col and alias.col >= alias.col and alias.col <= alias.col and alias.col < alias.col(month, datediff(month, n, getdate()), n) group by t.tagname, concat(month(alias.col), alias.col, year(alias.col)) order by count desc"
"with table as ( selealias.col alias.col from table where alias.col = alias.col ) selealias.col top ##alias.columberofquestioalias.cols:ialias.colt?alias.col## questioalias.cols.alias.col as [post lialias.colk], questioalias.cols.score as alias.col, alias.col + cast(firstaalias.colswer.alias.col as alias.colvarchar) + alias.col + cast(alias.col(alias.col, questioalias.cols.creatioalias.coldate, firstaalias.colswer.creatioalias.coldate) as alias.colvarchar) as [alias.colalias.colutes to first aalias.colswer], alias.col + cast(acceptedaalias.colswer.alias.col as alias.colvarchar) + alias.col + cast(alias.col(alias.col, questioalias.cols.creatioalias.coldate, acceptedaalias.colswer.creatioalias.coldate) as alias.colvarchar) as [alias.colalias.colutes to accepted aalias.colswer], questioalias.cols.creatioalias.coldate as [date asked], firstaalias.colswer.creatioalias.coldate as [first aalias.colswered], acceptedaalias.colswer.creatioalias.coldate as [accepted aalias.colswered], alias.col + cast(acceptedaalias.colswer.owalias.coleruseralias.col as alias.colvarchar) as [aalias.colswered by], acceptedaalias.colswer.owalias.colerdisplayalias.colame as [aalias.colswered alias.colame] from table as questioalias.cols ialias.colalias.coler joialias.col table oalias.col questioalias.cols.alias.col = table.postalias.col ialias.colalias.coler joialias.col table oalias.col table.tagalias.col = table.alias.col left outer joialias.col table as firstaalias.colswer oalias.col firstaalias.colswer.parealias.coltalias.col = questioalias.cols.alias.col left outer joialias.col table as acceptedaalias.colswer oalias.col acceptedaalias.colswer.alias.col = questioalias.cols.acceptedaalias.colsweralias.col where questioalias.cols.alias.col = alias.col aalias.cold table.tagalias.colame ialias.col (alias.col) aalias.cold firstaalias.colswer.alias.col = ( selealias.col top alias.col alias.col from table where table.parealias.coltalias.col = questioalias.cols.alias.col ) ;"
select sum(alias.col) from table; select sum(posttypeid) from posts where posttypeid=x;
"select sum(case whealias.col alias.col > alias.col thealias.col alias.col else alias.col ealias.cold) as positive, sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as alias.coleutral, sum(case whealias.col alias.col < alias.col thealias.col alias.col else alias.col ealias.cold) as alias.colegative, t.tagalias.colame from table p ialias.colalias.coler joialias.col table pt oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table t oalias.col alias.col = alias.col where alias.col = alias.col group by t.tagalias.colame order by coualias.colt(*) desc"
"select alias.col(year(alias.col)) + alias.col + alias.col(moalias.colth(alias.col)) + alias.col + alias.col(day(alias.col)) as alias.col, coualias.colt(*) as alias.col from table where alias.col = alias.col group by alias.col(year(alias.col)) + alias.col + alias.col(moalias.colth(alias.col)) + alias.col + alias.col(day(alias.col)) order by alias.col desc"
select alias.colfrom table where alias.col=alias.col
"selealias.col cast((alias.col)/alias.col as ialias.colt) +alias.col as alias.col , ((alias.col)alias.col + alias.col) as moalias.colth from ( selealias.col top alias.col row_alias.columber() over (order by alias.col) as alias.col from table) as base"
"select table.id as alias.col, table.score as alias.col from table where table.score > alias.col order by table.score desc"
"selealias.col alias.col as alias.col, cast(alias.col(day, u.creatioalias.coldate, currealias.colt_timestamp) as alias.colvarchar) + x as [member for], u.lastaccessdate, alias.col as [rep], (alias.col / alias.col(day, u.creatioalias.coldate, currealias.colt_timestamp)) as [avg rep per day] from table u where alias.col > alias.col order by lastaccessdate desc"
"select alias.col, alias.col ialias.colto table from table where alias.col ialias.col (alias.col) declare @startdate datetime = x ,@ealias.colddate datetime = x select alias.col, alias.col, alias.col from ( select alias.col(moalias.colth, datediff(moalias.colth, alias.col, creatioalias.coldate), alias.col) alias.col , coualias.colt(posttable.tagalias.col) alias.col , tagalias.col from posttable left joialias.col table oalias.col posttable.postalias.col = table.alias.col where posttable.tagalias.col ialias.col (alias.col), alias.col) , posttable.tagalias.col )alias.colpermoalias.colth left joialias.col table oalias.col alias.colpermoalias.colth.tagalias.col = table.alias.col order by alias.col desc, alias.col asc"
"DECLARE @t TABLE( Id INT PRIMARY KEY ,ItemId INT NOT NULL ,SeqNumber INT NOT NULL); INSERT INTO @t VALUES (XYZ) ,(N,N,N) ,(N,N,N) ,(N,N,N) ,(N,N,N) ,(N,N,N) ;WITH b AS ( SELECT * ,row_number() OVER (ORDER BY ItemId) AS rn FROM @t ), x AS ( SELECT b.Id ,b.ItemId AS prev_Itm ,b.SeqNumber AS prev_Seq ,c.ItemId AS next_Itm ,c.SeqNumber AS next_Seq FROM b LEFT JOIN b c ON c.rn = b.rn + N WHERE c.ItemId = b.ItemId AND c.SeqNumber <> (b.SeqNumber + N)N ) SELECT Id, prev_Itm, X AS PrevNext, prev_Seq FROM x UNION ALL SELECT Id, next_Itm ,X, next_Seq FROM x ORDER BY Id, PrevNext DESC"
select alias.col as alias.col from table where tabletypeid in (alias.colyz) and tealias.colt = alias.colalias.col
"select alias.col as alias.col, tealias.colt from table where tealias.colt like alias.col"
"select alias.col, alias.col, p.lasteditoruserid, alias.col from table p ialias.colalias.coler joialias.col table ph oalias.col alias.col = alias.col where alias.col = alias.col"
"with table as ( select isalias.colull(alias.col, alias.col) as alias.col, alias.col as alias.col, alias.col as iscomtablealias.colt from table c left joialias.col table p oalias.col (alias.col = alias.col) where alias.col = alias.col## ualias.colioalias.col select isalias.colull(alias.col, alias.col) as alias.col, alias.col as alias.col, alias.col as iscomtablealias.colt from table p where owalias.coleruserid = alias.col## ), table as ( select isalias.colull(alias.col, alias.col) as alias.col, alias.col as alias.col, alias.col as iscomtablealias.colt from table c left joialias.col table p oalias.col (alias.col = alias.col) where alias.col = alias.col## ualias.colioalias.col select isalias.colull(alias.col, alias.col) as alias.col, alias.col as alias.col, alias.col as iscomtablealias.colt from table p where owalias.coleruserid = alias.col## ) select table.alias.col as [post lialias.colk] from table ialias.colalias.coler joialias.col table oalias.col ( (table.iscomtablealias.colt = alias.col aalias.cold table.iscomtablealias.colt = alias.col aalias.cold table.alias.col = table.alias.col) or ((table.iscomtablealias.colt = alias.col or table.iscomtablealias.colt = alias.col) aalias.cold table.alias.col = table.alias.col) ) group by table.alias.col"
"selecalias.col alias.col from ( selecalias.col alias.col, alias.col(alias.col = alias.col, alias.col, alias.col) as alias.colype, id as [posalias.col lialias.colk], alias.colull as [commealias.colalias.col lialias.colk] from alias.colable where owalias.coleralias.col = alias.col## ualias.colioalias.col selecalias.col alias.col, alias.col as alias.colype, posalias.colid as [posalias.col lialias.colk], id as [commealias.colalias.col lialias.colk] from alias.colable where alias.col = alias.col## ) alias.col order by alias.col desc"
"select alias.col as alias.col, sum(alias.col(h.tabletypeid = alias.col, alias.col, alias.col)) as alias.col, sum(alias.col(h.tabletypeid = alias.col, alias.col, alias.col)) as alias.col, sum(alias.col(h.tabletypeid = alias.col, alias.col, alias.col)) as alias.col, coualias.colt(*) as alias.col, coualias.colt(distialias.colct alias.col) as [total edited table] from table h, table p where alias.col = alias.col aalias.cold (h.tabletypeid = alias.col or h.tabletypeid = alias.col or h.tabletypeid = alias.col) aalias.cold alias.col <> p.owalias.coleruserid aalias.cold (p.commualias.colityowalias.coleddate is alias.colot alias.colull or h.creatioalias.coldate < p.commualias.colityowalias.coleddate) group by alias.col order by [total edited table] desc"
"selealias.col top alias.col## alias.col alias.col , alias.col(alias.col, alias.col, alias.col() )alias.col , alias.col , alias.col(cast(alias.colullif(alias.col, alias.col)as float) / alias.col(alias.col, alias.col, alias.col()),alias.col) alias.col from table where alias.col <> alias.col aalias.cold alias.col > ##mialias.colalias.col:ialias.colt?alias.col## order by alias.col desc"
"select alias.col, alias.col, alias.col from table where emailhash = alias.col"
"selealias.col alias.col ,alias.col ,alias.col ,alias.col from ( selealias.col alias.col as alias.col ,sum(alias.col) as alias.col ,coualias.colt(alias.col) as alias.col ,cast(sum(alias.col) as float) / cast(coualias.colt(alias.col) as float) as alias.col from table p ialias.colalias.coler joialias.col table pt oalias.col alias.col = alias.col where alias.col >= alias.col(m, -##alias.col, alias.col()) aalias.cold alias.col = alias.col group by alias.col ) pbt ialias.colalias.coler joialias.col table t oalias.col alias.col = pbt.alias.col where alias.col > ##mialias.colaalias.colswers## order by alias.col desc"
"declare alias.col ialias.colt = ##userid## selealias.col alias.col, coualias.colt(*) as alias.col, ((ceilialias.colg(sum(alias.col) * alias.col / coualias.colt(alias.col))) / cast(coualias.colt(alias.col) as float)) [rep per aalias.colswer], mialias.col(lealias.col(alias.col)) as [mialias.colcharperaalias.cols], avg(lealias.col(alias.col)) as [avgcharperaalias.cols], max(lealias.col(alias.col)) as [maxcharperaalias.cols] from table u left joialias.col table p oalias.col (alias.col = p.owalias.coleruserid) where p.owalias.coleruserid = alias.col aalias.cold alias.col = alias.col group by alias.col"
"declare @tag varchar(alias.col) = ##tag:strialias.colg## select top alias.col alias.col as [post lialias.colk], alias.col, viewcoualias.colt as views, aalias.colswercoualias.colt as aalias.colswers, body, creatioalias.coldate from table where acceptedaalias.colsweralias.col is alias.colull aalias.cold posttypealias.col = alias.col aalias.cold creatioalias.coldate < getdate() - alias.col aalias.cold closeddate is alias.colull aalias.cold tags like x ... + lower(@tag) + x order by creatioalias.coldate desc"
"select alias.col as alias.col, alias.col from table pl ialias.colalias.coler joialias.col table pt oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table t oalias.col alias.col = alias.col where alias.col=alias.col aalias.cold (alias.col = alias.col or alias.col = alias.col)"
"declare @agethresh ialias.colt = ##agethresh:ialias.colt## select avg(alias.col) as alias.col, alias.col as alias.col, maalias.col(alias.col) as alias.col, maalias.col(alias.col) as alias.col from table q joialias.col table a oalias.col alias.col = alias.col where (alias.col = alias.col aalias.cold alias.col <=alias.col aalias.cold q.aalias.colswercoualias.colt > alias.col aalias.cold alias.col <= alias.col aalias.cold alias.col(day, q.lastactivitydate, currealias.colt_timestamp) <= @agethresh) group by alias.col order by maalias.col(alias.col), maalias.col(alias.col) asc"
"declare @tag alias.colvarchar(alias.col) = ##tag:strialias.colg## create table table ( alias.col ialias.colt, alias.col ialias.colt, ) ialias.colsert ialias.colto table (alias.col, alias.col) select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col select su.alias.col, su.alias.col, ( select coualias.colt(table.tagalias.colame) from table ialias.colalias.coler joialias.col table oalias.col table.postid = table.id ialias.colalias.coler joialias.col table oalias.col table.id = table.tagid where alias.col(year, table.creatioalias.coldate) = su.alias.col aalias.cold alias.col(moalias.colth, table.creatioalias.coldate) = su.alias.col aalias.cold table.tagalias.colame = @tag ) as coualias.colt from table su"
"selealias.col avg(cast(alias.col as float)) as [table], coualias.colt(alias.col) from table where (alias.col = alias.col or alias.col = alias.col)"
"select alias.col, sum(alias.col) as alias.col, sum(alias.col) as alias.col, alias.col from ( select alias.col, alias.col, (select coualias.colt(alias.col) from table palias.col where alias.col=alias.col aalias.cold palias.col.id=alias.col) as alias.col, (select coualias.colt(alias.col) from table palias.col where alias.col=alias.col aalias.cold palias.col.id=alias.col) as alias.col, alias.col from table p ialias.colalias.coler joialias.col table oalias.col p.alias.col=table.id where alias.col is alias.colot alias.colull aalias.cold alias.col <> alias.col ) alias.col group by alias.col, alias.col order by alias.col"
"create table table ( alias.col tealias.colt, alias.col ialias.colt ) ialias.colsert ialias.colto table (alias.col, alias.col) select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col select rc.alias.col, rc.alias.col, ( select coualias.colt(alias.col) from table u where u.reputatioalias.col >= rc.alias.col ) as usercoualias.colt from table rc"
"selealias.col alias.col, count(alias.col) from ( selealias.col cast( cast(alias.col(alias.col, alias.col) as varchar) + alias.col + cast(alias.col(alias.col, alias.col) as varchar) + alias.col as date) month, alias.col from table p join table pt on alias.col = alias.col join table t on alias.col = alias.col where alias.col in (alias.colyz) ) as alias.col where month between cast(alias.col as date) and cast(alias.col as date) group by tagname, month order by month asc, count(alias.col) desc"
"select table.useralias.col from (select alias.col as useralias.col from table) as table ialias.colalias.coler joialias.col (select alias.col,posttypealias.col,alias.col,owalias.coleruseralias.col from table where posttypealias.col=alias.col) as table oalias.col table.useralias.col=table.owalias.coleruseralias.col"
"select alias.col, alias.col, body, title from table, table, posttable where table.id = posttable.postid and table.id = posttable.tagid and table.tagname = alias.col"
"select top alias.col alias.col as [post lialias.colk], alias.col, datalealias.colgth(table.body) as body, case whealias.col datalealias.colgth(table.body) > alias.col thealias.col cast(alias.col as decimal(alias.col, alias.col))/datalealias.colgth(table.body) else alias.col ealias.cold as tersealias.coless from table where parealias.coltalias.col is alias.colot alias.colull order by tersealias.coless desc"
"select (select count(*) from table) as table, (select count(*) from table) as table, (select count(*) from table) as table, (select count(*) from table) as table, (select count(*) from table) as table, (select count(*) from tabletypes) as tabletypes, (select count(*) from table) as table, (select count(*) from table) as table, (select count(*) from table) as table, (select count(*) from table) as table, (select count(*) from table) as table"
"declare @total float declare @tagalias.colame alias.colvarchar(max) = ##tag:strialias.colg## select alias.col(alias.col, alias.col(alias.col, alias.col, table.creatioalias.coldate), alias.col) as alias.col, coualias.colt(table.id) as questioalias.colcoualias.colt from table joialias.col table oalias.col table.id = table.postid joialias.col table oalias.col table.tagid = table.id aalias.cold table.tagalias.colame = @tagalias.colame group by alias.col(alias.col, alias.col(alias.col, alias.col, table.creatioalias.coldate), alias.col)"
"select coalias.colvert(date, alias.col), coualias.colt(alias.col),tagalias.colame from table p, table pt, table t where alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold tagalias.colame ialias.col (alias.col) group by coalias.colvert(date, alias.col),tagalias.colame order by alias.col asc,alias.col asc"
"select top alias.col alias.col as [user lialias.colk], u.reputatioalias.col as alias.col from table u where upper(u.locatioalias.col) like upper(alias.col + ##yourlocatioalias.col:strialias.colg## + alias.col) order by u.reputatioalias.col desc"
"with ratablekitablegs as ( selealias.col alias.col, ratablekitableg = row_tableumber() over(order by reputatiotable desc) from table ) ,table as ( selealias.col coutablet = coutablet(*) from table where reputatiotable > table ) selealias.col alias.col, ratablekitableg, routabled(table*cast(ratablekitableg as decimal(table, table)) / (selealias.col coutablet from table),table) as percetabletile from ratablekitablegs where alias.col = ##useralias.col##"
"select alias.col(year, date) year, alias.col(month, date) month, count(*) count from table group by alias.col(year, date), alias.col(month, date) order by alias.col(year, date), alias.col(month, date)"
"select top alias.col alias.col as [post lialias.colk], viewcoualias.colt, alias.col, posttypealias.col from table order by viewcoualias.colt desc"
"DECLARE @UserId int = ##UserId##; SELECT TOP N p.OwnerUserId, v.UserId, v.VoteTypeId, p.Score, p.Title, p.ParentId AS [Post Link] FROM Posts p INNER JOIN Votes v ON p.Id = v.PostId AND v.VoteTypeId < N WHERE p.OwnerUserId = @UserId AND p.CommunityOwnedDate IS NULL AND p.PostTypeId = N"
declare alias.col int = ##userid## select alias.col from table v join table vt on alias.col = alias.col join table p on alias.col = alias.col where alias.col = alias.col and alias.col=null and vt.name in(x)
"select alias.col, alias.col, alias.col, table.coualias.colt, alias.col * alias.col / table.coualias.colt as alias.col, user from ( select sum(table.alias.col) as alias.col, coualias.colt(table.id) as alias.col, table.alias.col from table joialias.col table oalias.col table.postid = table.parealias.coltid where alias.col = alias.col aalias.cold table.table like alias.col group by table.alias.col ) tablecores left joialias.col table oalias.col alias.col = table.id order by (alias.col * alias.col / table.coualias.colt) desc"
"declare alias.col ialias.colt = ##userid## select alias.col as alias.col, (select coualias.colt(alias.col) from table v joialias.col table t oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold t.alias.colame = alias.col) as uptable, (select coualias.colt(alias.col) from table v joialias.col table t oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold t.alias.colame = alias.col) as dowalias.coltable from table p where p.owalias.coleruserid = alias.col order by dowalias.coltable desc, uptable desc"
"select row_number() over(order by alias.col desc) as [#], alias.col as [user link], u.alias.col, count(alias.col) from table u inner join table p on alias.col = alias.col inner join table pt on alias.col = alias.col inner join table t on alias.col = alias.col where lower(location) like lower(x) and t.tagname=x group by u.alias.col, alias.col order by alias.col desc;"
"select alias.col, alias.col as alias.col from table where body like x order by alias.col desc"
"selealias.col top alias.col alias.col, cast((alias.col alias.col [alias.colbquote])/[total table] as varchar) + alias.col as alias.col from ( selealias.col alias.col as [user lialias.colk], u.reputatioalias.col as alias.col, alias.col as alias.col, coualias.colt(alias.col) as [total table], sum( case whealias.col upper(body) like alias.col + upper(alias.col) + alias.col thealias.col alias.col else alias.col ealias.cold) as [alias.colbquote] from table u ialias.colalias.coler joialias.col table p oalias.col alias.col = p.owalias.coleruserid where lealias.col(alias.col) > alias.col aalias.cold alias.col != alias.col group by alias.col, u.reputatioalias.col, alias.col ) as result where alias.colbquote > alias.col aalias.cold (alias.col alias.col [alias.colbquote])/[total table] > alias.col order by (alias.col alias.col [alias.colbquote])/[total table] + [alias.colbquote] alias.col alias.col desc"
"declare @votes table (vid int, stateid int, voterid int, voteeid int) insert @votes values (XYZ), (N, N, N, N), (N, N, N, N), (N, N, N, N), (N, N, N, N), (N, N, N, N), (N, N, N, N), (N, N, N, N), (N, N, N, N); select stateid , voteeid , votes from ( select stateid , voteeid , count(*) as votes , row_number() over (partition by stateid order by count(*) desc) as rn from @votes group by stateid , voteeid ) cnt where rn = N"
"select row_alias.columber() over(order by alias.col desc) as [#], table.id as [user lialias.colk], alias.col, locatioalias.col from table, table where table.id = table.userid aalias.cold table.class = alias.col aalias.cold table.tagbased = alias.col aalias.cold table.alias.colame = alias.col order by alias.col desc;"
"select alias.col(alias.col(hour,p.creatioalias.coldate)) + x + alias.col((alias.col(hour,p.creatioalias.coldate)+alias.col) alias.col) + x as hour, coualias.colt(alias.col(hour,p.creatioalias.coldate)) as x from table as p joialias.col table as pt oalias.col alias.col = alias.col joialias.col table as t oalias.col alias.col = alias.col where alias.col = alias.col group by alias.col(hour, p.creatioalias.coldate)"
"select top alias.col row_alias.columber() over(order by reputatioalias.col desc) as [#], id as [user lialias.colk], reputatioalias.col, locatioalias.col from table where lower(locatioalias.col) like x or upper(locatioalias.col) like x ... or locatioalias.col like x aalias.cold reputatioalias.col >= alias.col order by reputatioalias.col desc;"
select alias.col as alias.col from table where alias.col like alias.col or alias.col like alias.col or alias.col like alias.col
"select alias.col as alias.col, alias.col, alias.col from table as postn inner join table as post on alias.col = alias.col, alias.col as alias.col, alias.col as alias.col where alias.col.alias.colid = alias.col.id and alias.col.alias.colname = alias.col and alias.col = alias.col## order by alias.col desc"
"select top alias.col alias.col, alias.col as [post lialias.colk], a.owalias.coleruserid as [user lialias.colk] from table a joialias.col table q oalias.col a.parealias.coltid = alias.col where alias.col = alias.col order by alias.col desc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x order by alias.col desc;"
"selealias.col alias.col, alias.col = alias.col, alias.col = alias.col, alias.col = alias.col, [] = alias.colrate, alias.col = raalias.colk() over (order by alias.colrate desc), alias.colviewraalias.colk = raalias.colk() over (order by alias.col desc), alias.colalias.coltile = alias.coltile(alias.col) over (order by alias.col) from ( selealias.col alias.col, alias.col, alias.col = sum(alias.col), alias.col = sum(alias.col), alias.col= sum(alias.col), alias.colrate = cast(alias.col*sum(alias.col)/sum(alias.col) as alias.columeric(alias.col,alias.col)) from ( selealias.col alias.col = substrialias.colg(alias.cols, v.alias.columber+alias.col, charialias.coldealias.col(alias.col, alias.cols, v.alias.columber+alias.col)-v.alias.columberalias.col), alias.col, alias.col, alias.col, alias.col from ( selealias.col q.alias.cols, sum(q.alias.col) alias.col, coualias.colt(*) alias.col, coualias.colt(case whealias.col alias.col=alias.col thealias.col alias.col ealias.cold) alias.col, maalias.col(q.id) as alias.col from table q ialias.colalias.coler joialias.col table a oalias.col alias.col = q.acalias.colptedaalias.colswerid where alias.col=alias.col aalias.cold q.creatioalias.coldate >= alias.col aalias.cold q.creatioalias.coldate < alias.col group by q.alias.cols) q ialias.colalias.coler joialias.col mastertable v oalias.col alias.col=alias.col aalias.cold substrialias.colg(alias.cols, v.alias.columber, alias.col) = alias.col ) alias.col group by alias.col, alias.col ) y order by alias.col desc"
"select table.id as alias.col, table.creatioalias.coldate as alias.col, table.commealias.colt from table left joialias.col table oalias.col table.postid = table.id where table.userid = alias.col aalias.cold table.closeddate = alias.col order by table.creatioalias.coldate desc"
"with talias.colalias.colle alias.cols ( select alias.collialias.cols.col alias.cols alias.collialias.cols.col , alias.collialias.cols.col alias.cols alias.collialias.cols.col, alias.collialias.cols.col alias.cols alias.collialias.cols.col union select alias.collialias.cols.col alias.cols alias.collialias.cols.col , alias.collialias.cols.col alias.cols alias.collialias.cols.col, alias.collialias.cols.col alias.cols alias.collialias.cols.col union select alias.collialias.cols.col alias.cols alias.collialias.cols.col , alias.collialias.cols.col alias.cols alias.collialias.cols.col, alias.collialias.cols.col alias.cols alias.collialias.cols.col union select alias.collialias.cols.col alias.cols alias.collialias.cols.col , alias.collialias.cols.col alias.cols alias.collialias.cols.col, alias.collialias.cols.col alias.cols alias.collialias.cols.col union select alias.collialias.cols.col alias.cols alias.collialias.cols.col , alias.collialias.cols.col alias.cols alias.collialias.cols.col, alias.collialias.cols.col alias.cols alias.collialias.cols.col union select alias.collialias.cols.col alias.cols alias.collialias.cols.col , alias.collialias.cols.col alias.cols alias.collialias.cols.col, alias.collialias.cols.col alias.cols alias.collialias.cols.col ) select alias.collialias.cols.col, alias.col, alias.col,c from (select alias.col from talias.colalias.colle) source pivot (malias.colalias.collialias.cols.col(alias.collialias.cols.col) for alias.collialias.cols.col in (alias.collialias.cols.colyz) )alias.cols alias"
"select top alias.col alias.col as [post lialias.colk], alias.col from table p where alias.col like alias.col + alias.col:strialias.colg## + alias.col order by p.alias.col asc"
"select alias.col as alias.col , body , creationdate , owneruseralias.col as [user link] from table where body like x"
"select alias.col(alias.col, alias.col, alias.colatealias.coliff(alias.col, alias.col, p.creatioalias.colalias.colate)), coualias.colt(*) from table p,table u where p.creatioalias.colalias.colate=u.creatioalias.colalias.colate group by alias.col(alias.col, alias.col, alias.colatealias.coliff(alias.col, alias.col, p.creatioalias.colalias.colate)) oralias.coler by alias.col(alias.col, alias.col, alias.colatealias.coliff(alias.col, alias.col, p.creatioalias.colalias.colate))"
"select top alias.col alias.col as [post lialias.colk] , body , creatioalias.coldate from table where body like x or alias.col = alias.col"
"declare alias.col ialias.colt = ##userid## select alias.col, coualias.colt(*) as uptable from table ialias.colalias.coler joialias.col posttable oalias.col posttable.tagid = table.id ialias.colalias.coler joialias.col table oalias.col table.parealias.coltid = posttable.postid ialias.colalias.coler joialias.col table oalias.col table.postid = table.id aalias.cold alias.col = alias.col where table.owalias.coleruserid = alias.col group by alias.col order by uptable desc"
select distialias.colct top alias.col alias.col as [post lialias.colk] from table as q ialias.colalias.coler joialias.col table ph oalias.col (alias.col = alias.col) where alias.col = alias.col aalias.cold alias.col >= alias.col aalias.cold ph.tabletypeid = alias.col aalias.cold ph.commealias.colt = alias.col
"create table table ( alias.col tealias.colt, alias.col ialias.colt ) ialias.colsert ialias.colto table (alias.col, alias.col) select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col select rc.alias.col, rc.alias.col, ( select coualias.colt(alias.col) from table u where u.reputatioalias.col >= rc.alias.col ) as usercoualias.colt from table rc"
"with usersaalias.colswerslatesttable as ( select alias.col as alias.col , max(table.creatioalias.coldate) as alias.col from table ialias.colalias.coler joialias.col table oalias.col table.postid = table.id where table.posttypeid = alias.col aalias.cold alias.col ialias.col (alias.col) group by table.alias.col ) select aalias.colswers.id as [post lialias.colk] , questioalias.cols.tags as alias.col , aalias.colswers.score as [aalias.colswer score] , questioalias.cols.aalias.colswercoualias.colt - alias.col as [# competialias.colg aalias.colswers] , users.reputatioalias.col as [alias.col aalias.colswers. this sets up a roughly circular queue:"
"select alias.col as alias.col, alias.col as alias.col, case whealias.col owalias.coleruseralias.col = alias.col thealias.col lasteditoruseralias.col else owalias.coleruseralias.col ealias.cold as [user lialias.colk], lastactivitydate, body from table where alias.col = alias.col"
"selealias.col avg(cast(alias.col(alias.col, alias.col) as bigialias.colt)) as useralias.col, avg(cast(table.score as float)) as averagequestioalias.colscore from table ialias.colalias.coler joialias.col table oalias.col (table.id = table.owalias.coleruserid) where alias.col = alias.col aalias.cold alias.col < alias.col group by alias.col(alias.col, alias.col) order by useralias.col"
"select top alias.col alias.col uid, c.id cc from table u joialias.col table c oalias.col alias.col = alias.col"
"declare table table( alias.col varchar(n) not null, name varchar(n) not null, answer varchar(n) not null ) insert into table values (alias.colyz) insert into table values (alias.colyz) insert into table values (alias.colyz) insert into table values (alias.colyz) select alias.col from table select name, maalias.col(case alias.col when alias.col then alias.col end) alias.col, maalias.col(case alias.col when alias.col then alias.col end) alias.col from table group by name"
select alias.col from table where table.id=alias.col
"declare alias.col int = ##userid## declare @badgen int = n declare @badgen int = n declare @badgen int = n declare alias.col int select alias.col = count(*) from table h where alias.col = alias.col and alias.col not in (select alias.col from table p where alias.col = alias.col and alias.col = alias.col) declare alias.col int = case when (@badgen - alias.col) < n then n else @badgen - alias.col end declare alias.col int = case when (@badgen - alias.col) < n then n else @badgen - alias.col end declare alias.col int = case when (@badgen - alias.col) < n then n else @badgen - alias.col end select alias.col as alias.col, alias.col as alias.col, alias.col as alias.col, alias.col as alias.col, alias.col as alias.col"
"DECLARE @UserId int = ##UserId## ;WITH regionalranking AS (SELECT u.reputation, u.displayname, u.location, u.id, Rank() OVER (PARTITION BY u.location ORDER BY u.reputation DESC) rk FROM users u) SELECT rk, reputation, location, displayname FROM regionalranking WHERE ( id = @UserId OR @UserId = N ) ORDER BY location, rk"
"select top alias.col alias.col as [user lialias.colk], ( select coualias.colt(*) from table where alias.col < alias.col aalias.cold owalias.coleruseralias.col = table.alias.col ) as [dowalias.col voted] from table order by [dowalias.col voted] desc"
"declare alias.col ialias.colt = ##userid## select alias.col, alias.col, (case whealias.col alias.col >= alias.col thealias.col x else x ealias.cold) as capped from ( select table.alias.col, sum( case whealias.col alias.col=alias.col thealias.col alias.col whealias.col alias.col=alias.col thealias.col alias.col whealias.col alias.col=alias.col thealias.col alias.col else alias.col ealias.cold ) as alias.col from table ialias.colalias.coler joialias.col table oalias.col table.id=table.postid where table.owalias.coleruserid=alias.col aalias.cold alias.col ialias.col (alias.col) group by table.alias.col ) as alias.colperday order by alias.col desc"
"declare @UserId int = ##UserId##; declare @OtherId int = ##OtherId##; with fights as ( select myAnswer.ParentId as Question, myAnswer.Score as MyScore, otherAnswer.Score as OtherScore from Posts as myAnswer inner join Posts as otherAnswer on otherAnswer.OwnerUserId = @OtherId and myAnswer.ParentId = otherAnswer.ParentId where myAnswer.ownerUserId = @UserId and myAnswer.postTypeId = N ) select case when myScore > OtherScore then X when myScore < OtherScore then X else X end as X, Question as [Post Link], myScore as X, otherScore as X from fights;"
"declare @site varchar (n), @name varchar(n) declare @alias.colalias.col_ealias.colported int, @alias.colalias.col_meta int, @alias.colalias.col_se int set @name = db_name() set @site = alias.col set @alias.colalias.col_ealias.colported = patindealias.col(alias.col, @name) set @alias.colalias.col_meta = patindealias.col(alias.col, @name) set @alias.colalias.col_se = patindealias.col(alias.col, @name) if @alias.colalias.col_se = n if @alias.colalias.col_meta = n set @site=substring(@name, n, @alias.colalias.col_ealias.colported - n) + alias.col else set @site=alias.col + substring(@name, n, @alias.colalias.col_meta - n) + alias.col else if @alias.colalias.col_meta = n set @site=substring(@name, n, @alias.colalias.col_ealias.colported - n) else set @site=alias.col + substring(@name, n, @alias.colalias.col_meta - n) set @site = alias.col + lower(@site) + alias.col select alias.col+convert(varchar,alias.col)+alias.col+convert(varchar,alias.col) alias.col, postalias.col as alias.col, comment, creationdate, alias.col from table where owneruseralias.col = ##useralias.col## and alias.col is not null order by alias.col desc"
"select top alias.col alias.col, alias.col, alias.col, viewcoualias.colt from table where alias.col >= ##mialias.colalias.col:ialias.colt##"
"with userspeakhour as ( selealias.col alias.col, alias.col (avg (f.comtimefloat) / n.n, n) as avghour from ( selealias.col alias.col, alias.col, cast ( replace ( cast (cast (alias.col as time(n) ) as char(n) ) , x, x ) as float ) as comtimefloat from table c ) as f group by alias.col ) selealias.col table, count (u.userid) as [num users] from userspeakhour u group by table order by table"
"select alias.col, coualias.colt(alias.col) as alias.col from ( select alias.col, alias.col(day, alias.col, alias.col) as alias.col from ( select questioalias.cols.alias.col as alias.col, alias.col as alias.col, coualias.colt(alias.col) as alias.col, mialias.col(alias.col) as alias.col from table as aalias.colswers ialias.colalias.coler joialias.col ( select alias.col as post_alias.col, alias.col, alias.col from table ialias.colalias.coler joialias.col ( select alias.col as alias.col from table where alias.col = (select alias.col from table where alias.col = alias.col) ) alias.cols oalias.col alias.cols.alias.col = table.alias.col where posttypealias.col = alias.col ) questioalias.cols oalias.col aalias.colswers.parealias.coltalias.col = questioalias.cols.alias.col where aalias.colswers.posttypealias.col = alias.col group by questioalias.cols.alias.col, questioalias.cols.alias.col, alias.col ) aalias.colswer_data ) aalias.colswer_timialias.colg group by alias.col order by alias.col"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... order by alias.col desc;"
"select alias.col as alias.col, alias.col, alias.col from table where alias.col=alias.col aalias.cold alias.col > alias.col order by alias.col desc"
"declare table table (alias.col ialias.colt, postcoualias.colt ialias.colt) ialias.colsert table selealias.col top alias.col alias.col = table.alias.col, postcoualias.colt = coualias.colt(table.alias.col) from table ialias.colalias.coler joialias.col table oalias.col table.alias.col = table.owalias.coleruseralias.col group by table.alias.col, table.alias.colutatioalias.col order by table.alias.colutatioalias.col desc declare table table (alias.col ialias.colt, alias.col ialias.colt, ualias.colcapped ialias.colt) ialias.colsert table selealias.col top alias.col alias.col = table.alias.col, alias.col = table.alias.colutatioalias.col, ualias.colcapped = sum(case whealias.col votetypealias.col = alias.col thealias.col boualias.coltyamoualias.colt whealias.col table.creatioalias.coldate > table.commualias.colityowalias.coleddate thealias.col alias.col whealias.col votetypealias.col = alias.col thealias.col alias.col whealias.col votetypealias.col = alias.col aalias.cold posttypealias.col = alias.col thealias.col alias.col whealias.col votetypealias.col = alias.col aalias.cold posttypealias.col = alias.col thealias.col alias.col whealias.col votetypealias.col = alias.col thealias.col alias.col ealias.cold) from table ialias.colalias.coler joialias.col table oalias.col table.alias.col = table.postalias.col ialias.colalias.coler joialias.col table oalias.col table.alias.col = table.owalias.coleruseralias.col group by table.alias.col, table.alias.colutatioalias.col order by table.alias.colutatioalias.col desc selealias.col top alias.col t.alias.col as [user lialias.colk], p.postcoualias.colt as [table], t.alias.col as [alias.col], t.ualias.colcapped as [ualias.colcapped alias.col], t.ualias.colcapped - t.alias.col as [alias.col lost], cast(alias.col. * (t.ualias.colcapped - t.alias.col) / t.alias.col as decimal(alias.col, alias.col)) as [peralias.colalias.colt lost], cast(alias.col.alias.col * t.alias.col / p.postcoualias.colt as decimal(alias.col, alias.col)) as [alias.col / post], cast(alias.col.alias.col * t.ualias.colcapped / p.postcoualias.colt as decimal(alias.col, alias.col)) as [ualias.colcapped alias.col / post] from table t left outer joialias.col table p oalias.col t.alias.col = p.alias.col order by [peralias.colalias.colt lost] desc"
"selealias.col alias.col + cast(alias.col as alias.colvarchar) + alias.col + alias.col as alias.col, alias.col as alias.col, alias.col as alias.col from table as palias.col, table as palias.col where alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold palias.col.owalias.coleruserid = alias.col## aalias.cold alias.col = alias.col aalias.cold alias.col like alias.col+ alias.col:strialias.colg## +alias.col aalias.cold alias.col betweealias.col ##mialias.colscore:ialias.colt?alias.col## aalias.cold ##maalias.colscore:ialias.colt## aalias.cold ( ( ##acceptedaalias.colswer:ialias.colt?alias.col## = alias.col aalias.cold alias.col = palias.col.acceptedaalias.colswerid ) or ( ##acceptedaalias.colswer## = alias.col ) )"
"select top alias.col table.userid, coualias.colt(distialias.colct table.owalias.coleruserid) from table, table, table where table.postid = table.id aalias.cold table.userid = table.id group by table.userid"
"select top alias.col alias.col, displayalias.colame, reputatioalias.col, alias.col, locatioalias.col from table where lower(locatioalias.col) like x or upper(locatioalias.col) like x ... or locatioalias.col like x or lower(locatioalias.col) like x ... or upper(locatioalias.col) like x ... or locatioalias.col like x order by reputatioalias.col desc"
"select top alias.col alias.col as [post lialias.colk], alias.col, a.creatioalias.coldate from table as a ialias.colalias.coler joialias.col table as q oalias.col a.parealias.coltid = alias.col ialias.colalias.coler joialias.col table as ph oalias.col alias.col = alias.col where ph.tabletypeid != alias.col aalias.cold alias.col(day, q.creatioalias.coldate, a.creatioalias.coldate) > alias.col aalias.cold alias.col = alias.col group by alias.col, alias.col, a.creatioalias.coldate order by a.creatioalias.coldate desc"
"select alias.col as alias.col, alias.col, alias.col as alias.col from table a, table p where alias.col = alias.col## aalias.cold alias.col = alias.col aalias.cold p.acceptedaalias.colswerid is alias.colull aalias.cold alias.col = a.parealias.coltid order by alias.col desc"
"select row_alias.columber() over (order by alias.col desc), tagalias.colame, alias.col from ( select top alias.col alias.col, coualias.colt(*) as alias.col from table group by alias.col order by coualias.colt(*) desc ) x joialias.col table oalias.col table.id = alias.col"
"set alias.colocoualias.colt oalias.col declare alias.col datetime select alias.col = max(alias.col) from table declare @igalias.coloredays alias.columeric = alias.col declare @mialias.colagedays alias.columeric = alias.col declare @tabletats table (alias.col ialias.colt, alias.col ialias.colt, dowalias.col ialias.colt, alias.col datetime, owalias.coleruserid ialias.colt) ialias.colsert @tabletats select alias.col, alias.col = sum(case whealias.col alias.col = alias.col thealias.col case whealias.col p.parealias.coltid is alias.colull thealias.col alias.col else alias.col ealias.cold else alias.col ealias.cold), dowalias.col = sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold), p.alias.col, p.owalias.coleruserid from table v joialias.col table p oalias.col alias.col = alias.col where v.alias.col ialias.col (alias.col) aalias.cold p.commualias.colityowalias.coleddate is alias.colull aalias.cold alias.col(day, p.alias.col, v.alias.col) > @igalias.coloredays aalias.cold alias.col(day, p.alias.col, alias.col) > @mialias.colagedays groalias.col by alias.col, p.alias.col, p.parealias.coltid, p.owalias.coleruserid set alias.colocoualias.colt off select top alias.col alias.col as [post lialias.colk], owalias.coleruserid as [user lialias.colk], roualias.cold(coalias.colvert(decimal(alias.col,alias.col), alias.col - dowalias.col)/(alias.col(day, vs.alias.col, alias.col) - @igalias.coloredays),alias.col) as [passive rep per day], (alias.col - dowalias.col) as [passive rep], alias.col(day, vs.alias.col, alias.col) - @igalias.coloredays as [days coualias.colted] from @tabletats vs order by [passive rep per day] desc"
"select row_number() over(order by table.alias.col desc) as [no], table.alias.col as [user link], table.age, table.location, alias.col.alias.col, table.alias.col from table inner join ( select alias.col, sum(alias.col) as alias.col from table where alias.col in ( select alias.col from table where lower(location) like x or upper(location) like x ... ) and ( lower(tags) like x or upper(tags) like x ... ) group by alias.col ) as alias.col on table.alias.col = alias.col.alias.col order by alias.col desc"
"select top alias.col## row_number() over(order by alias.col desc) as [#], id as [user link], alias.col, location from table where ( lower(location) like lower(x) or location like upper (x) ) and not ( lower(location) like x ) and len(location) > n order by alias.col desc;"
selealias.col top (alias.col) alias.col from table p where cast(creatioalias.colalias as alias) =alias.col order by alias.col
"select alias.col as alias.col, max(alias.col) as alias.col, max(alias.col) as alias.col, count(*) as alias.col, max(alias.col(minute, a.creationdate, b.creationdate)) as [time to first outscorer] from table q, table a, table b where alias.col = alias.col and alias.col = alias.col and alias.col > alias.col group by alias.col order by max(alias.col) desc"
"select table.alias.col, count(table.id) as alias.col from table left join table on table.id = table.postid left join table on table.tagid = table.id where alias.col is not null group by table.alias.col order by alias.col desc"
"declare alias.col datetime declare @inputdate varchar(n) set @inputdate = ##mydate## set alias.col = convert(datetime, @inputdate) select alias.col select alias.col from table where alias.col > alias.col and alias.col < alias.col(day, n, alias.col)"
"select alias.col as alias.col , coualias.colt(*) from table where tabletypeid = alias.col group by alias.col order by coualias.colt(*) desc"
select alias.col from table where alias.col = alias.col aalias.cold (alias.colame = alias.col or alias.colame = alias.col)
declare @UserId int = ##UserId##; select distinct p.Id [Post Link] from PostHistory ph join Posts p on p.Id = ph.PostId where ph.UserId = @UserId and ph.UserId <> p.OwnerUserId
"select alias.col as alias.col, body from table where body like x order by alias.col desc"
"select case whealias.col alias.col = alias.col thealias.col x else x ealias.cold as [mialias.cole] , case whealias.col theirs.votetypeid = alias.col thealias.col x else x ealias.cold as [theirs] , coualias.colt(*) from table mialias.cole ialias.colalias.coler joialias.col table theirs oalias.col alias.col = mialias.cole.suggestededitid where mialias.cole.userid = alias.col aalias.cold alias.col <> mialias.cole.id group by alias.col ,theirs.votetypeid"
"with totaltable as ( selealias.col cast(coutablet(*) as float) as coutablet from table where alias.col = table atabled atableswercoutablet >= table ) selealias.col atableswercoutablet - alias.col as [atableswercoutablet - alias.col], coutablet(*) as [#questiotables], routabled(table.table * coutablet(*) / (selealias.col coutablet from totaltable), table) as [] from table where alias.col = table atabled atableswercoutablet >= table group by atableswercoutablet - alias.col havitableg coutablet(*) > table order by atableswercoutablet - alias.col"
select alias.col go select alias.col as alias.col select alias.col as [alias.col]
"select table.id as alias.col, table.score as alias.col, table.tags as alias.col from table, table where (table.postid=table.id) aalias.cold (table.votetypeid = alias.col) aalias.cold (table.userid=alias.col:ialias.colt##) aalias.cold (table.tags like alias.col ...) order by table.score desc"
select top(alias.col) table.* from table joialias.col table oalias.col table.postid = table.id order by table.score desc
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where location like x and alias.col >= n order by alias.col desc;"
"select top alias.col table.id as [user lialias.colk], table.reputatioalias.col as alias.col, sum(table.score)*alias.col + coualias.colt(table.acceptedaalias.colswerid)*alias.col as [questioalias.col rep] from table ialias.colalias.coler joialias.col table oalias.col table.owalias.coleruserid = table.id where table.posttypeid = alias.col aalias.cold table.commualias.colityowalias.coleddate is alias.colull group by table.reputatioalias.col, table.id order by [questioalias.col rep] desc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col, location from table where lower(location) like x and aboutme like x order by alias.col desc;"
"select avg(alias.col) from( select coalias.colvert(date, alias.col) as alias.col, coualias.colt(*) as alias.col from table p joialias.col table pt oalias.col alias.col = alias.col aalias.cold alias.col = alias.col where p.owalias.coleruserid = alias.col## group by coalias.colvert(date, alias.col)) tmp;"
"select top alias.col talias.col.tagalias.colame as [tag lialias.colk], talias.col.tagalias.colame as [tag lialias.colk], coualias.colt(ptalias.col.postid) as [post coualias.colt] from table ptalias.col joialias.col table ptalias.col oalias.col ptalias.col.postid = ptalias.col.postid joialias.col table talias.col oalias.col talias.col.id = ptalias.col.tagid joialias.col table talias.col oalias.col talias.col.id = ptalias.col.tagid where talias.col.tagalias.colame < talias.col.tagalias.colame group by talias.col.tagalias.colame, talias.col.tagalias.colame order by coualias.colt(ptalias.col.postid) desc"
"declare alias.col datetime select alias.col = max(alias.col) from table select table , table from table p join table v on alias.col = table where alias.col( day , p.alias.col , alias.col ) > n and p.score < n"
"select alias.col as alias.col, alias.col as alias.col,alias.col from table where body like alias.col and alias.col like alias.col order by alias.col desc"
"select sum(alias.col) as alias.col , sum(alias.col) as alias.col , sum(alias.col) as alias.col from ( select sum(alias.col) as alias.col, alias.col as alias.col, alias.col as alias.col from table p ualias.colioalias.col select alias.col , sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as alias.col , sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as alias.col from table p ialias.colalias.coler joialias.col table v oalias.col alias.col = alias.col ) as alias.col"
"select top alias.col t.tagalias.colame, coualias.colt(*) from table p joialias.col table t oalias.col alias.col = alias.col group by t.tagalias.colame order by coualias.colt(*) desc"
select alias.col as alias.col from table q inner join table a on alias.col = alias.col where alias.col = alias.col## and alias.col = alias.col##
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... order by alias.col desc;"
"declare @alias.col ialias.colt = ##alias.col## select top(alias.col) table.id as [post lialias.colk], table.text, table.alias.col from table ialias.colalias.coler joialias.col table oalias.col table.id = table.postid where alias.col = @alias.col order by alias.col desc"
"declare alias.col ialias.colt = ##userid## select table.owalias.colerdisplayalias.colame, table.userid as alias.col, table.id as alias.col from table left joialias.col table oalias.col table.id = table.postid where alias.col=alias.col aalias.cold table.owalias.coleruserid=alias.col"
"with table as ( select alias.col, ( select coualias.colt(*) as alias.col from table pt joialias.col table pp oalias.col alias.col = alias.col joialias.col table pa oalias.col alias.col = alias.col joialias.col table v oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col ) as uptable, ( select coualias.colt(*) as alias.col from table pt joialias.col table pp oalias.col alias.col = alias.col joialias.col table pa oalias.col alias.col = alias.col joialias.col table v oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col ) as dowalias.coltable from table t cross apply ( select coualias.colt(*) as alias.col from table pt where alias.col = alias.col havialias.colg coualias.colt(*) >= alias.col ) pt ) select tagalias.colame as [table], uptable as [uptable], dowalias.coltable as [dowalias.coltable], (alias.col * dowalias.coltable / (alias.colullif(dowalias.coltable, alias.col)+alias.colullif(uptable, alias.col))) as alias.col from table order by alias.col desc"
"select coualias.colt(alias.col) as alias.col, sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as [scored aalias.colswers], sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as [ualias.colscored aalias.colswers], sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold)*alias.col / coualias.colt(alias.col) / alias.col.alias.col as [peralias.colalias.coltage ualias.colscored] from table q ialias.colalias.coler joialias.col table a oalias.col alias.col = q.acalias.colptedaalias.colswerid where a.commualias.colityowalias.coleddate is alias.colull aalias.cold a.owalias.coleruserid = ##userid## aalias.cold q.owalias.coleruserid != ##userid## aalias.cold a.posttypeid = alias.col"
"select year(alias.col) as alias.col, month(alias.col) as alias.col, count(*) as [questionsaskedthismonth] from table p inner join table pt on alias.col = alias.col inner join table t on alias.col = alias.col group by year(alias.col), month(alias.col) with rollup order by year(alias.col), month(alias.col) desc"
"select count(alias.col), count(acceptedansweralias.col) from table;"
"select alias.col, max(alias.col) from table p inner join table pt on alias.col = alias.col inner join table t on alias.col = alias.col group by alias.col"
"declare @alias.col int = ##alias.col## select alias.col, text from table where alias.col = @alias.col order by alias.col desc"
"declare alias.col int = ##userid## declare @badgen int = n declare @badgen int = n declare @badgen int = n declare alias.col int select alias.col = count(*) from table p join table h on alias.col = alias.col where alias.col != alias.col and alias.col = alias.col declare alias.col int = case when (@badgen - alias.col) < n then n else @badgen - alias.col end declare alias.col int = case when (@badgen - alias.col) < n then n else @badgen - alias.col end declare alias.col int = case when (@badgen - alias.col) < n then n else @badgen - alias.col end select alias.col as alias.col, alias.col as alias.col, alias.col as alias.col, alias.col as alias.col"
select alias.col as lastupdate from table where alias.col = (select max(alias.col) from table)
"declare @userid int = ##userid## select alias.col, count(*) as alias.col, sum(case when q.acalias.colptedanswerid = alias.col then n else n end) as numacalias.colpted, (sum(case when q.acalias.colptedanswerid = alias.col then n else n end)*n.n/count(*)) as acalias.colptedperalias.colnt from table a inner join table u on alias.col = alias.col inner join table q on alias.col = alias.col inner join table pt on alias.col = alias.col inner join table t on alias.col = alias.col where (alias.col <> alias.col or alias.col is null) and alias.col = @userid group by alias.col order by acalias.colptedperalias.colnt desc, alias.col desc"
"select top alias.col alias.col as [user lialias.colk], coualias.colt(*) as [badge coualias.colt] from table where alias.colame = alias.col group by alias.col order by [badge coualias.colt] desc;"
"select row_number() over(order by alias.col desc), * from table where lower(location) like x"
"select coalias.colvert( datetime, coalias.colvert( varchar(alias.col), p.creatioalias.coldate, alias.col ) + alias.col ) as moalias.colth , coalias.colvert( float, avg( p.viewcoualias.colt ) ) as alias.col , idealias.coltity( ialias.colt ) as id ialias.colto #alias.col from table p where alias.col = alias.col aalias.cold p.creatioalias.coldate betweealias.col alias.col aalias.cold alias.col group by coalias.colvert( varchar(alias.col), p.creatioalias.coldate, alias.col ) + alias.col order by alias.col desc declare @mialias.colscore float select @mialias.colscore = mialias.col( alias.col ) from #alias.col update #alias.col set alias.col = @mialias.colscore / alias.col select moalias.colth , alias.col from #alias.col order by alias.col"
"select top alias.col a.parealias.coltid as [post lialias.colk], coualias.colt(alias.col), q.viewcoualias.colt, q.creatioalias.coldate from table a ialias.colalias.coler joialias.col table q oalias.col (alias.col = a.parealias.coltid) where alias.col = alias.col aalias.cold lealias.col(alias.col) <= alias.col aalias.cold (alias.col like alias.col) aalias.cold q.viewcoualias.colt < alias.col group by a.parealias.coltid, q.viewcoualias.colt, q.creatioalias.coldate havialias.colg coualias.colt(alias.col) > alias.col order by coualias.colt(alias.col) desc;"
"select alias.col as alias.col, alias.col, alias.col, alias.col, lastaccessdate, table = ( select top alias.col tagalias.colame from table ialias.colalias.coler joialias.col posttable oalias.col posttable.tagalias.col = table.alias.col ialias.colalias.coler joialias.col table oalias.col table.parealias.coltalias.col = posttable.postalias.col ialias.colalias.coler joialias.col table oalias.col table.postalias.col = table.alias.col aalias.cold votetypealias.col = alias.col where table.owalias.coleruseralias.col = u.alias.col group by tagalias.colame order by coualias.colt(*) desc for xml path(x) ) from table u where locatioalias.col like x + ##locatioalias.col:strialias.colg## + x order by alias.col desc"
"select alias.col, alias.col as alias.col from table where alias.col = alias.col:alias.col aalias.cold posttypealias.col = alias.col ualias.colioalias.col select alias.col, alias.col as alias.col from table where parealias.coltalias.col = alias.col aalias.cold posttypealias.col = alias.col ualias.colioalias.col select alias.col, alias.col from table where postalias.col = alias.col ualias.colioalias.col select alias.col, c.alias.col from table c ialias.colalias.coler joialias.col table p oalias.col c.postalias.col = p.alias.col where p.parealias.coltalias.col = alias.col"
"select top alias.col alias.col, displayalias.colame, reputatioalias.col, alias.col, locatioalias.col from table where locatioalias.col like alias.colx or locatioalias.col like alias.colx or locatioalias.col like alias.colx or locatioalias.col like alias.colx or (locatioalias.col like alias.colx aalias.cold locatioalias.col alias.colot like alias.colx) order by reputatioalias.col desc"
"select alias.colame, alias.col as alias.col from table joialias.col table oalias.col alias.col = table.id aalias.cold alias.col = alias.col where alias.col = ##alias.col##"
"select coualias.colt(*) from table joialias.col table as owalias.coler oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold aalias.colswercoualias.colt > alias.col aalias.cold acceptedaalias.colswerid is alias.colull aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold owalias.coler.lastaccessdate <= dateadd(mm, alias.col, getdate())"
"select top alias.col alias.col as [post lialias.colk] from table p ialias.colalias.coler joialias.col table u oalias.col p.owalias.coleruserid = alias.col where alias.col = alias.col aalias.cold p.viewcoualias.colt < alias.col aalias.cold alias.col < alias.col aalias.cold p.aalias.colswercoualias.colt = alias.col aalias.cold u.lastaccessdate < alias.col(moalias.colth, alias.col, getdate()) order by year(p.lastactivitydate), moalias.colth(p.lastactivitydate), alias.col, p.viewcoualias.colt"
"select alias.col, alias.col as alias.col, alias.col, alias.col from table where posttypealias.col = alias.col aalias.cold (alias.col like alias.col or alias.col like alias.col or alias.col like alias.col) aalias.cold alias.col betweealias.col alias.col aalias.cold alias.col aalias.cold acceptedaalias.colsweralias.col is alias.colull aalias.cold (select isalias.colull(maalias.col(alias.col),alias.col) from table aalias.colswers where posttypealias.col = alias.col aalias.cold parealias.coltalias.col = table.alias.col) <= alias.col aalias.cold alias.col is alias.colull aalias.cold alias.colot ealias.colists (select alias.col from table aalias.colswers where owalias.coleruseralias.col = alias.col aalias.cold posttypealias.col = alias.col aalias.cold parealias.coltalias.col = table.alias.col) aalias.cold alias.col(alias.col,alias.col,alias.col()) >= alias.col order by alias.col"
"set alias.colocoualias.colt oalias.col create table table (alias.col ialias.colt alias.colealias.coltity, [start] datetime, [fialias.colish] datetime) ialias.colsert table select top alias.col alias.colull, alias.colull from table declare alias.col datetime select alias.col = creatioalias.coldate from table where alias.col = (select max(palias.col.alias.col) from table palias.col) update table set [start] = dateadd(d, (alias.col - alias.col) * alias.col, alias.col), [fialias.colish] = dateadd(d, (alias.col - alias.col) * alias.col, alias.col) select start, (select coualias.colt(*) from table where parealias.coltalias.col is alias.colull aalias.cold creatioalias.coldate betweealias.col [start] aalias.cold [fialias.colish] ) as [total questioalias.cols], (select coualias.colt(*) from table where parealias.coltalias.col is alias.colot alias.colull aalias.cold creatioalias.coldate betweealias.col [start] aalias.cold [fialias.colish] ) as [total aalias.colswers] from table"
select top alias.col aalias.colswers.creatioalias.coldate - table.creatioalias.coldate from table ialias.colalias.coler joialias.col table aalias.colswers oalias.col table.acceptedaalias.colswerid = aalias.colswers.id order by aalias.colswers.creatioalias.coldate - table.creatioalias.coldate
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or lower(location) like x ... order by alias.col desc;"
"select alias.col alias.col, body from table where posttypealias.col = alias.col aalias.cold creatioalias.coldate betweealias.col x aalias.cold coalias.colvert(datetime, dateadd(day, ##days?alias.col##, x)) aalias.cold ( body like x or body like x or body like x )"
"declare @alias.col ialias.colt = alias.col select top alias.col alias.col as [post lialias.colk], alias.col, tealias.colt from table where alias.col = @alias.col aalias.cold alias.col = alias.col aalias.cold creatioalias.coldate >= alias.col order by alias.col"
"select toalias alias.col alias.col as [aliasost lialias.colk], alias.col, alias.creatioalias.coldate from table as alias where alias.col like alias.col + ##tagalias.colame:strialias.colg## + alias.col aalias.cold alias.col = alias.col aalias.cold alias.col is alias.colull order by alias.creatioalias.coldate asc"
"selealias.col top alias.col alias.col as [post lialias.colk], alias.colcoualias.colt, cast(coalias.colvert(ialias.colt, cast(alias.colcoualias.colt as float) * alias.col) as varchar(alias.col)) + alias.col as alias.col, cast(alias.colcoualias.colt as varchar(alias.col)) + alias.col as alias.col from table where posttypealias.col=alias.col aalias.cold owalias.coleruseralias.col=##useralias.col:ialias.colt## aalias.cold alias.colcoualias.colt > alias.col order by alias.colcoualias.colt desc"
select coualias.colt(alias.col) as alias.col from table as q where alias.col = alias.col aalias.cold alias.col is alias.colull aalias.cold q.tags like x aalias.cold q.acceptedaalias.colswerid is alias.colot alias.colull
select body from table where body like x and owneruserid = n
"with table as ( select alias.col as alias.col, coualias.colt(distialias.colct alias.col) as [table], coualias.colt(distialias.colct alias.col) as [questioalias.cols], roualias.cold(coualias.colt(distialias.colct alias.col) alias.col table / coualias.colt(distialias.colct alias.col),alias.col) as [average alias.columber of questioalias.cols per user] from table u ialias.colalias.coler joialias.col table p oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table pt oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table t oalias.col alias.col = alias.col where alias.col = alias.col group by alias.col, alias.col havialias.colg coualias.colt(distialias.colct alias.col) > alias.col ) select alias.col from ( select top alias.col alias.col from table order by [average alias.columber of questioalias.cols per user] ualias.colioalias.col select table, table, table, table ualias.colioalias.col select top alias.col alias.col from table order by [average alias.columber of questioalias.cols per user] desc ) sq order by [average alias.columber of questioalias.cols per user] desc;"
"select top alias.col lealias.col(body) as x, id as [post lialias.colk], body as x, creatioalias.coldate as x from table where alias.col = alias.col or alias.col = alias.col order by lealias.col(body) asc"
"DECLARE @ShowScore INT = N; DECLARE @TagN varchar(N) = X; DECLARE @TagN varchar(N) = X; DECLARE @TagN varchar(N) = X; DECLARE @TagN varchar(N) = X; DECLARE @TagN varchar(N) = X; DECLARE @TagN varchar(N) = X; DECLARE @TagN varchar(N) = X; DECLARE @TagN varchar(N) = X; DECLARE @TagN varchar(N) = X; WITH QuestStatsByMonth AS ( SELECT DATEADD (month, DATEDIFF (month, N, q.CreationDate), N) AS [Month], t.TagName, SUM (q.Score) AS TotalScore, COUNT (q.Id) AS NumQuests FROM Posts q INNER JOIN PostTags pt ON q.Id = pt.PostId INNER JOIN Tags t ON t.Id = pt.TagId WHERE q.PostTypeId = N AND t.TagName IN (XYZ) GROUP BY DATEADD (month, DATEDIFF (month, N, q.CreationDate), N), t.TagName ) SELECT q.[Month], CASE @ShowScore WHEN N THEN q.TagName + X ELSE q.TagName + X END AS [Tag], CASE @ShowScore WHEN N THEN SUM (h.TotalScore) ELSE SUM (h.NumQuests) END AS Cumulative FROM QuestStatsByMonth q LEFT JOIN QuestStatsByMonth h ON h.[Month] <= q.[Month] AND h.TagName = q.TagName GROUP BY q.[Month], q.TagName ORDER BY q.[Month], q.TagName"
"select alias.col alias.col, case whealias.col alias.col = alias.col thealias.col x else x ealias.cold, coualias.colt(distialias.colct alias.col) from table joialias.col table p oalias.col alias.col = alias.col where tabletypeid ialias.col (alias.col) aalias.cold alias.col ialias.col (alias.col) group by alias.col, alias.col order by alias.col, coualias.colt(distialias.colct alias.col) desc"
"selealias.col alias.col, count(alias.col) from ( selealias.col cast( cast(alias.col(alias.col, alias.col) as varchar) + alias.col + cast(alias.col(alias.col, alias.col) as varchar) + alias.col as date) month, alias.col from table p join table pt on alias.col = alias.col join table t on alias.col = alias.col where alias.col in (alias.colyz) ) as alias.col where month between cast(alias.col as date) and cast(alias.col as date) group by tagname, month order by month asc, count(alias.col) desc"
"select top alias.col row_alias.columber() over(order by reputatioalias.col desc) as [#], id as [user lialias.colk], reputatioalias.col, locatioalias.col from table where lower(locatioalias.col) like x or upper(locatioalias.col) like x ... or locatioalias.col like x aalias.cold reputatioalias.col >= alias.col order by reputatioalias.col desc;"
";with allQs as ( select coalesce(parentid,id) as postid from posts p where owneruserid = ##userid:int?N## ) select id as [Post Link] , owneruserid as [User Link] , creationdate , score from posts p inner join allQs q on q.postid = coalesce(p.parentid , p.id)"
"select top alias.col tagalias.colame, ( select coualias.colt(*) falias.colom table as palias.col ialias.colalias.colealias.col joialias.col table as palias.col oalias.col palias.col.acceptedaalias.colswealias.colid = palias.col.id ialias.colalias.colealias.col joialias.col table as pt oalias.col palias.col.id = alias.col whealias.cole alias.col = table.id ) as alias.col falias.colom table oalias.coldealias.col by alias.col desc"
"(select alias.col, alias.colr = row_alias.columber() over(order by reputatioalias.col) from table)"
"select alias.col(moalias.colth,creatioalias.coldate) as moalias.colth, alias.col(year,creatioalias.coldate) as year, coualias.colt(id) as total from table where alias.col = alias.col group by alias.col(moalias.colth,creatioalias.coldate), alias.col(year,creatioalias.coldate) order by alias.col(year,creatioalias.coldate), alias.col(moalias.colth,creatioalias.coldate)"
"with table as ( select table.id as alias.col, sum(case whealias.col alias.col = alias.col thealias.col alias.col whealias.col alias.col = alias.col aalias.cold posttypeid = alias.col thealias.col alias.col whealias.col alias.col = alias.col aalias.cold posttypeid = alias.col thealias.col alias.col whealias.col alias.col = alias.col thealias.col alias.col whealias.col alias.col = alias.col thealias.col boualias.coltyamoualias.colt ealias.cold) as alias.col, sum(case whealias.col ((commualias.colityowalias.coleddate is alias.colot alias.colull aalias.cold table.creatioalias.coldate > commualias.colityowalias.coleddate) aalias.cold alias.col = alias.col aalias.cold posttypeid = alias.col) thealias.col alias.col whealias.col ((commualias.colityowalias.coleddate is alias.colot alias.colull aalias.cold table.creatioalias.coldate > commualias.colityowalias.coleddate) aalias.cold alias.col = alias.col aalias.cold posttypeid = alias.col) thealias.col alias.col whealias.col ((commualias.colityowalias.coleddate is alias.colot alias.colull aalias.cold table.creatioalias.coldate > commualias.colityowalias.coleddate) aalias.cold alias.col = alias.col) thealias.col alias.col ealias.cold) as alias.col from table ialias.colalias.coler joialias.col table oalias.col table.id = table.postid ialias.colalias.coler joialias.col table oalias.col table.id = table.owalias.coleralias.col group by table.id, table.reputatioalias.col ) select top alias.col table.id as [user lialias.colk], table.reputatioalias.col, alias.col, alias.col - alias.col as ualias.colcap, alias.col - table.reputatioalias.col as alias.col, alias.col from table ialias.colalias.coler joialias.col table oalias.col table.id = alias.col order by ualias.colcap desc"
"select top alias.col questioalias.cols.id as [post lialias.colk], table as [view coualias.colt] from posts as questioalias.cols order by table desc"
"select alias.col as alias.col, alias.col, emailhash from table where alias.col = alias.col"
"select top alias.col:ialias.colt?alias.col mialias.col(alias.col) as alias.col,alias.col as alias.col,max(alias.col),coualias.colt(*) as coualias.colt from table q ialias.colalias.coler joialias.col table a oalias.col alias.col=alias.col where alias.col=alias.col aalias.cold alias.col=alias.col aalias.cold (alias.col is alias.colull or ##excludeclosed:ialias.colt?alias.col=alias.col) group by alias.col,alias.col order by coualias.colt(*) desc"
"selealias.col top alias.col alias.col as [user lialias.colk], alias.col, dowalias.colvotes, alias.col + dowalias.colvotes as alias.col, roualias.cold(cast(dowalias.colvotes as float) / cast(alias.col + dowalias.colvotes as float)*alias.col, alias.col) as percealias.coltagedowalias.col from table where alias.col + dowalias.colvotes > alias.col order by percealias.coltagedowalias.col desc"
"with table as ( select alias.col from table as p ialias.colalias.coler joialias.col table as pt oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold p.creatioalias.coldate >= alias.col ) select coualias.colt(*) as table, avg(alias.col) as alias.col, sum(case whealias.col alias.col is alias.colull thealias.col alias.col else alias.col ealias.cold) as alias.col from table as a left outer joialias.col table as p oalias.col p.acalias.colptedaalias.colswerid = alias.col select alias.col from table as b where alias.col = alias.col aalias.cold alias.col >= alias.col"
"declare @userid ialias.colt = ##userid## select alias.col(alias.col, (year(alias.col) - alias.col) * alias.col + moalias.colth(alias.col) - alias.col, alias.col) as moalias.colth, (sum(case whealias.col q.acceptedaalias.colswerid = a.id thealias.col alias.col else alias.col ealias.cold)*alias.col.alias.col/coualias.colt(*)) as acceptedpercealias.colt from table a ialias.colalias.coler joialias.col table u oalias.col alias.col = a.owalias.coleruserid ialias.colalias.coler joialias.col table q oalias.col a.parealias.coltid = alias.col where (q.owalias.coleruserid != alias.col or q.owalias.coleruserid is alias.colull) aalias.cold alias.col = @userid group by year(alias.col), moalias.colth(alias.col) order by year(alias.col), moalias.colth(alias.col)"
declare @useralias.col int = ##useralias.col## select (alias.col) as alias.col from table where alias.col = ##useralias.col##
"select top alias.col t.alias.colalias.colame as alias.col, coualias.colt(alias.col) as alias.col from table t joialias.col posttable pt oalias.col pt.alias.col = alias.col where t.alias.colalias.colame = alias.col group by alias.col, t.alias.colalias.colame order by alias.col"
"DECLARE @Threshold int = ##Threshold?N##; DECLARE @Questions int SET @Questions = (SELECT TOP N Count FROM ( SELECT TOP (@Threshold) Count FROM Tags ORDER BY Count DESC) a ORDER BY Count); WITH My_Table AS ( select t.Id AS Tag_ID, t.TagName AS Tag_Name, t.Count AS Count, p.Id AS Post_ID, p.Title AS Post_Title, p.PostTypeId AS Type, p.OwnerUserID AS Owner, max(t.Count) over (partition by p.Id) AS Max_Count from Tags t INNER JOIN PostTags pt on t.Id = pt.TagId INNER JOIN Posts p on pt.PostId = p.Id ) SELECT X + CAST(Post_ID AS nvarchar) + X + Post_Title AS Question, Tag_Name AS X, Max_Count AS XX FROM My_Table where Type = N AND Max_Count = Count AND Max_Count < @Questions ORDER BY Max_Count"
"select alias.col, body from table where alias.col = alias.col aalias.cold alias.col = alias.col"
"select top alias.col alias.col as [post lialias.colk], alias.col from table where posttypealias.col = alias.col aalias.cold creatioalias.coldate > alias.col(moalias.colth, alias.col, getdate()) order by alias.col asc"
"select alias.col, alias.col as alias.col, alias.col from table t left join table pe on alias.col = t.alias.col left join table pw on alias.col = alias.col left join tableynonyms ts on alias.col = alias.col where count = n and (wikipostid is null or (len(pe.body) < n and len(pw.body) < n)) and alias.col is null order by alias.col"
"with table as ( selealias.col cast(coutablet(*) as float) as coutablet from table where alias.col = table ), groupedtable as ( selealias.col alias.col, case whetable alias.col < table thetable x whetable alias.col = table thetable x whetable alias.col = table thetable x whetable alias.col = table thetable x whetable alias.col = table thetable x whetable alias.col = table thetable x whetable alias.col = table thetable x whetable alias.col <= table thetable x whetable alias.col <= table thetable x else x etabled as groupedalias.col, alias.col from table where alias.col = table ) selealias.col groupedalias.col, coutablet(*) as tableumquestiotables, routabled( coutablet(*)/(selealias.col coutablet from table) *table,table) as peralias.coltabletage from groupedtable group by groupedalias.col, alias.col order by alias.col"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col, location from table where lower(location) like x order by alias.col desc;"
"create table table (t int , filtertagname nvarchar(n) collate sql_latinn_general_cpn_cs_as); insert into table (t, filtertagname) values (xyz), (n, x), (n, x), (n, x), (n, x), (n, x), (n, x), (n, x), (n, x); declare @postcreatedafter smalldatetime set @postcreatedafter = dateadd(week, n, getdate()) select * from ( select tags.tagname ,(datediff(week,posts.creationdate, @postcreatedafter)*n) as weeksago ,count(posts.id) as nrofposts from tags inner join table on tags.tagname = table.filtertagname inner join posttags on tags.id = posttags.tagid inner join posts on posts.id = posttags.postid where posts.creationdate >= @postcreatedafter group by tags.tagname ,datediff(week,posts.creationdate, @postcreatedafter) ) src pivot ( sum(nrofposts) for weeksago in (xyz) ) piv"
"selealias.col top alias.col alias.col as [user lialias.colk], (cast(alias.col as float)/(reputatioalias.col/alias.col)) as [avg alias.col cast per alias.col reputatioalias.col poialias.colts gaialias.coled], reputatioalias.col, alias.col from table where reputatioalias.col > ##mialias.colimumrep## order by [avg alias.col cast per alias.col reputatioalias.col poialias.colts gaialias.coled] desc"
"select top alias.col t.tagalias.colame as alias.col, coualias.colt(distialias.colct alias.col) as [table], coualias.colt(distialias.colct alias.col) as [questioalias.cols], roualias.cold(coualias.colt(distialias.colct alias.col) * alias.col.alias.col / coualias.colt(distialias.colct alias.col),alias.col) as [average alias.columber of questioalias.cols per user] from table u ialias.colalias.coler joialias.col table p oalias.col alias.col = p.owalias.coleruserid ialias.colalias.coler joialias.col table pt oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table t oalias.col alias.col = alias.col where alias.col = alias.col group by alias.col, t.tagalias.colame order by coualias.colt(distialias.colct alias.col);"
"select top alias.col row_alias.columber() over(order by coualias.colt(*) desc) as raalias.colk, userid as [user lialias.colk], coualias.colt(*) as table from table where alias.colame=alias.col group by userid order by table desc"
"select table.id as alias.col, table.commealias.colt as alias.col from table ialias.colalias.coler joialias.col table oalias.col table.postid = table.id where table.tabletypeid=alias.col aalias.cold (upper(table.title) like alias.col ... escape alias.col or upper(table.title) like alias.col ... escape alias.col or upper(table.title) like alias.col ...)"
"select alias.col as alias.col, alias.col as alias.col, coualias.colt(alias.col) as alias.col from table palias.col, table palias.col, table palias.col where alias.col=alias.col aalias.cold palias.col.owalias.coleruserid=alias.col## aalias.cold palias.col.parealias.coltid=alias.col aalias.cold palias.col.acceptedaalias.colswerid is alias.colull aalias.cold palias.col.parealias.coltid=alias.col group by alias.col, alias.col order by alias.col"
"select alias.col, alias.col, alias.col, alias.col from table otrt"
"selealias.col (cast(alias.col(year, p.creatioalias.coldate) as alias) + (alias.col(moalias.colth, p.creatioalias.coldate) / alias.col.alias.col)), coualias.colt(*) as questioalias.cols, coualias.colt(p.closeddate) as closed_questioalias.cols, sum(p.score*alias.col.alias.col) as total_score, sum(p.aalias.colswercoualias.colt*alias.col.alias.col) as total_aalias.colswers, sum(p.commealias.coltcoualias.colt*alias.col.alias.col) as total_commealias.colt, sum(p.favoritecoualias.colt * alias.col.alias.col) as total_favorite from table p joialias.col table palias.col oalias.col alias.col = alias.col joialias.col table pt oalias.col alias.col = alias.col joialias.col table t oalias.col alias.col = alias.col where alias.col = alias.col:alias.col aalias.cold alias.col = alias.col aalias.cold p.creatioalias.coldate > alias.col group by (cast(alias.col(year, p.creatioalias.coldate) as alias) + (alias.col(moalias.colth, p.creatioalias.coldate) / alias.col.alias.col))"
"DECLARE @TagN nvarchar(N) = X; DECLARE @TagN nvarchar(N) = X; DECLARE @TagN nvarchar(N) = X; DECLARE @TagN nvarchar(N) = X; SELECT TOP N p.Id as [Post Link], u.Reputation, p.Score, p.ViewCount, p.Tags FROM Posts p Left JOIN Posts pN ON p.Id = pN.ParentId INNER JOIN Users u ON p.OwnerUserId = u.Id INNER JOIN PostTags ON p.Id = PostTags.PostId INNER JOIN Tags ON PostTags.TagId = Tags.Id WHERE p.PostTypeId = N AND pN.ParentId is NULL AND p.CreationDate >= X AND p.Score > N AND p.AcceptedAnswerId is null AND p.ClosedDate is null AND Tags.TagName in (XYZ) ORDER BY p.ViewCount desc, p.Score desc, p.PostTypeId desc"
"select top alias.col alias.col, displayalias.colame, reputatioalias.col, alias.col, locatioalias.col from table where locatioalias.col like alias.colx order by reputatioalias.col desc"
"select alias.col as alias.col , count(table.id) as alias.col , alias.col(hour, min(table.creationdate), max(table.creationdate)) as [span (hours)] , round(count(table.id) / (n.n + alias.col(second, min(table.creationdate), max(table.creationdate)) / n.n), n) as [per hour] , count(distinct table.userid) as participants , cast(avg(cast(table.score as float)) as numeric(n,n)) as [avg score] , max(table.score) as [max score] , case when table.posttypeid = n then x else x end as [post type] , table.score as [post score] , coalesce(questions.score, table.score) as [question score] from table inner join table on table.alias.col = table.id left outer join table as questions on table.parentid = alias.col group by alias.col, table.posttypeid, table.score, questions.score having count(table.id) >= n order by count(table.id) desc"
"selealias.col top alias.col table.id as [user lialias.colk], coualias.colt(table.id) as aalias.colswers, cast(avg(cast(alias.col as float)) as alias.columeric(alias.col,alias.col)) as [average aalias.colswer alias.col] from table ialias.colalias.coler joialias.col table oalias.col table.id = owalias.coleruserid where alias.col = alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold closeddate is alias.colull group by table.id, displayalias.colame havialias.colg coualias.colt(table.id) > alias.col order by aalias.colswers desc, [average aalias.colswer alias.col] desc"
"create table table(unique_id int, worker_id int, date int, type_id int) insert into table values (xyz), (n,n,n,n), (n,n,n,n) ,(n,n,n,n), (n,n,n,n),(n,n,n,n) ,(n,n,n,n), (n,n,n,n),(n,n,n,n) ;with x as ( select unique_id ,row_number() over (partition by worker_id,type_id order by date) as rn from table ) delete from table from x where x.rn > n select * from table"
"select alias.col as alias.col,alias.col,alias.col,alias.col ,alias.col from table p where alias.col=alias.col aalias.cold commealias.coltcoualias.colt=alias.col aalias.cold alias.col alias.colot like alias.col"
"create proalias.coldure #get_exact_date_diff( @date smalldatetime, @datealias.col smalldatetime, alias.col varchar(alias.col) output) as begialias.col declare @datealias.col smalldatetime declare alias.col ialias.colt,alias.col ialias.colt,@day ialias.colt if @date>@datealias.col begialias.col set @datealias.col=@datealias.col set @datealias.col=@date set @date=@datealias.col ealias.cold select alias.col=alias.col (moalias.colth,@date,@datealias.col) if dateadd(moalias.colth,alias.col,@date) >@datealias.col begialias.col set alias.col=alias.colalias.col ealias.cold set @day=alias.col(day,dateadd(moalias.colth,alias.col,@date),@datealias.col) set alias.col=alias.col/alias.col set alias.col=alias.col alias.col select alias.col = (case whealias.col alias.col=alias.col thealias.col x whealias.col alias.col=alias.col thealias.col coalias.colvert(varchar(alias.col),alias.col ) + x whealias.col alias.col>alias.col thealias.col coalias.colvert(varchar(alias.col),alias.col ) + x ealias.cold) + (case whealias.col alias.col=alias.col thealias.col x whealias.col alias.col=alias.col thealias.col coalias.colvert(varchar(alias.col),alias.col ) + x whealias.col alias.col>alias.col thealias.col coalias.colvert(varchar(alias.col),alias.col ) + x ealias.cold) + (case whealias.col @day=alias.col thealias.col x whealias.col @day=alias.col thealias.col coalias.colvert(varchar(alias.col),@day ) + x whealias.col @day>alias.col thealias.col coalias.colvert(varchar(alias.col),@day ) + x ealias.cold) ealias.cold go declare cur_table cursor for select top alias.col alias.col as [post lialias.colk], a.creatioalias.coldate as aalias.colswered, v.creatioalias.coldate as acalias.colpted from table p, table a, table v where a.parealias.coltid = alias.col aalias.cold p.acalias.colptedaalias.colswerid = alias.col aalias.cold alias.col = alias.col aalias.cold exists (select alias.col from table aa where aalias.col=alias.col aalias.cold aa.owalias.coleruserid=alias.col##) aalias.cold alias.col = alias.col declare table alias.colvarchar(alias.col) declare table as ialias.colt declare table as datetime declare table as datetime create table table( commealias.colt alias.colvarchar(alias.col)) opealias.col cur_table; fetch alias.colext from cur_table ialias.colto table, table, table while @@fetch_status = alias.col begialias.col execute #get_exact_date_diff table, table, table out ialias.colsert ialias.colto table values (table) fetch alias.colext from cur_table ialias.colto table, table, table ealias.cold close cur_table;"
"with table as ( select alias.col(day, n - datepart(weekday, v.creationdate), v.creationdate) as alias.col, case when p.posttypeid = n then x else x end + vt.name as series, n as vote from table p, table v, table vt where alias.col = alias.col and alias.col = alias.col ) select alias.col from table pivot ( sum(vote) for series in (xyz)) as pivoted where alias.col >= alias.col(week, n, current_timestamp) and alias.col < alias.col(day, n, current_timestamp) order by alias.col"
"select alias.col as alias.col, coualias.colt(alias.col) as alias.col from table q joialias.col table e oalias.col alias.col = alias.col joialias.col table a oalias.col alias.col = alias.col aalias.cold isalias.colull(alias.col, alias.col) <> alias.col aalias.cold alias.col = alias.col aalias.cold abs(alias.col(hour, a.creatioalias.coldate, e.creatioalias.coldate)) < alias.col where tabletypeid ialias.col (alias.col) aalias.cold alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold alias.col is alias.colull aalias.cold a.score >= alias.col group by alias.col havialias.colg coualias.colt(alias.col) >= alias.col order by coualias.colt(alias.col) desc"
"select alias.col, alias.col as alias.col, alias.col, alias.col from table where posttypealias.col = alias.col aalias.cold (alias.col like alias.col or alias.col like alias.col or alias.col like alias.col) aalias.cold alias.col betweealias.col alias.col aalias.cold alias.col aalias.cold acceptedaalias.colsweralias.col is alias.colull aalias.cold (select isalias.colull(maalias.col(alias.col),alias.col) from table aalias.colswers where posttypealias.col = alias.col aalias.cold parealias.coltalias.col = table.alias.col) <= alias.col aalias.cold alias.col is alias.colull aalias.cold alias.colot ealias.colists (select alias.col from table aalias.colswers where owalias.coleruseralias.col = alias.col aalias.cold posttypealias.col = alias.col aalias.cold parealias.coltalias.col = table.alias.col) aalias.cold alias.col(alias.col,alias.col,alias.col()) >= alias.col order by alias.col"
"select alias.col, coalesce(alias.col.coualias.colt, alias.col) as sourcetagcoualias.colt, targettagalias.colame from table left joialias.col table alias.col oalias.col alias.col = alias.col.tagalias.colame left joialias.col table tgt oalias.col targettagalias.colame = tgt.tagalias.colame where tgt.tagalias.colame is alias.colull order by alias.col"
"declare alias.col ialias.colt set alias.colocoualias.colt oalias.col select alias.col = alias.col from table where alias.col = alias.col:alias.col select pt.postalias.col, p.alias.col as alias.col, alias.col as alias.col from table p ialias.colalias.coler joialias.col posttable pt oalias.col p.parealias.coltalias.col = pt.postalias.col aalias.cold pt.tagalias.col = alias.col where p.posttypealias.col = alias.col aalias.cold alias.col > alias.col order by alias.col desc"
"select case whealias.col alias.col < alias.col thealias.col x whealias.col alias.col betweealias.col alias.col aalias.cold alias.col thealias.col x whealias.col alias.col betweealias.col alias.col aalias.cold alias.col thealias.col x whealias.col alias.col > alias.col thealias.col x ealias.cold as badgetype, coualias.colt(id) coualias.colt from table where alias.col ialias.col (alias.col) group by case whealias.col alias.col < alias.col thealias.col x whealias.col alias.col betweealias.col alias.col aalias.cold alias.col thealias.col x whealias.col alias.col betweealias.col alias.col aalias.cold alias.col thealias.col x whealias.col alias.col > alias.col thealias.col x ealias.cold"
declare alias.col float select alias.col = coualias.colt(*) from table where alias.col >= ##alias.col declare @alltable float select @alltable = coualias.colt(*) from table select (alias.col / @alltable) * alias.col as percealias.coltile
"select alias.col as alias.col, (alias.col + aalias.colsweralias.col) / alias.col + alias.col as alias.col from table as q joialias.col (select sum(alias.col) as aalias.colsweralias.col, parealias.coltid from table where alias.col=alias.col group by parealias.coltid) as a oalias.col a.parealias.coltid=alias.col where alias.col is alias.colot alias.colull aalias.cold ((alias.col + aalias.colsweralias.col) / alias.col + alias.col) >= alias.col order by (alias.col + aalias.colsweralias.col) / alias.col desc"
"select table.id as alias.col, table.id as alias.col, table.creationdate as alias.col from table inner join table on table.owneruserid = table.id where table.parentid is null and table.id in ( select table.id from table inner join table on table.owneruserid = table.id where table.parentid is null group by table.id having count(table.id) = n ) and table.id not in ( select table.id from table inner join table on table.owneruserid = table.id where table.parentid is not null group by table.id having count(table.id) > n ) order by table.id desc"
"select distialias.colct top ##alias.colum## alias.col as [votes], p.id as [post lialias.colk] from table p joialias.col table q oalias.col alias.col = alias.col joialias.col table pt oalias.col alias.col = alias.col joialias.col table t oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold p.commualias.colityowalias.coleddate is alias.colull aalias.cold p.closeddate is alias.colull aalias.cold alias.colot alias.col ialias.col ( select talias.col from table tt where tagalias.colame like alias.col ) order by alias.col desc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x and lastaccessdate >= x order by alias.col desc;"
"select tabletypeid, coualias.colt(*) from table where alias.col=alias.col group by tabletypeid"
select coualias.colt(*) from table where alias.col = alias.col;
"declare alias.col ialias.colt = ##userid## select alias.col as alias.col, alias.col as alias.col, alias.col as alias.col, alias.col as alias.col from table questioalias.col joialias.col table myaalias.colswer oalias.col alias.col = alias.col where alias.col < alias.col aalias.cold myaalias.colswer.owalias.coleruserid = alias.col order by alias.col desc"
"with table as ( select top alias.col alias.col from table group by alias.col order by coualias.colt(*) desc ), table as ( select owalias.coleralias.col as alias.col from table where alias.col = alias.col group by owalias.coleralias.col havialias.colg coualias.colt (*) >= alias.col ), table as ( select u.alias.col, t.alias.col, sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as [tablecore] from table u, table a, table q, table v, table t, table pt where u.alias.col = a.owalias.coleralias.col aalias.cold a.parealias.coltid = alias.col aalias.cold a.parealias.coltid = alias.col aalias.cold pt.alias.col = t.alias.col aalias.cold alias.col = alias.col aalias.cold v.alias.col ialias.col (alias.col) aalias.cold a.commualias.colityowalias.coleddate is alias.colull aalias.cold q.commualias.colityowalias.coleddate is alias.colull group by u.alias.col, t.alias.col ) select alias.col as [user lialias.colk], table.tagalias.colame as [table], tablecore from table, table where alias.col = alias.col aalias.cold tablecore >= alias.col aalias.cold table.id = alias.col order by tablecore desc"
"declare @st_date date = x select alias.col(week, datediff(week, n, p.creationdate), n) wk, cast(sum( case when votetypeid = n then n else n end ) as float)/ sum( case when votetypeid = n then n else n end ) neg_to_pos_ratio from ( select table.votetypeid, table.creationdate from table join table on table.id = table.postid where table.creationdate > alias.col(year, n, @st_date) and table.posttypeid = n ) p group by alias.col(week, datediff(week, n, p.creationdate), n) order by alias.col(week, datediff(week, n, p.creationdate), n)"
"select name, count(*) as table from table v inner join table t on alias.col = alias.col group by name order by name"
"select alias.col as alias.col, alias.col, alias.col from table as p ialias.colalias.coler joialias.col table as u oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold u.realiastatioalias.col <= alias.col aalias.cold lealias.col(alias.col) <= alias.col aalias.cold charialias.coldex( alias.col, alias.col) >alias.col order by alias.col asc, p.creatioalias.coldate desc"
"declare alias.col int = ##yourid## select count(*) as alias.col, sum(alias.col) as alias.col, alias.col from table p join table pt on alias.col = alias.col where alias.col = alias.col group by alias.col, alias.col"
"declare @recealias.coltdaysexcluded ialias.colt = alias.col selealias.col ( cast(alias.col(year, v.creatioalias.coldate) as varchar) + x + cast(alias.col(moalias.colth, v.creatioalias.coldate) as varchar) + x) [moalias.colth], sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as [passive reputatioalias.col] from table v ialias.colalias.coler joialias.col table p oalias.col alias.col=alias.col where alias.col=alias.col## aalias.cold alias.col ialias.col (alias.col) aalias.cold alias.col = alias.col group by alias.col(year, v.creatioalias.coldate), alias.col(moalias.colth, v.creatioalias.coldate) order by [moalias.colth] asc"
select count(*) from table where lower(table.location) like lower(alias.col)
selealias.col ((selealias.col cast(alias.col as alias) from table where alias.col = ##myalias.col##) / (selealias.col cast(alias.col as alias) from table where alias.col = alias.col)) [your egreg alias.columber]
"select alias.col, location, alias.col from table where location like x order by alias.col desc"
"set alias.colocoualias.colt oalias.col declare table table (postid ialias.colt, acceptedaalias.colswerid ialias.colt, acceptedaalias.colsweralias.col ialias.colt, highestvotedaalias.colswerid ialias.colt, highestvotedscote ialias.colt) ialias.colsert table select alias.col, alias.col, (select alias.col from table palias.col where alias.col = alias.col), (select top alias.col alias.col from table palias.col where palias.col.parealias.coltid = alias.col order by alias.col desc), (select top alias.col alias.col from table palias.col where palias.col.parealias.coltid = alias.col order by alias.col desc) from table palias.col where palias.col.posttypeid = alias.col aalias.cold acceptedaalias.colswerid is alias.colot alias.colull set alias.colocoualias.colt off select alias.col from table where acceptedaalias.colswerid <> highestvotedaalias.colswerid"
"selealias.col top alias.col table.id as [user lialias.colk], coualias.colt(alias.col) as aalias.colswers, cast(avg(cast(alias.col as float)) as alias.columeric(alias.col,alias.col)) as [average aalias.colswer alias.col] from table a ialias.colalias.coler joialias.col table oalias.col table.id = a.owalias.coleruserid where alias.col = alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold closeddate is alias.colull group by table.id, displayalias.colame havialias.colg coualias.colt(alias.col) > alias.col order by [average aalias.colswer alias.col] desc"
"select top alias.col owalias.coleruserid [user lialias.colk], coualias.colt(alias.col) [boualias.colty aalias.colswers provided], sum(boualias.coltyamoualias.colt) [boualias.colty amoualias.colt woalias.col] from table p,table where alias.col = alias.col aalias.cold alias.col = alias.col group by owalias.coleruserid order by alias.col desc"
"select alias.col as alias.col, alias.col as alias.col, alias.col as alias.col, alias.col as [questioalias.col asked], max(alias.col) as [last aalias.colswer posted] from table a ialias.colalias.coler joialias.col table q oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table u oalias.col alias.col = alias.col left outer joialias.col ( select alias.col from table ph where ph.tabletypeid = alias.col ) alias.col oalias.col alias.col.postid = alias.col where alias.col(moalias.colth, alias.col, alias.col) > alias.col aalias.cold a.score < alias.col aalias.cold q.closeddate is alias.colull aalias.cold alias.col > alias.col aalias.cold u.reputatioalias.col < alias.col aalias.cold alias.col.id is alias.colull group by alias.col, alias.col, alias.col, alias.col order by [last aalias.colswer posted] desc"
"select table.id as alias.col, alias.col as alias.col, reviewtasktypeid, table.name from table inner join tabletates on tabletates.id = tabletateid inner join table on table.id = reviewtasktypeid where alias.col is null and reviewtasktypeid in (xyz)"
"declare alias.col ialias.colt = ##userid## create table table (alias.col ialias.colt, [coualias.colt] ialias.colt) ialias.colsert table select top alias.col alias.col, coualias.colt(*) as uptable from table ialias.colalias.coler joialias.col posttable oalias.col posttable.alias.col = table.id ialias.colalias.coler joialias.col table oalias.col table.parealias.coltid = posttable.postid ialias.colalias.coler joialias.col table oalias.col table.postid = table.id aalias.cold alias.col = alias.col where table.owalias.coleruserid = alias.col group by alias.col order by uptable desc create table table (id ialias.colt primary key) ialias.colsert table select alias.col from table q where (select coualias.colt(*) from table a where a.parealias.coltid = alias.col aalias.cold alias.col > alias.col) = alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold closeddate is alias.colull aalias.cold q.parealias.coltid is alias.colull aalias.cold acceptedaalias.colswerid is alias.colull select top alias.col alias.col as [post lialias.colk], (sum(t.[coualias.colt]) / alias.col.alias.col + us.reputatioalias.col / alias.col.alias.col + alias.col * alias.col) as alias.col from table u joialias.col table p oalias.col alias.col = alias.col joialias.col posttable pt oalias.col alias.col = alias.col joialias.col table t oalias.col t.alias.col = pt.alias.col joialias.col table us oalias.col alias.col = p.owalias.coleruserid group by alias.col, us.reputatioalias.col, alias.col order by alias.col desc"
"select top alias.col a.displayalias.colame, a.reputatioalias.col, (select coualias.colt(alias.col) from table where owalias.coleruseralias.col = a.alias.col) as table, (a.reputatioalias.col / (select coualias.colt(alias.col) from table where owalias.coleruseralias.col = a.alias.col)) as alias.col from table a where a.reputatioalias.col > alias.col aalias.cold (select coualias.colt(alias.col) from table where owalias.coleruseralias.col = a.alias.col) > alias.col order by alias.col desc"
"declare @tagalias.colame alias.colvarchar(alias.col) = alias.col declare @tagalias.col ialias.colt = (selealias.col top(alias.col) alias.col from table where tagalias.colame = @tagalias.colame) selealias.col top(alias.col) alias.col + cast(table.alias.col as varchar) as alias.col, table.* from table left joialias.col posttable oalias.col posttable.postalias.col = table.alias.col where posttable.tagalias.col = @tagalias.col order by table.favoritecoualias.colt;"
"select alias.col as alias.col , alias.col , alias.col as alias.col , alias.col , alias.col(m, alias.col, alias.col) as alias.col from table q ialias.colalias.coler joialias.col table a oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold alias.col is alias.colot alias.colull aalias.cold alias.col > alias.col"
"select alias.col, maalias.col(alias.col) alias.col, alias.col from table u, table b where alias.col=alias.col and alias.col=alias.col and alias.col like alias.col group by alias.col, alias.col having count(*)>n order by alias.col"
"select table.id as alias.col, alias.col(body) as [descriptioalias.col alias.colgth], table.owalias.coleruserid as [user lialias.colk], reputatioalias.col as [user reputatioalias.col], score as [votes], aalias.colswercoualias.colt as [alias.columber of aalias.colswers], table.favoritecoualias.colt as [alias.columber of stars], table.creatioalias.coldate as [asked oalias.col], table.lastactivitydate as [last activity], table.lasteditdate as [modified oalias.col], table.viewcoualias.colt from table left outer joialias.col table oalias.col table.id = table.owalias.coleruserid where alias.col is alias.colull aalias.cold score>=##score:ialias.colt?alias.col## aalias.cold aalias.colswercoualias.colt>=##aalias.colswercoualias.colt:ialias.colt?alias.col## aalias.cold table.viewcoualias.colt>=##viewcoualias.colt:ialias.colt?alias.col## aalias.cold coalesalias.col( ( select sum( case table.tabletypeid whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col ealias.cold ) from table where table.postid = table.id ), alias.col ) = alias.col group by table.id, table.owalias.coleruserid, body, reputatioalias.col, table.score, table.favoritecoualias.colt, table.aalias.colswercoualias.colt, table.creatioalias.coldate, table.lastactivitydate, table.lasteditdate, table.viewcoualias.colt order by alias.col(body) asc;"
"DECLARE @TagName varchar(N) = X; DECLARE @PostCountByMonth TABLE ( [date] datetime, [totalCount] int, [##TagName##Count] int, UNIQUE CLUSTERED ([date]) ); INSERT INTO @PostCountByMonth SELECT dateadd(month, DATEDIFF(month, X, p.CreationDate), X) [date], count(*) [totalCount], count(p.[IsTag]) [##TagName##Count] FROM ( SELECT Posts.CreationDate, (case when Posts.Tags LIKE X then N else null end) [IsTag] FROM Posts ) p GROUP BY DATEDIFF(month, X, p.CreationDate) ORDER BY DATEDIFF(month, X, p.CreationDate); SELECT pN.[date], sum(pN.[##TagName##Count]) * N.N / sum(pN.[totalCount]) [ratio] FROM @PostCountByMonth pN INNER JOIN @PostCountByMonth pN ON pN.[date] >= pN.[date] GROUP BY pN.[date]"
"select coualias.colt(*) as alias.col, alias.col from ( select case whealias.col alias.col is alias.colull thealias.col alias.col else alias.col ealias.cold as alias.col from table a left joialias.col table q oalias.col alias.col = q.acalias.colptedaalias.colswerid where alias.col = alias.col## aalias.cold alias.col = alias.col aalias.cold alias.col = alias.col ) alias.col group by alias.col"
select top alias.col alias.col [post lialias.colk] from table phme ialias.colalias.coler joialias.col table p oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table phop oalias.col alias.col = alias.col aalias.cold alias.col = p.owalias.coleruserid aalias.cold phme.creatioalias.coldate < phop.creatioalias.coldate where alias.col = alias.col
"set alias.colocoualias.colt oalias.col declare alias.col datetime select alias.col = max(alias.col) from table declare @igalias.coloredays alias.columeric = alias.col declare @mialias.colagedays alias.columeric = alias.col declare alias.col ialias.colt = ##userid## declare @tabletats table (alias.col ialias.colt, alias.col ialias.colt, dowalias.col ialias.colt, alias.col datetime) ialias.colsert @tabletats select alias.col, alias.col = sum(case whealias.col alias.col = alias.col thealias.col case whealias.col p.parealias.coltid is alias.colull thealias.col alias.col else alias.col ealias.cold else alias.col ealias.cold), dowalias.col = sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold), p.alias.col from table v joialias.col table p oalias.col alias.col = alias.col where v.alias.col ialias.col (alias.col) aalias.cold owalias.coleruserid = alias.col aalias.cold p.commualias.colityowalias.coleddate is alias.colull aalias.cold alias.col(day, p.alias.col, v.alias.col) > @igalias.coloredays aalias.cold alias.col(day, p.alias.col, alias.col) > @mialias.colagedays groalias.col by alias.col, p.alias.col, p.parealias.coltid set alias.colocoualias.colt off select top alias.col alias.col as [post lialias.colk], coalias.colvert(decimal(alias.col,alias.col), alias.col - dowalias.col)/(alias.col(day, vs.alias.col, alias.col) - @igalias.coloredays) as [passive rep per day], (alias.col - dowalias.col) as [passive rep], alias.col as [passive alias.col reputatioalias.col], dowalias.col as [passive dowalias.col reputatioalias.col], alias.col(day, vs.alias.col, alias.col) - @igalias.coloredays as [days coualias.colted] from @tabletats vs order by [passive rep per day] desc"
declare @alias.col ialias.colt = ##alias.col## select coualias.colt(*) as alias.col from table where alias.col = @alias.col aalias.cold alias.col=alias.col
"select alias.col as alias.col, alias.col from table c joialias.col table p oalias.col alias.col = alias.col where (alias.col like alias.col or alias.col like alias.col) aalias.cold alias.col is alias.colot alias.colull aalias.cold alias.col = alias.col aalias.cold alias.col = alias.col## order by alias.col desc;"
"select count(*), alias.col, alias.col, alias.col, alias.col as alias.col, alias.col as alias.col, alias.col as alias.col, alias.col(day, alias.col, alias.col) as ddiff from table vt join table v on alias.col = alias.col join table p on v.alias.col = alias.col where alias.col = alias.col and alias.col in (alias.colyz) group by alias.col, alias.col, alias.col, alias.col, alias.col, alias.col, alias.col(day, alias.col, alias.col) having alias.col(day, alias.col, alias.col) > n order by alias.col"
"select table.id as alias.col, alias.col from table where alias.col = alias.col aalias.cold owalias.coleruserid = alias.col##"
"declare @tag varchar(alias.col) = ##tagtosearchialias.col:strialias.colg## select top alias.col alias.col as [post lialias.colk], alias.col, viewcoualias.colt as views, aalias.colswercoualias.colt as aalias.colswers, body from table where acceptedaalias.colsweralias.col is alias.colull aalias.cold posttypealias.col = alias.col aalias.cold closeddate is alias.colull aalias.cold alias.col <= alias.col aalias.cold tags like x ... + lower(@tag) + x"
"select top alias.col alias.col, displayalias.colame, reputatioalias.col, alias.col, locatioalias.col from table where locatioalias.col like alias.colx order by reputatioalias.col desc"
"select alias.col as alias.col, alias.col from table where (body like x collate sql_latinn_general_cpn_ci_as) and posttypealias.col = n order by alias.col desc"
declare @user_alias.col int = ##useralias.col## select distinct count(*) from table where alias.col = @user_alias.col
"select top alias.col row_alias.columber() over(order by reputatioalias.col desc) as [#], id as [user lialias.colk], reputatioalias.col, locatioalias.col from table where lower(locatioalias.col) like x or upper(locatioalias.col) like x ... or locatioalias.col like x aalias.cold reputatioalias.col >= alias.col order by reputatioalias.col desc;"
"with table as ( select alias.col(alias.col, alias.col) as tableseen from table where alias.col = alias.col## union all select alias.col(alias.col, alias.col) as tableseen from table where alias.col = alias.col## ) select tableseen as hour, count(*) as count, x + replicate(x, count(*)) as graph from table group by tableseen order by tableseen"
"selealias.col top alias.col a.owalias.coleruseralias.col as [user lialias.colk], (selealias.col reputatioalias.col from table where alias.col = a.owalias.coleruseralias.col) as reputatioalias.col, ( selealias.col coualias.colt(*) from table where owalias.coleruseralias.col = a.owalias.coleruseralias.col aalias.cold posttypealias.col = alias.col ) as alias.columaalias.colswers, (cast(coualias.colt(a.alias.col) as float) / (selealias.col coualias.colt(*) from table where owalias.coleruseralias.col = a.owalias.coleruseralias.col aalias.cold posttypealias.col = alias.col) * alias.col) as acceptedpercealias.coltage from table q ialias.colalias.coler joialias.col table a oalias.col q.acceptedaalias.colsweralias.col = a.alias.col where a.owalias.coleruseralias.col = q.owalias.coleruseralias.col aalias.cold a.posttypealias.col = alias.col group by a.owalias.coleruseralias.col havialias.colg ( selealias.col coualias.colt(*) from table where owalias.coleruseralias.col = a.owalias.coleruseralias.col aalias.cold posttypealias.col = alias.col ) >= ##mialias.columumaalias.colswertreshold## order by acceptedpercealias.coltage desc"
"declare @daysbetween int = ##daysbetween## declare @minscore int = ##minscore## select alias.col as alias.col, count(*) as alias.col from table as q join table as a on alias.col = alias.col join table as u on alias.col = alias.col where alias.col(day, q.creationdate, a.creationdate) >= @daysbetween and a.posttypeid = n and a.score >= @minscore group by alias.col ;"
"select alias.col as alias.col, alias.col, alias.col from table as p inner join table as u on alias.col = alias.col where alias.col like alias.col or alias.col like alias.col or alias.col like alias.col or alias.col like alias.col"
"select top alias.col row_alias.columber() over (order by alias.col * alias.col.alias.col / u.dowalias.colvotes desc) as alias.col, alias.col as [user lialias.colk], format(alias.col * alias.col.alias.col / dowalias.colvotes, alias.col) as [evil ratio], alias.col as [up], u.dowalias.colvotes as [dowalias.col], u.reputatioalias.col as [rep], u.lastaccessdate as [last access], ( select top alias.col t.tagalias.colame + alias.col as alias.col from table as q ialias.colalias.coler joialias.col table as a oalias.col a.parealias.coltid = alias.col ialias.colalias.coler joialias.col table as pt oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table as t oalias.col alias.col = alias.col where a.owalias.coleruserid = alias.col aalias.cold alias.col = alias.col group by tagalias.colame order by sum(alias.col) desc for alias.colml path(alias.col) ) + alias.col as [top table] from table as u where u.dowalias.colvotes > alias.col order by u.dowalias.colvotes desc"
"selealias.col alias.col as alias.col, alias.col as alias.col, alias.col as alias.col, coalias.colvert(decimal(alias.col,alias.col), cast(alias.col as alias) / alias.col) as alias.col, case whealias.col alias.col >= alias.col thealias.col alias.col else alias.col-alias.col ealias.cold + case whealias.col alias.col >= alias.col*alias.col thealias.col alias.col else (alias.col*alias.col - alias.col) ealias.cold as votesalias.coleeded from table questioalias.col, table acalias.colptedaalias.colswer, table youraalias.colswer, table acalias.colpteduser where youraalias.colswer.owalias.coleruserid = alias.col## aalias.cold youraalias.colswer.parealias.coltid = alias.col aalias.cold questioalias.col.acalias.colptedaalias.colswerid = acalias.colptedaalias.colswer.id aalias.cold acalias.colptedaalias.colswer.owalias.coleruserid = acalias.colpteduser.id aalias.cold acalias.colptedaalias.colswer.id != alias.col## aalias.cold alias.col > alias.col aalias.cold alias.col > alias.col order by cast(alias.col as alias) / alias.col desc"
select alias.col as alias.col from table where body like x order by alias.col desc
"select count(alias.col) as c, avg(alias.col), avg(alias.col), location from table group by location order by c desc"
"selealias.col ualias.col.emailhash, coualias.colt(alias.col) as alias.col, ( selealias.col cast(alias.col as varchar) + alias.col + alias.col + alias.col + cast(alias.col as varchar) + alias.col from table ualias.col where ualias.col.emailhash = ualias.col.emailhash order by alias.col desc for alias.colml path (alias.col) ) as idsaalias.coldalias.colames, ( selealias.col sum(alias.col) from table ualias.col where ualias.col.emailhash = ualias.col.emailhash ) as alias.col from table ualias.col where ualias.col.emailhash is alias.colot alias.colull aalias.cold (selealias.col coualias.colt(*) from table ualias.col where ualias.col.emailhash = ualias.col.emailhash) > alias.col group by ualias.col.emailhash havialias.colg coualias.colt(alias.col) > alias.col order by alias.col desc"
"declare @mialias.colalias.col ialias.colalias.col = alias.col declare alias.col ialias.colalias.col = alias.col selealias.col alias.col, alias.col, alias.col, alias.colraalias.colk, alias.col, alias.colraalias.colk from ( selealias.col alias.col, raalias.colk() over (order by alias.col desc) as alias.colraalias.colk, raalias.colk() over (order by alias.col desc) as alias.colraalias.colk from ( selealias.col alias.colop (alias.col) alias.col, casalias.col((alias.col alias.col a.alias.col / (alias.col alias.col a.alias.col)) as decimal(alias.col, alias.col)) as alias.col from ( selealias.col alias.col.alias.col as alias.col, coualias.colalias.col(alias.col) as alias.col, alias.col.coualias.colalias.col as alias.col from alias.colable q ialias.colalias.coler joialias.col alias.colable palias.col oalias.col alias.col = palias.col.posalias.colid ialias.colalias.coler joialias.col alias.colable alias.col oalias.col palias.col.alias.colagid = alias.col.id where (q.posalias.colalias.colypeid = alias.col) aalias.cold (q.closeddaalias.cole is alias.colull) aalias.cold alias.coloalias.col exisalias.cols ( selealias.col alias.col from alias.colable a where (a.parealias.colalias.colid = alias.col) aalias.cold ((alias.col > alias.col) or (alias.col = q.accepalias.coledaalias.colswerid)) ) group by alias.col, alias.col.coualias.colalias.col ) a where a.alias.col > @mialias.colalias.col order by a.alias.col desc ) b ) c order by (alias.col / alias.colraalias.colk) desc, alias.colraalias.colk asc, alias.colraalias.colk asc"
"select top alias.col questioalias.cols.id as [post lialias.colk], questioalias.cols.score as alias.col, aalias.colswers.score as alias.col, questioalias.cols.score+aalias.colswers.score as alias.col, aalias.colswers.creatioalias.coldate, questioalias.cols.creatioalias.coldate, alias.col(alias.col,aalias.colswers.creatioalias.coldate,questioalias.cols.creatioalias.coldate) from table questioalias.cols ialias.colalias.coler joialias.col table aalias.colswers oalias.col aalias.colswers.parealias.coltid=questioalias.cols.id where aalias.colswers.owalias.coleruserid=questioalias.cols.owalias.coleruserid aalias.cold questioalias.cols.commualias.colityowalias.coleddate is alias.colull order by questioalias.cols.score+aalias.colswers.score desc"
"select top alias.col row_alias.columber() over(order by reputatioalias.col desc) as [#], id as [user lialias.colk], reputatioalias.col, locatioalias.col from table where lower(locatioalias.col) like x or upper(locatioalias.col) like x ... or locatioalias.col like x aalias.cold reputatioalias.col >= alias.col order by reputatioalias.col desc;"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... order by alias.col desc;"
"select top alias.col alias.col as [post lialias.colk], alias.col as questioalias.colscore from table q where alias.col <= alias.col aalias.cold alias.col = alias.col aalias.cold q.aalias.colswercoualias.colt < alias.col order by alias.col asc"
"select coualias.colt(alias.col) as alias.col, alias.col as alias.col, sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as [scored aalias.colswers], sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as [ualias.colscored aalias.colswers], sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold)*alias.col / coualias.colt(alias.col) / alias.col.alias.col as [peralias.colalias.coltage ualias.colscored] from table q ialias.colalias.coler joialias.col table a oalias.col alias.col = q.acalias.colptedaalias.colswerid where a.commualias.colityowalias.coleddate is alias.colull aalias.cold a.owalias.coleruserid = ##userid## aalias.cold q.owalias.coleruserid != ##userid## aalias.cold a.posttypeid = alias.col group by alias.col"
"declare @mialias.colaalias.colswers ialias.colt = ##mialias.colaalias.colswers## select top alias.col alias.col as [user lialias.colk], coualias.colt(*) as alias.columaalias.colswers, sum(case whealias.col q.acalias.colptedaalias.colswerid = alias.col thealias.col alias.col else alias.col ealias.cold) as alias.columacalias.colpted, (sum(case whealias.col q.acalias.colptedaalias.colswerid = alias.col thealias.col alias.col else alias.col ealias.cold)*alias.col.alias.col/coualias.colt(*)) as acalias.colptedperalias.colalias.colt from table a ialias.colalias.coler joialias.col table u oalias.col alias.col = a.owalias.coleruserid ialias.colalias.coler joialias.col table q oalias.col a.parealias.coltid = alias.col joialias.col table pt oalias.col alias.col = alias.col joialias.col table t oalias.col alias.col = alias.col where (q.owalias.coleruserid <> alias.col or q.owalias.coleruserid is alias.colull) aalias.cold tagalias.colame ialias.col (x) group by alias.col havialias.colg coualias.colt(*) >= @mialias.colaalias.colswers order by acalias.colptedperalias.colalias.colt desc, alias.columaalias.colswers desc"
select alias.col from table;
"select row_number() over(order by alias.col desc) as [#], alias.col as [user link], u.alias.col, count(alias.col) from table u inner join table p on alias.col = alias.col inner join table pt on alias.col = alias.col inner join table t on alias.col = alias.col where lower(location) like lower(x) and t.tagname=x group by alias.col,u.alias.col order by alias.col desc;"
"Declare @Year int , @week int set @year = ##year:int## set @week = ##week:int## ;With weekRank as (SELECT t.id, COUNT(p.id) k FROM posts p INNER JOIN posttags pt ON p.id = pt.postid INNER JOIN tags t ON pt.tagid = t.id WHERE Year(p.creationdate) = @Year AND Datepart(week, p.creationdate) = @Week GROUP BY t.id) , combined As ( SELECT rank() over (order by t.count desc) overall_rank, rank() over (order by wr.k desc) week_Rank, tagname FROM tags t INNER JOIN weekrank wr ON t.id = wr.id ) SELECT tagName, week_Rank , overall_rank FROM combined WHERE overall_rank - week_Rank > N ORDER BY overall_rank - week_Rank desc"
declare @useralias.col int select alias.col from table where alias.col = @useralias.col
select top alias.col alias.col as [post lialias.colk] from table p where alias.col=alias.col aalias.cold body like x order by alias.col desc
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... order by alias.col desc;"
"cralias.colatalias.col tablalias.col tablalias.col ( aliaalias.col.col ialiaalias.col.colt, aliaalias.col.col datalias.coltimalias.col, aliaalias.col.col datalias.coltimalias.col, roomaliaalias.col.col ialiaalias.col.colt) ialiaalias.col.colalias.colalias.colrt ialiaalias.col.colto tablalias.col (aliaalias.col.col, aliaalias.col.col, aliaalias.col.col, roomaliaalias.col.col) alias.colalias.collalias.colct aliaalias.col.col, aliaalias.col.col, aliaalias.col.col, aliaalias.col.col ualiaalias.col.colioaliaalias.col.col all alias.colalias.collalias.colct aliaalias.col.col, aliaalias.col.col, aliaalias.col.col, aliaalias.col.col ualiaalias.col.colioaliaalias.col.col all alias.colalias.collalias.colct aliaalias.col.col, aliaalias.col.col, aliaalias.col.col, aliaalias.col.col ualiaalias.col.colioaliaalias.col.col all alias.colalias.collalias.colct aliaalias.col.col, aliaalias.col.col, aliaalias.col.col, aliaalias.col.col ualiaalias.col.colioaliaalias.col.col all alias.colalias.collalias.colct aliaalias.col.col, aliaalias.col.col, aliaalias.col.col, aliaalias.col.col dalias.colclaralias.col @alias.coltart datalias.coltimalias.col = aliaalias.col.col dalias.colclaralias.col @alias.colaliaalias.col.cold datalias.coltimalias.col = aliaalias.col.col ;with tablalias.col (roomaliaalias.col.col, rowaliaalias.col.colum, alias.coltartalias.cold, alias.colaliaalias.col.coldalias.cold) aalias.col ( alias.colalias.collalias.colct roomaliaalias.col.col, row_aliaalias.col.columbalias.colr() ovalias.colr (partitioaliaalias.col.col by roomaliaalias.col.col ordalias.colr by aliaalias.col.col) aalias.col rowaliaalias.col.colum, aliaalias.col.col, aliaalias.col.col from tablalias.col) alias.colalias.collalias.colct roomaliaalias.col.col, tablalias.col aalias.col alias.col, tablalias.col aalias.col alias.col from tablalias.col b croalias.colalias.col apply ( alias.colalias.collalias.colct baliaalias.col.col.alias.coltartalias.cold from tablalias.col baliaalias.col.col whalias.colralias.col baliaalias.col.col.rowaliaalias.col.colum = b.rowaliaalias.col.colum + aliaalias.col.col aaliaalias.col.cold baliaalias.col.col.alias.coltartalias.cold <= @alias.colaliaalias.col.cold aaliaalias.col.cold baliaalias.col.col.roomaliaalias.col.col = b.roomaliaalias.col.col ) c whalias.colralias.col tablalias.col >= @alias.coltart ualiaalias.col.colioaliaalias.col.col alias.colalias.collalias.colct roomaliaalias.col.col, @alias.coltart, mialiaalias.col.col(aliaalias.col.col) from tablalias.col whalias.colralias.col aliaalias.col.col > @alias.coltart aaliaalias.col.cold aliaalias.col.colot alias.colaliaalias.col.colialias.coltalias.col ( alias.colalias.collalias.colct aliaalias.col.col from tablalias.col whalias.colralias.col alias.coltartalias.cold < @alias.coltart aaliaalias.col.cold alias.colaliaalias.col.coldalias.cold > @alias.coltart ) group by roomaliaalias.col.col ualiaalias.col.colioaliaalias.col.col alias.colalias.collalias.colct roomaliaalias.col.col, maaliaalias.col.col(aliaalias.col.col), @alias.colaliaalias.col.cold from tablalias.col whalias.colralias.col aliaalias.col.col < @alias.colaliaalias.col.cold aaliaalias.col.cold aliaalias.col.colot alias.colaliaalias.col.colialias.coltalias.col ( alias.colalias.collalias.colct aliaalias.col.col from tablalias.col whalias.colralias.col alias.coltartalias.cold < @alias.colaliaalias.col.cold aaliaalias.col.cold alias.colaliaalias.col.coldalias.cold > @alias.colaliaalias.col.cold ) group by roomaliaalias.col.col"
"set alias.colocoualias.colt oalias.col create table table (alias.col ialias.colt alias.colealias.coltity, [start] datetime, [fialias.colish] datetime) ialias.colsert table select top alias.col alias.colull, alias.colull from table declare alias.col datetime select alias.col = creatioalias.coldate from table where alias.col = (select max(palias.col.alias.col) from table palias.col) update table set [start] = dateadd(d, (alias.col - alias.col) * alias.col, alias.col), [fialias.colish] = dateadd(d, (alias.col - alias.col) * alias.col, alias.col) select start, (select coualias.colt(*) from table where parealias.coltalias.col is alias.colull aalias.cold creatioalias.coldate betweealias.col [start] aalias.cold [fialias.colish] ) as [total questioalias.cols], (select coualias.colt(*) from table where parealias.coltalias.col is alias.colot alias.colull aalias.cold creatioalias.coldate betweealias.col [start] aalias.cold [fialias.colish] ) as [total aalias.colswers] from table"
"create table table (id itablet tableot tableull, alias.col itablet tableot tableull) go itablesert itableto table selealias.col alias.col as alias.col, coutablet(*) as alias.col from table ph, table p where tabletypeid = table atabled alias.col = alias.col atabled p.owtableeruserid != alias.col group by alias.col go with table as ( selealias.col cast(coutablet(*) as float) as coutablet from table where alias.col = table atabled commutableityowtableeddate is tableull ) selealias.col istableull(alias.col, table) as alias.col, coutablet(*) as [atableswers], routabled(coutablet(*) / (selealias.col coutablet from table) * table, table) as [percetablet] from table p left joitable table e otable alias.col = alias.col where p.alias.col = table atabled p.commutableityowtableeddate is tableull group by alias.col order by alias.col"
"declare @url varchar(max) = x select top alias.col datalealias.colgth(body) as bodylealias.colgth, displayalias.colame, posttypeid, table.creatioalias.coldate, score, @url + coalias.colvert(varchar, table.id) as url from table ialias.colalias.coler joialias.col table oalias.col table.owalias.coleruserid = table.id order by bodylealias.colgth desc"
"select top alias.col lealias.col(body) as bodylealias.colgth, score as x, id as [post lialias.colk], table.tagid from table ialias.colalias.coler joialias.col table oalias.col parealias.coltid = table.postid where alias.col = alias.col aalias.cold (body like x ... or body like x) order by bodylealias.colgth"
"select top alias.col alias.col as [post lialias.colk], c.creatioalias.coldate, alias.col as body from table c, table p where ( alias.col like alias.col aalias.cold alias.col = alias.col aalias.cold alias.col is alias.colull aalias.cold p.posttypeid = alias.col aalias.cold commualias.colityowalias.coleddate is alias.colot alias.colull ) order by creatioalias.coldate"
"declare alias.col int = ##userid## select table.name alias.col, count(*) alias.col from table left join table on alias.col = table.id where table.userid = alias.col group by table.name"
"with fields as( select alias.col, lower(alias.col) + alias.col + lower(location) + alias.col + lower(aboutme) as tealias.colt from table ) select table.* from table join ( select alias.col from fields where tealias.colt like alias.col or tealias.colt like alias.col ... ) as alias on alias.alias.col = table.alias.col"
"select distialias.colct top ##alias.colum## alias.col as [post lialias.colk], p.lastactivitydate as [last activity], cast(datepart(yyyy, p.creatioalias.coldate) as varchar) + x + cast(datepart(mm, p.creatioalias.coldate) as varchar) + x + cast(datepart(dd, p.creatioalias.coldate) as varchar) as [created], p.score as [vote score], alias.col as [user lialias.colk], u.reputatioalias.col as [user reputatioalias.col] from table p joialias.col table pt oalias.col alias.col = alias.col joialias.col table t oalias.col alias.col = alias.col joialias.col table u oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold p.commualias.colityowalias.coleddate is alias.colull aalias.cold p.closeddate is alias.colull aalias.cold alias.colot alias.col ialias.col (xyz) > ##yyyy## aalias.cold datepart(mm, p.creatioalias.coldate) > ##mm## order by p.lastactivitydate desc"
select coualias.colt(alias.col) from table where alias.col > alias.col;
"select alias.col as alias.col, alias.col from table p joialias.col table pt oalias.col p.alias.col = pt.postalias.col where pt.tagalias.col = alias.col aalias.cold p.alias.col alias.colot ialias.col (select postalias.col from table where tagalias.col = alias.col)"
"select top alias.col lealias.col(body) as body_lealias.col, score from table where alias.col=alias.col order by alias.colewid()"
"select top alias.col alias.col as [post lialias.colk], alias.col as alias.col, alias.col as alias.col, viewcoualias.colt as alias.col, alias.col(day, p.creatioalias.coldate, currealias.colt_timestamp) as age, p.viewcoualias.colt / alias.col(day, p.creatioalias.coldate, currealias.colt_timestamp) as alias.col from table p where p.viewcoualias.colt > alias.col aalias.cold p.commualias.colityowalias.coleddate is alias.colull aalias.cold p.viewcoualias.colt / alias.col(day, p.creatioalias.coldate, currealias.colt_timestamp) > alias.col order by alias.col desc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col, location from table where lower(location) like x order by alias.col desc;"
"select top alias.col row_alias.columber() over(order by reputatioalias.col desc) as [#], id as [user lialias.colk], reputatioalias.col from table where locatioalias.col like x order by reputatioalias.col desc;"
"select alias.col as alias.col, coualias.colt(*) as alias.col from table where tabletypeid = alias.col aalias.cold patialias.coldealias.col(alias.col, tealias.colt) = alias.col group by tabletypeid ualias.colioalias.col select replace(substrialias.colg(tealias.colt, alias.col, lealias.col(tealias.colt) - alias.col), alias.col, alias.col) as alias.col, coualias.colt(*) as alias.col from table where tabletypeid = alias.col aalias.cold patialias.coldealias.col(alias.col, tealias.colt) = alias.col group by tealias.colt order by alias.col desc"
"select top alias.col alias.col, alias.col, text as alias.col from table where year(creatioalias.coldate) = alias.col aalias.cold tabletypeid ialias.col (alias.col)"
"declare alias.col int = ##postid## declare alias.col int = ##userid## select table.userid, table.votetypeid from table, table where table.parentid = alias.col and table.owneruserid = alias.col and table.postid = table.id"
"declare table table ( ordalias.colbr ialias.colt idealias.coltity primary key, alias.col ialias.colt ) ialias.colsert ialias.colto table values (alias.col),(alias.col),(alias.col) select alias.col from (select top alias.col percealias.colt ordalias.colbr, alias.col from table where alias.col ialias.col (alias.col) order by alias.col desc) x ualias.colioalias.col all select alias.col from (select top alias.col percealias.colt ordalias.colbr, alias.col from table where alias.col alias.colot ialias.col (alias.col) order by alias.col desc) y; select alias.col from (select top alias.col percealias.colt ordalias.colbr, alias.col from table where alias.col ialias.col (alias.col) order by alias.col asc) x ualias.colioalias.col all select alias.col from (select top alias.col percealias.colt ordalias.colbr, alias.col from table where alias.col alias.colot ialias.col (alias.col) order by alias.col asc) y;"
"select table.id, table.tagalias.colame, coualias.colt(distialias.colct posttable.postid) as [coualias.colt] ialias.colto table from table left joialias.col tableyalias.coloalias.colyms tsalias.col oalias.col alias.col = table.tagalias.colame aalias.cold alias.col is alias.colot alias.colull left joialias.col tableyalias.coloalias.colyms tsalias.col oalias.col alias.col = table.tagalias.colame aalias.cold alias.col is alias.colot alias.colull left joialias.col table tstable oalias.col tstable.tagalias.colame = alias.col ialias.colalias.coler joialias.col posttable oalias.col posttable.tagid ialias.col (alias.col) where alias.col is alias.colull group by table.id, table.tagalias.colame select table.id, table.tagalias.colame, table.coualias.colt as [table.coualias.colt], table.coualias.colt as [table.coualias.colt], abs(coalesce(table.coualias.colt, alias.col) - table.coualias.colt) as differealias.colce from table left joialias.col table oalias.col table.id = table.id where table.coualias.colt <> table.coualias.colt or table.coualias.colt is alias.colull order by table.coualias.colt desc, table.tagalias.colame"
"select top alias.col alias.col as [user lialias.colk], ( select coualias.colt(*) from table where posttypealias.col = alias.col aalias.cold lasteditoruseralias.col = table.alias.col aalias.cold owalias.coleruseralias.col != table.alias.col ) as questioalias.coledits, ( select coualias.colt(*) from table where posttypealias.col = alias.col aalias.cold lasteditoruseralias.col = table.alias.col aalias.cold owalias.coleruseralias.col != table.alias.col ) as aalias.colsweredits, ( select coualias.colt(*) from table where lasteditoruseralias.col = table.alias.col aalias.cold owalias.coleruseralias.col != table.alias.col ) as alias.col from table order by alias.col desc"
"select alias.col as alias.col, alias.col from table where alias.col <= alias.col aalias.cold (alias.col like alias.col ... or alias.col like alias.col ...)"
"select top alias.col row_alias.columber() over (order by sum(v.boualias.coltyamoualias.colt)) as [raalias.colk], u.displayalias.colame, sum(v.boualias.coltyamoualias.colt) as boualias.colties from table u ialias.colalias.coler joialias.col table p oalias.col alias.col = p.owalias.coleruserid ialias.colalias.coler joialias.col table v oalias.col alias.col = alias.col where alias.col = alias.col group by u.displayalias.colame order by sum(v.boualias.coltyamoualias.colt) desc"
"select alias.col, alias.col from ( select top alias.col talias.col.tagalias.colame tagalias.colamealias.col, talias.col.tagalias.colame tagalias.colamealias.col, coualias.colt(*) tagpaircoualias.colt from table p ialias.colalias.coler joialias.col table ptalias.col oalias.col ptalias.col.postid = alias.col ialias.colalias.coler joialias.col table ptalias.col oalias.col ptalias.col.postid = alias.col ialias.colalias.coler joialias.col table talias.col oalias.col talias.col.id = ptalias.col.tagid ialias.colalias.coler joialias.col table talias.col oalias.col talias.col.id = ptalias.col.tagid where talias.col.tagalias.colame < talias.col.tagalias.colame group by talias.col.tagalias.colame, talias.col.tagalias.colame order by tagpaircoualias.colt desc ) x"
"select top alias.col coualias.colt(*), alias.col as [post lialias.colk] from table where closeasofftopicreasoalias.coltypeid=alias.col group by alias.col"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... or location like x and alias.col >= n order by alias.col desc;"
"select top alias.col case whealias.col alias.col = alias.col thealias.col x else x ealias.cold as [post type], alias.col, p.title, sum(case whealias.col votetypeid = alias.col thealias.col alias.col else case whealias.col votetypeid = alias.col thealias.col alias.col else alias.col ealias.cold ealias.cold) as ialias.colctable from table v joialias.col table p oalias.col alias.col=alias.col where v.creatioalias.coldate > alias.col(day, alias.col, getdate()) group by alias.col, p.alias.col, p.title order by alias.col, ialias.colctable"
"select alias.col as alias.col from table, table, table as alias where table.alias.col = table.id and tealias.colt like alias.col and alias.col = table.parentid and alias.col = alias.col## order by table.creationdate desc"
"declare alias.col ialias.colt = ##userid## create table table (alias.col ialias.colt, [coualias.colt] ialias.colt) ialias.colsert table select top alias.col alias.col, coualias.colt(*) as uptable from table ialias.colalias.coler joialias.col posttable oalias.col posttable.alias.col = table.id ialias.colalias.coler joialias.col table oalias.col table.parealias.coltid = posttable.postid ialias.colalias.coler joialias.col table oalias.col table.postid = table.id aalias.cold alias.col = alias.col where table.owalias.coleruserid = alias.col group by alias.col order by uptable desc create table table (id ialias.colt primary key) ialias.colsert table select alias.col from table q where (select coualias.colt(*) from table a where a.parealias.coltid = alias.col aalias.cold alias.col > alias.col) = alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold closeddate is alias.colull aalias.cold q.parealias.coltid is alias.colull aalias.cold acceptedaalias.colswerid is alias.colull select top alias.col alias.col as [post lialias.colk], (sum(t.[coualias.colt]) / alias.col.alias.col + us.reputatioalias.col / alias.col.alias.col + alias.col * alias.col) as alias.col from table u joialias.col table p oalias.col alias.col = alias.col joialias.col posttable pt oalias.col alias.col = alias.col joialias.col table t oalias.col t.alias.col = pt.alias.col joialias.col table us oalias.col alias.col = p.owalias.coleruserid group by alias.col, us.reputatioalias.col, alias.col order by alias.col desc"
"DECLARE @YourTable TABLE(name VARCHAR(N), width int, height int, fill int, ourfill int, oldprice int, price int); DECLARE @SizesOrder TABLE(Id INT, Name VARCHAR(N)); INSERT INTO @YourTable VALUES (XYZ), (X, N, N, N, N, N, N), (X, N, N, N, N, N, N), (X, N, N, N, N, N, N), (X, N, N, N, N, N, N), (X, N, N, N, N, N, N), (X, N, N, N, N, N, N), (X, N, N, N, N, N, N), (X, N, N, N, N, N, N), (X, N, N, N, N, N, N), (X, N, N, N, N, N, N), (X, N, N, N, N, N, N), (X, N, N, N, N, N, N), (X, N, N, N, N, N, N); INSERT INTO @SizesOrder VALUES (XYZ), (N, X), (N, X), (N, X), (N, X); SELECT t.* FROM @YourTable t LEFT JOIN @SizesOrder o ON t.name = o.Name ORDER BY o.Id"
"select top alias.col alias.col as [post lialias.colk], alias.col as alias.col, alias.col as [commealias.colt lialias.colk], alias.col as [commealias.colt score] from table as p ialias.colalias.coler joialias.col table as c oalias.col alias.col = alias.col where alias.col > alias.col order by alias.col desc, alias.col desc"
"select count(alias.col) as alias.col, sum(alias.col) as alias.col from table where alias.col like alias.col"
"select alias.col as alias.col, alias.col, alias.col, alias.col from table c where alias.col = ##alias.col## and tealias.colt like alias.col ... order by alias.col,alias.col desc"
"select alias.col, alias.col, alias.col from table where useralias.col = ##useralias.col## aalias.cold alias.col > alias.col order by alias.col desc"
"alias.coleclalias.colre @malias.colx ialias.collialias.cols.colt = ##malias.colxcoualias.collialias.cols.colt:ialias.collialias.cols.colt?alias.collialias.cols.col## select alias.collialias.cols.col alias.cols alias.collialias.cols.col, coualias.collialias.cols.colt(coualias.collialias.cols.colt) alias.cols [alias.collialias.cols.colalias.coler of talias.colalias.colle halias.colvialias.collialias.cols.colg this malias.colalias.collialias.cols.coly questioalias.collialias.cols.cols] from talias.colalias.colle right joialias.collialias.cols.col (select alias.collialias.cols.col from ( select (alias.collialias.cols.col + (alias.collialias.cols.col*alias.collialias.cols.col) + (alias.collialias.cols.col*alias.collialias.cols.col) + (alias.collialias.cols.col*alias.collialias.cols.col)) alias.cols alias.collialias.cols.col from (select alias.collialias.cols.col alias.cols alias.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col) alias.cols alias.col cross joialias.collialias.cols.col (select alias.collialias.cols.col alias.cols alias.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col) alias.cols alias.col cross joialias.collialias.cols.col (select alias.collialias.cols.col alias.cols alias.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col) alias.cols c cross joialias.collialias.cols.col (select alias.collialias.cols.col alias.cols alias.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col) alias.cols alias.col ) alias.col where alias.collialias.cols.collialias.cols.col alias.coletweealias.collialias.cols.col alias.collialias.cols.col alias.colalias.collialias.cols.colalias.col @malias.colx ) alias.cols ialias.collialias.cols.coltegers oalias.collialias.cols.col alias.collialias.cols.col=coualias.collialias.cols.colt left joialias.collialias.cols.col talias.colalias.colle pe oalias.collialias.cols.col talias.colalias.colle.excerptpostialias.col = pe.ialias.col left joialias.collialias.cols.col talias.colalias.colleyalias.collialias.cols.coloalias.collialias.cols.colyms ts oalias.collialias.cols.col ts.sourcetalias.colgalias.collialias.cols.colalias.colme = talias.colalias.colle.talias.colgalias.collialias.cols.colalias.colme group alias.coly alias.collialias.cols.col oralias.coler alias.coly alias.collialias.cols.col"
"select top alias.col alias.col as [post lialias.colk], alias.col from table where posttypealias.col = alias.col aalias.cold alias.col <= alias.col aalias.cold acceptedaalias.colsweralias.col is alias.colull aalias.cold closeddate is alias.colull order by creatioalias.coldate"
"declare @tagalias.colame alias.colvarchar(alias.col) = ##tag:strialias.colg## declare @coualias.coltry alias.colvarchar(alias.col) = ##tag:strialias.colg## select top alias.col alias.col as [user lialias.colk], coualias.colt(*) as uptable from table t with (alias.cololock) ialias.colalias.coler joialias.col posttable pt with (alias.cololock)oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table p with (alias.cololock) oalias.col p.parealias.coltid = alias.col ialias.colalias.coler joialias.col table v with (alias.cololock) oalias.col alias.col = alias.col aalias.cold alias.col = alias.col ialias.colalias.coler joialias.col table u with (alias.cololock) oalias.col alias.col = p.owalias.coleruserid where p.commualias.colityowalias.coleddate is alias.colull aalias.cold t.tagalias.colame = @tagalias.colame aalias.cold ( lower(locatioalias.col) like lower(x + @coualias.coltry + x) or upper(locatioalias.col) like upper(x + @coualias.coltry + x) or alias.col = alias.col) group by alias.col order by uptable desc"
"select top alias.col alias.col as [user lialias.colk], (select sum(lealias.col(body)) from table where owalias.coleralias.col = alias.col) table, (select sum(lealias.col(text)) from table where alias.col = alias.col) table, (select sum(lealias.col(body)) from table where owalias.coleralias.col = alias.col) + (select sum(lealias.col(text)) from table where alias.col = alias.col) alias.col, (select sum(lealias.col(text)) from table where alias.col = alias.col)*alias.col.alias.col / (select sum(lealias.col(body)) from table where owalias.coleralias.col = alias.col) alias.col from table u where u.reputatioalias.col >= alias.col order by alias.col desc"
"select top alias.col row_alias.columber() over(order by reputatioalias.col desc) as [#], id as [user lialias.colk], reputatioalias.col, locatioalias.col from table where lower(locatioalias.col) like x or upper(locatioalias.col) like x ... or locatioalias.col like x aalias.cold reputatioalias.col >= alias.col order by reputatioalias.col desc;"
"select alias.col as alias.col, alias.col, alias.col from table a inner join table q on alias.col = alias.col inner join table on table.id=alias.col where alias.col is null and q.acceptedanswerid != alias.col and a.lastactivitydate > x"
"create table table (id itablet tableot tableull, alias.col itablet tableot tableull) go itablesert itableto table selealias.col alias.col as alias.col, coutablet(*) as alias.col from table ph where tabletypeid = table group by alias.col go with table as ( selealias.col cast(coutablet(*) as float) as coutablet from table where alias.col = table ) selealias.col istableull(alias.col, table) as alias.col, coutablet(*) as [questiotables], routabled(coutablet(*) / (selealias.col table from table) * table, table) as [percetablet] from table p left joitable table e otable alias.col = alias.col where p.alias.col = table group by alias.col order by alias.col"
"select alias.col alias.col , alias.col, coalias.colvert(varchar, lastaccessdate, alias.col) as date from table where alias.col > alias.col order by date desc"
"declare alias.col int = ##userid## select alias.col as alias.col, alias.col as alias.col, alias.col as alias.col, alias.col - yoalias.col as alias.col from table u, table you where yoalias.col = alias.col and alias.col > yoalias.col and alias.col > yoalias.col order by alias.col desc"
"select (alias.col(alias.col, alias.col) + (alias.col(alias.col, alias.col)alias.col) / alias.col.alias.col) as yr_moalias.col, coualias.colt(*) from table p where alias.col = alias.col aalias.cold alias.col>alias.col group by (alias.col(alias.col, alias.col) + (alias.col(alias.col, alias.col)alias.col) / alias.col.alias.col) order by (alias.col(alias.col, alias.col) + (alias.col(alias.col, alias.col)alias.col) / alias.col.alias.col)"
"declare table table (tagalias.colamelike alias.colvarchar(alias.col) collate sql_latialias.colalias.col_gealias.coleral_cpalias.col_cs_as alias.colot alias.colull) ialias.colsert ialias.colto table values (alias.colyz) select sum(alias.col), alias.col from table p ialias.colalias.coler joialias.col table pt oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table t oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table tl oalias.col alias.col like alias.col + alias.col where alias.col = alias.col aalias.cold alias.col > alias.col group by tagalias.colamelike"
"declare @tagalias.colame alias.colvarchar(alias.col) = x select top alias.col alias.col, (select displayalias.colame from table udalias.col with (alias.cololock) where udalias.col.id = alias.col) ,coualias.colt(*) as uptable from table t with (alias.cololock) ialias.colalias.coler joialias.col posttable pt with (alias.cololock)oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table p with (alias.cololock) oalias.col p.parealias.coltid = alias.col ialias.colalias.coler joialias.col table v with (alias.cololock) oalias.col alias.col = alias.col aalias.cold alias.col = alias.col ialias.colalias.coler joialias.col table u with (alias.cololock) oalias.col alias.col = p.owalias.coleruserid where p.commualias.colityowalias.coleddate is alias.colull aalias.cold t.tagalias.colame = @tagalias.colame group by alias.col order by uptable desc"
"select top alias.col row_alias.columber() over(order by reputatioalias.col desc) as [#], id as [user lialias.colk], reputatioalias.col from table where lower(locatioalias.col) like x or lower(locatioalias.col) like x ... or upper(locatioalias.col) like x ... order by reputatioalias.col desc;"
"declare @useralias.col int = ##useralias.col## select alias.col from (select row_number() over (order by alias.col desc) as row, alias.col from table) as emp where alias.col = @useralias.col"
"select table.id as alias.col, coualias.colt(table.id) as closetable from table left joialias.col table oalias.col (alias.col = table.id) where table.posttypeid = alias.col aalias.cold table.votetypeid = alias.col group by table.id havialias.colg coualias.colt(table.id) = alias.col;"
select alias.col from table p where alias.col = alias.col order by creatioalias.coldate
"select top alias.col alias.col,pc.creatioalias.coldate, alias.col as [post lialias.colk], alias.col , alias.col from table as p ialias.colalias.coler joialias.col table as pc oalias.col alias.col = pc.parealias.coltid aalias.cold p.owalias.coleruserid = pc.owalias.coleruserid ialias.colalias.coler joialias.col table as u oalias.col alias.col = p.owalias.coleruserid where p.acceptedaalias.colswerid <> alias.col aalias.cold (alias.col like alias.col) aalias.cold u.reputatioalias.col < alias.col aalias.cold lealias.col(alias.col) < alias.col aalias.cold alias.col < alias.col aalias.cold pc.creatioalias.coldate < alias.col"
"select top alias.col alias.col as [user lialias.colk] ,coualias.colt(*) as uptable from table t ialias.colalias.coler joialias.col posttable pt oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table p oalias.col p.parealias.coltid = alias.col ialias.colalias.coler joialias.col table v oalias.col alias.col = alias.col aalias.cold alias.col = alias.col ialias.colalias.coler joialias.col table u oalias.col alias.col = p.owalias.coleruserid where p.commualias.colityowalias.coleddate is alias.colull aalias.cold lower(t.tagalias.colame) like x ... aalias.cold ( lower(locatioalias.col) like (x) or locatioalias.col like x ... or lower(locatioalias.col) like x ... ) aalias.cold lealias.col(locatioalias.col) > alias.col group by alias.col order by uptable desc"
"select top alias.col alias.col as [post lialias.colk], alias.col, q.creatioalias.coldate from table q left outer joialias.col table a oalias.col alias.col = a.parealias.coltid where alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold alias.col like alias.col aalias.cold alias.col is alias.colull aalias.cold q.commealias.coltcoualias.colt = alias.col aalias.cold q.closeddate is alias.colull order by q.creatioalias.coldate asc"
"select row_alias.collialias.cols.columber() over(order by alias.collialias.cols.col desc) alias.cols [#], id alias.cols [user lialias.collialias.cols.colk], alias.collialias.cols.col from talias.colble u where lower(localias.coltioalias.collialias.cols.col) like lower(alias.col) alias.colalias.collialias.cols.cold (select coualias.collialias.cols.colt(alias.collialias.cols.col) from (select alias.collialias.cols.col alias.col from talias.colble b where alias.col = alias.col alias.colalias.collialias.cols.cold talias.colgbalias.colsed = alias.collialias.cols.col alias.colalias.collialias.cols.cold lower(b.alias.collialias.cols.colalias.colme) = alias.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col alias.col from talias.colble b where alias.col = alias.col alias.colalias.collialias.cols.cold talias.colgbalias.colsed = alias.collialias.cols.col alias.colalias.collialias.cols.cold lower(b.alias.collialias.cols.colalias.colme) = alias.col ) alias.col) = alias.collialias.cols.col order by alias.collialias.cols.col desc;"
"select alias.col as alias.col, alias.col, alias.col, alias.col from table p where ( alias.col < alias.col aalias.cold alias.col like alias.col ... aalias.cold alias.col is alias.colull ) order by alias.col asc"
declare alias.col ialias.colt = alias.col select alias.col - coualias.colt(*) as alias.col from table where alias.col = alias.col aalias.cold lasteditoruserid = alias.col aalias.cold owalias.coleruserid != alias.col
"select alias.col as alias.col, alias.col, alias.col, alias.col from table where alias.col > alias.col order by alias.col desc"
"select alias.col, alias.col as reviewtasktype, alias.col as reviewtasktypedescription, alias.col as tabletate, alias.col as tabletatedescription, alias.col, alias.col as reviewtaskresulttype, alias.col as reviewtaskresulttypedescription, alias.col as reviewrejectionreason, alias.col as reviewrejectionreasondescription, (select name from table where alias.col = rrr.posttypealias.col) as reviewrejectionreasonposttype from table as rt inner join table as rtr on rt.alias.col = rtr.reviewtaskalias.col or rtr.alias.col = rt.completedbyreviewtaskalias.col inner join table as rtt on rtt.alias.col = rt.reviewtasktypealias.col inner join tabletates as rts on rts.alias.col = rt.tabletatealias.col inner join table as rtrt on rtrt.alias.col = rtr.reviewtaskresulttypealias.col inner join table as rrr on rrr.alias.col = rtr.rejectionreasonalias.col where rt.alias.col = ##reviewalias.col:alias.col"
"with table (tagalias.colame, totaluptable, totaldowalias.coltable) as (select table.tagalias.colame, totaluptable = sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold), totaldowalias.coltable = sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) from table ialias.colalias.coler joialias.col posttable oalias.col posttable.tagid = table.id ialias.colalias.coler joialias.col table oalias.col table.postid = posttable.postid where table.alias.col ialias.col (alias.col) group by table.tagalias.colame) select tagalias.colame, case whealias.col totaluptable = alias.col aalias.cold totaluptable = alias.col thealias.col alias.col else roualias.cold(cast(totaluptable as float) / (totaldowalias.coltable), alias.col) ealias.cold ratioofdowalias.coltable from table where (totaluptable + totaldowalias.coltable) > alias.col order by alias.col desc"
"selealias.col top alias.col table.id as [user lialias.colk], coualias.colt(table.id) as aalias.colswers, cast(avg(cast(alias.col as float)) as alias.columeric(alias.col,alias.col)) as [average aalias.colswer alias.col] from table ialias.colalias.coler joialias.col table oalias.col table.id = owalias.coleruserid where alias.col = alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold closeddate is alias.colull group by table.id, displayalias.colame havialias.colg coualias.colt(table.id) > alias.col order by [average aalias.colswer alias.col] desc"
"select top alias.col lealias.col(body) as bodylealias.colgth, p.id as [post lialias.colk], alias.col as [user lialias.colk], u.reputatioalias.col from table p ialias.colalias.coler joialias.col table u oalias.col alias.col = p.owalias.coleruserid where u.reputatioalias.col < alias.col aalias.cold alias.col <= alias.col aalias.cold lealias.col(body) < alias.col aalias.cold p.posttypeid=alias.col aalias.cold body like x aalias.cold body like x aalias.cold body like x order by bodylealias.colgth"
"select alias.col, alias.col as alias.col, alias.col, alias.col as alias.col, alias.col from table rt inner join table p on alias.col = alias.col inner join table rtt on rt.reviewtasktypeid = alias.col inner join tabletates rts on rt.tabletateid = alias.col where alias.col = alias.col## order by alias.col desc select alias.col from tabletates"
selealias.col top alias.col cast(alias.col as varchar(alias.col)) + alias.col + alias.col from table;
"with aalias.colswertable as ( select alias.col, sum((case whealias.col alias.colame=alias.col thealias.col alias.col else alias.col ealias.cold)) as alias.colialias.colaalias.colswers, sum((case whealias.col alias.colame=alias.col thealias.col alias.col else alias.col ealias.cold)) as goodaalias.colswers, sum((case whealias.col alias.colame=alias.col thealias.col alias.col else alias.col ealias.cold)) as table, coualias.colt(*) as alias.col from table where alias.colame like alias.col group by alias.col ) select top alias.col alias.col as [user lialias.colk], alias.colialias.colaalias.colswers, goodaalias.colswers, table, alias.col from aalias.colswertable order by alias.col, table desc"
"select top alias.col alias.col as [post lialias.colk], alias.col from table where tealias.colt like alias.col order by alias.col desc"
"with table as ( select alias.col as alias.col, alias.col() as alias.col) select alias.col(alias.col, t.alias.col, t.alias.col) as alias.col, alias.col(alias.col, alias.col(alias.col, alias.col(alias.col, t.alias.col, t.alias.col), t.alias.col), t.alias.col) as alias.col, alias.col(alias.col, alias.col(alias.col, alias.col(alias.col, alias.col(alias.col, alias.col(alias.col, t.alias.col, t.alias.col), t.alias.col), t.alias.col), alias.col(alias.col, alias.col(alias.col, t.alias.col, t.alias.col), t.alias.col)), t.alias.col) as alias.col from table t"
select coualias.colt(alias.col)*alias.col/(select coualias.colt(alias.col) from table where posttypealias.col = alias.col) from table where alias.col like alias.col aalias.cold alias.col is alias.colot alias.colull
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... order by alias.col desc;"
"DECLARE @Events Table(EventId int, EventDate DATETIME); INSERT INTO @Events VALUES (XYZ), (N, X), (N, X), (N, X), (N, X), (N, X), (N, X), (N, X), (N, X), (N, X), (N, X), (N, X), (N, X), (N, X), (N, X), (N, X), (N, X), (N, X), (N, X), (N, X), (N, X), (N, X), (N, X); DECLARE @startDate DATETIME = X; DECLARE @endDate DATETIME = X; DECLARE @counter INT = N; DECLARE @nOfIntervals INT = DATEDIFF(minute, @startDate, @endDate) / N; ;WITH Temp AS ( SELECT n FROM (VALUES(N), (N), (N), (N), (N), (N), (N), (N), (N), (N)) Nums(n) ), Numbers AS ( SELECT n = tN.n * N + tN.n + N FROM Temp tN CROSS JOIN Temp tN ) SELECT * FROM Numbers ORDER BY n;"
"select top alias.col alias.col from table where alias.col = alias.col select t.tagalias.colame , alias.col as alias.col , alias.col as alias.col from table t ialias.colalias.coler joialias.col table e oalias.col alias.col = t.alias.colpostid ialias.colalias.coler joialias.col table w oalias.col alias.col = t.alias.colpostid where t.tagalias.colame = alias.col select alias.col , body , owalias.coleruserid as [user lialias.colk] from table where alias.col = alias.col aalias.cold creatioalias.coldate betweealias.col alias.col aalias.cold alias.col select alias.col from table where alias.col = alias.col"
"DECLARE @City nvarchar(N) = X; SELECT DisplayName, Reputation, Age, WebsiteUrl, COUNT(*) AS UpVotes FROM Tags INNER JOIN PostTags ON PostTags.TagId = Tags.id INNER JOIN Posts ON Posts.ParentId = PostTags.PostId INNER JOIN Votes ON Votes.PostId = Posts.Id and VoteTypeId = N INNER JOIN Users ON Posts.OwnerUserId = Users.Id WHERE Lower(TagName) LIKE X AND Lower(Location) LIKE LOWER(@City) GROUP BY DisplayName, Reputation, UpVotes, Age, WebsiteUrl ORDER BY UpVotes DESC"
"declare alias.col int = ##userid## select alias.col as alias.col, alias.col as alias.col, alias.col as alias.col from table v join table vt on alias.col = alias.col where alias.col = alias.col order by alias.col, alias.col desc"
"select alias.col, alias.col, alias.col from table where alias.col > alias.col aalias.cold ealias.colists (select alias.col from table b where b.useralias.col = table.alias.col aalias.cold b.alias.colame = alias.col) aalias.cold ealias.colists (select alias.col from table b where b.useralias.col = table.alias.col aalias.cold b.alias.colame = alias.col) aalias.cold ealias.colists (select alias.col from table b where b.useralias.col = table.alias.col aalias.cold b.alias.colame = alias.col) aalias.cold ealias.colists (select alias.col from table b where b.useralias.col = table.alias.col aalias.cold b.alias.colame = alias.col) order by alias.col asc"
"select top alias.col:ialias.colt?alias.col max(alias.col) as alias.col,max(alias.col) as alias.col, max(alias.col) as alias.col,mialias.col(alias.col) as alias.col,coualias.colt(*) as alias.col from table q ialias.colalias.coler joialias.col table a oalias.col alias.col=alias.col where alias.col=alias.col aalias.cold alias.col=alias.col group by alias.col havialias.colg max(alias.col)<alias.col order by max(alias.col) desc"
"declare @userid ialias.colt = ##userid## declare alias.col ialias.colt = ##maxscore## create table table (id ialias.colt primary key) ialias.colsert table select alias.col from table q where (select coualias.colt(*) from table a where alias.col = alias.col aalias.cold alias.col > alias.col) = alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold closeddate is alias.colull aalias.cold q.parealias.coltid is alias.colull aalias.cold acceptedaalias.colswerid is alias.colull select top alias.col alias.col as [post lialias.colk], (us.reputatioalias.col / alias.col.alias.col + alias.col * alias.col) as alias.col from table u joialias.col table p oalias.col alias.col = alias.col joialias.col table pt oalias.col alias.col = alias.col joialias.col table us oalias.col alias.col = p.owalias.coleruserid where alias.col<=alias.col group by alias.col, us.reputatioalias.col, alias.col order by alias.col desc"
"select ( select count(*) as alias.col from table pts where alias.col = alias.col) + ( select count(*) as alias.col from table pts where alias.col = alias.col) as alias.col, alias.col alias.col, ( select count(*) as alias.col from table pts where alias.col = alias.col) as alias.col, alias.col alias.col, ( select count(*) as alias.col from table ptp where alias.col = alias.col) as alias.col from table tn join table tn on ( alias.col + alias.col = alias.col) order by alias.col desc"
"with table as ( select alias.col ,sum(case alias.col whealias.col alias.col thealias.col case p.posttypeid whealias.col alias.col thealias.col alias.col else alias.col ealias.cold else alias.col ealias.cold) + sum(case alias.col whealias.col alias.col thealias.col alias.col else alias.col ealias.cold) + sum(case alias.col whealias.col alias.col thealias.col alias.col else alias.col ealias.cold) as tot from table p ialias.colalias.coler joialias.col table v oalias.col alias.col = alias.col where v.creatioalias.coldate betweealias.col ##start:strialias.colg?alias.colalias.colalias.col## aalias.cold ##ealias.cold:strialias.colg?alias.colalias.colalias.col## aalias.cold alias.col ialias.col (alias.col) aalias.cold alias.col is alias.colot alias.colull group by alias.col ) , toptableusers as (select alias.col , t.tagalias.colame , row_alias.columber() over ( partitioalias.col by alias.col order by sum(case alias.col whealias.col alias.col thealias.col case p.posttypeid whealias.col alias.col thealias.col alias.col else alias.col ealias.cold else alias.col ealias.cold) + sum(case alias.col whealias.col alias.col thealias.col alias.col else alias.col ealias.cold) + sum(case alias.col whealias.col alias.col thealias.col alias.col else alias.col ealias.cold) desc) as rowalias.colum from table t ialias.colalias.coler joialias.col posttable pt oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table p oalias.col alias.col ialias.col (alias.col) ialias.colalias.coler joialias.col table v oalias.col alias.col = alias.col where v.creatioalias.coldate betweealias.col ##start:strialias.colg?alias.colalias.colalias.col## aalias.cold ##ealias.cold:strialias.colg?alias.colalias.colalias.col## aalias.cold alias.col ialias.col (alias.col) aalias.cold alias.col is alias.colot alias.colull group by alias.col , t.tagalias.colame ) select top alias.col tu.owalias.coleruserid as [user lialias.colk] from table tu ialias.colalias.coler joialias.col toptableusers ttalias.col oalias.col tu.owalias.coleruserid = ttalias.col.owalias.coleruserid ialias.colalias.coler joialias.col toptableusers ttalias.col oalias.col tu.owalias.coleruserid = ttalias.col.owalias.coleruserid ialias.colalias.coler joialias.col toptableusers ttalias.col oalias.col tu.owalias.coleruserid = ttalias.col.owalias.coleruserid where ttalias.col.rowalias.colum = alias.col aalias.cold ttalias.col.rowalias.colum = alias.col aalias.cold ttalias.col.rowalias.colum = alias.col order by alias.col desc"
"selealias.col top(alias.col) alias.col, displayalias.colame, alias.col, reputatioalias.col, creatioalias.coldate, lastaccessdate, alias.col + cast(alias.col as varchar) as alias.col from table where alias.col <alias.col aalias.cold reputatioalias.col > alias.col aalias.cold alias.col <> alias.col aalias.cold alias.col <> alias.col order by reputatioalias.col desc, alias.col;"
select alias.col from table where alias.col = alias.col
"selealias.col top alias.col alias.col as [user lialias.colk], reputatioalias.col, alias.col, dowalias.colvotes, roualias.cold(cast(alias.col * dowalias.colvotes as float) / (alias.col + dowalias.colvotes) , alias.col) as alias.col from table where reputatioalias.col > alias.col aalias.cold alias.col > alias.col aalias.cold dowalias.colvotes > alias.col order by alias.col desc"
"declare @lastdataupdate datetime selealias.col @lastdataupdate = max(alias.col) from posts selealias.col top alias.col table as [user lialias.colk], table, table, table, (table + table) as alias.col, table/(table + table + alias.col) as upvotepercealias.coltage, roualias.cold(cast((table + table) as float) / (alias.col(day,u.alias.col,@lastdataupdate)+alias.col),alias.col) as alias.col from table u where alias.col(day,table,getdate()) < alias.col order by alias.col desc"
"select alias.col, postalias.col as alias.col, alias.col, alias.col, owneruseralias.col as alias.col, comment, revisiongualias.col from table where owneruseralias.col = ##useralias.col## and alias.col is not null order by alias.col"
"selealias.col alias.col as alias.col, alias.col as alias.col, alias.col as [toalias.coll alias.colble], alias.col as [dubious alias.colble], cast(alias.col as float) / cast (alias.col as float) as alias.col, alias.col as alias.col from alias.colble u ialias.colalias.coler joialias.col ( selealias.col alias.colble as uid, coualias.colt(p.id) as alias.col from alias.colble p group by alias.colble ) p oalias.col alias.col = alias.col ialias.colalias.coler joialias.col ( selealias.col alias.col as uid, coualias.colt(alias.col.pid) as alias.col , alias.col.alias.col from ( selealias.col alias.colble as uid, p.id as pid , substrialias.colg ( substrialias.colg ( alias.col, charialias.coldealias.col(alias.col, upper(alias.col)) + alias.col, alias.col ), alias.col, charialias.coldealias.col(alias.col, substrialias.colg ( alias.col, charialias.coldealias.col(alias.col, upper(alias.col)) + alias.col, alias.col ) ) ) as alias.col from alias.colble p where alias.col(alias.col) < alias.col aalias.cold upper(alias.col) like alias.col ) as alias.col group by alias.col, alias.col.alias.col ) bad oalias.col alias.col = alias.col where alias.col > alias.col aalias.cold cast(alias.col as float) / cast (alias.col as float) > alias.col.alias.col order by alias.col desc"
"select coalias.colvert(varchar(alias.col), creatioalias.coldate, alias.col) as date, coualias.colt(alias.col) as questioalias.cols, sum(aalias.colswercoualias.colt) as aalias.colswers from table where alias.col like alias.col aalias.cold ((alias.col(alias.col, creatioalias.coldate) + @@alias.col) alias.col) alias.colot ialias.col (alias.colyz) group by coalias.colvert(varchar(alias.col), creatioalias.coldate, alias.col) order by coalias.colvert(varchar(alias.col), creatioalias.coldate, alias.col) desc;"
"select row_alias.columber() over(order by alias.col desc) as [#], table.id as [user lialias.colk], alias.col, locatioalias.col from table, table where table.id = table.userid aalias.cold table.class = alias.col aalias.cold table.tagbased = alias.col aalias.cold lower(table.alias.colame) = lower(alias.col) order by alias.col desc;"
"select left(replace(commealias.colt,x,x), charialias.coldex(x, replace(commealias.colt,x,x))alias.col) , coualias.colt(alias.col) from table where (tabletypeid = alias.col aalias.cold alias.col ialias.col (alias.col))) aalias.cold lealias.col(alias.col(alias.col(text))) > alias.col group by left(replace(commealias.colt,x,x), charialias.coldex(x, replace(commealias.colt,x,x))alias.col) order by alias.col desc"
"select top alias.col (case alias.col whealias.col alias.col thealias.col x whealias.col alias.col thealias.col x ealias.cold) as [t], p.id as [post lialias.colk], p.owalias.coleruserid as [user lialias.colk], p.score as [score], lealias.col(p.body) as [post lealias.colgth], (p.score * lealias.col(p.body)) as alias.col from table p where (alias.col = alias.col or alias.col = alias.col) aalias.cold commualias.colityowalias.coleddate is alias.colull order by alias.col desc"
"select count(*) from table where alias.col like alias.col; select id, displayname from table where alias.col like alias.col;"
"select left(replace(commealias.colt,x,x), charialias.coldex(x, replace(commealias.colt,x,x))alias.col) , coualias.colt(postid) from table where tabletypeid = alias.col aalias.cold lealias.col(alias.col(alias.col(text))) > alias.col group by left(replace(commealias.colt,x,x), charialias.coldex(x, replace(commealias.colt,x,x))alias.col) order by alias.col desc"
"DECLARE @UserId uniqueidentifier; SELECT @UserId = CONVERT(uniqueidentifier, X); SELECT @UserID;"
"select alias.col as alias.col, case alias.col whealias.col alias.col thealias.col x whealias.col alias.col thealias.col x else x ealias.cold as x, case pf.votetypeid whealias.col alias.col thealias.col x whealias.col alias.col thealias.col x else x ealias.cold as x, coualias.colt(alias.col) as votecoualias.colt, coalesalias.col (p.viewcoualias.colt, pp.viewcoualias.colt) as viewcoualias.colt from table pf left joialias.col table p oalias.col (alias.col = alias.col) left joialias.col table pp oalias.col (palias.col = p.parealias.coltid) where alias.col = alias.col:ialias.colt## aalias.cold pf.isaalias.coloalias.colymous = alias.col group by alias.col, alias.col, pf.votetypeid, p.viewcoualias.colt, pp.viewcoualias.colt"
"select alias.col as alias.col, alias.col, maalias.col(alias.col) as alias.col, alias.col as alias.col, alias.col as alias.col from table as alias, table as answer where alias.col is null and alias.communityowneddate is null and answer.posttypeid=n and answer.parentid = alias.col and alias.col < n group by alias.col, alias.col, alias.title, alias.col, alias.col having maalias.col(alias.col) > n order by maalias.col(alias.col) - alias.col desc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... order by alias.col desc;"
"select sum(alias.col) as alias.col , sum(alias.col) as alias.col , sum(alias.col) *alias.col - sum(alias.col)*alias.col as alias.col from ( select alias.col , sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as alias.col , sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as alias.col from table p ialias.colalias.coler joialias.col table pt oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table t oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table v oalias.col alias.col = alias.col where t.tagalias.colame= alias.col:strialias.colg## aalias.cold alias.col ialias.col (alias.col) aalias.cold alias.col = alias.col group by alias.col ) as basedata"
"selealias.col mialias.col(cast(alias.col as decimal)/cast(alias.col as decimal)) as alias.col, maalias.col(cast(alias.col as decimal)/cast(alias.col as decimal)) as alias.col, (sum(cast(alias.col as decimal)/cast(alias.col as decimal)) + alias.col) / coualias.colt(*) as alias.col from table where alias.col >= cast(alias.col:alias.col as alias) + alias.col aalias.cold alias.col < cast((alias.col:alias.col + alias.col) as alias) + alias.col aalias.cold alias.col = alias.col"
"select alias.col, count(*) from table p where alias.col is not null group by alias.col order by alias.col, alias.col();"
select alias.col from table
"select alias.col as alias.col, alias.col from table q where alias.col >= alias.col aalias.cold alias.col=alias.col aalias.cold alias.col is alias.colull aalias.cold q.acceptedaalias.colswerid is alias.colull aalias.cold alias.colot exists (select alias.col from table a where alias.col >= alias.col aalias.cold a.parealias.coltid = alias.col) order by alias.col desc"
"select alias.collialias.cols.col from ( select alias.collialias.cols.col(dalias.coly, (alias.col.alias.col + (alias.collialias.cols.col * alias.col.alias.col) + (alias.collialias.cols.col * c.alias.col)), x) alias.cols dalias.colte from (select alias.collialias.cols.col alias.cols alias.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col) alias.cols alias.col cross joialias.collialias.cols.col (select alias.collialias.cols.col alias.cols alias.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col) alias.cols alias.col cross joialias.collialias.cols.col (select alias.collialias.cols.col alias.cols alias.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col ualias.collialias.cols.colioalias.collialias.cols.col alias.colll select alias.collialias.cols.col) alias.cols c ) alias.col where alias.collialias.cols.col alias.coletweealias.collialias.cols.col x alias.colalias.collialias.cols.cold x order alias.coly alias.collialias.cols.col"
"select top (alias.col) alias.col as [user lialias.colk], coalias.colvert(float, dowalias.colvotes)/alias.col as alias.col, dowalias.colvotes, alias.col, (dowalias.colvotes+alias.col) as alias.col from table where reputatioalias.col > alias.col aalias.cold dowalias.colvotes > alias.col order by alias.col desc"
"select distinct t.tagname ,( case when t.wikipostid is null and alias.col is null then x when t.wikipostid is null then x when alias.col is null then x else x end ) as [what is missing] from table p inner join table pt on alias.col = coalesce(alias.col, alias.col) inner join table t on alias.col = alias.col where alias.col = alias.col:int?alias.col and (alias.col is null or t.wikipostid is null)"
"select top alias.col alias.col as [post lialias.colk], coualias.colt(alias.col) as dupcoualias.colt from table l where l.lialias.colktypeid = alias.col group by alias.col order by dupcoualias.colt asc"
"declare @latest_date datetime = (select max(alias.col) from table) - n; with openquestions as ( select * from table where posttypeid = n and closeddate is not null and alias.col >= @latest_date ), popularquestions as ( select qt.tagid, count(*) numquestions from posttags qt join openquestions q on qt.postid = q.id where q.viewcount >= n group by qt.tagid ), allquestions as ( select qt.tagid, count(*) numquestions from posttags qt join openquestions q on qt.postid = q.id group by qt.tagid ), questionratio as ( select pq.tagid, cast(pq.numquestions as numeric) / cast(aq.numquestions as numeric) * n ratio from popularquestions pq join allquestions aq on pq.tagid = aq.tagid ) select top n * from questionratio;"
"select row_number() over(order by alias.col desc) as [no], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... order by alias.col desc;"
"select top alias.col alias.col as [post lialias.colk], alias.col, viewcoualias.colt from table p where alias.col like alias.col order by viewcoualias.colt asc"
"select alias.col as alias.col, owalias.coleruseralias.col as alias.col, alias.col as alias.col from table p where (p.posttypealias.col = alias.col aalias.cold (alias.col like alias.col ... or alias.col like alias.col ...) aalias.cold alias.col like alias.col ...) or (p.posttypealias.col = alias.col aalias.cold (select coualias.colt(*) from table q where q.alias.col = p.parealias.coltalias.col aalias.cold alias.col like alias.col ...) <> alias.col aalias.cold alias.col like alias.col ...) order by alias.col asc"
"select alias.col as alias.col, alias.col as alias.col, alias.col, coalias.colvert (date, p.creatioalias.coldate) as date, c.id as [commealias.colt lialias.colk] from table p, table c, table ph where alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold ph.tabletypeid = alias.col aalias.cold c.creatioalias.coldate < ph.creatioalias.coldate aalias.cold alias.col is alias.colull aalias.cold p.creatioalias.coldate >= dateadd(moalias.colth, - ##history:ialias.colt?alias.col## , currealias.colt_timestamp) aalias.cold ( lower(c.text) like x or lower(c.text) like x or lower(c.text) like x)"
"select top alias.col sum(case whealias.col alias.col < alias.col thealias.col case whealias.col posttypeid = alias.col thealias.col alias.col else alias.col ealias.cold else alias.col ealias.cold) [alias.colegative alias.cold questioalias.cols], sum(case whealias.col alias.col < alias.col thealias.col case whealias.col posttypeid = alias.col thealias.col alias.col else alias.col ealias.cold else alias.col ealias.cold) [alias.colegative alias.cold aalias.colswers], sum(case whealias.col alias.col < alias.col thealias.col alias.col else alias.col ealias.cold) [total alias.colegative table], coualias.colt(*) [total table], (sum(case whealias.col alias.col < alias.col thealias.col alias.col else alias.col ealias.cold) / coualias.colt(*)) [alias.colegative peralias.colalias.coltage], owalias.coleruserid [user lialias.colk], alias.col from table joialias.col table u oalias.col alias.col = owalias.coleruserid where alias.col like alias.col group by owalias.coleruserid, alias.col havialias.colg coualias.colt(case whealias.col alias.col < alias.col thealias.col alias.col else alias.col ealias.cold) > alias.col order by [alias.colegative peralias.colalias.coltage] desc"
"declare @tagalias.colame alias.colvarchar(alias.col) = x select top alias.col alias.col, (select displayalias.colame from table udalias.col with (alias.cololock) where udalias.col.id = alias.col) ,coualias.colt(*) as uptable from table t with (alias.cololock) ialias.colalias.coler joialias.col posttable pt with (alias.cololock)oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table p with (alias.cololock) oalias.col p.parealias.coltid = alias.col ialias.colalias.coler joialias.col table v with (alias.cololock) oalias.col alias.col = alias.col aalias.cold alias.col = alias.col ialias.colalias.coler joialias.col table u with (alias.cololock) oalias.col alias.col = p.owalias.coleruserid where p.commualias.colityowalias.coleddate is alias.colull aalias.cold t.tagalias.colame = @tagalias.colame group by alias.col order by uptable desc"
"select avg(alias.col) as alias.col, mialias.col(alias.col) as alias.col, maalias.col(alias.col) as alias.col from table where alias.col > alias.col"
"selealias.col alias.col, count(alias.col) from ( selealias.col cast( cast(alias.col(alias.col, alias.col) as varchar) + alias.col + cast(alias.col(alias.col, alias.col) as varchar) + alias.col as datetime) alias.col from table p join table pt on alias.col = alias.col join table t on alias.col = alias.col where alias.col = alias.col ) as alias.col group by alias.col order by alias.col asc"
"select top alias.col tagalias.colame as alias.col, coualias.colt(*) [total table], alias.col.alias.col * coualias.colt(alias.col) / coualias.colt(*) as alias.col, coualias.colt(alias.col) [closed table] from table joialias.col posttable oalias.col table.id = posttable.tagid joialias.col table oalias.col table.id = posttable.postid group by tagid, tagalias.colame havialias.colg coualias.colt(alias.col) >= alias.col aalias.cold (alias.col.alias.col * coualias.colt(alias.col) / coualias.colt(*)) >= alias.col order by coualias.colt(alias.col) desc"
"select distialias.colct alias.col, votetypeid from table ialias.colalias.coler joialias.col table oalias.col table.votetypeid = table.id where alias.col = alias.col ;"
"select top alias.col alias.col as [user lialias.colk], reputatioalias.col as reputatioalias.col, reputatioalias.col /(alias.col(day, table.creatioalias.coldate, table.lastaccessdate)) as alias.col, alias.col(day, table.creatioalias.coldate, table.lastaccessdate) as [accoualias.colt age] from table where alias.col(day, table.creatioalias.coldate, table.lastaccessdate) < alias.col aalias.cold alias.col(day, table.creatioalias.coldate, table.lastaccessdate) > alias.col order by alias.col desc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... or location like x and alias.col >= n order by alias.col desc;"
"declare table table (alias.col ialias.colt, alias.col bit, improved bit) ialias.colsert table (alias.col, alias.col, improved) selealias.col alias.col as alias.col, case whealias.col alias.col is alias.colot alias.colull thealias.col alias.col else alias.col ealias.cold as alias.col, maalias.col(case whealias.col v.useralias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as improved from table s, table v where alias.col = v.suggestededitalias.col aalias.cold s.owalias.coleruseralias.col is alias.colull aalias.cold (alias.col is alias.colot alias.colull or s.rejealias.colioalias.coldate is alias.colot alias.colull) group by alias.col, alias.col declare alias.col ialias.colt, alias.col ialias.colt, @rejealias.colededits ialias.colt, @improvededits ialias.colt selealias.col alias.col = coualias.colt(*), alias.col = sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) from table selealias.col alias.col as alias.col, cast(alias.col as varchar) + alias.col + cast((alias.col * alias.col) / alias.col as varchar) + alias.col as alias.col"
"with table as ( selealias.col alias.col as alias.col, coualias.colt(*) as alias.col, isalias.colull(sum(case whealias.col p.acalias.colptedaalias.colswerid is alias.colull thealias.col alias.col else alias.col ealias.cold), alias.col) as acalias.colptedcoualias.colt from table p left joialias.col table aa oalias.col alias.col = p.acalias.colptedaalias.colswerid where alias.col = alias.col aalias.cold (alias.col is alias.colull or aa.owalias.coleralias.col != alias.col) aalias.cold (alias.col is alias.colot alias.colull or exists ( selealias.col alias.col from table a where a.parealias.coltid = alias.col aalias.cold alias.col > alias.col )) group by alias.col ), table as ( selealias.col alias.col, isalias.colull(acalias.colptedcoualias.colt, alias.col) / cast(alias.col as float) as acalias.colptrate from table where alias.col > ##mialias.colalias.col## ) selealias.col top alias.col## alias.col as [user lialias.colk], acalias.colptrate * alias.col as acalias.colptrate from table order by acalias.colptrate"
"create table table( id int, text varchar(n), from_user_id int, from_user varchar(n) ); create table #users( id int, from_user varchar(n), num_tweets int, from_user_id int ); insert into table values (xyz), (n,x,n,x), (n,x,n,x), (n,x,n,x) insert into #users values (xyz), (n,x,n,n), (n,x,n,n) update #users set #users.from_user_id = table.from_user_id from #users left join table on #users.from_user = table.from_user; update table set table.from_user = #users.id from table left join #users on table.from_user = #users.from_user; alter table table drop column from_user_id; alter table table alter column from_user int; select * from table; select * from #users;"
"select top alias.col alias.col as [post lialias.colk], alias.col, viewcoualias.colt from table where alias.col > alias.col aalias.cold viewcoualias.colt <> alias.col aalias.cold parealias.coltalias.col is alias.colull aalias.cold acceptedaalias.colsweralias.col is alias.colull order by viewcoualias.colt asc"
"select top alias.col alias.col as [post lialias.colk], alias.col as alias.col, aalias.colswercoualias.colt as [aalias.colswers], viewcoualias.colt as alias.col from table p where p.aalias.colswercoualias.colt > alias.col aalias.cold p.commualias.colityowalias.coleddate is alias.colull order by aalias.colswercoualias.colt desc"
"declare @lastdataupdate datetime selealias.col @lastdataupdate = max(alias.col) from posts selealias.col top alias.col table as [user lialias.colk], table, table, (table + table) as alias.col, roualias.cold(cast(table as float) / (alias.col(day,u.alias.col,@lastdataupdate)+alias.col),alias.col) as upvotesperday, roualias.cold(cast(table as float) / (alias.col(day,u.alias.col,@lastdataupdate)+alias.col),alias.col) as dowalias.colvotesperday, roualias.cold(cast((table + table) as float) / (alias.col(day,u.alias.col,@lastdataupdate)+alias.col),alias.col) as alias.col from table u order by alias.col desc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or lower(location) like x ... order by alias.col desc;"
"selealias.col alias.col, sum(alias.col) questioalias.cols from ( selealias.col z.alias.col, coualias.colt(alias.col) calias.colt, alias.col as [user lialias.colk] from( selealias.col cast( cast(alias.col(alias.col, y.creatioalias.coldate) as varchar) + alias.col + cast(alias.col(alias.col, y.creatioalias.coldate) as varchar) + alias.col as datetime) alias.col, alias.col from ( selealias.col palias.col.creatioalias.coldate creatioalias.coldate ,palias.col.owalias.coleruserid alias.col from table palias.col ialias.colalias.coler joialias.col table palias.col oalias.col palias.col.parealias.coltid=palias.col.id where palias.col.posttypeid=alias.col aalias.cold (palias.col.tags like alias.col) group by palias.col.owalias.coleruserid, palias.col.creatioalias.coldate ) y group by alias.col, creatioalias.coldate ) z group by alias.col,z.alias.col ) as alias.col where alias.col.calias.colt>alias.col group by alias.col order by alias.col asc"
"select top alias.col table.postid as [post lialias.colk], charialias.coldealias.col(alias.col,table.tealias.colt) as alias.col, charialias.coldealias.col(alias.col,table.tealias.colt) as alias.col, left( substrialias.colg(table.tealias.colt, charialias.coldealias.col(alias.col,table.tealias.colt)+alias.col, alias.col), charialias.coldealias.col(alias.col, table.tealias.colt)+alias.col ), table.tealias.colt from table where tabletypeid = alias.col order by table.creatioalias.coldate desc"
"select top alias.col alias.col as [commealias.colt score], pt.alias.colame as [commealias.colted oalias.col], alias.col as [commealias.colt], alias.col as [post lialias.colk] from table c, table pt, table p where alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold alias.col = alias.col:ialias.colt## order by alias.col desc"
"select case whealias.col alias.col is alias.colull thealias.col alias.col else alias.col ealias.cold as alias.col, coualias.colt( alias.col ) as table, avg( cast( alias.col as float ) ) as alias.col, avg( cast( p.viewcoualias.colt as float ) / datediff( day, p.creatioalias.coldate, getutcdate() ) ) as alias.col, avg( cast( isalias.colull( p.aalias.colswercoualias.colt, alias.col ) as float ) ) as alias.col, avg( cast( case whealias.col p.acalias.colptedaalias.colsweralias.col is alias.colull thealias.col alias.col else alias.col ealias.cold as float ) ) as alias.col from table p left joialias.col table ptj oalias.col alias.col = alias.col aalias.cold alias.col = ( select alias.col from table where alias.col = alias.col ) where alias.col < alias.col aalias.cold alias.col > alias.col aalias.cold alias.col ialias.col ( select pta.postalias.col from table pta ialias.colalias.coler joialias.col table ta oalias.col ta.alias.col = pta.tagalias.col aalias.cold ta.alias.col = alias.col ) group by case whealias.col alias.col is alias.colull thealias.col alias.col else alias.col ealias.cold"
select alias.col from table where upper(alias.col) like upper(alias.col);
"select alias.col, alias.col, alias.col, alias.col, alias.col, alias.col from table q ialias.colalias.coler joialias.col table a oalias.col alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold alias.col = alias.col where a.owalias.coleruserid = alias.col## order by alias.col asc"
"selealias.col top alias.col alias.col as [user lialias.colk], reputatioalias.col, alias.col as alias.col, cast(reputatioalias.col as alias.columeric) / (alias.col.alias.col * alias.col) as alias.col, cast(reputatioalias.col as alias.columeric) - (alias.col.alias.col * alias.col) as differealias.colce from table where alias.col > alias.col aalias.cold reputatioalias.col > alias.col order by differealias.colce desc"
select count(*) from table where table.body like alias.col;
"declare alias.col ialias.colt = ##userid## select alias.col as alias.col, alias.col as alias.col, case whealias.col q.acalias.colptedaalias.colswerid=alias.col thealias.col x ealias.cold as acalias.colpted, alias.col from table q ialias.colalias.coler joialias.col table a oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col order by alias.col desc, a.creatioalias.coldate desc"
"DECLARE @tag nvarchar(N) = ##tag:string##; SET @tag = Replace(Replace(Replace(Replace(@tag, X, X), X, X), X, X), X, X); DECLARE @tagpattern nvarchar(N) = X + @tag + X; SELECT a.Id AS [Post Link], a.CreationDate AS X, b.Id AS [Post Link], b.CreationDate AS X FROM Posts AS a JOIN Posts AS b ON a.Title = b.Title WHERE a.Id < b.Id and (a.Tags like @tagpattern or b.Tags like @tagpattern) and a.ClosedDate IS NULL and b.ClosedDate IS NULL;"
"select table.displayalias.colame, table.userid, table.alias.colame, table.reputatioalias.col from table ialias.colalias.coler joialias.col table oalias.col table.id=table.userid aalias.cold table.class=alias.col order by table.reputatioalias.col;"
select alias.col from table where alias.col=alias.col aalias.cold ( upper(locatioalias.col) like x ) aalias.cold displayalias.colame like x order by lastaccessdate desc
"selealias.col top alias.col table.id as [user lialias.colk], table.age, coualias.colt(table.id) as aalias.colswers, cast(avg(cast(alias.col as float)) as alias.columeric(alias.col,alias.col)) as [average aalias.colswer alias.col] from table ialias.colalias.coler joialias.col table oalias.col table.id = owalias.coleruserid where alias.col = alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold closeddate is alias.colull group by table.id, displayalias.colame, table.age havialias.colg coualias.colt(table.id) > alias.col order by aalias.colswers desc"
"select alias.col as alias.col, alias.col as alias.col, alias.col as date from table post joialias.col table vote oalias.col alias.col = alias.col joialias.col table parealias.colt oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col <> alias.col order by alias.col desc"
"declare @alias.col int = ##alias.col## select count(*) as alias.col, table.score, table.text, table.postid as alias.col from table where alias.col = @alias.col group by table.score, table.text, table.postid order by table.score desc"
"select alias.col as alias.col, alias.col alias.col from table where alias.col > alias.col aalias.cold alias.col like alias.col order by alias.col desc"
"select alias.col, posttypealias.col, body, parentalias.col, acceptedansweralias.col, score, owneruseralias.col, ownerdisplayname, tags, answercount from table where table.creationdate = alias.col"
"selealias.col coualias.colt(*) as alias.col, sum(alias.col) as alias.colcores, sum(alias.col) as alias.col, alias.col(cast(sum(alias.col) as float)/sum(alias.col), alias.col) as alias.col from table where alias.col=alias.col"
"select top alias.col alias.col as [user lialias.colk], roualias.cold((alias.col.alias.col * (alias.colutatioalias.col/alias.col)) / (alias.col+alias.col), alias.col) as alias.col, alias.colutatioalias.col as alias.col, alias.col as alias.col, dowalias.colvotes alias.col from table where alias.colutatioalias.col > alias.col aalias.cold alias.col > alias.col order by alias.col desc"
"with tablealias.col as ( select alias.col, alias.col, raalias.colk() over (partitioalias.col by alias.col order by alias.col desc) as raalias.colk, alias.col from( select alias.col, alias.col as alias.col, case whealias.col upper(locatioalias.col) like x thealias.col x else x ealias.cold as alias.col from table where alias.col > alias.col aalias.cold lealias.col(locatioalias.col) > alias.col ) as mytable ), toptablebyalias.col as ( select alias.col, alias.col, alias.col from tablealias.col where raalias.colk = alias.col ) select raalias.colk() over (order by sum(table.alias.col)/coualias.colt(*) desc) as raalias.colk, toptable.alias.col as alias.col, coualias.colt(alias.col) as alias.colbalias.coltable, sum(table.alias.col) as totalalias.col, sum(table.alias.col)/coualias.colt(*) as repsbyuser, toptable.alias.col [user lialias.colk], toptable.alias.col as leaderalias.col from toptablebyalias.col as toptable ialias.colalias.coler joialias.col tablealias.col as table oalias.col toptable.alias.col = table.alias.col where alias.col = alias.col group by toptable.alias.col, toptable.alias.col, toptable.alias.col havialias.colg coualias.colt(*) >= alias.col order by sum(table.alias.col)/coualias.colt(*) desc"
select alias.col as alias.col from table where alias.col like alias.col
"select row_number() over(order by alias.col desc) as [#], id as [user link], id, alias.col from table where (lower(location) like x or upper(location) like x ...) and alias.col > n order by alias.col desc;"
declare @questionnaire_question_alias.col int = ##questionnairequestionalias.col## select alias.col from table where parentalias.col = @questionnaire_question_alias.col;
select count(*) from table p where alias.col like alias.col or alias.col like alias.col or alias.col like alias.col or alias.col like alias.col or alias.col like alias.col or alias.col like alias.col
"declalias.colre @mialias.collialias.cols.colimumalias.collialias.cols.col ialias.collialias.cols.colt = ##mialias.collialias.cols.colimumalias.collialias.cols.col## select sum(alias.collialias.cols.col) alias.cols alias.collialias.cols.col, coualias.collialias.cols.colt(alias.collialias.cols.col) alias.cols alias.collialias.cols.col, alias.colvg(alias.collialias.cols.col) alias.cols alias.collialias.cols.col, alias.collialias.cols.col(alias.collialias.cols.col) alias.cols alias.collialias.cols.col, alias.collialias.cols.colp(alias.collialias.cols.col) alias.cols alias.collialias.cols.col, (( select top alias.collialias.cols.col alias.collialias.cols.col from ( select top alias.collialias.cols.col percealias.collialias.cols.colt alias.collialias.cols.col from talias.colble where alias.collialias.cols.col >= @mialias.collialias.cols.colimumalias.collialias.cols.col order by alias.collialias.cols.col ) alias.cols alias.col order by alias.collialias.cols.col desc) + ( select top alias.collialias.cols.col alias.collialias.cols.col from ( select top alias.collialias.cols.col percealias.collialias.cols.colt alias.collialias.cols.col from talias.colble where alias.collialias.cols.col >= @mialias.collialias.cols.colimumalias.collialias.cols.col order by alias.collialias.cols.col desc ) alias.cols alias.col order by alias.collialias.cols.col alias.colsc)) / alias.collialias.cols.col alias.cols alias.collialias.cols.col, (select top alias.collialias.cols.col alias.collialias.cols.col from talias.colble where alias.collialias.cols.col >= @mialias.collialias.cols.colimumalias.collialias.cols.col group by alias.collialias.cols.col order by coualias.collialias.cols.colt(*) desc) alias.cols alias.collialias.cols.col from talias.colble where alias.collialias.cols.col >= @mialias.collialias.cols.colimumalias.collialias.cols.col;"
"select alias.col as alias.col , alias.col as alias.col from table p joialias.col table ph oalias.col alias.col = alias.col where ph.tabletypeid = alias.col aalias.cold alias.col = alias.col aalias.cold alias.col is alias.colull aalias.cold p.aalias.colswercoualias.colt = alias.col order by alias.col"
"select alias.col as alias.col, alias.col as alias.col, comment from table where owneruseralias.col = ##useralias.col## and alias.col is not null"
"declare @command nvarchar(n) = xxxxxxxxxxxxxxxxxxxxx create table table (site nvarchar(n), tag nvarchar(n), count int); exec sp_msforeachdb @command select site, x + site + x + tag + x + tag as tag, count from table order by count desc, site, tag"
"DECLARE @Products TABLE(ID INT, family_id INT, Name VARCHAR(N), items_sold INT); DECLARE @families TABLE (ID INT, name VARCHAR(N)); INSERT INTO @Products VALUES (XYZ), (N, N, X, N), (N, N, X, N), (N, N, X, N), (N, N, X, N), (N, N, X, N), (N, N, X, N), (N, N, X, N), (N, N, X, N), (N, N, X, N); ;WITH cte AS ( SELECT *, ROW_NUMBER() OVER(PARTITION BY family_ID ORDER BY items_sold DESC) row_num FROM @Products ) SELECT * FROM cte where row_num = N Order by family_ID"
"select top alias.col alias.col as [user lialias.colk], alias.colutatioalias.col as alias.col, alias.col + dowalias.colalias.col as alias.col, alias.col as alias.col, dowalias.colalias.col as alias.col from table where alias.colutatioalias.col > alias.col aalias.cold alias.col(moalias.colth,lastaccessdate,(select maalias.col(lastactivitydate) from table)) < alias.col aalias.cold (alias.col + dowalias.colalias.col) < ((select sum(alias.col+dowalias.colalias.col) from table) / (select coualias.colt(*) from table where alias.colutatioalias.col > alias.col aalias.cold alias.col(moalias.colth,lastaccessdate,(select maalias.col(lastactivitydate) from table)) < alias.col)) order by alias.col desc"
"select alias.col as alias.col, alias.col as alias.col, alias.col, body from table as alias left joialias.col table as p oalias.col alias.alias.col = alias.col where alias.col = alias.col aalias.cold lealias.col(alias.col(alias.col)) > alias.col order by alias.col"
"select top alias.col## alias.col as alias.col, coualias.colt(alias.col) as alias.col, sum(case q.acalias.colptedaalias.colswerid whealias.col alias.col thealias.col alias.col else alias.col ealias.cold) as [acalias.colpted aalias.colswers], roualias.cold(sum(case q.acalias.colptedaalias.colswerid whealias.col alias.col thealias.col alias.col else alias.col ealias.cold) * alias.col.alias.col / coualias.colt(alias.col), alias.col) as [peralias.colalias.coltage acalias.colpted], sum(case q.acalias.colptedaalias.colswerid whealias.col alias.col thealias.col alias.col else alias.col ealias.cold) * roualias.cold(sum(case q.acalias.colptedaalias.colswerid whealias.col alias.col thealias.col alias.col else alias.col ealias.cold) / coualias.colt(alias.col), alias.col) as weightialias.colg from table as a joialias.col table as q oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col group by alias.col havialias.colg coualias.colt(alias.col) > ##mialias.colimumaalias.colswersperuser## order by weightialias.colg desc"
"declare db_c cursor for select alias.col from table where database_id > alias.col declare @db_c_alias.colame sysalias.colame declare @sql alias.colvarchar(max) create table table ( site alias.colvarchar(alias.col) , calias.colt ialias.colt ); opealias.col db_c fetch alias.colext from db_c ialias.colto @db_c_alias.colame while(@@fetch_status = alias.col) begialias.col set @sql = alias.colx+ quotealias.colame(@db_c_alias.colame) +xx+ quotealias.colame(@db_c_alias.colame) +xx; exec (@sql) fetch alias.colext from db_c ialias.colto @db_c_alias.colame ealias.cold; close db_c; deallocate db_c; select * from tableorder by calias.colt desc"
"selealias.col alias.col + cast(alias.col as varchar(alias.col)) + alias.col + cast(alias.col as varchar(alias.col)) as [lialias.colk], case alias.col whealias.col alias.col thealias.col alias.col else alias.col ealias.cold as [type], p.body as [body], p.creatioalias.coldate as [creatioalias.coldate], p.lasteditdate as [lasteditdate], p.lasteditoruserid as [user lialias.colk] from table p where (alias.col = alias.col aalias.cold alias.colot ealias.colists (selealias.col alias.col from table t where t.ealias.colalias.colrptpostid = alias.col)) or (alias.col = alias.col aalias.cold alias.colot ealias.colists (selealias.col alias.col from table t where alias.col = alias.col))"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like lower(x) order by alias.col desc;"
"select alias.col , sum( case whealias.col table.votetypeid = alias.col thealias.col alias.col whealias.col table.votetypeid = alias.col thealias.col alias.col else alias.col ealias.cold ) as earalias.coledrep from table as questioalias.cols , table as aalias.colswers , table where questioalias.cols.posttypeid = alias.col aalias.cold questioalias.cols.creatioalias.coldate betweealias.col x aalias.cold x aalias.cold dateadd( week, alias.col, questioalias.cols.creatioalias.coldate ) >= questioalias.cols.closeddate aalias.cold aalias.colswers.posttypeid = alias.col aalias.cold aalias.colswers.parealias.coltid = questioalias.cols.id aalias.cold table.postid = aalias.colswers.id group by alias.col"
"select top alias.col ualias.colluckyaalias.colswer.owalias.coleruserid as [user lialias.colk], questioalias.col.id as [post lialias.colk], ualias.colluckyaalias.colswer.score as [igalias.colored score] from table as ualias.colluckyaalias.colswer, table as questioalias.col where questioalias.col.id = ualias.colluckyaalias.colswer.parealias.coltid aalias.cold questioalias.col.posttypeid = alias.col aalias.cold questioalias.col.acceptedaalias.colswerid is alias.colot alias.colull aalias.cold questioalias.col.acceptedaalias.colswerid != ualias.colluckyaalias.colswer.id aalias.cold questioalias.col.aalias.colswercoualias.colt >= alias.col aalias.cold ualias.colluckyaalias.colswer.score >= alias.col aalias.cold ualias.colluckyaalias.colswer.score > ( select alias.col.alias.col * sum(allaalias.colswers.score) from table as allaalias.colswers where questioalias.col.id = allaalias.colswers.parealias.coltid ) order by ualias.colluckyaalias.colswer.score desc"
declare @alias.col ialias.colt = ##alias.col## select top(alias.col) alias.col from table where alias.col = @alias.col order by alias.col desc
"select alias.col, alias.col, alias.col, alias.col, alias.col, alias.col, alias.col, alias.col, alias.col, alias.col, alias.col, alias.col, alias.col, alias.col, alias.col, alias.col from table u, table a, (select alias.col, owalias.coleruseralias.col, alias.col, alias.col, alias.col, posttypealias.col, alias.col from table where alias.col like alias.col or alias.col like alias.col or alias.col like alias.col aalias.cold posttypealias.col=alias.col) alias.col where alias.col = a.parealias.coltalias.col aalias.cold alias.col=alias.col aalias.cold alias.col=alias.col order by alias.col"
"declare @alias.col int = ##alias.col## select table.alias.col, table.text, table.title from table inner join table on table.id = table.postid where alias.col = @alias.col order by alias.col desc"
"with table as ( select top alias.col alias.col, t.tagalias.colame from table t, posttable pt where alias.col = alias.col group by t.tagalias.colame, alias.col order by coualias.colt(alias.col) desc ), table as( select p.parealias.coltid, alias.col from table p where p.owalias.coleruserid = alias.col## aalias.cold p.commualias.colityowalias.coleddate is alias.colull ) select talias.col.tagalias.colame as alias.col, sum(palias.col.score) as alias.col, case whealias.col sum(palias.col.score) >= alias.col thealias.col alias.col else alias.col ealias.cold as alias.col from table talias.col, table palias.col, posttable ptalias.col where ptalias.col.postid = palias.col.parealias.coltid aalias.cold ptalias.col.tagid = talias.col.id group by talias.col.tagalias.colame order by sum(palias.col.score) desc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like lower(x) order by alias.col desc;"
select alias.colame from table where alias.col>alias.col
"select top alias.col alias.col, alias.col as [post lialias.colk], p.viewcoualias.colt, alias.col, year(p.lastactivityalias.colate), moalias.colth(p.lastactivityalias.colate) from table p where alias.col = alias.col aalias.colalias.col p.viewcoualias.colt < alias.col aalias.colalias.col alias.col < alias.col aalias.colalias.col p.aalias.colswercoualias.colt < alias.col aalias.colalias.col p.lastactivityalias.colate < (alias.col(alias.col, alias.col, getalias.colate())) aalias.colalias.col p.closealias.colalias.colate is alias.colull aalias.colalias.col p.acceptealias.colaalias.colswerialias.col is alias.colull aalias.colalias.col alias.colot exists (select c.[ialias.col] from [table] c where alias.col > alias.col aalias.colalias.col c.[parealias.coltialias.col] = p.[ialias.col]) oralias.coler by year(p.lastactivityalias.colate), moalias.colth(p.lastactivityalias.colate), alias.col, p.viewcoualias.colt"
declare alias.col ialias.colt = ##userid## select coualias.colt(*) as alias.col from table where alias.col = alias.col aalias.cold lasteditoruserid = alias.col aalias.cold owalias.coleruserid != alias.col
"select top alias.col displayalias.colame, alias.col from table where alias.col is alias.colot alias.colull order by reputatioalias.col asc"
"select alias.col as alias.col,alias.col from table where alias.col ialias.col (alias.col)) >= alias.col aalias.cold alias.col is alias.colull) group by parealias.coltalias.col havialias.colg max(score) <= alias.col ) ;"
"select top alias.col alias.col, parealias.coltalias.col as [post lialias.colk], alias.col, alias.col, body from table where (alias.col like alias.col) order by alias.col desc;"
"declare @temp table (TagId int, TagName char(N), OwnerUserId int, DisplayName nvarchar(N), Score int); declare @tagsId int declare CustList cursor for select top N tagid from posttags group by tagid order by count(*) desc OPEN CustList FETCH NEXT FROM CustList INTO @tagsId WHILE @@FETCH_STATUS = N BEGIN insert @temp (TagId, TagName, OwnerUserId, DisplayName, Score) select top N @tagsId as TagId, t.TagName, p.OwnerUserId as UsersId, u.DisplayName, sum(p.Score) as Score from PostTags pt, Posts p, Posts pN, Users u, Tags t where pt.TagId = @tagsId and pt.PostId=pN.Id and pN.AcceptedAnswerId = p.Id and p.OwnerUserId=u.id and pt.TagId=t.id group by u.DisplayName, p.OwnerUserId, t.TagName order by sum(p.Score) desc FETCH NEXT FROM CustList INTO @tagsId END CLOSE CustList DEALLOCATE CustList select * from @temp"
"select alias.col, alias.col, alias.col, alias.col from table as palias.col joialias.col table as palias.col oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold palias.col.owalias.coleruserid = alias.col## aalias.cold alias.col > alias.col"
"select table.alias.col as alias.col from table joialias.col ( select alias.col, case whealias.col p.tabletypealias.col = alias.col thealias.col alias.col else alias.col ealias.cold as isprotected from table p joialias.col ( select max(alias.col) alias.col from table where tabletypealias.col ialias.col (alias.col) group by alias.col ) m oalias.col p.alias.col = m.alias.col ) alias.col oalias.col table.alias.col = alias.col.alias.col where alias.col(day, creatioalias.coldate, currealias.colt_timestamp) > alias.col aalias.cold closeddate is alias.colull aalias.cold acalias.colptedaalias.colsweralias.col is alias.colot alias.colull"
"select top alias.col alias.col as [post lialias.colk], creatioalias.coldate from table where body like x"
"select alias.col, alias.col as alias.col, case whealias.col alias.col = alias.col thealias.col alias.colull else alias.col ealias.cold as aalias.colswers, case whealias.col acalias.colptedaalias.colsweralias.col is alias.colot alias.colull thealias.col x else alias.colull ealias.cold as acalias.colpted, case whealias.col commualias.colityowalias.coleddate is alias.colot alias.colull thealias.col x else alias.colull ealias.cold as wiki, commealias.coltcoualias.colt as commealias.colts, viewcoualias.colt as views, owalias.coleruseralias.col as [user lialias.colk] from table where alias.col is alias.colot alias.colull aalias.cold (alias.col >= alias.col or (alias.col is alias.colot alias.colull aalias.cold alias.col > alias.col)) order by alias.col asc, alias.col"
"select (uptable.alias.col + dowalias.coltable.alias.col)/dowalias.coltable.alias.col from (select coalias.colvert(decimal,coualias.colt(*)) as alias.col from table where table.votetypeid = alias.col) as uptable, (select coalias.colvert(decimal,coualias.colt(*)) as alias.col from table where table.votetypeid = alias.col) as dowalias.coltable"
"select alias.col as alias.col, coualias.colt(*) as alias.col, alias.col(alias.col * coualias.colt(case whealias.col alias.col-alias.col < alias.col thealias.col alias.col ealias.cold) / coualias.colt(*), alias.col) as [< alias.col], alias.col(alias.col * coualias.colt(case whealias.col alias.col-alias.col = alias.col thealias.col alias.col ealias.cold) / coualias.colt(*), alias.col) as [alias.col], alias.col(alias.col * coualias.colt(case whealias.col alias.col-alias.col = alias.col thealias.col alias.col ealias.cold) / coualias.colt(*), alias.col) as [alias.col], alias.col(alias.col * coualias.colt(case whealias.col alias.col-alias.col = alias.col thealias.col alias.col ealias.cold) / coualias.colt(*), alias.col) as [alias.col], alias.col(alias.col * coualias.colt(case whealias.col alias.col-alias.col = alias.col thealias.col alias.col ealias.cold) / coualias.colt(*), alias.col) as [alias.col], alias.col(alias.col * coualias.colt(case whealias.col alias.col-alias.col = alias.col thealias.col alias.col ealias.cold) / coualias.colt(*), alias.col) as [alias.col], alias.col(alias.col * coualias.colt(case whealias.col alias.col-alias.col > alias.col thealias.col alias.col ealias.cold) / coualias.colt(*), alias.col) as [> alias.col] from table where alias.col = alias.col aalias.cold alias.col >= alias.col group by alias.col order by alias.col"
"select count(alias.col) as alias.col, count(distinct alias.col) as [unique users], sum(case when q.acceptedanswerid = alias.col then n else n end) as [accepted answers], count(distinct case when q.acceptedanswerid = alias.col then alias.col end) as [unique users who accepted] from table q inner join table a on alias.col = alias.col where alias.col = alias.col## and alias.col != alias.col##"
"select alias.col(year,creatioalias.coldate) as year, alias.col(moalias.colth,creatioalias.coldate) as moalias.colth, coualias.colt(id) as total from table where alias.col = alias.col group by alias.col(moalias.colth,creatioalias.coldate), alias.col(year,creatioalias.coldate) order by alias.col(year,creatioalias.coldate), alias.col(moalias.colth,creatioalias.coldate)"
"select top alias.col coualias.colt(alias.col) as alias.col, alias.col as [post lialias.colk],alias.col from table v ialias.colalias.coler joialias.col table p oalias.col alias.col=alias.col ialias.colalias.coler joialias.col table pt oalias.col alias.col=alias.col ialias.colalias.coler joialias.col table t oalias.col alias.col=alias.col aalias.cold t.tagalias.colame=alias.col where alias.col = alias.col aalias.cold alias.col=alias.col group by alias.col,alias.col order by alias.col desc"
"declare @UserId int = ##UserId##; with fights as ( select myAnswer.ParentId as Question, myAnswer.Score as MyScore, jonsAnswer.Score as JonsScore from Posts as myAnswer inner join Posts as jonsAnswer on jonsAnswer.OwnerUserId = N and myAnswer.ParentId = jonsAnswer.ParentId where myAnswer.ownerUserId = @UserId and myAnswer.postTypeId = N ) select case when myScore > JonsScore then X when myScore < JonsScore then X else X end as X, Question as [Post Link], myScore as X, jonsScore as X from fights;"
declare alias.col ialias.colt = alias.col select alias.col from table where table.userid = alias.col aalias.cold table.alias.col > alias.col order by alias.col desc
select alias.col as alias.col from table as questioalias.col ialias.colalias.coler joialias.col table as allaalias.colswers oalias.col alias.col = alias.col where ealias.colists ( select alias.col from table as aalias.colswer where alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold alias.col(alias.col) <= alias.col aalias.cold alias.col like alias.col aalias.cold questioalias.col.acceptedaalias.colswerid != aalias.colswer.id ) group by alias.col havialias.colg coualias.colt(alias.col) > alias.col
select top alias.col alias.col as [post lialias.colk] from table p left outer joialias.col table c oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table pt oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table t oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col is alias.colull aalias.cold t.tagalias.colame =x aalias.cold aalias.colswercoualias.colt =alias.col aalias.cold p.score > alias.col aalias.cold closeddate is alias.colull
"DECLARE @username AS NVARCHAR(N) = ##DisplayName:string? ##; DECLARE @userId AS INT = ##UserId:int?N##; DECLARE @SpecialThanks AS INT = ##SpecialThanks:int?N##; WITH Answers AS ( SELECT a.* FROM Posts a JOIN Users u ON a.OwnerUserId = u.Id AND (@username = X OR u.DisplayName = @username) AND (@userId = N OR u.Id = @userId) WHERE PostTypeId = N ) SELECT TOP ##Limit:int?N## u.Id [User Link], CAST(ThankCount / N. / AnswerCount AS NUMERIC(N, N)) AvgThank, ThankCount, AnswerCount FROM Users u JOIN ( SELECT u.Id, COUNT(*) ThankCount FROM Answers a JOIN Users u ON a.OwnerUserId = u.Id JOIN Comments c ON a.Id = c.PostId AND c.UserId != u.Id WHERE LOWER(c.Text) LIKE X AND ( @SpecialThanks <= N OR ( LOWER(c.Text) LIKE X OR LOWER(c.Text) LIKE X ... ) ) GROUP BY u.Id ) Thanks ON u.Id = Thanks.Id JOIN ( SELECT u.Id, COUNT(*) AnswerCount FROM Answers a JOIN Users u ON a.OwnerUserId = u.Id GROUP BY u.Id ) Answers ON u.Id = Answers.Id ORDER BY ThankCount DESC"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or lower(location) like x ... order by alias.col desc;"
"select top alias.col alias.col as [post lialias.colk], alias.col, lastactivitydate from table where posttypealias.col=alias.col aalias.cold owalias.coleruseralias.col!=##useralias.col:ialias.colt## aalias.cold lastactivitydate < alias.col(alias.col, alias.col, alias.col()) order by raalias.cold()"
"select alias.col as alias.col, sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as dowalias.coltable, mialias.col(b.creatioalias.coldate) as oldestpost, coualias.colt(alias.col) as alias.columberoftable from table a ialias.colalias.coler joialias.col table b oalias.col alias.col = alias.col aalias.cold alias.col ialias.col (alias.col) where alias.col ialias.col (alias.col) group by alias.col order by sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) desc"
"select alias.col(moalias.colth, alias.col(moalias.colth, x, table.creatioalias.coldate), x) [moalias.colth] ,coualias.colt(case whealias.col table.tags like x thealias.col alias.col else alias.colull ealias.cold) *alias.col.alias.col/coualias.colt(*) [percealias.coltage of questioalias.cols tagged &lt;##tagalias.colame##&gt;] from table where table.posttypeid = alias.col group by alias.col(moalias.colth, x, table.creatioalias.coldate) order by alias.col(moalias.colth, x, table.creatioalias.coldate);"
"select top alias.col tagalias.colame, [coualias.colt], coalias.colcat(alias.col,coalias.colcat(tagalias.colame,coalias.colcat(alias.col, coalias.colcat([coualias.colt],alias.col)))) as [easy list formattialias.colg] from table left joialias.col table pe oalias.col alias.col = table.ealias.colcerptpostid left joialias.col tableyalias.coloalias.colyms oalias.col sourcetagalias.colame = table.tagalias.colame where coalesce(lealias.col(alias.col),alias.col) = alias.col aalias.cold alias.col is alias.colull order by coualias.colt desc, tagalias.colame"
select alias.col from table where alias.col ialias.col ( select alias.col from table where alias.col>alias.col aalias.cold acceptedaalias.colsweralias.col is alias.colot alias.colull aalias.cold alias.col ialias.col (select postalias.col from table where tagalias.col ialias.col (select alias.col from table where tagalias.colame like alias.col) ) )
"select top alias.col row_alias.columber() over(order by reputatioalias.col desc) as [#], id as [user lialias.colk], reputatioalias.col, locatioalias.col from table where lower(locatioalias.col) like x or upper(locatioalias.col) like x ... or locatioalias.col like x aalias.cold reputatioalias.col >= alias.col order by reputatioalias.col desc;"
select alias.col from table where lastactivitydate > alias.col and lastactivitydate < alias.col
"select table.tagname, count(table.id) from table left join table on table.id = table.postid left join table on table.tagid = table.id where table.tagname in (alias.col) group by table.tagname"
"declare @alias.columtable ialias.colt = ##alias.columtable:ialias.colt?alias.col## declare @mialias.colcoualias.colt ialias.colt = ##mialias.colcoualias.colt:ialias.colt?alias.col## declare alias.col alias.colvarchar(alias.col) = ##ealias.colcludetag:strialias.colg?-## select top (@alias.columtable) alias.col, table.coualias.colt, sum(alias.col) as views, sum(alias.col)/table.coualias.colt as [views per questioalias.col] ialias.colto table from table left joialias.col posttable oalias.col posttable.tagid = table.id left joialias.col table oalias.col table.id = posttable.postid where table.posttypeid = alias.col aalias.cold table.coualias.colt >= @mialias.colcoualias.colt aalias.cold (alias.col = alias.col or table alias.colot like alias.col + alias.col + alias.col) group by alias.col, table.coualias.colt order by table.coualias.colt desc, table.alias.col select alias.col, coualias.colt, views, [views per questioalias.col] from table order by [views per questioalias.col] desc select row_alias.columber() over (order by [views per questioalias.col] desc) as raalias.colk, [views per questioalias.col] from table"
"selealias.col top alias.col## alias.col alias.col , alias.col(alias.col, alias.col, alias.col() )alias.col ,(alias.col+alias.col) alias.col , alias.col(cast(alias.colullif((alias.col+alias.col), alias.col)as float) / alias.col(alias.col, alias.col, alias.col()),alias.col) alias.col from table where alias.col <> alias.col aalias.cold (alias.col+alias.col)> alias.col order by alias.col desc"
"select alias.col as alias.col, tealias.colt from table where tealias.colt like alias.col"
"selealias.col un.emailhash, count(alias.col) as alias.col, (selealias.col cast(alias.col as varchar) + alias.col + alias.col + alias.col from table un where un.emailhash = un.emailhash for alias.colml path (alias.col)) as idsandnames from table un where un.emailhash is not null group by un.emailhash having count(alias.col) > n order by alias.col desc"
"select top alias.col?alias.col alias.col as alias.col, coualias.colt(alias.col) as alias.col, sum(case q.acalias.colptedaalias.colswerid whealias.col alias.col thealias.col alias.col else alias.col ealias.cold) as [acalias.colpted aalias.colswers], roualias.cold(sum(case q.acalias.colptedaalias.colswerid whealias.col alias.col thealias.col alias.col else alias.col ealias.cold) * alias.col.alias.col / coualias.colt(alias.col), alias.col) as [peralias.colalias.coltage acalias.colpted], roualias.cold(cast(sum(case q.acalias.colptedaalias.colswerid whealias.col alias.col thealias.col alias.col else alias.col ealias.cold) as float) * (cast(sum(case q.acalias.colptedaalias.colswerid whealias.col alias.col thealias.col alias.col else alias.col ealias.cold) as float) / coualias.colt(alias.col)), alias.col) as weightialias.colg from table as a joialias.col table as q oalias.col alias.col = alias.col where alias.col is alias.colot alias.colull aalias.cold alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold alias.col = alias.col group by alias.col order by weightialias.colg desc"
"with data as ( select alias.col as alias.col, alias.col as subalias.col, alias.col as amoualias.colt ualias.colioalias.col select alias.col, alias.col, alias.col ualias.colioalias.col select alias.col, alias.col, alias.col ualias.colioalias.col select alias.col, alias.col, alias.col ualias.colioalias.col select alias.col, alias.col, alias.col ) , table as ( select alias.col as alias.col , alias.col as subalias.col) , g as ( select d.alias.col, d.subalias.col, c.subalias.col table_subalias.col, sum(amoualias.colt) amoualias.colt, groupialias.colg(c.subalias.col) subalias.colgroup from data d left joialias.col table c oalias.col d.alias.col = c.alias.col group by d.alias.col, d.subalias.col, c.subalias.col with rollup ) select g.alias.col, g.subalias.col, case whealias.col g.table_subalias.col is alias.colull thealias.col g.amoualias.colt whealias.col g.subalias.col = g.table_subalias.col thealias.col galias.col.amoualias.colt else alias.col ealias.cold amoualias.colt from g left joialias.col g galias.col oalias.col g.alias.col = galias.col.alias.col aalias.cold galias.col.subalias.colgroup= alias.col aalias.cold g.subalias.col is alias.colot alias.colull aalias.cold galias.col.subalias.col is alias.colull where g.subalias.colgroup= alias.col"
"select top alias.col table.id as [post lialias.colk], table.viewcoualias.colt, table.lastactivitydate from table joialias.col table oalias.col table.id = table.postid joialias.col table oalias.col table.tagid = table.id where table.tagalias.colame like alias.col aalias.cold table.tagalias.colame like alias.col ... order by table.viewcoualias.colt desc;"
"select alias.col as alias.col, alias.col as alias.col, alias.col, alias.col, alias.col from table where tealias.colt like alias.col and alias.col=alias.col order by alias.col desc"
"selealias.col avg(cast(alias.col(alias.col, alias.col, alias.col) as alias.columeric)) as alias.col from table u joialias.col table p oalias.col alias.col = alias.col where alias.col = alias.col"
"(select alias.col, alias.col, body, posttypeid from table where alias.col=alias.col:alias.col) union (select alias.col, null, text, n from table where alias.col=alias.col:alias.col)"
select alias.col as alias.col from table p where alias.col > alias.col aalias.cold p.aalias.colswercoualias.colt < alias.col order by alias.col desc
"selealias.col top alias.col table.id as [user lialias.colk], coualias.colt(palias.col.id) as aalias.colswers, cast(avg(cast(palias.col.score as float)) as alias.columeric(alias.col,alias.col)) as [average aalias.colswer score], cast(mialias.col(cast(palias.col.score as float)) as alias.columeric(alias.col,alias.col)) as [mialias.colimum aalias.colswer score], cast(max(cast(palias.col.score as float)) as alias.columeric(alias.col,alias.col)) as [maximum aalias.colswer score] from table p joialias.col table palias.col oalias.col palias.col.parealias.coltid = alias.col joialias.col table pt oalias.col alias.col = alias.col joialias.col table t oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table oalias.col table.id = palias.col.owalias.coleruserid where palias.col.posttypeid = alias.col aalias.cold palias.col.commualias.colityowalias.coleddate is alias.colull aalias.cold palias.col.closeddate is alias.colull aalias.cold t.tagalias.colame = x group by table.id, displayalias.colame havialias.colg coualias.colt(alias.col) > alias.col order by [average aalias.colswer score] desc, aalias.colswers desc"
"declare @mialias.colaalias.colswers ialias.colt = ##mialias.colaalias.colswers## select top alias.col alias.col as [user lialias.colk], coualias.colt(*) as alias.columaalias.colswers, sum(case whealias.col q.owalias.coleruserid = a.owalias.coleruserid thealias.col alias.col else alias.col ealias.cold) as alias.columowalias.col, (sum(case whealias.col q.owalias.coleruserid = a.owalias.coleruserid thealias.col alias.col else alias.col ealias.cold)*alias.col.alias.col/coualias.colt(*)) as owalias.colperalias.colalias.colt from table a ialias.colalias.coler joialias.col table u oalias.col alias.col = a.owalias.coleruserid ialias.colalias.coler joialias.col table q oalias.col a.parealias.coltid = alias.col group by alias.col havialias.colg coualias.colt(*) >= @mialias.colaalias.colswers order by owalias.colperalias.colalias.colt desc, alias.columowalias.col desc"
select alias.col from table ialias.colalias.coler joialias.col table oalias.col (table.id = table.votetypeid) where table.userid = alias.col
"selealias.col top alias.col table.id as [user lialias.colk], coualias.colt(table.id) as aalias.colswers, cast(avg(cast(alias.col as float)) as alias.columeric(alias.col,alias.col)) as [average aalias.colswer alias.col] from table ialias.colalias.coler joialias.col table oalias.col table.id = owalias.coleruserid where alias.col = alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold closeddate is alias.colull group by table.id, displayalias.colame havialias.colg coualias.colt(table.id) > alias.col order by [average aalias.colswer alias.col] desc"
"select alias.col, alias.col from (select alias.colutation as alias.col, count(*) as alias.col from table group by alias.colutation) t order by alias.col"
"select top alias.col u.displayalias.colame, table from users u order by table asc"
"select top alias.col alias.col as [post lialias.colk], alias.col, a.creatioalias.coldate from table as a ialias.colalias.coler joialias.col table as q oalias.col a.parealias.coltid = alias.col ialias.colalias.coler joialias.col table as ph oalias.col alias.col = alias.col where ph.tabletypeid != alias.col aalias.cold alias.col > alias.col aalias.cold alias.col < alias.col group by alias.col, alias.col, a.creatioalias.coldate order by alias.col, a.creatioalias.coldate desc"
"select top alias.col owalias.coleruserid [user lialias.colk], coualias.colt(alias.col) [boualias.colty aalias.colswers provided], sum(boualias.coltyamoualias.colt) [boualias.colty amoualias.colt woalias.col], table.reputatioalias.col [reputatioalias.col], roualias.cold(sum(boualias.coltyamoualias.colt)*alias.col./table.reputatioalias.col,alias.col) [ reputatioalias.col gaialias.coled oalias.col boualias.colties] from table p,table, table where alias.col = alias.col aalias.cold p.owalias.coleruserid=table.id aalias.cold alias.col = alias.col aalias.cold table.reputatioalias.col>alias.col group by owalias.coleruserid, table.reputatioalias.col order by alias.col desc"
"select alias.col as alias.col, location, reputation from table where left (location , n) = left (x, n) order by location asc"
"select alias.col as alias.col, (sum(coalesce(alias.col(alias.col),alias.col)) + sum(coalesce(alias.col(alias.col),alias.col))) as alias.col, u.reputatioalias.col from table u, table p where p.owalias.coleruserid = alias.col aalias.cold u.reputatioalias.col >= alias.col group by alias.col, u.reputatioalias.col order by alias.col desc"
"select alias.col as alias.col, body, lealias.col(body) from table where alias.col = alias.col aalias.cold lealias.col(body) < alias.col aalias.cold closeddate is alias.colull order by lealias.col(body) asc;"
"set alias.colocoualias.colt oalias.col declare alias.col date select alias.col = max(alias.col) from table set alias.colocoualias.colt off select top alias.col alias.col as [user lialias.colk], reputatioalias.col, alias.col, reputatioalias.col/alias.col as repperalias.col from ( select alias.col, coalias.colvert(ialias.colt, alias.col - alias.col) as alias.col from table ) as tableaugmealias.colted where reputatioalias.col > alias.col aalias.cold alias.col = alias.col order by repperalias.col desc"
"declare @mialias.colaalias.colswers ialias.colt = ##mialias.colaalias.colswers## select top alias.col alias.col as [user lialias.colk], coualias.colt(*) as alias.columaalias.colswers, sum(case whealias.col q.acalias.colptedaalias.colswerid = alias.col thealias.col alias.col else alias.col ealias.cold) as alias.columacalias.colpted, (sum(case whealias.col q.acalias.colptedaalias.colswerid = alias.col thealias.col alias.col else alias.col ealias.cold)*alias.col.alias.col/coualias.colt(*)) as acalias.colptedperalias.colalias.colt from table a ialias.colalias.coler joialias.col table u oalias.col alias.col = a.owalias.coleruserid ialias.colalias.coler joialias.col table q oalias.col a.parealias.coltid = alias.col ialias.colalias.coler joialias.col table i oalias.col i.emailhash = u.emailhash aalias.cold u.emailhash is alias.colot alias.colull where (q.owalias.coleruserid <> alias.col or q.owalias.coleruserid is alias.colull) aalias.cold a.owalias.coleruserid=i.id aalias.cold alias.col <> i.id group by alias.col havialias.colg coualias.colt(*) >= @mialias.colaalias.colswers order by alias.columaalias.colswers desc"
";with Base as ( select p.Id [Post Link], count(p.Id) [count] from Posts p inner join Votes v on v.PostId = p.Id and v.VoteTypeId = N and ( p.ViewCount < N or DateDiff(day, v.CreationDate, GetDate()) <= N ) where p.PostTypeId = N and p.ClosedDate is null group by p.Id having count(p.Id) = N ) select count(N) [count] from Base"
"select table.id as alias.col, table.reputation, table.websiteurl from table where lower(location) like x order by table.reputation desc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col, creationdate from table where lower(location) like x or upper(location) like x ... order by alias.col desc;"
"DECLARE @LatestDates TABLE ( sortOverride INT DEFAULT N, [Table] VARCHAR (N), Value VARCHAR (N), [Last Date] DATETIME ); WITH Latest AS ( SELECT X AS T, CAST (X AS CHAR(N) ) CN, MAX (CreationDate) MN, CAST (X AS CHAR(N) ) CN, MAX (LastEditDate) MN, CAST (X AS CHAR(N) ) CN, MAX (LastActivityDate) MN, CAST (X AS CHAR(N) ) CN, MAX (ClosedDate) MN, CAST (X AS CHAR(N) ) CN, MAX (CommunityOwnedDate) MN FROM Posts ) INSERT INTO @LatestDates ([Table], Value, [Last Date]) SELECT T AS [Table] , Value , [Last Date] FROM Latest UNPIVOT ( Value FOR colName IN (XYZ) )AS unPN UNPIVOT ( [Last Date] FOR colNameN IN (XYZ) )AS unPN WHERE RIGHT (colName, N) = RIGHT (colNameN, N) select * from @LatestDates"
"selealias.col top(alias.col) alias.col as [user lialias.colk], u.displayalias.colame, u.reputatioalias.col, coualias.colt(alias.col), (cast(u.reputatioalias.col as float) / cast(coualias.colt(alias.col) as float)) as alias.col from table u left joialias.col table p oalias.col alias.col = p.owalias.coleruserid where (alias.col = alias.col or alias.col = alias.col) aalias.cold alias.col = alias.col:ialias.colt## group by alias.col, u.displayalias.colame, u.reputatioalias.col order by alias.col desc"
select alias.col from table un where un.emailhash = alias.col
"declare @useralias.col ialias.colt = ##useralias.col## declare @alias.col ialias.colt = (select alias.col from table where alias.col = @useralias.col) declare table float = (select coualias.colt(*) as alias.col from table where alias.col < @alias.col) declare @alias.columtable ialias.colt = (select coualias.colt(*) from table) select @alias.col as alias.col, table as alias.col, @alias.columtable as totaltable, (table/@alias.columtable * alias.col) as percealias.coltile"
"select case whealias.col alias.col >= alias.col thealias.col alias.col else coalias.colcat(alias.col, alias.col, alias.col) ealias.cold as ealias.colplaialias.coler, case whealias.col alias.col >= alias.col thealias.col alias.col else coalias.colcat(alias.col, alias.col, alias.col) ealias.cold as refialias.coler, case whealias.col alias.col >= alias.col thealias.col alias.col else coalias.colcat(alias.col, alias.col, alias.col) ealias.cold as illumialias.colator from (select coualias.colt(distialias.colct alias.col) as alias.col from table a joialias.col table q oalias.col alias.col = a.parealias.coltid aalias.cold alias.col = alias.col aalias.cold alias.col is alias.colull aalias.cold (q.owalias.coleruserid != alias.col## or q.owalias.coleruserid is alias.colull) joialias.col table ph oalias.col alias.col = a.parealias.coltid aalias.cold ph.tabletypeid ialias.col (alias.col) aalias.cold alias.col = alias.col## aalias.cold abs(alias.col(alias.col, ph.creatioalias.coldate, a.creatioalias.coldate)) < alias.col where a.owalias.coleruserid = alias.col## aalias.cold alias.col = alias.col aalias.cold alias.col >= alias.col ) alias.col"
"select alias.col, alias.col, alias.col from table where alias.col is null and alias.col < n"
"selealias.col alias.col, sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) questioalias.cols, sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) aalias.colswers from ( selealias.col cast( cast(alias.col(alias.col, creatioalias.coldate) as varchar) + alias.col + cast(alias.col(alias.col, creatioalias.coldate) as varchar) + alias.col as datetime) alias.col, alias.col from table p joialias.col table pt oalias.col alias.col = alias.col where alias.col like alias.col ) as alias.col group by alias.col order by alias.col asc"
select alias.col from table
"select top alias.col alias.col as [post lialias.colk], alias.col, lealias.col(body) as postlealias.colgth from table where alias.col > alias.col order by alias.col desc"
"selealias.col top alias.col alias.col as [user lialias.colk], u.reputatioalias.col, u.aalias.colswercoualias.colt as acoualias.colt, u.aalias.colsweraverage as alias.col from ( selealias.col ualias.col.id, ualias.col.reputatioalias.col, ualias.col.aalias.colswercoualias.colt, ualias.col.aalias.colsweraverage from ( selealias.col ualias.col.id, ualias.col.reputatioalias.col, coualias.colt( alias.col ) as aalias.colswercoualias.colt, roualias.cold( avg( cast(alias.col as float) ) ,alias.col) as aalias.colsweraverage from table ualias.col joialias.col table p oalias.col p.owalias.coleruserid = ualias.col.id where alias.col = alias.col group by ualias.col.id, ualias.col.reputatioalias.col ) ualias.col joialias.col table p oalias.col p.owalias.coleruserid = ualias.col.id where alias.col = alias.col group by ualias.col.id, ualias.col.reputatioalias.col, ualias.col.aalias.colswercoualias.colt, ualias.col.aalias.colsweraverage ) u joialias.col table p oalias.col p.owalias.coleruserid = alias.col group by alias.col, u.reputatioalias.col, u.aalias.colswercoualias.colt, u.aalias.colsweraverage order by reputatioalias.col desc"
select top alias.col alias.col from table where reputatioalias.col<alias.col aalias.cold alias.col<alias.col order by table.views desc
"select top alias.col alias.col, displayalias.colame, reputatioalias.col, alias.col, locatioalias.col from table where locatioalias.col like alias.colx or locatioalias.col like alias.colx order by reputatioalias.col desc"
"with table as ( select alias.col, alias.col, coualias.colt(*) as coualias.colt, sum(score) as score, sum(realias.colcoualias.colt) as realias.colcoualias.colt, avg(realias.colcoualias.colt) as avgrealias.col, sum(ualias.coltable) as ualias.coltable, sum(dowalias.coltable) as dowalias.coltable from ( select alias.col, alias.col.alias.col, alias.col, v.ualias.coltable, v.dowalias.coltable, case whealias.col alias.col.alias.col = alias.col thealias.col qrealias.colcoualias.colt else arealias.colcoualias.colt ealias.cold as realias.colcoualias.colt from table as alias.col left joialias.col ( select alias.col, sum(case whealias.col alias.col = alias.col thealias.col alias.col ealias.cold) as ualias.coltable, sum(case whealias.col alias.col = alias.col thealias.col alias.col ealias.cold) as dowalias.coltable, isalias.colull(sum(case whealias.col alias.col = alias.col thealias.col alias.col ealias.cold),alias.col) + isalias.colull(sum(case whealias.col alias.col = alias.col thealias.col alias.col ealias.cold),alias.col) as qrealias.colcoualias.colt, isalias.colull(sum(case whealias.col alias.col = alias.col thealias.col alias.col ealias.cold),alias.col) + isalias.colull(sum(case whealias.col alias.col = alias.col thealias.col alias.col ealias.cold),alias.col) as arealias.colcoualias.colt from table v where alias.col ialias.col (tableyz) groualias.col by alias.col ) as v oalias.col alias.col = alias.col where alias.col.alias.col ialias.col (tableyz) ) as alias.col groualias.col by alias.col, alias.col ) select toalias.col alias.col alias.col, disalias.collayalias.colame, case whealias.col q.avgrealias.col<a.avgrealias.col thealias.col table else table ealias.cold as more_realias.col_from, q.coualias.colt as questioalias.colcoualias.colt, q.avgrealias.col as que_averagerealias.col, a.coualias.colt as aalias.colswercoualias.colt, a.avgrealias.col as aalias.cols_averagerealias.col from table u left joialias.col table as q oalias.col u.alias.col = q.alias.col aalias.cold q.alias.col = alias.col left joialias.col table as a oalias.col u.alias.col = a.alias.col aalias.cold a.alias.col = alias.col order by a.realias.colcoualias.colt+q.realias.colcoualias.colt desc"
"select table.id as alias.col, table.id as alias.col, table.alias.col from table, table, table, table where table.id = table.postid and table.tagid = table.id and table.tagname = alias.col and table.owneruserid = table.id and table.alias.col >= alias.col## order by alias.col desc;"
"declare alias.col date select alias.col = max(alias.col) from table; with alltable(type, pid, uid, age, score, spike) as ( select tmp.posttype as posttype, tmp.[post link], tmp.[user link], tmp.[age], tmp.score as [current score], max(tmp.singledayspike) as [largest spike] from (select p.posttypeid as posttype, v.postid as [post link], p.owneruserid as [user link], v.alias.col as [date], datediff(day,p.alias.col,alias.col) as [age], count(*) as singledayspike, p.score as score from votes v left join table p on p.id = v.postid where v.votetypeid = n and p.posttypeid is not null group by v.postid, v.alias.col, p.alias.col, p.owneruserid, p.posttypeid, p.score ) as tmp group by tmp.[post link], tmp.posttype, tmp.[user link], tmp.score, tmp.[age] ) select top n (case t.type when n then x when n then x end), t.pid as [post link], t.uid as [user link], t.age as [age], t.score as [current score], t.spike as [largest spike], cast(n.n * max(t.spike) / t.score as decimal(n, n)) as [spike percent] from alltable t where t.spike*n < t.score group by t.type, t.pid, t.uid, t.age, t.score, t.spike order by [current score] desc"
"with table as ( select alias.col from table where alias.col is alias.colull aalias.cold score >= alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold title like x ... ) select top alias.col p.alias.col as [post lialias.colk], sum(alias.col) as aalias.colswerscore, alias.col as tablecore from table p joialias.col table q oalias.col p.alias.col = alias.col group by p.alias.col, alias.col order by aalias.colswerscore"
"with table as ( select alias.col(alias.col, alias.col) as tableseen from table where alias.col = alias.col## union all select alias.col(alias.col, alias.col) as tableseen from table where alias.col = alias.col## ) select distinct tableseen from table order by tableseen"
"select alias.col as alias.col, location, reputation from table where lower(location) like (x) order by location asc"
"declare @alias.col int = ##alias.col## select alias.col(year,creationdate) as [year], alias.col(month,creationdate) as [date], score as [score], count(*) as commentcount, sum(len(text)) as typed, grouping(alias.col(year,creationdate)), grouping(alias.col(month,creationdate)), grouping(score) from table where alias.col = @alias.col group by cube( alias.col(year,creationdate), alias.col(month,creationdate), score ) order by isnull(alias.col(year,creationdate),n), isnull(alias.col(month,creationdate),n), isnull(score,case when grouping(score)=n then n else n end) desc, commentcount desc"
"declare @UserId int = ##UserId##; with fights as ( select myAnswer.ParentId as Question, myAnswer.Score as MyScore, leonidsAnswer.Score as LeonidsScore from Posts as myAnswer inner join Posts as leonidsAnswer on leonidsAnswer.OwnerUserId = N and myAnswer.ParentId = leonidsAnswer.ParentId where myAnswer.ownerUserId = @UserId and myAnswer.postTypeId = N ) select case when myScore > LeonidsScore then X when myScore < LeonidsScore then X else X end as X, Question as [Post Link], myScore as X, LeonidsScore as X from fights;"
"select table.id as alias.col, alias.col(table.body) as [alias.colgth], case whealias.col table.id = questioalias.col.acalias.colptedaalias.colswerid thealias.col alias.col else alias.col ealias.cold as [acalias.colpt], table.score as [score], case whealias.col table.body like alias.col thealias.col alias.col + right(table.body, alias.col(table.body)-charialias.coldealias.col(alias.col, table.body, alias.col)) else right(table.body, alias.col(table.body)alias.col) ealias.cold as [body], table.commealias.coltcoualias.colt as [#com], table.owalias.coleruserid as [user lialias.colk] from table joialias.col table as questioalias.col oalias.col table.parealias.coltid=alias.col where table.posttypeid = alias.col aalias.cold questioalias.col.tags like alias.col order by -alias.col(table.body) desc"
"select top(alias.col) alias.col as [post lialias.colk], creatioalias.coldate, viewcoualias.colt, alias.col.alias.col * (v.uptable + v.dowalias.coltable) / viewcoualias.colt as alias.col, alias.col.alias.col * v.uptable / viewcoualias.colt as upalias.col, alias.col.alias.col - alias.col.alias.col * (v.uptable + v.dowalias.coltable) / viewcoualias.colt as alias.coloalias.col, alias.col.alias.col * dowalias.coltable / viewcoualias.colt as dowalias.colalias.col, alias.col, alias.col.alias.col * alias.col / viewcoualias.colt as alias.colperview, owalias.coleruseralias.col as [post lialias.colk] from table p ialias.colalias.coler joialias.col ( select sum(case votetypealias.col whealias.col alias.col thealias.col alias.col else alias.col ealias.cold) as uptable, sum(case votetypealias.col whealias.col alias.col thealias.col alias.col else alias.col ealias.cold) as dowalias.coltable, postalias.col from table group by postalias.col ) v oalias.col p.alias.col = v.postalias.col where posttypealias.col = alias.col aalias.cold alias.col is alias.colot alias.colull aalias.cold viewcoualias.colt > alias.col order by dowalias.colalias.col desc"
"select alias.col as alias.col, alias.col, text, alias.col from table where alias.col = ##alias.col## order by alias.col desc"
"alias.colelect aliaalias.col.col aalias.col aliaalias.col.col, aliaalias.col.col, (aliaalias.col.col(alias.col, alias.col, alias.col) alias.col) / alias.col from table where poalias.colttypealiaalias.col.col = alias.col aalias.cold alias.colcore = alias.col aalias.cold aliaalias.col.col >= alias.col order by aliaalias.col.col"
"select alias.col alias.col, alias.col from table where alias.col = (select max(alias.col) from table)"
"select row_alias.columber() over(order by alias.col desc) as [#], id as [user lialias.colk], alias.col, locatioalias.col from table where alias.col=alias.col aalias.cold displayalias.colame =alias.col order by alias.col desc;"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... or location like x and alias.col >= n order by alias.col desc;"
"DECLARE @UserId INT = ##UserId##; SELECT A.score, A.id AS [Post Link], Q.LastActivityDate FROM posts A INNER JOIN posts Q ON Q.id = A.parentid AND Q.AcceptedAnswerId IS NULL WHERE A.posttypeid = N AND A.owneruserid = @UserId ORDER BY A.score DESC, Q.LastActivityDate DESC, Q.Title ASC"
"select top alias.col questioalias.col.title as questioalias.coltitle, questioalias.col.id as [post lialias.colk], questioalias.col.creatioalias.coldate as questioalias.colcreatioalias.coldate, lealias.col(aalias.colswer.body) as aalias.colswerlealias.colgth, aalias.colswer.score as aalias.colswerscore, aalias.colswer.commealias.coltcoualias.colt as aalias.colswercommealias.coltcoualias.colt from table aalias.colswer ialias.colalias.coler joialias.col table as questioalias.col oalias.col (aalias.colswer.parealias.coltid = questioalias.col.id) where aalias.colswer.owalias.coleruserid = alias.col## aalias.cold aalias.colswer.posttypeid = alias.col order by lealias.col(aalias.colswer.body) desc"
"with aalias.colswertable as ( select alias.col, sum((case whealias.col alias.colame=alias.col thealias.col alias.col else alias.col ealias.cold)) as popularaalias.colswer, sum((case whealias.col alias.colame=alias.col thealias.col alias.col else alias.col ealias.cold)) as alias.colotableaalias.colswer, sum((case whealias.col alias.colame=alias.col thealias.col alias.col else alias.col ealias.cold)) as famousaalias.colswer, coualias.colt(*) as alias.col from table where alias.colame like alias.col group by alias.col ) select top alias.col alias.col as [user lialias.colk], popularaalias.colswer, alias.colotableaalias.colswer, famousaalias.colswer, alias.col from aalias.colswertable order by alias.col desc"
"declare @alias.col ialias.colt = ##alias.col## select top alias.col alias.col as [post lialias.colk], alias.col, text, creatioalias.coldate from table where alias.col = @alias.col order by creatioalias.coldate desc"
"select row_alias.columber() over (order by alias.col desc) alias.col, postid [post lialias.colk], alias.col from table where alias.col = ##alias.col## aalias.cold alias.col > alias.col"
"select row_number() over (order by count(*) desc) as rank, count(*) as [number of edits] from table where alias.col is not null and alias.col is not null group by alias.col having count(*) > ##minedits?n##"
"declare @total float declare @tagalias.colame alias.colvarchar(maalias.col) = ##tag:strialias.colg## select top(alias.col) table.id, table.parealias.coltid, table.posttypeid, table.creatioalias.coldate from table where table.creatioalias.coldate > alias.col"
"select alias.col as alias.col, alias.col, alias.col from table as alias where alias.col like alias.col + alias.col:alias.col + alias.col order by alias.col"
"select alias.col(alias.col, alltable.creatioalias.coldate), case alias.col(alias.col, alltable.creatioalias.coldate) whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col ealias.cold as [day of week], coualias.colt(taggedtable.id) as [tagged table], coualias.colt(alltable.id) as [all table] from table alltable left joialias.col table taggedtable oalias.col alltable.id = taggedtable.id aalias.cold taggedtable.tags like alias.col group by alias.col(alias.col, alltable.creatioalias.coldate), alltable.id order by alias.col"
"select top alias.col alias.col, alias.col as [post lialias.colk], p.viewcoualias.colt, p.table, alias.col(day, p.creatioalias.coldate, getutcdate()) as daysold from table p, table pt, table t where alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold t.tagalias.colame = alias.col aalias.cold alias.col = alias.col aalias.cold p.viewcoualias.colt < alias.col(day, p.creatioalias.coldate, getutcdate()) * alias.col.alias.col aalias.cold alias.col < alias.col aalias.cold isalias.colull(p.aalias.colswercoualias.colt,alias.col) = alias.col aalias.cold isalias.colull(p.commealias.coltcoualias.colt,alias.col) <= alias.col aalias.cold alias.col(day, p.creatioalias.coldate, getutcdate()) > alias.col order by alias.col, p.viewcoualias.colt"
"selealias.col top alias.col alias.col as [post lialias.colk], (cast(alias.col as decimal)/cast(viewcoualias.colt as decimal)) as alias.col, alias.col, viewcoualias.colt, creatioalias.coldate from table where viewcoualias.colt > alias.col order by alias.col desc"
"select top alias.col alias.col as [post lialias.colk], body, lastactivitydate from table where posttypealias.col = alias.col aalias.cold alias.col < alias.col aalias.cold upper(body) like x order by lastactivitydate desc"
"select ( select alias.col(count(*)) as alias.col from table pts where alias.col = alias.col) + ( select count(*) as alias.col from table pts where alias.col = alias.col) as alias.col, alias.col alias.col, ( select count(*) as alias.col from table pts where alias.col = alias.col) as alias.col, alias.col alias.col, ( select count(*) as alias.col from table ptp where alias.col = alias.col) as alias.col from table tn join table tn on ( alias.col + alias.col = alias.col) order by alias.col desc"
"selealias.col avg( cast(alias.col as decimal) ) from table a,table q where alias.col = alias.col"
"select top alias.col:ialias.colt?alias.col alias.col as alias.col, alias.col, coualias.colt (distialias.colct alias.col) as alias.col from table ph, table p where alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold lealias.col(alias.col(text)) > alias.col group by alias.col, alias.col order by alias.col desc"
"select top alias.col alias.col as [user lialias.colk], ( select coualias.colt(*) from table where posttypealias.col = alias.col aalias.cold lasteditoruseralias.col = table.alias.col aalias.cold owalias.coleruseralias.col != table.alias.col ) as questioalias.coledits, ( select coualias.colt(*) from table where posttypealias.col = alias.col aalias.cold lasteditoruseralias.col = table.alias.col aalias.cold owalias.coleruseralias.col != table.alias.col ) as aalias.colsweredits, ( select coualias.colt(*) from table where lasteditoruseralias.col = table.alias.col aalias.cold owalias.coleruseralias.col != table.alias.col ) as alias.col from table order by alias.col desc"
"selealias.col top alias.col alias.col as [post lialias.colk], alias.col, viewcoualias.colt, cast(alias.col as alias.columeric) / cast(viewcoualias.colt as alias.columeric) as alias.col from table where viewcoualias.colt >= alias.col order by alias.col"
"select top alias.col alias.col, alias.col as [post lialias.colk], ph.creatioalias.coldate, alias.col as [user lialias.colk], ph.commealias.colt from table ph where alias.col like alias.col aalias.cold ph.tabletypeid = alias.col or ph.tabletypeid = alias.col order by alias.col"
select alias.col as alias.col from table where alias.col=alias.col aalias.cold commealias.coltcoualias.colt=alias.col
select sum(count) from table where alias.col like alias.col
"declare @user_id int = ##UserId:int##; declare @user_reputation int; select @user_reputation = max(Reputation) from Users where Id = @user_id; declare @brazilians table ( Rank int not null, Id int not null, Reputation int not null ); declare @reputation_milestones table ( Value int not null ); insert into @reputation_milestones (Value) values (XYZ) order by u.Reputation desc; declare @brazilians_count int; select @brazilians_count = count(N) from @brazilians; select cast(rank.TotalReputation as varchar(N)) + X as TotalReputation, rank.Users as [# of Users], FORMAT(ROUND(Users * N.N / @brazilians_count, N, N), X) + X as [ of Users], cast(case when (@user_reputation > rank.TotalReputation) then X else X end as varchar(N)) as [Your Milestones] from ( select Value as TotalReputation, (select count(N) from @brazilians br where br.Reputation >= Value) as Users from @reputation_milestones ms ) rank order by Users"
"with table as ( select power(alias.col(alias.col), alias.col) asalias.col, owalias.coleralias.col alias.col, alias.col postalias.col from table where posttypealias.col = alias.col aalias.cold aalias.colswercoualias.colt > alias.col aalias.cold alias.col > alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull group by owalias.coleralias.col, alias.col, alias.col, aalias.colswercoualias.colt ), table as ( select power(alias.col(q.alias.col), alias.col) aalias.colswer_views, a.owalias.coleralias.col alias.col, a.alias.col postalias.col from table q joialias.col table a oalias.col (q.alias.col = a.parealias.coltalias.col) joialias.col table o oalias.col (q.alias.col = o.parealias.coltalias.col) where a.alias.col > alias.col aalias.cold o.alias.col > alias.col aalias.cold a.commualias.colityowalias.coleddate is alias.colull group by a.owalias.coleralias.col, a.alias.col, q.alias.col, a.alias.col ) select top alias.col owalias.coleralias.col as [user lialias.colk], roualias.cold(sum(asalias.col), alias.col) asalias.col, roualias.cold(sum(aalias.colswer_views), alias.col) aalias.colswer_views, roualias.cold(sum(aalias.colswer_views + asalias.col), alias.col) alias.col from table q full outer joialias.col table p oalias.col (q.postalias.col = p.alias.col) full outer joialias.col table a oalias.col (p.alias.col = a.postalias.col) group by owalias.coleralias.col order by sum(aalias.colswer_views + asalias.col) desc"
"select alias.col(year, p.creatioalias.coldate) as year, alias.col(moalias.colth, p.creatioalias.coldate) as moalias.colth, coualias.colt(*) as questioalias.cols, sum(p.aalias.colswercoualias.colt) as aalias.colswers, sum(p.score) as questioalias.colupvotes, sum(p.viewcoualias.colt) as views, sum(case whealias.col p.aalias.colswercoualias.colt > alias.col thealias.col alias.col else alias.col ealias.cold) as questioalias.colswithaalias.colswers, coualias.colt(*)/sum(case whealias.col p.aalias.colswercoualias.colt > alias.col thealias.col alias.col else alias.col ealias.cold) as percealias.coltaalias.colswered, sum(case whealias.col p.acceptedaalias.colswerid is alias.colot alias.colull thealias.col alias.col else alias.col ealias.cold) as questioalias.colswithaccepted, sum(case whealias.col p.closeddate is alias.colull thealias.col alias.col else alias.col ealias.cold) as opealias.colquestioalias.cols from table p ialias.colalias.coler joialias.col table pt oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table t oalias.col alias.col = alias.col where alias.col=alias.col aalias.cold t.tagalias.colame ialias.col (alias.col), alias.col(moalias.colth, p.creatioalias.coldate) order by year, moalias.colth"
"select alias.col(year, table.creatioalias.coldate) year, alias.col(moalias.colth, table.creatioalias.coldate) moalias.colth, coualias.colt(table.id) boualias.colties, sum(table.boualias.coltyamoualias.colt) amoualias.colt from table where alias.col = alias.col group by alias.col(year, table.creatioalias.coldate), alias.col(moalias.colth, table.creatioalias.coldate) order by alias.col(year, table.creatioalias.coldate), alias.col(moalias.colth, table.creatioalias.coldate);"
"select top alias.col?alias.col alias.col as alias.col, alias.col, alias.col, alias.col(body) as alias.colgth, roualias.cold((alias.col(body) / alias.col * alias.col.alias.col), alias.col) as alias.col from table where owalias.coleruseralias.col = alias.col aalias.cold posttypealias.col ialias.col (alias.colyz) aalias.cold alias.col <> alias.col order by alias.col desc"
"selealias.col top alias.col alias.col as [alias.colser lialias.colk], alias.colalias.coltatioalias.col as alias.col, alias.col as alias.col, cast(alias.colalias.coltatioalias.col as alias.colalias.colmeric) / (alias.col.alias.col * alias.col) as alias.col from table where alias.col > alias.col aalias.cold alias.colalias.coltatioalias.col > alias.col order by alias.col desc"
"select top (alias.col##) row_number() over(order by alias.col desc) as [#], id [user link], alias.col, displayname, location, profileimageurl from table where lower(location) like lower(x) and age <= ##age## and websiteurl <> x order by alias.col desc"
"select alias.col , count(*) as alias.col from table pt inner join table t on alias.col = alias.col left outer join table ptn on alias.col = alias.col left outer join table tn on alias.col = alias.col where alias.col = alias.col group by alias.col order by count(*) desc"
"with qalias.col as ( select top alias.col row_alias.columber() over (order by alias.col desc) as row , x+ cast(id as alias.colvarchar) +x + title as [by questioalias.col alias.col] from table where alias.col = alias.col order by alias.col desc ) , aalias.col as ( select top alias.col row_alias.columber() over (order by alias.col desc) as row , x+ cast(id as alias.colvarchar) +x + title as [by aalias.colswer alias.col] from table where alias.col = alias.col order by alias.col desc ) select top alias.col row_alias.columber() over (order by alias.col desc) as row , x+ cast(id as alias.colvarchar) +x + title as [by uptable] from ( select top alias.col alias.col, alias.col, coualias.colt(*) as alias.col from table p ialias.colalias.coler joialias.col table v oalias.col alias.col = alias.col where alias.col = alias.col group by alias.col, title order by coualias.colt(*) desc ) as alldata order by alias.col desc"
"selealias.col alias.col as alias.col, alias.col as alias.col, alias.col as [total table], alias.col as [dubious table], cast(alias.col as float) / cast (alias.col as float) as alias.col from table u ialias.colalias.coler joialias.col ( selealias.col table as uid, coualias.colt(p.id) as alias.col from table p group by table ) p oalias.col alias.col = alias.col ialias.colalias.coler joialias.col ( selealias.col table as uid, coualias.colt(p.id) as alias.col from table p where alias.col(alias.col) < alias.col aalias.cold alias.col like alias.col group by table ) bad oalias.col alias.col = alias.col where alias.col > alias.col aalias.cold cast(alias.col as float) / cast (alias.col as float) > alias.col.alias.col order by alias.col desc, alias.col asc"
"create table table( [alias.col] [int] identity(n,n) not null primary key, [name] [varchar](n), [alias.col] [varchar](n) ) create table table( [alias.col] [int] not null primary key, [alias.col] [varchar](n) ) create table table( [alias.col] [int] identity(n,n) not null primary key, [alias.col] [varchar](n) , [alias.col] [varchar](n) , [alias.col] [varchar](n) ) create table table( [alias.col] [int] identity(n,n) not null primary key, [name] [varchar](n), [alias.col] [varchar](n), [alias.col] [int] not null ) insert into table(alias.col,alias.col,alias.col) values (xyz) insert into table(alias.col,alias.col,alias.col) values (xyz) insert into table(alias.col,alias.col,alias.col) values (xyz) select alias.col from table insert into table(name,alias.col,alias.col) select alias.col,alias.col,alias.col from table insert into table (alias.col,alias.col)select bp.alias.col, fp.alias.col from table fp join table bp on fp.alias.col=bp.alias.col; go set identity_insert #empbasic on go insert into #empbasic(alias.col,name,alias.col) select alias.col,name,alias.col from table go set identity_insert #empbasic off; go select alias.col from #empbasic select alias.col from table"
"select alias.col as views, alias.col as [post lialias.colk], alias.col as date from table q ialias.colalias.coler joialias.col table h oalias.col alias.col = alias.col where h.tabletypeid = alias.col aalias.cold alias.col is alias.colot alias.colull aalias.cold h.commealias.colt != alias.col aalias.cold h.commealias.colt != alias.col"
"declare alias.col as varchar(n) = x select table.tagname as name, count(*) as alias.col from table join posttable on posttable.tagid = table.id where table.tagname = alias.col group by table.tagname order by alias.col desc"
"declare alias.col ialias.colt = ##userid## select alias.col, coualias.colt(*) as uptable from table ialias.colalias.coler joialias.col posttable oalias.col posttable.tagid = table.id ialias.colalias.coler joialias.col table oalias.col table.parealias.coltid = posttable.postid ialias.colalias.coler joialias.col table oalias.col table.postid = table.id aalias.cold alias.col = alias.col where table.owalias.coleruserid = alias.col group by alias.col order by uptable desc"
select count(*) from table where alias.col like alias.col or alias.col like alias.col
"selealias.col alias.col(alias.col, cast(alias.col as alias.colvarchar)) from table ialias.colalias.coler joialias.col table src oalias.col alias.col = alias.col left joialias.col table tgt oalias.col alias.col = relatedalias.col where alias.col = alias.col aalias.cold alias.col is alias.colull order by alias.col"
"select coualias.colt(*) as alias.col, alias.col, alias.col as alias.col, lastaccessdate from table, table where alias.col = alias.col aalias.cold alias.col = table.id aalias.cold alias.col > alias.col aalias.cold coalias.colvert(date, lastaccessdate) > alias.col group by alias.col, displayalias.colame, alias.col, lastaccessdate havialias.colg (coualias.colt(acceptedaalias.colswerid) = alias.col aalias.cold coualias.colt(*) > alias.col)"
"select top alias.col alias.col as [post lialias.colk], p.owalias.coleruserid as [user lialias.colk], alias.col as alias.col, lealias.col(alias.col) as [post lealias.colgth], (alias.col * lealias.col(alias.col)) as alias.col from table p where alias.col = alias.col or alias.col = alias.col order by alias.col desc"
"select alias.col as alias.col, body from table where alias.col > alias.col aalias.cold body like x ... aalias.cold lealias.col(body) < alias.col order by alias.col desc"
"selealias.col top alias.col cast(a.creatioalias.coldate - q.creatioalias.coldate as float) as alias.col, alias.col as [post lialias.colk] from table q joialias.col table a oalias.col alias.col = q.acceptedaalias.colswerid order by alias.col asc"
select count(*) as totaltable from table v where alias.col = ##alias.col##;
"declare @minanswers int = ##minanswers## select avg(alias.col) from ( select alias.col as alias.col, count(*) as alias.col, sum(case when q.acalias.colptedanswerid = alias.col then n else n end) as numacalias.colpted, (sum(case when q.acalias.colptedanswerid = alias.col then n else n end)*n.n/count(*)) as alias.col from table a inner join table u on alias.col = alias.col inner join table q on alias.col = alias.col where (alias.col <> alias.col or alias.col is null) group by alias.col having count(*) >= @minanswers and count(*) > n ) x"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... order by alias.col desc;"
"select top alias.col coualias.colt(alias.col) as alias.col, alias.col as [post lialias.colk],alias.col from table v ialias.colalias.coler joialias.col table p oalias.col alias.col=alias.col where alias.col = alias.col aalias.cold alias.col=alias.col group by alias.col,alias.col order by alias.col asc"
"select top alias.col alias.col as [user lialias.colk], alias.col, dowalias.colvotes, reputatioalias.col, (dowalias.colvotes)*alias.col/(dowalias.colvotes+alias.col) as dowalias.colvotespct from table where dowalias.colvotes > alias.col aalias.cold alias.col <> alias.col order by dowalias.colvotespct desc"
"select top alias.col:int?alias.col row_number() over(order by views desc) as rank , id as [user link] , views , alias.col , round (n.n * views / alias.col , n) as [alias.col] from table where alias.col >= ##minimumalias.col:int?alias.col order by alias.col desc"
"select alias.col as alias.col, coualias.colt(alias.col) as alias.col from table q joialias.col table e oalias.col alias.col = alias.col joialias.col table a oalias.col alias.col = alias.col aalias.cold q.owalias.coleralias.col <> a.owalias.coleralias.col aalias.cold alias.col = a.owalias.coleralias.col aalias.cold abs(alias.col(hour, a.creatioalias.coldate, e.creatioalias.coldate)) < alias.col where tabletypeid ialias.col (alias.col) aalias.cold alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold alias.col is alias.colull aalias.cold a.score >= alias.col group by alias.col havialias.colg coualias.colt(alias.col) >= alias.col order by coualias.colt(alias.col) desc"
"select top (alias.col?alias.col) row_number() over (order by count(alias.col) desc, alias.col) as rank, alias.col as [user link], count(alias.col) as table into table from table edits left join table accepted on alias.col = alias.col and alias.col is not null where alias.col is not null group by alias.col having count(alias.col) > ##minedits?alias.col select alias.col from table order by rank select rank, table from table order by rank"
"declare @mialias.colaalias.colswers ialias.colt = ##mialias.colaalias.colswers## select top alias.col alias.col as [user lialias.colk], coualias.colt(*) as alias.columaalias.colswers, sum(case whealias.col q.acalias.colptedaalias.colswerid = alias.col thealias.col alias.col else alias.col ealias.cold) as alias.columacalias.colpted, (sum(case whealias.col q.acalias.colptedaalias.colswerid = alias.col thealias.col alias.col else alias.col ealias.cold)*alias.col.alias.col/coualias.colt(*)) as acalias.colptedperalias.colalias.colt from table a ialias.colalias.coler joialias.col table u oalias.col alias.col = a.owalias.coleruserid ialias.colalias.coler joialias.col table q oalias.col a.parealias.coltid = alias.col where (q.owalias.coleruserid <> alias.col or q.owalias.coleruserid is alias.colull) group by alias.col havialias.colg coualias.colt(*) >= @mialias.colaalias.colswers order by acalias.colptedperalias.colalias.colt desc, alias.columaalias.colswers desc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x order by alias.col desc;"
"with table as ( select table.alias.col as alias.col, count(*) as alias.col from table where alias.col like alias.col and location like alias.col group by table.alias.col ) select alias.col alias.col, location from table inner join table on table.alias.col = table.alias.col order by alias.col desc"
"declare alias.col alias.colvarchar(alias.col) = ##tagalias.col:strialias.colg?r## declare alias.col datetime = ##start:strialias.colg?alias.colalias.colalias.col## declare alias.col datetime = ##ealias.cold:strialias.colg?alias.colalias.colalias.col## select alias.col, alias.col, alias.col, alias.col, alias.col, alias.col, alias.col, alias.col from table t joialias.col posttable pt oalias.col alias.col = alias.col joialias.col table as p oalias.col alias.col = alias.col joialias.col table as u oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col < alias.col aalias.cold alias.col > alias.col aalias.cold alias.col >= alias.col order by alias.col desc"
"select alias.col as alias.col , alias.col as alias.col , alias.col as alias.col from table c join table p on alias.col = alias.col where alias.col > ##mintablecore:int?alias.col and alias.col > alias.col - alias.col:int?alias.col"
"create table table ( alias.col tealias.colt, alias.col ialias.colt ) ialias.colsert ialias.colto table (alias.col, alias.col) select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col select rc.alias.col, rc.alias.col, ( select coualias.colt(alias.col) from table u where u.reputatioalias.col >= rc.alias.col ) as usercoualias.colt from table rc"
"select year(alias.col), moalias.colth(alias.col), coualias.colt(*) from table where alias.col is alias.colull group by year(alias.col), moalias.colth(alias.col) order by alias.col, alias.col desc"
"selealias.col alias.col = coualias.colt( alias.col ), alias.col from ( selealias.col alias.col = ( cast( alias.col as float ) / cast( alias.col as float ) ) from table where alias.col > alias.col aalias.cold alias.col > alias.col ) alias.col group by alias.col order by alias.col desc;"
"select alias.col(hour,creationdate) as hour, count(*) as table, avg(cast(score as float)) as x from table group by alias.col(hour,creationdate) order by hour;"
"select alias.col ,alias.col ,alias.col ,alias.col ,alias.col ,alias.col + coalias.colvert(varchar(alias.col), alias.col) as alias.col from table(alias.cololock) where upper(locatioalias.col) like alias.colalias.col or locatioalias.col like alias.colalias.col or locatioalias.col like alias.colalias.col or upper(locatioalias.col) like alias.colalias.col or locatioalias.col like alias.colalias.col or upper(locatioalias.col) like alias.colalias.col or upper(locatioalias.col) like alias.colalias.col or locatioalias.col like alias.colalias.col or upper(locatioalias.col) like alias.colalias.col or locatioalias.col like alias.colalias.col order by alias.col desc"
"select alias.col as alias.col, coualias.colt(alias.col) as alias.col, alias.col from table as q ialias.colalias.coler joialias.col table as u oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table as ph oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table as pf oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col(day, q.creatioalias.coldate, getdate()) > alias.col aalias.cold q.score = alias.col aalias.cold q.aalias.colswercoualias.colt = alias.col aalias.cold ph.tabletypeid != alias.col aalias.cold alias.col(day, q.creatioalias.coldate, getdate()) < alias.col aalias.cold q.commealias.coltcoualias.colt < alias.col aalias.cold q.closeddate is alias.colull aalias.cold alias.col = alias.col aalias.cold lealias.col(q.body) < ##questioalias.collealias.colgth?alias.col## aalias.cold alias.col(day, u.lastaccessdate, getdate()) > alias.col aalias.cold u.reputatioalias.col < ##questioalias.colerrep?alias.col## group by alias.col, alias.col order by coualias.colt(alias.col) desc"
"select top alias.col alias.col as [user lialias.colk], roualias.cold((alias.col.alias.col * (alias.colutatioalias.col/alias.col)) / (alias.col+alias.col), alias.col) as alias.col, alias.colutatioalias.col as alias.col, alias.col as alias.col, dowalias.colvotes alias.col from table where alias.colutatioalias.col > ##mialias.colalias.col## aalias.cold alias.col < ##maxalias.col## order by alias.col desc"
"select alias.col, count(*) as alias.col from table group by alias.col order by alias.col desc"
"select alias.col from table where alias.col < alias.col aalias.cold reputatioalias.col < alias.col aalias.cold alias.col(day,lastaccessdate, getdate()) < (alias.colalias.colalias.col)"
select count(*) from table v inner join table p on alias.col = alias.col inner join table pt on alias.col = alias.col where alias.col = alias.col##
"select alias.col as alias.col, alias.col = p.lastactivitydate, alias.col = alias.col(alias.col, alias.col) from table p where alias.col ialias.col (select alias.col from table palias.col right joialias.col table valias.col oalias.col alias.col = alias.col aalias.cold alias.col like alias.col where palias.col.posttypeid like alias.col ) order by p.lastactivitydate desc"
"select top alias.col table.displayalias.colame , (coualias.colt(alias.col.acceptedaalias.colswerid)/coualias.colt(alias.col)) as alias.col from table ialias.colalias.coler joialias.col (select alias.col from table where table.posttypeid = alias.col aalias.cold table.acceptedaalias.colswerid is alias.colot alias.colull) as alias.col oalias.col alias.col.owalias.coleruserid = table.id ialias.colalias.coler joialias.col (select alias.col from table where table.posttypeid = alias.col) as alias.col oalias.col alias.col.owalias.coleruserid = table.id group by table.displayalias.colame"
select alias.col from table as a joialias.col table as q oalias.col alias.col = alias.col where alias.col = alias.col## aalias.cold alias.col = alias.col aalias.cold alias.col = alias.col
"selealias.col alias.col(alias.col, alias.col, alias.col(alias.col, table.creatioalias.coldate)) as hour, cast (sum(case whealias.col alias.col is alias.colot alias.colull thealias.col alias.col else alias.col ealias.cold) as alias)/coualias.colt(*)*alias.col as rate from table ialias.colalias.coler joialias.col table oalias.col table.posttypeid = table.id where table.alias.colame = alias.col group by alias.col(alias.col, table.creatioalias.coldate) order by cast (sum(case whealias.col alias.col is alias.colot alias.colull thealias.col alias.col else alias.col ealias.cold) as alias)/coualias.colt(*)*alias.col desc"
"select top alias.col alias.col as [post lialias.colk], alias.col as alias.col, alias.col as alias.col, viewcoualias.colt as alias.col, alias.col(day, p.creatioalias.coldate, currealias.colt_timestamp) as [age (days)], p.viewcoualias.colt / alias.col(day, p.creatioalias.coldate, currealias.colt_timestamp) as alias.col from table p where p.viewcoualias.colt > alias.col aalias.cold p.commualias.colityowalias.coleddate is alias.colull aalias.cold p.viewcoualias.colt / alias.col(day, p.creatioalias.coldate, currealias.colt_timestamp) > alias.col order by alias.col desc"
"select coalesce(alias.col, table.title), table.name, alias.col from table join table on table.postid=table.id join table on table.votetypeid=table.id left outer join table on table.userid=table.id left join table x on alias.col = table.parentid where table.owneruserid=alias.col##;"
"selealias.col top alias.col alias.col,t.aalias.colswered,cast(alias.col*alias.col/t.aalias.colswered as float)/alias.col as palias.col, alias.col, displayalias.colame from (selealias.col coualias.colt(alias.col) as alias.col, coualias.colt(alias.col(alias.col=q.acceptedaalias.colswerid,alias.col,alias.colull)) as alias.col, alias.col as alias.col, u.displayalias.colame as displayalias.colame from table a, table u, table q where a.owalias.coleralias.col = alias.col aalias.cold alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold a.parealias.coltid=alias.col group by alias.col,u.displayalias.colame) t where t.aalias.colswered >= alias.col order by palias.col desc"
"select table.creatioalias.coldate, table.*, table.id as alias.col from table ialias.colalias.coler joialias.col table oalias.col table.postid = table.id where table.votetypeid = alias.col aalias.cold table.posttypeid = alias.col aalias.cold table.owalias.coleruserid = alias.col## order by table.creatioalias.coldate desc"
"declare @tagalias.col alias.colvarchar(alias.col) = ##tagalias.col:strialias.colg?jquery## select toalias alias.col alias.col as [aliasost lialias.colk], alias.col, alias.viewcoualias.colt from table t joialias.col aliasosttable aliast oalias.col alias.col = alias.col joialias.col table as alias oalias.col alias.col = alias.col where tagalias.colame = @tagalias.col order by alias.viewcoualias.colt desc"
select top alias.col alias.col as [post lialias.colk] from table as q ialias.colalias.coler joialias.col table as ph oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold q.creatioalias.coldate < alias.col aalias.cold q.aalias.colswercoualias.colt = alias.col aalias.cold alias.col = alias.col aalias.cold q.viewcoualias.colt < alias.col aalias.cold q.commealias.coltcoualias.colt < alias.col aalias.cold lealias.col(alias.col) < alias.col aalias.cold alias.col is alias.colull aalias.cold ph.tabletypeid != alias.col aalias.cold ph.tabletypeid != alias.col aalias.cold ph.tabletypeid != alias.col aalias.cold ph.tabletypeid != alias.col aalias.cold ph.tabletypeid != alias.col aalias.cold ph.tabletypeid != alias.col aalias.cold ph.tabletypeid != alias.col aalias.cold ph.tabletypeid != alias.col aalias.cold ph.tabletypeid != alias.col aalias.cold ph.tabletypeid != alias.col aalias.cold ph.tabletypeid != alias.col order by q.creatioalias.coldate asc
"declare @commealias.colttealias.colt alias.colvarchar(alias.col) = ##commealias.colttealias.colt:strialias.colg## select alias.col as [commealias.colt alias.col], postalias.col as [post alias.col], alias.col as [alias.col], tealias.colt as alias.col, alias.col as alias.col from table where useralias.col = alias.col aalias.cold tealias.colt like alias.col + @commealias.colttealias.colt + alias.col order by alias.col desc"
"select top alias.col alias.col as [post lialias.colk], ph.creatioalias.coldate, alias.col, (( case whealias.col alias.col like alias.col thealias.col alias.col else alias.col ealias.cold) + ( case whealias.col alias.col like alias.col thealias.col alias.col else alias.col ealias.cold) + ( case whealias.col alias.col like alias.col thealias.col alias.col else alias.col ealias.cold) + ( case whealias.col alias.col like alias.col thealias.col alias.col else alias.col ealias.cold) + ( case whealias.col alias.col like alias.col thealias.col alias.col else alias.col ealias.cold) + ( case whealias.col alias.col like alias.col thealias.col alias.col else alias.col ealias.cold) + ( case whealias.col alias.col like alias.col thealias.col alias.col else alias.col ealias.cold) + ( case whealias.col alias.col like alias.col thealias.col alias.col else alias.col ealias.cold) + ( case whealias.col alias.col like alias.col thealias.col alias.col else alias.col ealias.cold) + ( case whealias.col alias.col like alias.col thealias.col alias.col else alias.col ealias.cold)) as alias.col from table ph joialias.col table p oalias.col alias.col = alias.col joialias.col tabletypes pht oalias.col ph.tabletypeid = alias.col where pht.alias.colame = alias.col order by alias.col desc"
"select top alias.col alias.col as [post lialias.colk], alias.col, alias.col as [user lialias.colk] from table a joialias.col table q oalias.col a.parealias.coltid = alias.col joialias.col table pt oalias.col alias.col = alias.col joialias.col table t oalias.col alias.col = alias.col joialias.col table u oalias.col alias.col = a.owalias.coleruserid where alias.col is alias.colull aalias.cold a.commualias.colityowalias.coleddate is alias.colull aalias.cold q.commualias.colityowalias.coleddate is alias.colull aalias.cold q.closeddate is alias.colull aalias.cold t.tagalias.colame = x order by alias.col desc"
"select table.id as alias.col, table.tags as alias.col from table, table where (table.postid=table.id) aalias.cold (table.votetypeid = alias.col) aalias.cold (table.userid=alias.col:ialias.colt##) aalias.cold ((lower(table.tags) like lower(alias.col)) or (lower(table.title) like lower(alias.col)) or (lower(table.body) like lower(alias.col)))"
"select raalias.colk() over (order by sum(alias.col) desc) as [raalias.colk], u.displayalias.colame, sum(alias.col) as boualias.colties from table u ialias.colalias.coler joialias.col table p oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table v oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold u.displayalias.colame = alias.col group by u.displayalias.colame order by sum(alias.col) desc"
"select top alias.col alias.col(alias.coltile(alias.col) over(order by sum(aalias.colswers.score) desc), alias.col) + alias.col as [top], row_alias.columber() over(order by sum(aalias.colswers.score) desc) as [raalias.colkialias.colg], table.displayalias.colame as [user lialias.colk], sum(aalias.colswers.score) as [total score] from table joialias.col posttable oalias.col table.id = posttable.tagid aalias.cold table.tagalias.colame = alias.col joialias.col table questioalias.cols oalias.col questioalias.cols.id = posttable.postid aalias.cold questioalias.cols.commualias.colityowalias.coleddate is alias.colull joialias.col table aalias.colswers oalias.col aalias.colswers.parealias.coltid = questioalias.cols.id aalias.cold aalias.colswers.score <> alias.col aalias.cold aalias.colswers.owalias.coleruserid is alias.colot alias.colull aalias.cold aalias.colswers.commualias.colityowalias.coleddate is alias.colull joialias.col table oalias.col aalias.colswers.owalias.coleruserid = table.id group by table.displayalias.colame havialias.colg sum(aalias.colswers.score) > alias.col order by case table.displayalias.colame whealias.col alias.col thealias.col alias.col else alias.col ealias.cold desc, [total score] desc"
"DECLARE @QTagOne VARCHAR(N) = ##KeywordOne:string##; SET @QTagOne = X + LTRIM(RTRIM(@QTagOne)) + X; DECLARE @QTagTwo VARCHAR(N) = ##KeywordTwo:string##; SET @QTagTwo = X + LTRIM(RTRIM(@QTagTwo)) + X; SELECT Id AS [Post Link], Score, Tags FROM Posts WHERE PostTypeId = N AND ((Tags LIKE @QTagOne AND Tags LIKE @QTagTwo) or (Title LIKE @QTagOne AND Title LIKE @QTagTwo)) AND ClosedDate IS NULL ORDER BY Score DESC"
"declare alias.col ialias.colt = ##userid## select row_alias.columber() over (order by alias.col), alias.col, coualias.colt(*) as uptable from table ialias.colalias.coler joialias.col posttable oalias.col posttable.tagid = table.id ialias.colalias.coler joialias.col table oalias.col table.parealias.coltid = posttable.postid ialias.colalias.coler joialias.col table oalias.col table.postid = table.id aalias.cold alias.col = alias.col where table.owalias.coleruserid = alias.col group by alias.col order by uptable desc"
"select table.id as alias.col, alias.col, alias.col, location from table inner join table ph on alias.col = table.id inner join table on table.id = alias.col where location like nx and tags like x order by alias.col desc"
select alias.col from table where alias.col < alias.col aalias.cold reputatioalias.col > alias.col
"declare @qscore ialias.colt = ##maalias.colqscore:ialias.colt?alias.col## declare @ascore ialias.colt = ##maalias.colascore:ialias.colt?alias.col## select distialias.colct top ##top:ialias.colt?alias.col## alias.col as [post lialias.colk], alias.col, maalias.col(a.score) as [aalias.colswer score], p.creatioalias.coldate, p.viewcoualias.coltfrom table p left joialias.col table ph oalias.col alias.col = alias.col left joialias.col table v oalias.col (alias.col = alias.col aalias.cold alias.col = alias.col) left joialias.col table a oalias.col alias.col = alias.col where alias.col != alias.col aalias.cold alias.col != alias.col aalias.cold ph.tabletypeid = alias.col aalias.cold p.acceptedaalias.colswerid is alias.colull aalias.cold p.closeddate is alias.colot alias.colull aalias.cold p.tags alias.colot like alias.col + ##tagsdoalias.colotcoalias.coltaialias.col:strialias.colg?alias.colyzzy## + alias.col aalias.cold datediff(d, p.closeddate, getdate()) >= alias.col aalias.cold alias.col <= @qscore aalias.cold (alias.col > alias.col or a.score is alias.colot alias.colull) group by alias.col, alias.col, p.creatioalias.coldate, p.viewcoualias.colthavialias.colg coualias.colt(alias.col) = alias.col aalias.cold coalesce(maalias.col(a.score),alias.col) <= @ascore order by alias.col asc, p.viewcoualias.colt asc, creatioalias.coldate"
"select alias.col, alias.col as alias.col, body from table where alias.col=alias.col:alias.col aalias.cold posttypealias.col=alias.col order by alias.col asc"
"select top alias.col alias.col as [post lialias.colk], body from table where posttypealias.col = alias.col aalias.cold lealias.col(body) < alias.col aalias.cold body like x order by lealias.col(body);"
"declare @alias.col int = ##alias.col## select count(*) as alias.col, alias.col from table where alias.col = @alias.col group by alias.col order by alias.col desc"
"declare table table (alias.col ialias.colt, alias.col ialias.colt, ualias.colcapped ialias.colt) ialias.colsert table select top alias.col alias.col = table.alias.col, alias.col = table.alias.colutatioalias.col, ualias.colcapped = sum(case whealias.col votetypealias.col = alias.col thealias.col alias.col whealias.col votetypealias.col = alias.col aalias.cold posttypealias.col = alias.col thealias.col alias.col whealias.col votetypealias.col = alias.col aalias.cold posttypealias.col = alias.col thealias.col alias.col whealias.col votetypealias.col = alias.col thealias.col alias.col whealias.col votetypealias.col = alias.col thealias.col boualias.coltyamoualias.colt ealias.cold) from table ialias.colalias.coler joialias.col table oalias.col table.alias.col = table.postalias.col ialias.colalias.coler joialias.col table oalias.col table.alias.col = table.owalias.coleruseralias.col group by table.alias.col, table.alias.colutatioalias.col order by table.alias.colutatioalias.col desc select top alias.col t.alias.col as [user lialias.colk], t.alias.col as alias.colutatioalias.col, t.ualias.colcapped as [ualias.colcapped alias.colucatioalias.col], t.ualias.colcapped - t.alias.col as alias.col, alias.col * (t.ualias.colcapped - t.alias.col) / t.alias.col as [peralias.colalias.colt alias.col] from table t order by [peralias.colalias.colt alias.col] desc"
"select top alias.col alias.col as [post lialias.colk], alias.col as [user lialias.colk], creatioalias.coldate, alias.col, alias.col from table c where alias.col > alias.col aalias.cold alias.col ialias.col (select alias.col from table where alias.col is alias.colull) order by c.creatioalias.coldate desc"
"DECLARE @UserId int = ##UserId## DECLARE @Tag nvarchar(N) = X; DECLARE @QuestionsUp int = N; DECLARE @QuestionsDown int = N; DECLARE @AnswersUp int = N; DECLARE @AnswersDown int = N; DECLARE @TagScore int = N; SELECT @QuestionsUp = COUNT(*) FROM Tags INNER JOIN PostTags ON PostTags.TagId = Tags.id INNER JOIN Posts ON Posts.ParentId = PostTags.PostId INNER JOIN Votes ON Votes.PostId = Posts.Id and VoteTypeId = N WHERE Posts.OwnerUserId = @UserId and Posts.PostTypeId = N and Tags.TagName = @Tag SELECT @QuestionsDown = COUNT(*) FROM Tags INNER JOIN PostTags ON PostTags.TagId = Tags.id INNER JOIN Posts ON Posts.ParentId = PostTags.PostId INNER JOIN Votes ON Votes.PostId = Posts.Id and VoteTypeId = N WHERE Posts.OwnerUserId = @UserId and Posts.PostTypeId = N and Tags.TagName = @Tag SELECT @AnswersUp = COUNT(*) FROM Tags INNER JOIN PostTags ON PostTags.TagId = Tags.id INNER JOIN Posts ON Posts.ParentId = PostTags.PostId INNER JOIN Votes ON Votes.PostId = Posts.Id and VoteTypeId = N WHERE Posts.OwnerUserId = @UserId and Posts.PostTypeId = N and Tags.TagName = @Tag SELECT @AnswersDown = COUNT(*) FROM Tags INNER JOIN PostTags ON PostTags.TagId = Tags.id INNER JOIN Posts ON Posts.ParentId = PostTags.PostId INNER JOIN Votes ON Votes.PostId = Posts.Id and VoteTypeId = N WHERE Posts.OwnerUserId = @UserId and Posts.PostTypeId = N and Tags.TagName = @Tag SET @TagScore = @QuestionsUp * N + @QuestionsDown * N + @AnswersUp * N + @AnswersDown * N SELECT @QuestionsUp AS QU, @QuestionsDown AS QD, @AnswersUp AS AU, @AnswersDown AS AD, @TagScore AS Score"
"select alias.col as alias.col, alias.col as alias.col, alias.col as date, h.tabletypeid as type, h.comment, h.text from table h where alias.col = ##alias.col## and tabletypeid in (alias.col) order by alias.col desc"
"select alias.col(hour,creatioalias.coldate) as hour, coualias.colt(*) as aalias.colswers, avg(cast(score as float)) as x from table where alias.col=alias.col group by alias.col(hour,creatioalias.coldate) order by hour;"
"select left(replace(commealias.colt,x,x), charialias.coldex(x, replace(commealias.colt,x,x))alias.col) , coualias.colt(postid) from table where tabletypeid = alias.col group by left(replace(commealias.colt,x,x), charialias.coldex(x, replace(commealias.colt,x,x))alias.col) order by alias.col desc"
"selealias.col year(alias.col) year, moalias.colth(alias.col) moalias.colth, cast(coualias.colt(*) as float) / ( selealias.col cast (coualias.colt(*) as float) from table p where year(alias.col) = year(alias.col) aalias.cold moalias.colth(alias.col) = moalias.colth(alias.col) aalias.cold alias.col = alias.col ) table_per_questioalias.col from table v group by year(alias.col), moalias.colth(alias.col) order by alias.col desc, alias.col desc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x order by alias.col desc;"
"select alias.col(hour,creatioalias.coldate) as hour, coualias.colt(*) as questioalias.cols, avg(cast(score as float)) as x from table where alias.col=alias.col group by alias.col(hour,creatioalias.coldate) order by hour;"
"select coualias.colt(*) as table, alias.col as alias.col, case alias.col whealias.col alias.col## thealias.col alias.col else alias.col ealias.cold as givealias.col from table v left joialias.col table p oalias.col alias.col = alias.col left joialias.col table vt oalias.col alias.col = v.alias.colid where alias.col = alias.col## or alias.col = alias.col## group by alias.col, case alias.col whealias.col alias.col## thealias.col alias.col else alias.col ealias.cold order by alias.col desc, alias.col, alias.col"
"selealias.col alias.col, coualias.colt(alias.col) from ( selealias.col cast( cast(alias.col(alias.col, alias.col) as varchar) + alias.col + cast(alias.col(alias.col, alias.col) as varchar) + alias.col as datetime) table, t.table from table p joialias.col table pt oalias.col alias.col = alias.col joialias.col table t oalias.col alias.col = alias.col where alias.col ialias.col ( selealias.col top alias.col alias.col from table order by coualias.colt desc ) ) as alias.col group by table, table order by table asc, table asc"
"select top alias.col alias.col as [post lialias.colk], alias.col, p.viewcoualias.colt, coalias.colvert(varchar(alias.col),year(p.lastactivitydate)) + alias.col + coalias.colvert(varchar(alias.col),moalias.colth(p.lastactivitydate)) as qlastupdate, alias.col as [user lialias.colk], coalias.colvert(varchar(alias.col),year(u.lastaccessdate)) + alias.col + coalias.colvert(varchar(alias.col),moalias.colth(u.lastaccessdate)) as ulastacc from table p left joialias.col table a oalias.col a.parealias.coltid = alias.col aalias.cold alias.col = alias.col left joialias.col table u oalias.col p.owalias.coleruserid = alias.col where alias.col = alias.col aalias.cold p.viewcoualias.colt < alias.col aalias.cold alias.col < alias.col aalias.cold p.acceptedaalias.colswerid is alias.colull aalias.cold a.id is alias.colull aalias.cold p.lastactivitydate < dateadd(moalias.colth,alias.col,getdate()) aalias.cold u.lastaccessdate <dateadd(moalias.colth,alias.col,getdate()) order by year(p.lastactivitydate), moalias.colth(p.lastactivitydate), alias.col, p.viewcoualias.colt"
"select top alias.col alias.col , alias.col , alias.col , viewcoualias.colt , favoritecoualias.colt , replace( replace( replace( body, char(alias.col) + char(alias.col), x), char(alias.col) , x), char(alias.col) , x) as [body] from table where body like x or alias.col like x or alias.col like x+ char(alias.col) + x"
"selecalias.col alias.col as alias.col, coualias.colalias.col(*) from ( selecalias.col alias.col.alias.col, alias.col, sum( alias.col ) alias.col, coualias.colalias.col(*) coualias.colalias.col from alias.colable alias.col joialias.col posalias.colalias.colable palias.col oalias.col alias.col = alias.col joialias.col alias.colable p oalias.col alias.col = alias.col where alias.col.coualias.colalias.col >= alias.col aalias.cold alias.col is alias.coloalias.col alias.colull group by alias.col.alias.col, alias.col havialias.colg coualias.colalias.col(*) > alias.col aalias.cold sum( alias.col ) > alias.col ) x group by alias.col havialias.colg coualias.colalias.col(*) < alias.col order by alias.col"
"select top alias.col alias.col as [post lialias.colk], alias.col from table where alias.col <= alias.col aalias.cold aalias.colswercoualias.colt=alias.col aalias.cold creatioalias.coldate < alias.col(moalias.colth, alias.col, getdate())"
"select top alias.col alias.col, alias.col as [post lialias.colk], viewcoualias.colt, alias.col, lastactivitydate from table where posttypealias.col = alias.col aalias.cold viewcoualias.colt < alias.col aalias.cold alias.col < alias.col order by year(lastactivitydate), moalias.colth(lastactivitydate)"
declare alias.col int = ##questionid## select alias.col from table where alias.col = alias.col;
select distinct userdisplayname from table where alias.col = ##alias.col##
"declare @alias.col int = ##alias.col## select count(*) as alias.col, alias.col from table where alias.col = @alias.col group by alias.col order by alias.col desc"
"declare alias.col int = ##userid## select alias.col as alias.col, (sum(alias.col)) as alias.col from table a inner join table q on alias.col = alias.col inner join table pt on alias.col = alias.col inner join table t on alias.col = alias.col where alias.col = alias.col group by alias.col"
"selealias.col alias.col as alias.col, alias.col.coualias.colt as [alias.col], alias.col.coualias.colt as [alias.col] from ( selealias.col cast(year(alias.col) as char(alias.col)) + alias.col + cast(moalias.colth(alias.col) as char(alias.col)) as alias.col, coualias.colt(*) as [coualias.colt] from table p group by year(alias.col), moalias.colth(alias.col) ) as alias.col joialias.col ( selealias.col cast(year(alias.col) as char(alias.col)) + alias.col + cast(moalias.colth(alias.col) as char(alias.col)) as alias.col, coualias.colt(*) as [coualias.colt] from table p where alias.col like alias.col or alias.col like alias.col or alias.col like alias.col group by year(alias.col), moalias.colth(alias.col) ) as alias.col oalias.col alias.col.moalias.colth = alias.col order by alias.col asc"
"select top alias.col alias.col as [post lialias.colk], alias.col, p.creatioalias.coldate as [asked date], p.viewcoualias.colt from table p where acceptedaalias.colswerid is alias.colull aalias.cold p.posttypeid = alias.col aalias.cold p.creatioalias.coldate < getdate() - alias.col aalias.cold p.commualias.colityowalias.coleddate is alias.colull aalias.cold p.closeddate is alias.colull aalias.cold alias.colot exists ( select alias.col from table palias.col where palias.col.parealias.coltid = alias.col aalias.cold palias.col.score >= alias.col aalias.cold palias.col.posttypeid = alias.col ) aalias.cold alias.colot exists ( select alias.col from table ph where alias.col = alias.col ) order by alias.col desc"
"select location, count(location) from table group by location order by count(location) desc"
"select top alias.col owalias.coleruserid [user lialias.colk], reputatioalias.col, coualias.colt(*) [total questioalias.cols], avg(alias.col + alias.col.alias.col) [avg alias.col], sum(case whealias.col alias.col < alias.col thealias.col alias.col else alias.col ealias.cold) [alias.colegative alias.cold questioalias.cols] from table joialias.col table u oalias.col alias.col = owalias.coleruserid where alias.col = alias.col group by owalias.coleruserid, reputatioalias.col havialias.colg coualias.colt(*) > ##mialias.colquestioalias.cols## order by [avg alias.col] desc"
"declare @qcoualias.colalias.col ialias.colalias.col = alias.col selecalias.col alias.col from ( selecalias.col alias.col as alias.col, coualias.colalias.col(alias.col) as ualias.colaalias.colsweredcoualias.colalias.col, alias.col.coualias.colalias.col as quesalias.colioalias.colcoualias.colalias.col from alias.colable q ialias.colalias.coler joialias.col alias.colable palias.col oalias.col alias.col = palias.col.posalias.colid ialias.colalias.coler joialias.col alias.colable alias.col oalias.col palias.col.alias.colagid = alias.col.id where (q.posalias.colalias.colypeid = alias.col) aalias.cold (q.closeddaalias.cole is alias.colull) aalias.cold alias.coloalias.col exisalias.cols ( selecalias.col alias.col from alias.colable a where (a.parealias.colalias.colid = alias.col) aalias.cold ((alias.col > alias.col) or (alias.col = q.accepalias.coledaalias.colswerid)) ) group by alias.col, alias.col.coualias.colalias.col ) a where a.quesalias.colioalias.colcoualias.colalias.col > @qcoualias.colalias.col order by ualias.colaalias.colsweredcoualias.colalias.col"
"with table as ( select alias.col as alias.col, alias.col as alias.col, raalias.colk() over(partitioalias.col by alias.col order by alias.col) as alias.col, alias.col as alias.col, alias.col+table(day, alias.col, alias.col) as daysmembership from table b joialias.col table u oalias.col b.alias.col = alias.col where b.alias.colame = alias.col ), table as ( select alias.col, mialias.col(alias.col) firstwoalias.col from table group by alias.col ) select case table whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col else alias.col ealias.cold as [type], table as [user lialias.colk], table as [member sialias.colalias.col], table as [date woalias.col], table as [daysmembership], table(day, firstwoalias.col, alias.col) as [dayssialias.colalias.colalias.colst] from table be joialias.col table fe oalias.col table=fe.alias.col order by table desc, table asc"
"select top alias.col alias.col as [post lialias.colk], viewcoualias.colt, aalias.colswercoualias.colt, favoritecoualias.colt, alias.col from table where alias.col is alias.colull aalias.cold title like x order by viewcoualias.colt desc"
select top alias.col table from commealias.colts c order by table desc
"select isalias.colull(alias.col ,alias.col) from table where alias.col=alias.col;"
"select alias.col alias.col, alias.col alias.col from table where alias.col = ##alias.col## order by alias.col"
"select alias.col as tableid, alias.col, sum(alias.col) as alias.col from table pt, table p, table u where alias.col = alias.col aalias.cold alias.col=p.parealias.coltid aalias.cold alias.col=alias.col group by alias.col, alias.col order by sum(alias.col) desc"
select alias.col from table p join table pt on alias.col = alias.col where alias.col like alias.col
select top alias.col alias.col [post lialias.colk] from table where posttypealias.col = alias.col aalias.cold body like x
"select top alias.col alias.col as [user lialias.colk], alias.col, dowalias.colvotes, (dowalias.colvotes)*alias.col/(dowalias.colvotes+alias.col) as dowalias.colvotespct from table where alias.col > alias.col aalias.cold dowalias.colvotes > alias.col aalias.cold alias.col+dowalias.colvotes > alias.col aalias.cold alias.col <> alias.col aalias.cold displayalias.colame like alias.col order by dowalias.colvotespct desc"
"select top alias.col table.postid as [post lialias.colk], table.displayalias.colame, table.score, table.tealias.colt, table.creatioalias.coldate from table left joialias.col table oalias.col table.userid = table.id where table.tealias.colt like alias.col order by table.score desc"
"declare alias.col float select alias.col = sum(alias.col) from table where alias.col = alias.col select table.alias.colalias.colame as alias.col, coualias.colt(*) as questioalias.cols, sum(table.alias.col) as views, str(alias.col * sum(table.alias.col) / alias.col,alias.col,alias.col) as percealias.coltofsite, sum(table.score) as score, sum(table.aalias.colswercoualias.colt) as aalias.colswers, sum(table.alias.col) / coualias.colt(*) as avgviews, str(sum(table.score) / cast(coualias.colt(*) as float),alias.col,alias.col) as avgscore, str(sum(table.aalias.colswercoualias.colt) / cast(coualias.colt(*) as float),alias.col,alias.col) as avgaalias.colswers from table joialias.col table oalias.col table.id = table.postid joialias.col table oalias.col table.alias.colid = table.id where ((table.alias.col = alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col)) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) aalias.cold (table.alias.colalias.colame != alias.col) group by table.alias.colalias.colame order by questioalias.cols desc"
"select alias.col+convert(varchar,alias.col)+alias.col+convert(varchar,alias.col) alias.col, postalias.col as alias.col, comment, creationdate, rejectiondate, * from table s where s.owneruseralias.col = ##useralias.col## order by alias.col desc"
select coualias.colt(*) from table where alias.col = alias.col aalias.cold acceptedaalias.colswerid is alias.colot alias.colull
"select alias.col alias.col , alias.col = alias.col , alias.col as alias.col , alias.col alias.col"
"with table tables (select alias.col tables alias.col,p.closeddtablete, sum(ctablese whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) tables dowalias.colttableble from ttableble p ialias.colalias.coler joialias.col ttableble v oalias.col alias.col = alias.col ialias.colalias.coler joialias.col ttableble pt oalias.col alias.col = alias.col ialias.colalias.coler joialias.col ttableble t oalias.col alias.col = pt.ttablegid tablealias.cold t.ttablegalias.coltableme = alias.col where alias.col = alias.col group by alias.col,p.closeddtablete ) select top ##selecttopcoualias.colt## table.* from table where dowalias.colttableble<##dowalias.colttablebletablealias.coldless## order by dowalias.colttableble desc"
"DECLARE @SearchPat NVARCHAR(N) = ##SearchString:string##, @UserId INT = ##UserId:int##; SET @SearchPat = X + REPLACE( REPLACE( REPLACE( REPLACE( @SearchPat, X, X), X, X), X, X), X, X) + X; WITH PostsContaining(Id, IsAccepted) AS ( SELECT P.Id, CASE WHEN EXISTS (SELECT Id FROM Posts WHERE AcceptedAnswerId = P.Id) THEN N ELSE N END FROM Posts AS P WHERE PostTypeId = N AND OwnerUserId = @UserId AND Body LIKE @SearchPat ESCAPE X ) SELECT V.PostId AS [Post Link], SUM(CASE V.VoteTypeId WHEN N THEN N WHEN N THEN N WHEN N THEN N END) AS [Rep Change] FROM PostsContaining AS PC INNER JOIN Votes AS V ON PC.Id = V.PostId WHERE V.VoteTypeId IN (XYZ) GROUP BY ROLLUP (V.PostId) ORDER BY [Rep Change] DESC"
select alias.col as alias.col from table where alias.col like alias.col
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where location like x order by alias.col desc;"
"select alias.col, count(*) from table group by alias.col order by count(*) desc"
"selealias.col top alias.col table.id as [user lialias.colk], coualias.colt(table.id) as aalias.colswers, cast(avg(cast(alias.col as float)) as alias.columeric(alias.col,alias.col)) as [average aalias.colswer alias.col] from table ialias.colalias.coler joialias.col table oalias.col table.id = owalias.coleruserid ialias.colalias.coler joialias.col table pt oalias.col alias.col = table.id ialias.colalias.coler joialias.col table t oalias.col alias.col=alias.col where alias.col = alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold closeddate is alias.colull aalias.cold tagalias.colame ialias.col (xyz) > alias.col order by [average aalias.colswer alias.col] desc"
"select top alias.col (dealias.colse_raalias.colk() over (order by (sum(boualias.coltyamoualias.colt)*alias.col./table.reputatioalias.col) desc) alias.col) as [raalias.colk], owalias.coleruserid [user lialias.colk], coualias.colt(alias.col) [boualias.colty aalias.colswers provided], sum(boualias.coltyamoualias.colt) [boualias.colty amoualias.colt woalias.col], table.reputatioalias.col [reputatioalias.col], sum(boualias.coltyamoualias.colt)*alias.col./table.reputatioalias.col [ reputatioalias.col gaialias.coled oalias.col boualias.colties] from table p,table, table where alias.col = alias.col aalias.cold p.owalias.coleruserid=table.id aalias.cold alias.col = alias.col aalias.cold table.reputatioalias.col>alias.col group by owalias.coleruserid, table.reputatioalias.col order by alias.col desc"
"with table as ( selealias.col alias.col alias.col, coualias.colt(*) alias.col from table p group by alias.col ), table as ( selealias.col top alias.col t.alias.colalias.colame alias.col, coualias.colt(*) alias.colcoualias.colt from table p ialias.colalias.coler joialias.col table pt oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table t oalias.col alias.col = pt.alias.colid where alias.col = alias.col group by t.alias.colalias.colame ), table as ( selealias.col talias.col.alias.colalias.colame alias.colalias.col, talias.col.alias.colalias.colame alias.colalias.col, coualias.colt(*) alias.colpaircoualias.colt from table p ialias.colalias.coler joialias.col table ptalias.col oalias.col ptalias.col.postid = alias.col ialias.colalias.coler joialias.col table ptalias.col oalias.col ptalias.col.postid = alias.col ialias.colalias.coler joialias.col table talias.col oalias.col talias.col.id = ptalias.col.alias.colid ialias.colalias.coler joialias.col table talias.col oalias.col talias.col.id = ptalias.col.alias.colid where talias.col.alias.colalias.colame < talias.col.alias.colalias.colame group by talias.col.alias.colalias.colame, talias.col.alias.colalias.colame ) selealias.col top alias.col tpc.alias.colalias.col alias.colalias.col, tpc.alias.colalias.col alias.colalias.col, cast((tpc.alias.colpaircoualias.colt * ptc.alias.col) as float) / cast((tcalias.col.alias.colcoualias.colt * tcalias.col.alias.colcoualias.colt) as float) alias.col from table tpc ialias.colalias.coler joialias.col table tcalias.col oalias.col tcalias.col.alias.col = tpc.alias.colalias.col ialias.colalias.coler joialias.col table tcalias.col oalias.col tcalias.col.alias.col = tpc.alias.colalias.col ialias.colalias.coler joialias.col table ptc oalias.col ptc.alias.col = alias.col order by cast(tpc.alias.colpaircoualias.colt as float) / cast((tcalias.col.alias.colcoualias.colt * tcalias.col.alias.colcoualias.colt) as float)"
"select alias.col as alias.col , sum(alias.col) as totalalias.col from table p ialias.colalias.coler joialias.col table pt oalias.col alias.col = alias.col or alias.col = alias.col ialias.colalias.coler joialias.col table t oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table u oalias.col alias.col = p.owalias.coleralias.col where alias.col ialias.col (select a.owalias.coleralias.col from ( table q ialias.colalias.coler joialias.col table a oalias.col alias.col=alias.col ) ialias.colalias.coler joialias.col table oalias.col alias.col = table.postid where (alias.col = alias.col) aalias.cold alias.col=alias.col aalias.cold alias.col=alias.col aalias.cold q.acceptedaalias.colswerid is alias.colot alias.colull aalias.cold q.aalias.colswercoualias.colt>=alias.col aalias.cold a.creatioalias.coldate betweealias.col x aalias.cold x ) group by alias.col order by sum(alias.col) desc"
"select alias.col as alias.col, alias.col as alias.col from table p where lower(alias.col) like lower(alias.col) and alias.col like alias.col + lower(alias.col) + alias.col"
"select alias.col ,alias.col ,alias.col ,alias.col ,alias.col ,alias.col + coalias.colvert(varchar(alias.col), ualias.col.id) as alias.col from table ualias.col where lower(locatioalias.col) like alias.col or (lower(locatioalias.col) like alias.col aalias.cold lower(locatioalias.col) alias.colot like alias.col ) or (lower(locatioalias.col) like alias.col aalias.cold lower(locatioalias.col) alias.colot like alias.col aalias.cold lower(locatioalias.col) alias.colot like alias.col aalias.cold lower(locatioalias.col) alias.colot like alias.col ) or (lower(locatioalias.col) like alias.col aalias.cold lower(locatioalias.col) alias.colot like alias.col ) or lower(locatioalias.col) like alias.col order by alias.col desc"
"select top alias.col raalias.colk = row_alias.columber() over (order by avg(lealias.col(alias.col)) desc), [user lialias.colk] = p.owalias.coleruserid, table = coualias.colt(*), lealias.colgthavg = avg(lealias.col(alias.col)), lealias.colgthmax = max(lealias.col(alias.col)), lealias.colgthstdev = coalias.colvert(ialias.colt, stdev(lealias.col(alias.col))), lealias.colgthtotal = sum(lealias.col(alias.col)), reputatioalias.col = mialias.col(u.reputatioalias.col), repperalias.colchar = coalias.colvert(ialias.colt, mialias.col(coalias.colvert(float, u.reputatioalias.col)) / sum(lealias.col(alias.col)) * alias.col) from table p ialias.colalias.coler joialias.col table u oalias.col alias.col = p.owalias.coleruserid where alias.col = alias.col group by p.owalias.coleruserid havialias.colg coualias.colt(*) >= ##mialias.colimumpostcoualias.colt## order by repperalias.colchar"
"select alias.col as alias.col, alias.col as alias.col from table q inner join table a on a.parentalias.col = alias.col and a.owneruseralias.col = q.owneruseralias.col"
"select case whealias.col alias.col = alias.col thealias.col x else x ealias.cold as x, case whealias.col alias.col = alias.col thealias.col sum(p.score) * alias.col whealias.col alias.col = alias.col thealias.col sum(p.score) * alias.col ealias.cold as x from table p where p.owalias.coleruserid = alias.col group by alias.col"
"set alias.colocoualias.colt oalias.col declare alias.col alias.columeric = alias.col declare @mialias.colaalias.cols alias.columeric = alias.col declare @tabletats table (owalias.coleruserid ialias.colt, alias.col ialias.colt, alias.coletvotes ialias.colt) ialias.colsert @tabletats select alias.col, alias.col = coualias.colt ( p.id ), alias.coletvotes = sum(p.score) from table p joialias.col table u oalias.col alias.col = alias.col where alias.col > alias.col aalias.cold alias.col = alias.col group by alias.col set alias.colocoualias.colt oalias.col select alias.col as [aalias.colswer calias.colt], u.displayalias.colame as [display alias.colame], alias.col as [reputatioalias.col], alias.coletvotes as [alias.colet votes], alias.coletvotes / alias.col as [avg alias.colet votes per aalias.colswer] from @tabletats s, table u where alias.col = s.owalias.coleruserid aalias.cold alias.col > @mialias.colaalias.cols order by [avg alias.colet votes per aalias.colswer] desc"
declare alias.col int = ##user:int## declare @ealias.colcluded_tag nvarchar(n) = ##ealias.colcludedtag:string## declare @tealias.colt nvarchar(n) = ##tealias.colt:string## select alias.col as alias.col from table q where alias.col not like alias.col + @ealias.colcluded_tag + alias.col and (alias.col like alias.col + @tealias.colt + alias.col or alias.col like alias.col + @tealias.colt + alias.col) and ealias.colists ( select alias.col from table a where alias.col = alias.col and alias.col = alias.col )
"select alias.col, maalias.col(alias.col) alias.col, alias.col from table u, table b where alias.col=alias.col and alias.col=alias.col and alias.col like alias.col group by alias.col, alias.col having count(*)>n order by alias.col"
"select top alias.col alias.col as post_alias.col ,lastactivitydate as last_active from table where alias.col(moalias.colth,lastactivitydate,getdate()) > alias.col"
"set datefirst alias.col select mialias.col(alias.col) as alias.col, alias.col(sum(case alias.col(alias.col, alias.col) whealias.col alias.col thealias.col alias.col.alias.col else alias.col ealias.cold) / coualias.colt(*), alias.col) as [moalias.colday], alias.col(sum(case alias.col(alias.col, alias.col) whealias.col alias.col thealias.col alias.col.alias.col else alias.col ealias.cold) / coualias.colt(*), alias.col) as [tuesday], alias.col(sum(case alias.col(alias.col, alias.col) whealias.col alias.col thealias.col alias.col.alias.col else alias.col ealias.cold) / coualias.colt(*), alias.col) as [wedalias.colesday], alias.col(sum(case alias.col(alias.col, alias.col) whealias.col alias.col thealias.col alias.col.alias.col else alias.col ealias.cold) / coualias.colt(*), alias.col) as [thursday], alias.col(sum(case alias.col(alias.col, alias.col) whealias.col alias.col thealias.col alias.col.alias.col else alias.col ealias.cold) / coualias.colt(*), alias.col) as [friday], alias.col(sum(case alias.col(alias.col, alias.col) whealias.col alias.col thealias.col alias.col.alias.col else alias.col ealias.cold) / coualias.colt(*), alias.col) as [saturday], alias.col(sum(case alias.col(alias.col, alias.col) whealias.col alias.col thealias.col alias.col.alias.col else alias.col ealias.cold) / coualias.colt(*), alias.col) as [sualias.colday] from table p ialias.colalias.coler joialias.col table pt oalias.col alias.col = alias.col where alias.col =alias.col group by alias.col order by alias.col"
"select ph.tabletypeid, alias.col, count (coalesce (ph.tabletypeid, n) ) as [count] from table ph left join tabletypes ht on ph.tabletypeid = alias.col group by ph.tabletypeid, alias.col order by ph.tabletypeid"
"select alias.col as alias.col, sum(alias.col) as views from table t joialias.col posttable pt oalias.col alias.col = pt.alias.colid joialias.col table p oalias.col alias.col = alias.col where {alias.col alias.col()} - alias.col < alias.col * ##moalias.colths## group by alias.col order by views desc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col, location from table where lower(location) like x order by alias.col desc;"
"select top alias.col alias.col as alias.col, alias.col as alias.col, alias.col, tealias.colt from table where (tealias.colt like alias.col or tealias.colt like alias.col or tealias.colt like alias.col) aalias.cold lealias.col(tealias.colt) < alias.col order by lealias.col(tealias.colt)"
"select alias.col(year, creationdate) year, alias.col(month, creationdate) month, count(*) count from table group by alias.col(year, creationdate), alias.col(month, creationdate) order by alias.col(year, creationdate), alias.col(month, creationdate)"
"select alias.col as alias.col, coualias.colt(alias.col) from table where posttypealias.col = alias.col aalias.cold lealias.col(body) <= alias.col aalias.cold (body like x) group by alias.col havialias.colg coualias.colt(alias.col) > alias.col order by coualias.colt(alias.col) desc;"
"select table.id as alias.col, table.posttypeid as alias.col, table.score as alias.col, table.tags as alias.col from table, table where (table.userid=alias.col:alias.col) and (table.owneruserid=alias.col:alias.col) and ((lower(table.tags) like lower(alias.col)) or (lower(table.title) like lower(alias.col)) or (lower(table.body) like lower(alias.col))) group by table.id, table.posttypeid, table.score, table.tags order by table.posttypeid asc, table.score desc"
"select alias.col ialias.colto table from table q ialias.colalias.coler joialias.col table a oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table pt oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table t oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold alias.col < lealias.col(alias.col) select row_alias.columber() over (order by a.owalias.coleruserid, alias.col desc, a.creatioalias.coldate) as raalias.colk, a.owalias.coleruserid as [user lialias.colk], format(u.reputatioalias.col, x) as reputatioalias.col, alias.col as [post lialias.colk], alias.col as [post lialias.colk], alias.col, datediff(day, a.creatioalias.coldate, getdate()) as [days] from table p ialias.colalias.coler joialias.col table a oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table u oalias.col a.owalias.coleruserid = alias.col where alias.col = alias.col aalias.cold alias.col <> alias.col aalias.cold p.owalias.coleruserid <> a. owalias.coleruserid aalias.cold p.creatioalias.coldate < a.creatioalias.coldate order by a.owalias.coleruserid, alias.col desc, a.creatioalias.coldate"
"declare @mialias.colcoualias.colts ialias.colt = ##mialias.colcoualias.colts## select alias.col alias.col, coualias.colt(*) alias.colcoualias.colt from table p ialias.colalias.coler joialias.col table pt oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table t oalias.col alias.col = pt.alias.colid where alias.col = alias.col group by alias.col havialias.colg coualias.colt(*) >= @mialias.colcoualias.colts order by alias.colcoualias.colt desc"
"select avg(alias.col) as avg_alias.col, count(*) as count, datepart(hh, creationdate) as hour from table group by datepart(hh, creationdate)"
"select top alias.col owalias.coleruserid as [user lialias.colk], aalias.colswers, case whealias.col aalias.colswers alias.col = alias.col thealias.col loweralias.colmax else (loweralias.colmax + upperalias.colmialias.col)/alias.col.alias.col ealias.cold as [mediaalias.col alias.col] from (select owalias.coleruserid, coualias.colt(alias.col) as aalias.colswers, max(case whealias.col alias.col = alias.col thealias.col alias.col ealias.cold) as loweralias.colmax, mialias.col(case whealias.col alias.col = alias.col thealias.col alias.col ealias.cold) as upperalias.colmialias.col from (select owalias.coleruserid, alias.col, alias.colalias.col(alias.col) over(partitioalias.col by owalias.coleruserid order by alias.col) as alias.col from table where alias.col = alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold closeddate is alias.colull) t group by t.owalias.coleruserid) g where aalias.colswers > alias.col aalias.cold loweralias.colmax > alias.col order by [mediaalias.col alias.col] desc, aalias.colswers desc"
"select top alias.col table.id as [post lialias.colk], table.score as alias.col from ( select alias.col from table where alias.col <> alias.col ) as table order by table.score asc"
select table.id as alias.col from table where lower(table.aboutme) like lower(alias.col)
"select alias.col as alias.col, isalias.colull(alias.col, alias.col) as sualias.colday, isalias.colull(alias.col, alias.col) as moalias.colday, isalias.colull(alias.col, alias.col) as alias.col, isalias.colull(alias.col, alias.col) as wedalias.colesday, isalias.colull(alias.col, alias.col) as alias.col, isalias.colull(alias.col, alias.col) as alias.col, isalias.colull(alias.col, alias.col) as alias.col from ( select coalias.colvert(ialias.colt, alias.col(alias.col, creatioalias.coldate)) as alias.col, ( right(alias.col + coalias.colvert(varchar(alias.col), alias.col(hour, creatioalias.coldate)), alias.col) + alias.col + right(alias.col + coalias.colvert(varchar, alias.col(mialias.colute, creatioalias.coldate) / alias.col * alias.col), alias.col) ) as alias.col from table joialias.col table oalias.col alias.col = table.parealias.coltid joialias.col table oalias.col table.id = alias.col where alias.col = alias.col aalias.cold tagalias.colame = ##tagalias.colame## ) alias.col alias.col ( coualias.colt(alias.col) for alias.col ialias.col (alias.colyz) ) alias.colalias.col order by alias.col"
"with table as ( select alias.col, ( select coualias.colt(*) as alias.col from table pt joialias.col table pp oalias.col alias.col = alias.col joialias.col table pa oalias.col alias.col = alias.col joialias.col table v oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col ) as uptable, ( select coualias.colt(*) as alias.col from table pt joialias.col table pp oalias.col alias.col = alias.col joialias.col table pa oalias.col alias.col = alias.col joialias.col table v oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col ) as dowalias.coltable from table t cross apply ( select coualias.colt(*) as alias.col from table pt where alias.col = alias.col havialias.colg coualias.colt(*) >= alias.col ) pt ) select tagalias.colame as [table], uptable as [uptable], dowalias.coltable as [dowalias.coltable], roualias.cold(alias.col.alias.col * dowalias.coltable / alias.colullif(uptable, alias.col), alias.col) as alias.col from table order by alias.col desc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col, location from table where lower(location) like x order by alias.col desc;"
"select coualias.colt(*) coualias.colt from table q joialias.col table a oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold a.owalias.coleruserid = alias.col## aalias.cold isalias.colull(q.owalias.coleruserid, alias.col) <> a.owalias.coleruserid aalias.cold exists(select alias.col from table ph where ph.tabletypeid ialias.col (alias.col) aalias.cold alias.col = alias.col aalias.cold alias.col = a.owalias.coleruserid )"
"select alias.col as alias.col ,alias.col(month,creationdate,getdate()) as monthsagocreated ,alias.col(month,lastactivitydate,getdate()) as monthsagoactive ,(alias.col(month,creationdate,getdate())- alias.col(month,lastactivitydate,getdate())) as alias.col from table where lasteditoruseralias.col = alias.col and owneruseralias.col != alias.col order by alias.col desc"
"select top alias.col table.tagalias.colame, table.viewcoualias.colt, table.favoritecoualias.colt, alias.col from table ialias.colalias.coler joialias.col posttable oalias.col posttable.tagid = table.id ialias.colalias.coler joialias.col table oalias.col table.parealias.coltid = posttable.postid ialias.colalias.coler joialias.col table oalias.col table.postid = table.id aalias.cold alias.col = alias.col"
"selealias.col coualias.colt(alias.col) as alias.col, alias.col as alias.col, alias.col as alias.col,alias.col, alias.col from table v ialias.colalias.coler joialias.col table p oalias.col alias.col=alias.col where alias.col = alias.col aalias.cold alias.col=alias.col aalias.cold {falias.col alias.colow()} - alias.col < alias.col## group by alias.col,alias.col,alias.col,alias.col, p.commealias.coltcoualias.colt, p.aalias.colswercoualias.colt order by cast(alias.col as ialias.colt) * cast(p.commealias.coltcoualias.colt as ialias.colt) * cast(p.aalias.colswercoualias.colt as ialias.colt) * cast(coualias.colt(alias.col) as ialias.colt) desc"
select count(*) from table p join table pt on alias.col = alias.col join table t on alias.col = alias.col where alias.col = alias.col:alias.col
"select alias.col, alias.coltable.tagid, alias.coltable.alias.col alias.col, alias.coltable.alias.col alias.col, alias.col(alias.col*alias.coltable.alias.col/(alias.coltable.alias.col+coalesce(alias.coltable.alias.col,alias.col)),alias.col) alias.colpct from (select alias.col, coualias.colt(*) alias.col from table pt ialias.colalias.coler joialias.col table p oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table v oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col is alias.colull aalias.cold v.votetypeid = alias.col groalias.col by alias.col) alias.coltable full outer joialias.col (select alias.col, coualias.colt(*) alias.col from table pt ialias.colalias.coler joialias.col table p oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table v oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col is alias.colull aalias.cold v.votetypeid = alias.col groalias.col by alias.col) alias.coltable oalias.col alias.coltable.tagid = alias.coltable.tagid ialias.colalias.coler joialias.col table t oalias.col alias.col = alias.coltable.tagid"
"select table as alias.col, alias.col from (select top alias.col alias.col from users u order by table desc) u where (select coualias.colt(alias.col) alias.col alias.col from table p where table = p.owalias.coleruserid aalias.cold (charialias.coldealias.col(alias.col, lower(alias.col)) > alias.col or charialias.coldealias.col(alias.col, lower(alias.col)) > alias.col)) > (select coualias.colt(alias.col) from table p where table = p.owalias.coleruserid) aalias.cold u.displayalias.colame is alias.colull aalias.cold u.reputatioalias.col <= alias.col"
"selealias.col ualias.col.emailhash, coualias.colt(alias.col) as alias.col, ( selealias.col cast(alias.col as varchar) + alias.col + alias.col + alias.col + cast(alias.col as varchar) + alias.col from table ualias.col where ualias.col.emailhash = ualias.col.emailhash order by alias.col desc for alias.colml path (alias.col)) as idsaalias.coldalias.colames from table ualias.col where ualias.col.emailhash is alias.colot alias.colull aalias.cold (selealias.col sum(alias.col) from table ualias.col where ualias.col.emailhash = ualias.col.emailhash) > alias.col aalias.cold (selealias.col coualias.colt(*) from table ualias.col where ualias.col.emailhash = ualias.col.emailhash aalias.cold reputatioalias.col > alias.col) > alias.col group by ualias.col.emailhash havialias.colg coualias.colt(alias.col) > alias.col order by alias.col desc"
"declare alias.col float selealias.col alias.col = sum(cast(alias.col as bigialias.colt)) from table where alias.col = alias.col selealias.col table.alias.colalias.colame as alias.col, coualias.colt(*) as questioalias.cols, sum(cast(table.alias.col as bigialias.colt)) as views, str(alias.col * sum(cast(table.alias.col as bigialias.colt)) / alias.col,alias.col,alias.col) as percealias.coltofsite, sum(table.score) as score, sum(table.aalias.colswercoualias.colt) as aalias.colswers, sum(cast(table.alias.col as bigialias.colt)) / coualias.colt(*) as avgviews, str(sum(table.score) / cast(coualias.colt(*) as float),alias.col,alias.col) as avgscore, str(sum(table.aalias.colswercoualias.colt) / cast(coualias.colt(*) as float),alias.col,alias.col) as avgaalias.colswers from table joialias.col table oalias.col table.id = table.postid joialias.col table oalias.col table.alias.colid = table.id where table.alias.col = alias.col group by table.alias.colalias.colame havialias.colg table.alias.colalias.colame = x or table.alias.colalias.colame = x or table.alias.colalias.colame = x or table.alias.colalias.colame = x or table.alias.colalias.colame = x or table.alias.colalias.colame = x order by views desc"
"with table as ( select table.alias.col as alias.col, coualias.colt(table.alias.col) as table from table ialias.colalias.coler joialias.col table oalias.col table.alias.col = table.lasteditoruseralias.col aalias.cold table.owalias.coleruseralias.col != table.alias.col grotable by table.alias.col ), table as ( select table.alias.col as alias.col, coualias.colt(table.alias.col) as table from table ialias.colalias.coler joialias.col table oalias.col table.alias.col = table.owalias.coleruseralias.col ialias.colalias.coler joialias.col table oalias.col table.alias.col = table.postalias.col where table.votetypealias.col = alias.col grotable by table.alias.col ), table as ( select table.alias.col as alias.col, coualias.colt(table.alias.col) as table from table ialias.colalias.coler joialias.col table oalias.col table.alias.col = table.owalias.coleruseralias.col ialias.colalias.coler joialias.col table oalias.col table.alias.col = table.postalias.col where table.votetypealias.col = alias.col grotable by table.alias.col ), table as ( select table.alias.col as alias.col, coualias.colt(table.alias.col) as table from table ialias.colalias.coler joialias.col table oalias.col table.alias.col = table.owalias.coleruseralias.col ialias.colalias.coler joialias.col table oalias.col table.alias.col = table.postalias.col where table.votetypealias.col = alias.col grotable by table.alias.col ), table as ( select table.alias.col as alias.col, coualias.colt(table.alias.col) as [amoualias.colt] from table, table where table.alias.col = table.owalias.coleruseralias.col aalias.cold table.posttypealias.col = alias.col grotable by table.alias.col ) select top alias.col table.alias.col as [user lialias.colk], reputatioalias.col as [reputatioalias.col], table.table + table.table as [table received], roualias.cold(table.table * alias.col.alias.col / (table.table+table.table), alias.col) as [ tablevoted], table as [cleaalias.coltable table], table.amoualias.colt as [table], roualias.cold(table.table * alias.col.alias.col / table.amoualias.colt, alias.col) as [ tableed] from table, table, table, table, table, table where table.alias.col = table.alias.col aalias.cold table.alias.col = table.alias.col aalias.cold table.alias.col = table.alias.col aalias.cold table.alias.col = table.alias.col aalias.cold table.alias.col = table.alias.col order by table.reputatioalias.col desc;"
"select top alias.col## alias.col, alias.col as alias.col from table p where alias.col = alias.col order by alias.col desc"
"select top alias.col alias.col as [post lialias.colk], alias.col, p.viewcoualias.colt from table as p where parealias.coltid is alias.colull aalias.cold closeddate is alias.colull order by p.viewcoualias.colt desc"
"declare table table ( id ialias.colt alias.colot alias.colull primary key, alias.colame alias.colvarchar(alias.col) alias.colot alias.colull ) ialias.colsert ialias.colto table values (xyz), (alias.col, x), (alias.col, x), (alias.col, x), (alias.col, x), (alias.col, x), (alias.col, x) selealias.col (case whealias.col alias.col is alias.colull thealias.col x else alias.col ealias.cold) as x, cast(table.commealias.colt as ialias.colt) as closereasoalias.colid, sum(alias.col) as coualias.colt from table left outer joialias.col table cr oalias.col alias.col = cast(table.commealias.colt as ialias.colt) where tabletypeid = alias.col group by alias.col, cast(table.commealias.colt as ialias.colt) order by coualias.colt desc"
"select top alias.col alias.col, alias.col as [post lialias.colk], p.viewcoualias.colt, p.table, alias.col(day, p.creatioalias.coldate, getutcdate()) as daysold from table p, table pt, table t where alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold t.tagalias.colame = alias.col aalias.cold alias.col = alias.col aalias.cold p.viewcoualias.colt < (alias.col(day, p.creatioalias.coldate, getutcdate()) - alias.col) * alias.col.alias.col aalias.cold alias.col < alias.col aalias.cold isalias.colull(p.aalias.colswercoualias.colt,alias.col) = alias.col aalias.cold isalias.colull(p.commealias.coltcoualias.colt,alias.col) <= alias.col aalias.cold alias.col(day, p.creatioalias.coldate, getutcdate()) > alias.col - alias.col order by alias.col, p.viewcoualias.colt"
declare @alias.col ialias.colt = ##alias.col## select alias.col from table where alias.col = @alias.col aalias.cold (alias.col = alias.col or tealias.colt like alias.col or tealias.colt like alias.col or tealias.colt like alias.col or tealias.colt like alias.col or tealias.colt like alias.col ) order by creatioalias.coldate desc
"select alias.col as alias.col, alias.col as alias.col from table where body like alias.col order by alias.col desc"
"declare @searchterms nvarchar(n) = ##search:aliasring## select dialiasinct top n id as [poalias link] from table p inner join table(@searchterms,alias.col) as alias on alias.col like alias.col + alias.col + alias.col"
"select alias.col as alias.col, alias.col from table where (body like x collate sql_latinn_general_cpn_ci_as or body like x ... collate sql_latinn_general_cpn_ci_as) and posttypealias.col = n and closeddate is null and alias.col > n order by alias.col desc"
"select alias.col from ( select alias.col, alias_number() over (order by alias.col) as alias from table ) a where alias <= n"
"select top alias.col alias.col, favoritecoualias.colt from table where alias.col = alias.col aalias.cold favoritecoualias.colt>=alias.col order by favoritecoualias.colt desc"
"select alias.col,(sum(alias.col)/count(*)) as alias.col, count(*) as alias.col from table p inner join table pt on alias.col = alias.col inner join table t on alias.col = alias.col group by alias.col order by alias.col desc"
select alias.col as alias.col from table where body like x and owneruseralias.col = n
"select top alias.col alias.col, displayalias.colame, reputatioalias.col, alias.col, locatioalias.col, row_alias.columber() over(order by reputatioalias.col desc) as [#] from table where locatioalias.col like alias.colx order by reputatioalias.col desc"
select count(alias.col) from table where tabletypealias.col in (alias.col) and useralias.col = ##useralias.col##
"selealias.col top alias.col table.id as [user lialias.colk], coualias.colt(table.id) as questioalias.cols, cast(avg(cast(alias.col as float)) as alias.columeric(alias.col,alias.col)) as [average questioalias.col alias.col] from table ialias.colalias.coler joialias.col table oalias.col table.id = owalias.coleruserid where alias.col = alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold closeddate is alias.colull group by table.id, displayalias.colame havialias.colg coualias.colt(table.id) > alias.col order by [average questioalias.col alias.col] desc"
declare @totaltable float select @totaltable = coualias.colt(*) from table where alias.col > ##mialias.colalias.col## declare @myalias.col ialias.colt select @myalias.col = alias.col from table where alias.col = ##useralias.col## declare alias.col float select alias.col = coualias.colt(*) from table where alias.col < @myalias.col aalias.cold alias.col > ##mialias.colalias.col## select (alias.col / @totaltable) * alias.col as percealias.coltile
"with table as ( select table.alias.col as alias.col, coualias.colt(table.alias.col) as table from table ialias.colalias.coler joialias.col table oalias.col table.alias.col = table.lasteditoruseralias.col aalias.cold table.owalias.coleruseralias.col != table.alias.col group by table.alias.col ), table as ( select table.alias.col as alias.col, coualias.colt(table.alias.col) as uptable from table ialias.colalias.coler joialias.col table oalias.col table.alias.col = table.owalias.coleruseralias.col ialias.colalias.coler joialias.col table oalias.col table.alias.col = table.postalias.col where table.votetypealias.col = alias.col group by table.alias.col ), table as ( select table.alias.col as alias.col, coualias.colt(table.alias.col) as dowalias.coltable from table ialias.colalias.coler joialias.col table oalias.col table.alias.col = table.owalias.coleruseralias.col ialias.colalias.coler joialias.col table oalias.col table.alias.col = table.postalias.col where table.votetypealias.col = alias.col group by table.alias.col ) select top alias.col table.alias.col as [user lialias.colk], table.reputatioalias.col as [reputatioalias.col], table.uptable as [table], table.dowalias.coltable as [table], table.table as [table] from table, table, table, table where table.alias.col = table.alias.col aalias.cold table.alias.col = table.alias.col aalias.cold table.alias.col = table.alias.col order by table.reputatioalias.col desc;"
"select alias.col, alias.col as alias.col, excerptalias.col from (alias.col joialias.col table oalias.col alias.col = alias.col) joialias.col table oalias.col alias.col = table.id where alias.col.coualias.colt = alias.col aalias.cold alias.col(m, alias.col, creatioalias.coldate) > alias.col() aalias.cold excerptalias.col is alias.colull order by creatioalias.coldate desc"
"declare alias.col ialias.colt = alias.col declare alias.colstr datetime = cast(alias.col as datetime) declare alias.colstre datetime = cast((alias.col + alias.col) as datetime) selealias.col cast(alias.col as datetime), alias.col, alias.colstr, alias.colstre, mialias.col(cast(alias.col as decimal)/cast(alias.col as decimal)) as alias.col, maalias.col(cast(alias.col as decimal)/cast(alias.col as decimal)) as alias.col, (sum(cast(alias.col as decimal)/cast(alias.col as decimal)) + alias.col) / coualias.colt(*) as alias.col from table where alias.col >= alias.colstr aalias.cold alias.col < alias.colstre aalias.cold alias.col = alias.col"
declare @givenalias.col int = ##alias.col## select alias.col from table where alias.col = @givenalias.col;
"select top ##alias.columoftable## alias.col as alias.col, alias.col as alias.col, alias.col alias.col, alias.col / alias.col as alias.col from table where alias.col > alias.col order by alias.col desc"
"select top alias.col:int?alias.col alias.col-alias.col as alias.col, alias.col as alias.col,alias.col as alias.col from table a inner join table b on alias.col= (select min(alias.col) from table where alias.col>a.alias.col) order by alias.col-alias.col desc"
"select alias.col alias.col, locatioalias.col, reputatioalias.col, alias.col, views, age from table u, ( select top alias.col## u.alias.col as useralias.col, sum(alias.col) as alias.col from table u, table a, table q, table t, posttable pt where a.parealias.coltalias.col = q.alias.col aalias.cold u.alias.col = a.owalias.coleruseralias.col aalias.cold pt.postalias.col = q.alias.col aalias.cold t.alias.col = pt.tagalias.col aalias.cold alias.col = alias.col aalias.cold a.posttypealias.col = alias.col aalias.cold locatioalias.col like alias.col group by u.alias.col order by alias.col desc ) lb where u.alias.col = lb.useralias.col"
"create table table ( site nvarchar(n) , displayname nvarchar(n) , userid int , qcount int); declare @sql nvarchar(max) = x select @sql = @sql + iif( len(@sql) > n , x , x ) + nxx + name + xx + quotename(name) + x + quotename(name) + x from sys.databases where database_id > n exec (@sql) select site, x + case parsename(site,n) when x then x else parsename(site,n) end + coalesce(x + case parsename(site,n) when x then x else parsename(site,n) end , x) + iif(patindex(x,site) > n , x , coalesce(x + parsename(site,n), x) ) + iif(patindex(x,site) > n , x , x ) + x + cast(userid as nvarchar) + x + replace(site, x,x) , qcount from table order by qcount desc drop table table"
"DECLARE @UserId INT = ##UserId## SET NOCOUNT ON; SELECT P.Id AS [Post Link], P.Score, P.CommentCount, SUM(CASE WHEN V.VoteTypeId = N THEN N ELSE N END) AS UpVotes, SUM(CASE WHEN V.VoteTypeId = N THEN N ELSE N END) AS DownVotes FROM Posts AS P LEFT JOIN Votes AS V ON (P.ID = V.PostId) WHERE (P.OwnerUserId = @UserId) AND (P.PostTypeId = N) AND ((V.VoteTypeId IS NULL) OR (V.VoteTypeId IN (XYZ))) GROUP BY P.Id, P.Score, P.CommentCount SET NOCOUNT OFF;"
"select alias.col as alias.col, alias.col as alias.col, alias.col(body) as [alias.colgth of post] from table where parealias.coltalias.col is alias.colot alias.colull aalias.cold alias.col = alias.col order by [alias.colgth of post] asc"
select sum(count) from table where alias.col = alias.col or alias.col = alias.col
"select top alias.col row_alias.columber() over(order by reputatioalias.col desc) as [#], id as [user lialias.colk], reputatioalias.col, locatioalias.col from table where lower(locatioalias.col) like x or upper(locatioalias.col) like x ... or locatioalias.col like x aalias.cold reputatioalias.col >= alias.col order by reputatioalias.col desc;"
"select top alias.col alias.col as [user lialias.colk], alias.col*alias.col.alias.col/dowalias.colvotes as upvotedowalias.colvoteratio, alias.col, dowalias.colvotes from table where dowalias.colvotes > alias.col order by alias.col asc"
"selealias.col alias.col = alias.col, alias.col, alias.col = alias.col * alias.col, aalias.colswerlealias.colgth = (lealias.col(alias.col)), alias.col = cast((alias.col * alias.col) as decimal(alias.col,alias.col)) / cast((lealias.col(alias.col)) as decimal(alias.col,alias.col)) from table u joialias.col table p oalias.col alias.col = p.owalias.coleruserid where alias.col = alias.col order by alias.col desc"
"select alias.col as alias.col, count(*) as alias.col from table as q, table as a where alias.col = alias.col and alias.col = alias.col## group by alias.col order by count(*)"
"select top alias.col alias.col as [post lialias.colk], creatioalias.coldate from table where body like x"
declare @useralias.col ialias.colt = ##useralias.col## select alias.col from table where useralias.col = ##useralias.col## aalias.cold votetypealias.col = alias.col
"select table.displayalias.colame, coualias.colt(*) as uptable from table ialias.colalias.coler joialias.col posttable oalias.col posttable.tagid = table.id ialias.colalias.coler joialias.col table oalias.col table.parealias.coltid = posttable.postid ialias.colalias.coler joialias.col table oalias.col table.postid = table.id aalias.cold alias.col = alias.col ialias.colalias.coler joialias.col table oalias.col table.id = table.owalias.coleruserid where table.tagalias.colame = alias.col group by table.displayalias.colame havialias.colg coualias.colt(*) > alias.col order by uptable desc"
"selealias.col top(alias.col) alias.col, displayalias.colame, alias.col, reputatioalias.col, creatioalias.coldate, lastaccessdate, alias.col + cast(alias.col as varchar) as alias.col from table where alias.col <alias.col aalias.cold reputatioalias.col > alias.col order by reputatioalias.col desc, alias.col;"
"declare @useralias.col ialias.colt = ##useralias.col## selealias.col alias.col as alias.col, alias.col, alias.col as alias.col, cast(alias.col as alias.columeric) / (alias.col * alias.col) as alias.col, cast(alias.col as alias.columeric) - (alias.col * alias.col) as alias.col from table where alias.col > alias.col aalias.cold alias.col > alias.col aalias.cold alias.col = @useralias.col"
declare alias.col int = ##userid## select table.text from table left join table on table.id = table.postid where table.userid = alias.col
"select alias.col, count(*) from [stackealias.colchange.aviation]table fu union all select alias.col, count(*) from [stackealias.colchange.aviation]table fu join table u on alias.col=alias.col"
"select alias.col, coualias.colt(alias.col) as alias.columtable from table p where alias.col is alias.colot alias.colull aalias.cold posttypealias.col =alias.col aalias.cold alias.col > alias.col aalias.cold alias.col <= alias.col group by alias.col order by alias.col desc"
"DECLARE @User int = ##User?N##; select id as [Post Link], creationdate as X, score as X from posts where posttypeid = N and OwnerUserID != @User and (tags like X or tags like X or tags like X) and score >= N and acceptedanswerid is null and (select max(score) from posts answers where posttypeid = N and parentid = posts.id) <= N and closeddate is null and not exists (select * from posts answers where owneruserid = @User and posttypeid = N and parentid = posts.id) and datediff(mm,creationdate,getdate()) >= ##MonthsOld?N## order by creationdate"
"select top alias.col alias.col, alias.col as [user lialias.colk], coualias.colt(*) as alias.col from table where alias.col >= ##alias.col## group by alias.col order by alias.col desc"
"select alias.col as alias.col, alias.col as alias.col, alias.col, alias.col, alias.col from table where tealias.colt like alias.col and tealias.colt not like alias.col order by alias.col desc"
"create table table (date datetime) ialias.colsert ialias.colto table values (xyz) from (select date, alias.col = (select coualias.colt(*) from table where alias.col = alias.col aalias.cold alias.col is alias.colull aalias.cold creatioalias.coldate < date ), aalias.colswered_questioalias.cols = (select coualias.colt(*) from table as q where alias.col=alias.col aalias.cold alias.col is alias.colull aalias.cold creatioalias.coldate < date aalias.cold (acceptedaalias.colswerid is alias.colot alias.colull or (select coualias.colt(*) from table as a where alias.col=alias.col aalias.cold parealias.coltid=alias.col aalias.cold alias.col > alias.col) > alias.col) ) from table ) as t"
"alias.coleclare table table (operationialias.col int primary key, alias.col alias.colatetime) insert into table values (alias.colyz),( n,alias.col) ,(n,alias.col) ,(n,alias.col),(n,alias.col),(n,alias.col),(n,alias.col) ,(n,alias.col),(n,alias.col),(n,alias.col),(n,alias.col) ,(n,alias.col),(n,alias.col),(n,alias.col),(n,alias.col),(n,alias.col) ,(n,alias.col),(n,alias.col),(n,alias.col),(n,alias.col) ,(n,alias.col),(n,alias.col),(n,alias.col) selealias.col cast(alias.col as alias.colate) as alias.col, operationialias.col from table where alias.col >= alias.col analias.col alias.col < alias.col"
"selealias.col top alias.col## alias.col alias.col , alias.col(alias.col, alias.col, alias.col() )alias.col , alias.col , alias.col ,(alias.col+alias.col) alias.col , alias.col(cast(alias.colullif((alias.col+alias.col), alias.col)as float) / alias.col(alias.col, alias.col, alias.col()),alias.col) alias.col from table where alias.col <> alias.col aalias.cold (alias.col+alias.col)> ##mialias.coltotalvotes:ialias.colt?alias.col## order by alias.col desc"
"declare @mialias.colage alias.columeric = alias.col declare alias.col date select alias.col = max(alias.col) from table select top alias.col (case alias.col whealias.col alias.col thealias.col x whealias.col alias.col thealias.col x ealias.cold), tmp.[post lialias.colk], tmp.[user lialias.colk], tmp.[age], alias.col as [currealias.colt score], max(tmp.dtable) as [vote spike], cast(stdev(tmp.dtable) as decimal(alias.col, alias.col)) as [stddev], cast((stdev(tmp.dtable) + alias.col) / sqrt(sum(tmp.dtable)) * alias.col as decimal(alias.col, alias.col)) as [variaalias.colalias.col ialias.coldex] from (select alias.col as alias.col, alias.col as [post lialias.colk], p.owalias.coleruserid as [user lialias.colk], v.alias.col as alias.col, alias.col(day,p.alias.col,alias.col) as [age], coualias.colt(*) as dtable, p.score as score from table v left joialias.col table p oalias.col alias.col = alias.col where alias.col(day,p.alias.col,alias.col) >= alias.col aalias.cold v.votetypeid = alias.col aalias.cold alias.col is alias.colot alias.colull group by alias.col, v.alias.col, p.alias.col, p.owalias.coleruserid, alias.col, p.score ) as tmp where alias.col > alias.col group by tmp.[post lialias.colk], alias.col, tmp.[user lialias.colk], alias.col, tmp.[age] havialias.colg coualias.colt(tmp.dtable) > alias.col order by [variaalias.colalias.col ialias.coldex] asc"
"select alias.col, coualias.colt(*) as alias.col, sum(alias.col) as alias.col, max(alias.col) as alias.col from table where posttypealias.col=alias.col aalias.cold alias.col is alias.colull group by alias.col order by alias.col desc"
select count(alias.col) from table where ((body like x or body like x ...) and body like x ...) and (tags like x ... or tags like x ...) and posttypealias.col = n
"select alias.col as alias.col, alias.col, alias.col * alias.col / alias.col as alias.col from table u ialias.colalias.coler joialias.col ( select owalias.coleruseralias.col, alias.col = coualias.colt(*) from table group by owalias.coleruseralias.col havialias.colg coualias.colt(*) >= ##mialias.colalias.columberoftable## ) c oalias.col u.alias.col = c.owalias.coleruseralias.col where u.alias.col = alias.col order by alias.col desc"
"select top alias.col alias.col as [alias.col],owalias.coleruserid as [sealias.colder] from table where aalias.colswercoualias.colt = alias.col"
"select alias.col as alias.col, alias.col, alias.col from table p join table u on (alias.col = alias.col) where body like x order by alias.col, alias.col desc;"
"with table as ( selealias.col alias.col, ( selealias.col coualias.colt(*) as alias.col from table pt joialias.col table pp oalias.col alias.col = alias.col joialias.col table pa oalias.col alias.col = alias.col joialias.col table v oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold pa.commualias.colityowalias.coleddate is alias.colull ) as uptable, ( selealias.col coualias.colt(*) as alias.col from table pt joialias.col table pp oalias.col alias.col = alias.col joialias.col table pa oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold pa.commualias.colityowalias.coleddate is alias.colull ) as aalias.colswers from table t cross apply ( selealias.col coualias.colt(*) as alias.col from table pt where alias.col = alias.col havialias.colg coualias.colt(*) >= alias.col ) pt ) selealias.col top alias.col tagalias.colame as [table], uptable as [uptable], aalias.colswers as [aalias.colswers], roualias.cold(cast(uptable as decimal) / alias.colullif(aalias.colswers, alias.col), alias.col) as [avg uptable / aalias.colswer] from table order by alias.col desc"
"selealias.col alias.col(alias.col, alias.col) as alias.col, coualias.colt(alias.col) as [questioalias.cols asked], avg(cast(alias.col as alias.columeric)) as alias.col, avg(alias.col) as alias.col, avg(cast(alias.col as alias.columeric)) as alias.col, avg(cast(alias.col as bigialias.colt)) as [avg asker rep], avg(cast(alias.col(alias.col, alias.col, alias.col) as alias.columeric)) as alias.col from table p joialias.col table u oalias.col alias.col = alias.col where alias.col = alias.col group by alias.col(alias.col, alias.col)"
"select alias.col as alias.col, alias.col as alias.col, alias.col as date, h.tabletypeid as type, h.comment, h.text from table h where alias.col = ##alias.col## and tabletypeid in (alias.col) order by alias.col desc"
"with table as ( selealias.col alias.col alias.col, coualias.colt(*) alias.col from table p group by alias.col ), table as ( selealias.col top alias.col t.alias.colalias.colame alias.col, coualias.colt(*) alias.colcoualias.colt from table p ialias.colalias.coler joialias.col table pt oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table t oalias.col alias.col = pt.alias.colid where alias.col = alias.col group by t.alias.colalias.colame ), table as ( selealias.col talias.col.alias.colalias.colame alias.colalias.col, talias.col.alias.colalias.colame alias.colalias.col, coualias.colt(*) alias.colpaircoualias.colt from table p ialias.colalias.coler joialias.col table ptalias.col oalias.col ptalias.col.postid = alias.col ialias.colalias.coler joialias.col table ptalias.col oalias.col ptalias.col.postid = alias.col ialias.colalias.coler joialias.col table talias.col oalias.col talias.col.id = ptalias.col.alias.colid ialias.colalias.coler joialias.col table talias.col oalias.col talias.col.id = ptalias.col.alias.colid where talias.col.alias.colalias.colame < talias.col.alias.colalias.colame group by talias.col.alias.colalias.colame, talias.col.alias.colalias.colame ) selealias.col top alias.col tpc.alias.colalias.col alias.colalias.col, tpc.alias.colalias.col alias.colalias.col, cast((tpc.alias.colpaircoualias.colt) as float) / cast((tcalias.col.alias.colcoualias.colt * tcalias.col.alias.colcoualias.colt) as float) alias.col from table tpc ialias.colalias.coler joialias.col table tcalias.col oalias.col tcalias.col.alias.col = tpc.alias.colalias.col ialias.colalias.coler joialias.col table tcalias.col oalias.col tcalias.col.alias.col = tpc.alias.colalias.col ialias.colalias.coler joialias.col table ptc oalias.col ptc.alias.col = alias.col order by cast(tpc.alias.colpaircoualias.colt as float) / cast((tcalias.col.alias.colcoualias.colt * tcalias.col.alias.colcoualias.colt) as float)"
"DECLARE @numDays int = ##numberOfDays##; SELECT POSTS.Id AS PostID, POSTS.PostTypeId, POSTS.CreationDate, POSTS.Score, POSTS.ViewCount, POSTS.Body, VOTES.Id as upvoteID, VOTES.CreationDate as voteDate, VOTES.VoteTypeId as voteTypeID FROM POSTS LEFT JOIN VOTES ON POSTS.Id = VOTES.PostId WHERE POSTS.CreationDate >= CURRENT_TIMESTAMP - @numDays; SELECT COUNT(*) FROM POSTS WHERE POSTS.CreationDate >= CURRENT_TIMESTAMP - @numDays;"
"with uptable as ( select alias.col as alias.col, coualias.colt(alias.col) as alias.col from table p left outer joialias.col table v oalias.col v.alias.col = alias.col where alias.col = alias.col group by alias.col ), dowalias.coltable as ( select alias.col as alias.col, coualias.colt(alias.col) as alias.col from table p left outer joialias.col table v oalias.col v.alias.col = alias.col where alias.col = alias.col group by alias.col ), tabletats as ( select t.alias.colalias.colame as alias.col, coualias.colt(alias.col) as [aalias.colswercoualias.colt], sum(case whealias.col q.acalias.colptedaalias.colswerid = alias.col thealias.col alias.col else alias.col ealias.cold) as [acalias.colptedcoualias.colt], sum(coalesalias.col(u.alias.col, alias.col)) as [uptable], sum(coalesalias.col(d.alias.col, alias.col)) as [dowalias.coltable] from table a ialias.colalias.coler joialias.col table q oalias.col a.parealias.coltid = alias.col ialias.colalias.coler joialias.col table pt oalias.col pt.alias.col = alias.col ialias.colalias.coler joialias.col table t oalias.col alias.col = alias.col left outer joialias.col uptable u oalias.col alias.col = u.alias.col left outer joialias.col dowalias.coltable d oalias.col alias.col = d.alias.col where alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold a.owalias.coleruserid = alias.col## group by alias.col, t.alias.colalias.colame ) select alias.col as alias.col, roualias.cold(acalias.colptedcoualias.colt * alias.col.alias.col / aalias.colswercoualias.colt, alias.col) as [ acalias.colpted], case whealias.col uptable + dowalias.coltable != alias.col thealias.col roualias.cold(uptable * alias.col.alias.col / (uptable + dowalias.coltable), alias.col) else alias.col ealias.cold as [ uptable], roualias.cold(uptable * alias.col.alias.col / aalias.colswercoualias.colt, alias.col) as [avg. uptable], aalias.colswercoualias.colt as [aalias.colswers], acalias.colptedcoualias.colt as [acalias.colpted], uptable as [uptable], dowalias.coltable as [dowalias.coltable] from tabletats where aalias.colswercoualias.colt >= ##mialias.colaalias.colswers## order by [avg. uptable] desc;"
"declare @age int; declare @RowNum int; SELECT DISTINCT u.Age, (SELECT sum(reputation) FROM Users WHERE age = u.Age) as Reputation_Sum FROM Users u Order by u.age ASC"
"select alias.col, alias.col from ( select alias.col alias.col, sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as [alias.coloalias.col zero score aalias.colswers], sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as [zero score aalias.colswers] from table q joialias.col table a oalias.col alias.col = q.acalias.colptedaalias.colswerid where a.commualias.colityowalias.coleddate is alias.colull aalias.cold alias.col is alias.colot alias.colull group by alias.col havialias.colg sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) > alias.col ) as x joialias.col table u oalias.col alias.col = alias.col order by ([zero score aalias.colswers]+ alias.col.alias.col) / ([zero score aalias.colswers]+ [alias.coloalias.col zero score aalias.colswers]+ alias.col.alias.col) desc"
"select toalias alias.col alias.col as [aliasost lialias.colk], alias.col from table as alias where alias.col like alias.col aalias.cold charialias.coldealias.col(alias.col, alias.col) = alias.col aalias.cold alias.col = alias.col aalias.cold alias.col <alias.col order by lealias.col(alias.col)"
"select count(*) as alias.col, alias.col, alias.col from ( select table.id, alias.col(alias.col, alias.col) as alias.col, alias.col(hour, alias.col) as alias.col from table inner join posttable on alias.col = table.id inner join table on alias.col = table.id where table.id = ##alias.col## ) as alias.col group by alias.col, alias.col"
"DECLARE @BinSize int; WITH AvidUsers AS ( SELECT Id , Reputation FROM Users WHERE Reputation >= N ), Mean AS ( SELECT AVG(Reputation) AS μ FROM AvidUsers ), Moments AS ( SELECT COUNT(Id) AS n , μ , STDEV(Reputation) AS σ , AVG(POWER(CAST(Reputation - μ AS FLOAT), N)) AS μN FROM AvidUsers, Mean GROUP BY μ ), Kurtosis AS ( SELECT n , μN / POWER(σ, N) - N AS ɣN FROM Moments ), DoanesFormula AS ( SELECT CEILING(N + LOG(n, EXP(N)) + LOG(N + ɣN * SQRT(n / N), EXP(N))) AS k FROM Kurtosis ), BinSize AS ( SELECT ROUND(MAX(Reputation) / k, N) AS BinSize FROM AvidUsers, DoanesFormula GROUP BY k ) SELECT @BinSize = BinSize FROM BinSize; WITH eN(n) AS ( SELECT N UNION ALL SELECT N UNION ALL SELECT N ), eN(n) AS ( SELECT a.* FROM eN AS a CROSS JOIN eN AS b ), eN(n) AS ( SELECT a.* FROM eN AS a CROSS JOIN eN AS b ), Bins AS ( SELECT bin = CAST(@BinSize * (ROW_NUMBER() OVER (ORDER BY n) + N.N) AS INTEGER) FROM eN ), UserBins AS ( SELECT CAST((Reputation / @BinSize + N.N) * @BinSize AS INTEGER) AS bin FROM Users ), UserCounts AS ( SELECT DISTINCT bin AS Reputation , COUNT(*) OVER (PARTITION BY bin) AS Count FROM UserBins ) SELECT Bins.bin AS Reputation , Count FROM Bins LEFT OUTER JOIN UserCounts ON Bins.bin = Reputation WHERE Bins.bin <= (SELECT MAX(Reputation) FROM Users) ORDER BY Bins.bin;"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x order by alias.col desc;"
"select top alias.col sum(isalias.colull(p.viewcoualias.colt,alias.col)) as alias.col , alias.col.owalias.coleruseralias.col as [user lialias.colk] from table p ialias.colalias.coler joialias.col ( select alias.col, owalias.coleruseralias.col from table where posttypealias.col = alias.col aalias.cold owalias.coleruseralias.col is alias.colot alias.colull ualias.colioalias.col select parealias.coltalias.col, owalias.coleruseralias.col from table where posttypealias.col = alias.col aalias.cold alias.col ialias.col (alias.col) from table where parealias.coltalias.col=q.alias.col) aalias.cold alias.col > alias.col aalias.cold a.owalias.coleruseralias.col is alias.colot alias.colull ualias.colioalias.col select alias.col.parealias.coltalias.col, alias.col.owalias.coleruseralias.col from (select a.parealias.coltalias.col , a.owalias.coleruseralias.col, raalias.colk() over(partitioalias.col by a.parealias.coltalias.col, a.owalias.coleruseralias.col order by talias.col desc) aalias.colswerraalias.colk from table a joialias.col table ta oalias.col ta.parealias.coltalias.col = a.parealias.coltalias.col where a.posttypealias.col = alias.col aalias.cold alias.col > alias.col aalias.cold a.owalias.coleruseralias.col is alias.colot alias.colull ) alias.col where aalias.colswerraalias.colk <= alias.col) alias.col oalias.col alias.col.alias.col = p.alias.col where alias.col.owalias.coleruseralias.col = alias.col group by alias.col.owalias.coleruseralias.col order by sum(isalias.colull(p.viewcoualias.colt,alias.col)) desc"
"declare alias.col int = ##userid## select ( select count(*) from table where lasteditoruserid = alias.col and alias.col != alias.col ) as alias.col, ( select count(*) from table where lasteditoruserid = alias.col and alias.col != alias.col ) as alias.col"
"select alias.col as alias.col, location, alias.col from table where location like x and alias.col >= n order by alias.col desc"
"select alias.col, alias.col, alias.col(alias.col, alias.col, alias.col()) as alias.col, (alias.col / alias.col(alias.col, alias.col, alias.col())) as alias.col from table order by alias.col desc"
"select alias.col as alias.col, alias.col from table where alias.col < alias.col aalias.cold alias.col > alias.col order by alias.col asc"
"select alias.col as alias.col, ( select coualias.colt(*) from table where posttypealias.col = alias.col aalias.cold lasteditoruseralias.col = table.alias.col aalias.cold owalias.coleruseralias.col != table.alias.col ) as questioalias.coledits, ( select coualias.colt(*) from table where posttypealias.col = alias.col aalias.cold lasteditoruseralias.col = table.alias.col aalias.cold owalias.coleruseralias.col != table.alias.col ) as aalias.colsweredits, ( select coualias.colt(*) from table where lasteditoruseralias.col = table.alias.col aalias.cold owalias.coleruseralias.col != table.alias.col ) as alias.col from table where table.alias.col = ##useralias.col## order by alias.col desc"
"select alias.col, alias.col from table where alias.col not like alias.col"
"selealias.col cast(cast(cast(alias.col as time) as varchar(alias.col)) as ialias.colt)[creatioalias.coltime], acceptedaalias.colswers.acceptedaalias.colswerid as [post lialias.colk] from table, (selealias.col top alias.col acceptedaalias.colswerid from table where acceptedaalias.colswerid >= alias.col) as acceptedaalias.colswers where table.id = acceptedaalias.colswers.acceptedaalias.colswerid"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... order by alias.col desc;"
"select alias.col alias.col, alias.col, alias.col, location from table where location like x order by alias.col desc"
"DECLARE @ShowScore INT = N; DECLARE @TagN varchar(N) = X; DECLARE @TagN varchar(N) = X; DECLARE @TagN varchar(N) = X; DECLARE @TagN varchar(N) = X; DECLARE @TagN varchar(N) = X; DECLARE @TagN varchar(N) = X; DECLARE @TagN varchar(N) = X; DECLARE @TagN varchar(N) = X; DECLARE @TagN varchar(N) = X; WITH QuestStatsByMonth AS ( SELECT DATEADD (month, DATEDIFF (month, N, q.CreationDate), N) AS [Month], t.TagName, SUM (q.Score) AS TotalScore, COUNT (q.Id) AS NumQuests FROM Posts q INNER JOIN PostTags pt ON q.Id = pt.PostId INNER JOIN Tags t ON t.Id = pt.TagId WHERE q.PostTypeId = N AND t.TagName IN (XYZ) GROUP BY DATEADD (month, DATEDIFF (month, N, q.CreationDate), N), t.TagName ) SELECT q.[Month], CASE @ShowScore WHEN N THEN q.TagName + X ELSE q.TagName + X END AS [Tag], CASE @ShowScore WHEN N THEN SUM (h.TotalScore) ELSE SUM (h.NumQuests) END AS Cumulative FROM QuestStatsByMonth q LEFT JOIN QuestStatsByMonth h ON h.[Month] <= q.[Month] AND h.TagName = q.TagName GROUP BY q.[Month], q.TagName ORDER BY q.[Month], q.TagName"
"selealias.col alias.col + cast(alias.col as varchar(alias.col)) + alias.col + case lealias.col(alias.col(s.commealias.colt)) whealias.col alias.col thealias.col alias.col else s.commealias.colt ealias.cold as [suggested edit], s.creatioalias.coldate as [creatioalias.col date], case whealias.col s.approvaldate is alias.colull thealias.col alias.col else alias.col ealias.cold as [outcome], isalias.colull(s.approvaldate, s.rejealias.colioalias.coldate) as [vote date], s.owalias.coleruserid as [user lialias.colk] from table s where alias.col = alias.col##"
"with table as ( select top alias.col alias.col from users order by reputatioalias.col desc ) select table as [user lialias.colk], coualias.colt(*) as questioalias.colcoualias.colt, maalias.col(creatioalias.coldate) as lastquestioalias.coldate from table u ialias.colalias.coler joialias.col table p oalias.col p.owalias.coleruseralias.col = table where p.posttypealias.col = alias.col aalias.cold p.creatioalias.coldate >= alias.col group by table"
"select alias.col as alias.col, alias.col, body from table where upper(body) like upper(x) and owneruseralias.col = x order by alias.col desc"
"selealias.col table.tagalias.colame, ( selealias.col coualias.colt(*) from table joialias.col table oalias.col table.id = table.postid where table.posttypeid = alias.col aalias.cold table.tagid = table.id ) as questioalias.cols, ( selealias.col coualias.colt(*) from table joialias.col table oalias.col table.id = table.postid where table.posttypeid = alias.col aalias.cold table.tagid = table.id aalias.cold table.acceptedaalias.colswerid > alias.col ) as [with accepted aalias.colswers], ( selealias.col roualias.cold(avg(cast(table.score as float)), alias.col) from table joialias.col table as palias.col oalias.col palias.col.acceptedaalias.colswerid = table.id joialias.col table oalias.col palias.col.id = table.postid where palias.col.posttypeid = alias.col aalias.cold table.tagid = table.id aalias.cold palias.col.acceptedaalias.colswerid > alias.col ) as [accepted aalias.colswer score] from table where ( selealias.col coualias.colt(table.id) from table joialias.col table oalias.col table.id = table.postid where table.posttypeid = alias.col aalias.cold table.tagid = table.id ) > alias.col order by [accepted aalias.colswer score] desc"
"select top alias.col:ialias.colt?alias.col alias.col as views, q.alias.col as alias.col, alias.col as [post lialias.colk], h.text from table q ialias.colalias.coler joialias.col table h oalias.col alias.col = alias.col where h.tabletypeid = alias.col aalias.cold h.commealias.colt=##reasoalias.col:ialias.colt?alias.col aalias.cold alias.col is alias.colot alias.colull order by alias.col?alias.col alias.col"
"Set STATISTICS IO ON; set nocount on declare @VoteStats table (PostId int, up int, down int) insert @VoteStats select PostId, up = sum(case when VoteTypeId = N then N else N end), down = sum(case when VoteTypeId = N then N else N end) from Votes where VoteTypeId in (XYZ) group by PostId set nocount off select top N p.id as [Post Link], up, down, (cast((down - up) as decimal) / down * N) as ratio from @VoteStats join Posts p on PostId = p.Id where down > up and down > N and p.CommunityOwnedDate is null order by ratio asc, down desc, up desc"
"DECLARE @ShowScore INT = N; DECLARE @TagN varchar(N) = X; DECLARE @TagN varchar(N) = X; DECLARE @TagN varchar(N) = X; DECLARE @TagN varchar(N) = X; DECLARE @TagN varchar(N) = X; DECLARE @TagN varchar(N) = X; DECLARE @TagN varchar(N) = X; DECLARE @TagN varchar(N) = X; DECLARE @TagN varchar(N) = X; WITH QuestStatsByMonth AS ( SELECT DATEADD (month, DATEDIFF (month, N, q.CreationDate), N) AS [Month], t.TagName, SUM (q.Score) AS TotalScore, COUNT (q.Id) AS NumQuests FROM Posts q INNER JOIN PostTags pt ON q.Id = pt.PostId INNER JOIN Tags t ON t.Id = pt.TagId WHERE q.PostTypeId = N AND t.TagName IN (XYZ), N), t.TagName ) SELECT q.[Month], CASE @ShowScore WHEN N THEN q.TagName + X ELSE q.TagName + X END AS [Tag], CASE @ShowScore WHEN N THEN SUM (h.TotalScore) ELSE SUM (h.NumQuests) END AS Cumulative FROM QuestStatsByMonth q LEFT JOIN QuestStatsByMonth h ON h.[Month] <= q.[Month] AND h.TagName = q.TagName GROUP BY q.[Month], q.TagName ORDER BY q.[Month], q.TagName"
"select alias.col alias.col, alias.col, text from table where alias.col = ##alias.col## aalias.cold alias.col >= alias.col order by alias.col desc"
";with Locations(ID, XmlResponse) as ( select N, cast(X as xml) union all select N, X union all select N, X ) select * from Locations where XmlResponse.exist(X) = N"
"set alias.colocoualias.colt oalias.col declare alias.col datetime select alias.col = max(alias.col) from table declare @igalias.coloredays alias.columeric = alias.col declare @mialias.colagedays alias.columeric = @igalias.coloredays * alias.col declare @tabletats table (alias.col ialias.colt, alias.col ialias.colt, dowalias.col ialias.colt, alias.col datetime, owalias.coleruserid ialias.colt) ialias.colsert @tabletats select alias.col, alias.col = sum(case whealias.col alias.col = alias.col thealias.col case whealias.col p.parealias.coltid is alias.colull thealias.col alias.col else alias.col ealias.cold else alias.col ealias.cold), dowalias.col = sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold), p.alias.col, p.owalias.coleruserid from table v joialias.col table p oalias.col alias.col = alias.col where v.alias.col ialias.col (alias.col) aalias.cold p.commualias.colityowalias.coleddate is alias.colull aalias.cold alias.col(day, p.alias.col, v.alias.col) > @igalias.coloredays aalias.cold alias.col(day, p.alias.col, alias.col) > @mialias.colagedays groalias.col by alias.col, p.alias.col, p.parealias.coltid, p.owalias.coleruserid set alias.colocoualias.colt off select top alias.col alias.col as alias.col, owalias.coleruserid as alias.col, roualias.cold(coalias.colvert(decimal(alias.col,alias.col), alias.col - dowalias.col)/(alias.col(day, vs.alias.col, alias.col) - @igalias.coloredays),alias.col) as [passive rep per day], (alias.col - dowalias.col) as [passive rep], alias.col(day, vs.alias.col, alias.col) - @igalias.coloredays as [days coualias.colted] from @tabletats vs order by [passive rep per day] desc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where location like x order by alias.col desc;"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x order by alias.col desc;"
"select top alias.col row_alias.columber() over(order by coualias.colt(*) desc) as raalias.colk, table.userid as [user lialias.colk], coualias.colt(*) as table from table ialias.colalias.coler joialias.col table oalias.col table.id = table.userid aalias.cold table.alias.colame = alias.col aalias.cold table.date < alias.col group by userid order by table desc"
"select top alias.col row_alias.columber() over(order by reputatioalias.col desc) as [#], id as [user lialias.colk], reputatioalias.col, locatioalias.col from table where lower(locatioalias.col) like x or upper(locatioalias.col) like x ... or locatioalias.col like x aalias.cold reputatioalias.col >= alias.col order by reputatioalias.col desc;"
"alias.coleclare @lastupalias.colate alias.colatetime select @lastupalias.colate = alias.col from table where alias.colatabase_ialias.col = alias.col() select alias.col as alias.col from table where alias.col > alias.col(alias.col, alias.col, @lastupalias.colate) aalias.colalias.col tabletypeialias.col = alias.col"
"select alias.col as alias.col from table p ialias.colalias.coler joialias.col table ph oalias.col alias.col = alias.col left outer joialias.col table pu oalias.col alias.col = alias.col aalias.cold coalesce(alias.col, alias.col) > alias.col where ph.tabletypeid = alias.col aalias.cold pu.tabletypeid = alias.col aalias.cold alias.col = alias.col aalias.cold p.aalias.colswercoualias.colt = alias.col"
"select alias.col(hour, creationdate), count(id) from table group by alias.col(hour, creationdate) order by alias.col(hour, creationdate)"
"select alias.col as alias.col, coalias.colvert(float, alias.col)/alias.col as alias.col, alias.col, alias.col, (alias.col+alias.col) as alias.col from table where alias.col > alias.col aalias.cold alias.col > alias.col order by alias.col desc"
"selealias.col cast(alias.col(alias.col,alias.col) as char(alias.col))+alias.col+cast(alias.col(alias.col,alias.col) as char(alias.col)),coualias.colt(*) as alias.colewquestioalias.cols from table where table.posttypeid=alias.col group by alias.col(alias.col,alias.col),alias.col(alias.col,alias.col) order by alias.col(alias.col,alias.col),alias.col(alias.col,alias.col)"
"select table.id as alias.col, table.score as alias.col, table.tags as alias.col from table, table where (table.postid=table.id) aalias.cold (table.votetypeid = alias.col) aalias.cold (table.userid=alias.col:ialias.colt##) aalias.cold ((lower(table.tags) like lower(alias.col)) or (lower(table.title) like lower(alias.col)) or (lower(table.body) like lower(alias.col))) order by table.score desc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x order by alias.col desc;"
"declare alias.col decimal select alias.col = coualias.colt(*) from table where alias.col = alias.col aalias.cold owalias.coleruserid = alias.col## select alias.col, occurealias.colalias.cols, case whealias.col frequealias.colcy < alias.col thealias.col x else cast(cast(roualias.cold(frequealias.colcy, alias.col) as ialias.colt) as varchar) + x ealias.cold as frequealias.colcy from ( select alias.col as alias.col, coualias.colt(*) as occurealias.colalias.cols, (coualias.colt(*) / alias.col) * alias.col as frequealias.colcy from table where alias.col = alias.col aalias.cold owalias.coleruserid = alias.col## group by alias.col ) as aalias.colswers order by aalias.colswers.frequealias.colcy desc"
"select top alias.col tagalias.colame, coualias.colt(*) as uptable from table ialias.colalias.coler joialias.col posttable oalias.col posttable.tagid = table.id ialias.colalias.coler joialias.col table oalias.col table.parealias.coltid = posttable.postid ialias.colalias.coler joialias.col table oalias.col table.postid = table.id aalias.cold alias.col = alias.col where table.commualias.colityowalias.coleddate is alias.colull group by tagalias.colame order by uptable desc"
"declare @mialias.colalias.col ialias.colt = ##mialias.colalias.col?alias.col## declare @mialias.colaalias.colswers ialias.colt = ##mialias.colaalias.colswers?alias.col## select table.id as alias.col, max(table.alias.col) as alias.col, coualias.colt(alias.col) as aalias.colswers, avg(alias.col) as aalias.colsweralias.col, avg(alias.col)*alias.col as aalias.colsweracceptrate from table, ( select table.owalias.coleruserid as owalias.coleruserid, sum(alias.col(alias.col(day, table.creatioalias.coldate, table.creatioalias.coldate) < alias.col, (case table.votetypeid whealias.col alias.col thealias.col alias.col.alias.col whealias.col alias.col thealias.col alias.col.alias.col else alias.col ealias.cold), alias.col)) as alias.col, sum(case table.votetypeid whealias.col alias.col thealias.col alias.col.alias.col else alias.col ealias.cold) as alias.col from table left joialias.col table oalias.col table.id = table.postid where table.posttypeid = alias.col group by table.id, table.owalias.coleruserid ) tablesum where tablesum.owalias.coleruserid = table.id aalias.cold table.alias.col > @mialias.colalias.col group by table.id havialias.colg coualias.colt(alias.col) > @mialias.colaalias.colswers;"
"declare table cursor for select name from table where type=x declare table sysname declare @num_recs int declare @count_sql as nvarchar(n) declare @total_recs int set @total_recs = n open table fetch next from table into table while @@fetch_status=n begin set @count_sql = x + table exec sp_executesql @count_sql,nx,@num_recs output print table + x + cast(@num_recs as varchar) set @total_recs = @total_recs + @num_recs fetch next from table into table end close table deallocate table print x + cast(@total_recs as varchar)"
select alias.col from table where alias.col like alias.col
"set nocount on declare @useralias.col int = ##useralias.col## declare alias.col date selealias.col alias.col = alias.col() selealias.col cast (alias.col as float) / cast(alias.col(day, creationdate, alias.col) as float) * n from table where alias.col = @useralias.col"
"declare @tag varchar(alias.col) = ##tag:strialias.colg## set @tag = lower(@tag) select top alias.col alias.col as [post lialias.colk], alias.col, viewcoualias.colt, creatioalias.coldate, aalias.colswercoualias.colt, body from table where acceptedaalias.colsweralias.col is alias.colull aalias.cold posttypealias.col = alias.col aalias.cold creatioalias.coldate < getdate() - alias.col aalias.cold closeddate is alias.colull aalias.cold tags like x ... aalias.cold alias.colot exists ( select alias.col from table p where p.parealias.coltalias.col = table.alias.col aalias.cold p.alias.col >= alias.col aalias.cold p.posttypealias.col = alias.col )"
select top alias.col alias.col from table where lower(displayalias.colame) like alias.col order by views desc
"selealias.col alias.col, coualias.colt(alias.col) from ( selealias.col cast( cast(alias.col(alias.col, alias.col) as varchar) + alias.col + cast(alias.col(alias.col, alias.col) as varchar) + alias.col as datetime) table, t.table from table p joialias.col table pt oalias.col alias.col = alias.col joialias.col table t oalias.col alias.col = alias.col where alias.col ialias.col ( selealias.col top alias.col alias.col from table order by coualias.colt desc ) ) as alias.col group by table, table order by table asc, table asc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where location like x or location like x ... order by alias.col desc;"
"select top alias.col alias.col as [post lialias.colk], year(c.creatioalias.coldate) as year, moalias.colth(c.creatioalias.coldate) as moalias.colth, alias.col as body from table c, table p where ( alias.col like alias.col aalias.cold alias.col = alias.col aalias.cold alias.col is alias.colull ) order by year, moalias.colth"
"select count, (x + alias.col + x + alias.col) as alias.col from table t left join table p on alias.col = alias.col where alias.col is null and excerptpostid is null order by alias.col"
"with hasreqtable as ( select alias.col, coualias.colt (distialias.colct alias.col) as [badgecalias.colt] from table b where alias.col ialias.col (alias.col) group by alias.col ) select hralias.col as alias.col, alias.col, ( select coualias.colt (b.id) from table b where hralias.col = alias.col ) as alias.col from hasreqtable hrb ialias.colalias.coler joialias.col table u oalias.col hralias.col = alias.col where alias.col >= alias.col aalias.cold hrb.badgecalias.colt = alias.col order by alias.col desc, alias.col desc"
"select alias.col as alias.col, location, displayname, creationdate, lastaccessdate, reputation from table where lower(location ) like lower(x + ##location:string## + x)"
selealias.col alias.col as alias.col from table ph ialias.colalias.coler joialias.col table p oalias.col alias.col = alias.col where ph.tabletypeid = alias.col aalias.cold cast(ph.commealias.colt as ialias.colt) = alias.col aalias.cold alias.col = ph.creatioalias.coldate order by alias.col
"select row_number() over(order by alias.col desc) as [#], id as [user link], location, alias.col, websiteurl as x, age from table where lower(location) like lower(x) and alias.col >= ##minimumalias.col## order by alias.col desc;"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like lower(x) order by alias.col desc;"
"select distialias.colct id as [badge lialias.colk], alias.colame as [badge], coualias.colt(alias.colame) as [coualias.colt], (select top alias.col coualias.colt(alias.colame) from table where alias.colot exists (select alias.col from table where table.tagalias.colame=table.alias.colame) group by alias.colame order by coualias.colt(alias.colame) desc) / coualias.colt(alias.colame) as [value] from table where alias.colot exists (select alias.col from table where table.tagalias.colame=table.alias.colame) group by alias.colame, id order by coualias.colt"
"select alias.col, alias.col as alias.col from table where upper(alias.col) like (alias.col) or upper(alias.col) like (alias.col) order by alias.col desc;"
select coualias.colt(*) from table where alias.col=alias.col;
"select alias.col as alias.col, count(*) as alias.col from table u inner join table p on alias.col = alias.col where alias.col = alias.col## group by alias.col order by alias.col desc"
"declare alias.col ialias.colt = ##userid## create table table (alias.col ialias.colt, [coualias.colt] ialias.colt) ialias.colsert table select top alias.col alias.col, coualias.colt(*) as uptable from table ialias.colalias.coler joialias.col posttable oalias.col posttable.alias.col = table.id ialias.colalias.coler joialias.col table oalias.col table.parealias.coltid = posttable.postid ialias.colalias.coler joialias.col table oalias.col table.postid = table.id aalias.cold alias.col = alias.col where table.owalias.coleruserid = alias.col group by alias.col order by uptable desc create table table (id ialias.colt primary key) ialias.colsert table select alias.col from table q where (select coualias.colt(*) from table a where a.parealias.coltid = alias.col aalias.cold alias.col > alias.col) = alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold closeddate is alias.colull aalias.cold q.parealias.coltid is alias.colull aalias.cold aalias.colswercoualias.colt = alias.col select top alias.col alias.col as [post lialias.colk], (sum(t.[coualias.colt]) / alias.col.alias.col + us.reputatioalias.col / alias.col.alias.col + alias.col * alias.col) as alias.col from table u joialias.col table p oalias.col alias.col = alias.col joialias.col posttable pt oalias.col alias.col = alias.col joialias.col table t oalias.col t.alias.col = pt.alias.col joialias.col table us oalias.col alias.col = p.owalias.coleruserid group by alias.col, us.reputatioalias.col, alias.col order by alias.col desc"
"select alias.col, alias.col as alias.col from table p where alias.col = alias.col:alias.col aalias.cold alias.col = alias.col order by alias.col asc"
"select top alias.col alias.col as [post lialias.colk], alias.col, viewcoualias.colt from table where alias.col > alias.col aalias.cold viewcoualias.colt <> alias.col aalias.cold parealias.coltalias.col is alias.colull aalias.cold acceptedaalias.colsweralias.col is alias.colull aalias.cold creatioalias.coldate >= dateadd(day, alias.col, getdate()) order by viewcoualias.colt asc"
"select alias.col as alias.col, views, creationdate, reputation, websiteurl, location, lastaccessdate, age from table where views > n order by views desc"
"select alias.col alias.col, alias.col, alias.col, location, websiteurl from table where lower(location) like x and websiteurl != x order by alias.col desc"
"select alias.col as alias.col , alias.col , tabletypeid , case whealias.col tabletypeid = alias.col thealias.col x whealias.col tabletypeid = alias.col thealias.col x ealias.cold , commealias.colt from table where alias.col = alias.col"
"select alias.col,count(table.id) as alias.col from table,table where table.id = table.userid group by alias.col having count(table.id) > n order by alias.col desc"
"select top alias.col row_alias.columber() over (order by coualias.colt(*) desc) as [#], owalias.coleruserid as [user lialias.colk], coualias.colt(*) as postcoualias.colt, sum(score) as totalscore, cast(avg(score) as decimal(alias.col,alias.col)) as peraalias.colsweraverage from table where alias.col=alias.col aalias.cold owalias.coleruserid != alias.col group by owalias.coleruserid order by coualias.colt(*) desc"
"declare @mialias.colalias.col ialias.colt = ##mialias.colalias.col## declare @mialias.colviews ialias.colt = ##mialias.colviews## selealias.col top alias.col alias.col as [post lialias.colk], cast(alias.col as float) / cast(p.viewcoualias.colt as float) alias.col, alias.col alias.col, p.viewcoualias.colt views, p.creatioalias.coldate creatioalias.coldate from table p where alias.col = alias.col aalias.cold alias.col >= @mialias.colalias.col aalias.cold p.viewcoualias.colt >= @mialias.colviews order by alias.col desc"
"select distialias.colct top alias.col alias.col as [post lialias.colk], ph.* from table as q ialias.colalias.coler joialias.col table ph oalias.col (alias.col = alias.col) where alias.col = alias.col aalias.cold alias.col >= alias.col aalias.cold ph.tabletypeid = alias.col aalias.cold ph.commealias.colt = alias.col"
"declare @alias.col ialias.colt = ##alias.col## select table.score, text, alias.col as alias.col, alias.col, table.parealias.coltid, table.creatioalias.coldate from table joialias.col table oalias.col table.alias.col = table.id where alias.col = @alias.col aalias.cold table.score > alias.col order by table.score desc"
select top alias.col alias.col from posts a order by table
"declare table cursor for select name from table where name not in (alias.col) declare table as alias(max) declare @query as alias(max) declare @total_upvotes as int declare @total_downvotes as int declare @total_posts as int create table table ( sitedbname alias(max), totalupvotes int, totaldownvotes int, totalposts int ) open table fetch next from table into table while @@fetch_status = n begin set @query = x + table + xx + table + xx exec sp_executesql @query fetch next from table into table end close table deallocate table select alias.col from table"
"select top alias.col alias.col as [post lialias.colk], alias.col as alias.col, viewcoualias.colt as alias.col, alias.col(day, p.creatioalias.coldate, currealias.colt_timestamp) as age, p.viewcoualias.colt / alias.col(day, p.creatioalias.coldate, currealias.colt_timestamp) as [view rate] from table p where p.viewcoualias.colt > alias.col aalias.cold p.commualias.colityowalias.coleddate is alias.colull aalias.cold p.viewcoualias.colt / alias.col(day, p.creatioalias.coldate, currealias.colt_timestamp) > alias.col order by viewcoualias.colt desc"
"set statistics io oalias.col go declare alias.col ialias.colt = ##userid## create table table (alias.col ialias.colt, [coualias.colt] ialias.colt) ialias.colsert table select top alias.col alias.col, coualias.colt(*) as uptable from table ialias.colalias.coler joialias.col posttable oalias.col posttable.alias.col = table.id ialias.colalias.coler joialias.col table oalias.col table.parealias.coltid = posttable.postid ialias.colalias.coler joialias.col table oalias.col table.postid = table.id aalias.cold alias.col = alias.col where table.owalias.coleruserid = alias.col group by alias.col order by uptable desc create table table (id ialias.colt primary key) ialias.colsert table select alias.col from table q where (select coualias.colt(*) from table a where a.parealias.coltid = alias.col aalias.cold alias.col > alias.col) = alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold closeddate is alias.colull aalias.cold q.parealias.coltid is alias.colull aalias.cold acceptedaalias.colswerid is alias.colull select top alias.col alias.col as [post lialias.colk], (sum(t.[coualias.colt]) / alias.col.alias.col + us.reputatioalias.col / alias.col.alias.col + alias.col * alias.col) as alias.col from table u joialias.col table p oalias.col alias.col = alias.col joialias.col posttable pt oalias.col alias.col = alias.col joialias.col table t oalias.col t.alias.col = pt.alias.col joialias.col table us oalias.col alias.col = p.owalias.coleruserid group by alias.col, us.reputatioalias.col, alias.col order by alias.col desc"
"with table as ( selealias.col table as alias.col, cast(alias.col as date) as alias.col, coualias.colt(alias.col) * alias.col as edittable from table u left joialias.col table s oalias.col (s.owalias.coleruserid = table aalias.cold alias.col is alias.colot alias.colull) group by table, cast(alias.col as date) ), posttable as ( selealias.col table as alias.col, cast(v.creatioalias.coldate as date) as table, coualias.colt(alias.col) * case whealias.col pt.alias.colame = alias.col aalias.cold vt.alias.colame = alias.col thealias.col alias.col whealias.col pt.alias.colame = alias.col aalias.cold vt.alias.colame = alias.col thealias.col alias.col whealias.col pt.alias.colame = alias.col aalias.cold vt.alias.colame = alias.col thealias.col alias.col whealias.col pt.alias.colame = alias.col aalias.cold vt.alias.colame = alias.col thealias.col alias.col whealias.col pt.alias.colame = alias.col aalias.cold vt.alias.colame = alias.col thealias.col alias.col ealias.cold as table from table u left joialias.col table p oalias.col (p.owalias.coleruserid = table) left joialias.col table pt oalias.col (alias.col = alias.col) left joialias.col table f oalias.col (alias.col = alias.col) left joialias.col table v oalias.col (alias.col = alias.col) left joialias.col table vt oalias.col (alias.col = alias.col) group by table, cast(v.creatioalias.coldate as date), pt.alias.colame, vt.alias.colame ), all_tablees as ( selealias.col alias.col, alias.col as tabledate, edittable as table from table ualias.colioalias.col all selealias.col alias.col, table, table from posttable ) selealias.col table, table, table, ab.tabledate, sum(ab.table) as table from table u left joialias.col all_tablees ab oalias.col (ab.alias.col = table) where table = alias.col group by table, table, table, ab.tabledate order by ab.tabledate"
"select table.tagalias.colame, coualias.colt(*) as alias.col ialias.colto table from table ialias.colalias.coler joialias.col table oalias.col table.postid = table.id ialias.colalias.coler joialias.col table oalias.col table.id = table.tagid where alias.col(year, table.creatioalias.coldate) = alias.col aalias.cold alias.col(moalias.colth, table.creatioalias.coldate) = alias.col group by table.tagalias.colame order by alias.col desc select table.tagalias.colame, coualias.colt(*) as alias.col ialias.colto table from table ialias.colalias.coler joialias.col table oalias.col table.postid = table.id ialias.colalias.coler joialias.col table oalias.col table.id = table.tagid where alias.col(year, table.creatioalias.coldate) = alias.col aalias.cold alias.col(moalias.colth, table.creatioalias.coldate) = alias.col group by table.tagalias.colame order by alias.col desc select top alias.col talias.col.tagalias.colame, talias.col.alias.col as alias.col, talias.col.alias.col as alias.col, talias.col.alias.col-talias.col.alias.col as alias.col from table as talias.col left joialias.col table as talias.col oalias.col talias.col.tagalias.colame = talias.col.tagalias.colame where talias.col.alias.col >= alias.col aalias.cold talias.col.alias.col-talias.col.alias.col >= alias.col order by alias.col desc"
select alias.col from table where location like x or location like x;
select alias.col from table where alias.col like alias.col
"select top alias.col alias.col as [post lialias.colk], alias.col, a.creatioalias.coldate from table as a ialias.colalias.coler joialias.col table as q oalias.col a.parealias.coltid = alias.col ialias.colalias.coler joialias.col table as ph oalias.col alias.col = alias.col where ph.tabletypeid != alias.col aalias.cold alias.col(day, q.creatioalias.coldate, a.creatioalias.coldate) > alias.col aalias.cold (alias.col = alias.col) aalias.cold q.aalias.colswercoualias.colt = alias.col group by alias.col, alias.col, a.creatioalias.coldate order by a.creatioalias.coldate desc"
"selealias.col avg(alias.col) as alias.col from ( selealias.col alias.col, cast( cast(coualias.colt(alias.col) as float) / cast(coualias.colt(alias.col) as float) * alias.col as decimal(alias.col,alias.col) ) as alias.col from table p left joialias.col table q oalias.col alias.col = alias.col aalias.cold q.acceptedaalias.colswerid is alias.colot alias.colull where alias.col = alias.col aalias.cold alias.col is alias.colull aalias.cold p.commualias.colityowalias.coleddate is alias.colull aalias.cold p.aalias.colswercoualias.colt > alias.col aalias.cold (alias.col is alias.colot alias.colull aalias.cold alias.col <> x) group by alias.col havialias.colg coualias.colt(alias.col) >= alias.col ) as a"
"select alias.col, alias.col ialias.colto table from table where alias.col ialias.col (alias.col) declare @startdate datetime = x ,@ealias.colddate datetime = x select alias.col, alias.col, alias.col from ( select alias.col(moalias.colth, datediff(moalias.colth, alias.col, creatioalias.coldate), alias.col) alias.col , coualias.colt(posttable.tagalias.col) alias.col , tagalias.col from posttable left joialias.col table oalias.col posttable.postalias.col = table.alias.col where posttable.tagalias.col ialias.col (alias.col), alias.col) , posttable.tagalias.col )alias.colpermoalias.colth left joialias.col table oalias.col alias.colpermoalias.colth.tagalias.col = table.alias.col order by alias.col desc, alias.col asc"
"select alias.col, alias.col as alias.col, case alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col else alias.col ealias.cold as [close reasoalias.col], case whealias.col p.commualias.colityowalias.coleddate is alias.colot alias.colull thealias.col alias.col else alias.colull ealias.cold as wiki from table p ialias.colalias.coler joialias.col table h oalias.col alias.col = alias.col aalias.cold alias.col = alias.col where alias.col = alias.col aalias.cold alias.col is alias.colot alias.colull aalias.cold h.tabletypeid = alias.col aalias.cold alias.col != alias.col order by alias.col asc"
"declare alias.col float selealias.col alias.col = sum(cast(alias.col as bigialias.colt)) from table where alias.col = alias.col selealias.col table.alias.colalias.colame as alias.col, coualias.colt(*) as questioalias.cols, sum(cast(table.alias.col as bigialias.colt)) as views, str(alias.col * sum(cast(table.alias.col as bigialias.colt)) / alias.col,alias.col,alias.col) as percealias.coltofsite, sum(table.score) as score, sum(table.aalias.colswercoualias.colt) as aalias.colswers, sum(cast(table.alias.col as bigialias.colt)) / coualias.colt(*) as avgviews, str(sum(table.score) / cast(coualias.colt(*) as float),alias.col,alias.col) as avgscore, str(sum(table.aalias.colswercoualias.colt) / cast(coualias.colt(*) as float),alias.col,alias.col) as avgaalias.colswers from table joialias.col table oalias.col table.id = table.postid joialias.col table oalias.col table.alias.colid = table.id where table.alias.col = alias.col aalias.cold table.alias.col >= alias.col group by table.alias.colalias.colame order by views desc"
"create table #T ( ID int identity(N,N) not null, Translation varchar(N) not null, ); create index #TID on #T(id); insert into #T (Translation) values (XYZ), (X), (X), (X), (X), (X), (X), (X), (X), (X); select Translation, ( select count(*) from Posts where (Posts.PostTypeId = N or Posts.PostTypeId = N) and Posts.Body collate database_default like X + [Translation] collate database_default + X ) as [Count] from #T order by [Count] desc;"
"set alias.colocoualias.colt oalias.col declare alias.col date select alias.col = max(alias.col) from table set alias.colocoualias.colt off select top alias.col alias.col as [user lialias.colk], reputatioalias.col, alias.col, reputatioalias.col/alias.col as repperalias.col from ( select alias.col, coalias.colvert(ialias.colt, alias.col - alias.col) as alias.col from table ) as tableaugmealias.colted where reputatioalias.col > alias.col order by repperalias.col desc"
select alias.col as alias.col from table sv ialias.colalias.coler joialias.col table se oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table othervotes oalias.col alias.col = alias.col where alias.col = alias.col## aalias.cold alias.col = alias.col aalias.cold alias.col = alias.col
"select top alias.col alias.col as [post lialias.colk], alias.col as alias.col, favoritecoualias.colt as alias.col, viewcoualias.colt as alias.col from table where posttypealias.col = alias.col order by favoritecoualias.colt desc"
"create table table ( min_rep int ) insert into table values (xyz), (n), (n), (n), (n), (n), (n), (n), (n), (n), (n), (n); with total (users) as (select count(*) from users where reputation > n) select count(*) x, min_rep x, round(avg(reputation / (n.n + datediff(day, creationdate, lastaccessdate))), n) x, round(n.n * count(*) / total.users, n) x from users, table, total where reputation >= min_rep group by min_rep, users order by min_rep"
"selealias.col alias.col, count(alias.col) from ( selealias.col cast( cast(alias.col(alias.col, alias.col) as varchar) + alias.col + cast(alias.col(alias.col, alias.col) as varchar) + alias.col as datetime) alias.col, alias.col from table p join table pt on alias.col = alias.col join table t on alias.col = alias.col where alias.col in (alias.colyz) ) as alias.col where alias.col <> cast(alias.col(alias.col, alias.col()) as varchar) + alias.col + cast(alias.col(alias.col, alias.col()) as varchar) + alias.col group by alias.col, alias.col order by alias.col asc, alias.col asc"
"select top alias.col alias.col as alias.col, alias.col, favoritecoualias.colt, alias.col as [post lialias.colk] from table where posttypealias.col = alias.col order by favoritecoualias.colt desc"
"select alias.col,alias.col from table order by alias.col"
"selealias.col alias.col = right(alias.col*alias.col,alias.col) + alias.col + right(alias.col*alias.col,alias.col) + alias.col, rate_of_zero_score_aalias.colswers = alias.col.alias.col*sum(alias.col)/sum(alias.col), maalias.col_questioalias.cols_per_alias.col = maalias.col(alias.col) from ( selealias.col alias.col, alias.col = acalias.colptedcoualias.colt, alias.col = acalias.colptedalias.colvotecoualias.colt, [] = acalias.colptedalias.colvotecoualias.coltrate, zerovoteraalias.colk = raalias.colk() over (order by acalias.colptedalias.colvotecoualias.coltrate desc), alias.colviewraalias.colk = raalias.colk() over (order by acalias.colptedcoualias.colt desc), alias.col = alias.coltile(alias.col) over (order by acalias.colptedcoualias.colt) from ( selealias.col alias.col, acalias.colptedcoualias.colt = sum(acalias.colptedcoualias.colt), acalias.colptedalias.colvotecoualias.colt = sum(acalias.colptedalias.colvotecoualias.colt), acalias.colptedalias.colvotecoualias.coltrate = cast(alias.col.alias.col*sum(acalias.colptedalias.colvotecoualias.colt)/sum(acalias.colptedcoualias.colt) as alias.columeric(alias.col,alias.col)) from ( selealias.col alias.col = substrialias.colg(alias.cols, v.alias.columber+alias.col, charialias.coldealias.col(alias.col, alias.cols, v.alias.columber+alias.col)-v.alias.columberalias.col), acalias.colptedcoualias.colt, acalias.colptedalias.colvotecoualias.colt from ( selealias.col q.alias.cols, sum(q.viewcoualias.colt) acalias.colptedcoualias.colt, coualias.colt(case whealias.col alias.col=alias.col thealias.col alias.col ealias.cold) acalias.colptedalias.colvotecoualias.colt from table q ialias.coler joialias.col table a oalias.col alias.col = q.acalias.colptedaalias.colswerid where alias.col=alias.col aalias.cold q.creatioalias.coldate >= alias.col aalias.cold q.creatioalias.coldate < alias.col group by q.alias.cols) q ialias.coler joialias.col mastertable v oalias.col alias.col=alias.col aalias.cold substrialias.colg(alias.cols, v.alias.columber, alias.col) = alias.col ) alias.col group by alias.col ) y ) z group by alias.col order by alias.col"
"select alias.col as alias.col, body from table where alias.col > alias.col aalias.cold alias.col < alias.col aalias.cold body like x ... aalias.cold lealias.col(body) < alias.col order by alias.col desc"
select alias.col from table where alias.col=alias.col order by creatioalias.coldate desc
"create table table ( alias.col ialias.colt, posttypealias.col ialias.colt, alias.col datetime ) ialias.colsert ialias.colto table (alias.col, posttypealias.col, alias.col) select alias.col, posttypealias.col, alias.col from table where posttypealias.col = alias.col aalias.cold alias.col like alias.col ialias.colsert ialias.colto table (alias.col, posttypealias.col, alias.col) select a.alias.col, a.posttypealias.col, a.alias.col from table a ialias.colalias.coler joialias.col table q oalias.col a.parealias.coltalias.col = q.alias.col where a.posttypealias.col = alias.col select sum(case posttypealias.col whealias.col alias.col thealias.col alias.col else alias.col ealias.cold) as [reputatioalias.col] from table v ialias.colalias.coler joialias.col table s oalias.col v.postalias.col = s.alias.col where v.votetypealias.col = alias.col aalias.cold (s.alias.col is alias.colull or v.creatioalias.coldate < s.alias.col);"
"select top alias.col alias.col as [user lialias.colk], reputatioalias.col from table u with (alias.cololock) where lower(u.locatioalias.col) like alias.col + lower(##locatioalias.col:strialias.colg##) + alias.col order by u.reputatioalias.col desc"
"select alias.col as alias.col, alias.col, alias.col from table as alias where alias.col like alias.col order by alias.col"
"select alias.col, coualias.colt(*) from ( select alias.col , alias.col , coualias.colt(*) as alias.col from table where tabletypeid < alias.col group by alias.col, alias.col ) revs group by alias.col havialias.colg coualias.colt(*)> alias.col"
"select alias.col, year, week, coualias.colt(*) coualias.colt, sum(table) table from ( select alias.col, year(alias.col) year, datepart(wk, alias.col) [week], day(alias.col) day, coualias.colt(*) table from table where alias.col > alias.col group by alias.col, year(alias.col), datepart(wk, alias.col), day(alias.col) ) t where alias.col = alias.col group by alias.col, year, week order by year desc, week desc"
"declare @tagalias.colame alias.colvarchar(alias.col) = ##tag:strialias.colg## declare @coualias.coltry alias.colvarchar(alias.col) = ##coualias.coltry:strialias.colg## select top alias.col row_alias.columber() over(order by coualias.colt(*)), alias.col as [user lialias.colk], coualias.colt(*) as uptable from table t with (alias.cololock) ialias.colalias.coler joialias.col posttable pt with (alias.cololock)oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table p with (alias.cololock) oalias.col p.parealias.coltid = alias.col ialias.colalias.coler joialias.col table v with (alias.cololock) oalias.col alias.col = alias.col aalias.cold alias.col = alias.col ialias.colalias.coler joialias.col table u with (alias.cololock) oalias.col alias.col = p.owalias.coleruserid where p.commualias.colityowalias.coleddate is alias.colull aalias.cold t.tagalias.colame = @tagalias.colame aalias.cold ( lower(locatioalias.col) like lower(x + @coualias.coltry + x) or upper(locatioalias.col) like upper(x + @coualias.coltry + x)) group by alias.col order by uptable desc"
"set alias.colocoualias.colt oalias.col create table table (alias.col ialias.colt alias.colealias.coltity, [start] datetime, [fialias.colish] datetime) ialias.colsert table select top alias.col alias.colull, alias.colull from table declare alias.col datetime select alias.col = creatioalias.coldate from table where alias.col = (select max(palias.col.alias.col) from table palias.col) update table set [start] = dateadd(d, (alias.col - alias.col) * alias.col, alias.col), [fialias.colish] = dateadd(d, (alias.col - alias.col) * alias.col, alias.col) select start, (select coualias.colt(*) from table where parealias.coltalias.col is alias.colull aalias.cold creatioalias.coldate betweealias.col [start] aalias.cold [fialias.colish] ) as [total questioalias.cols], (select coualias.colt(*) from table where parealias.coltalias.col is alias.colot alias.colull aalias.cold creatioalias.coldate betweealias.col [start] aalias.cold [fialias.colish] ) as [total aalias.colswers] from table"
"select top alias.col alias.col as [post lialias.colk], alias.col, text from table where alias.col = alias.col order by alias.col desc"
"declare alias.col ialias.colteger = ##uid## select coualias.colt(alias.col) as alias.col , sum(case whealias.col alias.col is alias.colot alias.colull thealias.col alias.col else alias.col ealias.cold ) as [acalias.colpted] , coualias.colt(alias.col) / sum(case whealias.col alias.col is alias.colot alias.colull thealias.col alias.col else alias.col ealias.cold ) as [rate] from table a left outer joialias.col table q oalias.col q.acalias.colptedaalias.colswerid = alias.col where alias.col = alias.col aalias.cold a.owalias.coleruserid = alias.col"
"DECLARE @username AS NVARCHAR(N) = ##DisplayName:string? ##; DECLARE @userId AS INT = ##UserId:int?N##; SELECT TOP ##Limit:int?N## u.Id AS [User Link], q.Id AS [Post Link], q.CreationDate, q.Tags FROM Posts q JOIN Users u ON q.OwnerUserId = u.Id JOIN Posts a ON a.ParentId = q.Id WHERE (@username = X OR u.DisplayName = @username) AND (@userId = N OR u.Id = @userId) AND q.AcceptedAnswerId IS NULL GROUP BY q.Id, u.Id, q.CreationDate, q.Tags HAVING MAX(a.Score) = N ORDER BY q.CreationDate"
";with cte as ( select N num, cast(X+replace(db_name(),X,X)+X as xml) str ) ,x as ( select row_number() over(order by num) rn, t.v.value(X,X) s from cte cross apply cte.str.nodes(X) t(v) ) select STUFF((SELECT X + s AS [text()] FROM x order by rn desc FOR XML PATH(X) ), N, N, X ) name"
declare alias.col int = ##userid## declare alias.col int = ##votetype## declare alias.col int = ##posttype## select count(*) from table v join table p on alias.col = alias.col and alias.col = alias.col and alias.col = alias.col and alias.col = alias.col
select alias.col as alias.col from table q inner join table a on alias.col=alias.col where alias.col=alias.col## order by alias.col desc
"select top alias.col alias.col as [post lialias.colk], alias.col, alias.col, alias.col, p.viewcoualias.colt from table p where alias.col > alias.col aalias.cold viewcoualias.colt <> alias.col aalias.cold parealias.coltid is alias.colull aalias.cold acceptedaalias.colswerid is alias.colull order by viewcoualias.colt desc, alias.col desc"
"select top alias.col alias.col as [user lialias.colk], roualias.cold((alias.col.alias.col * dowalias.colvotes) / (alias.col+alias.col), alias.col) as alias.col, alias.col as alias.col, dowalias.colvotes alias.col from table where reputatioalias.col > ##mialias.colrep## aalias.cold alias.col > ##mialias.colalias.col## aalias.cold dowalias.colvotes > ##mialias.coldowalias.colvotes## order by alias.col desc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or lower(location) like x ... order by alias.col desc;"
"with table as ( select alias.col as alias.col, alias.col as getcoualias.colt, alias.col as getamoualias.colt, coualias.colt(boualias.coltyamoualias.colt) as givecoualias.colt, sum(boualias.coltyamoualias.colt) as giveamoualias.colt from table where alias.col = alias.col group by alias.col ualias.colioalias.col select table.owalias.coleralias.col as alias.col, coualias.colt(boualias.coltyamoualias.colt) as getcoualias.colt, sum(boualias.coltyamoualias.colt) as getamoualias.colt, alias.col as givecoualias.colt, alias.col as giveamoualias.colt from table, table where table.postid = table.id aalias.cold alias.col = alias.col group by table.owalias.coleralias.col ) select alias.col as [user lialias.colk], sum(getcoualias.colt) as getcoualias.colt, sum(getamoualias.colt) as getamoualias.colt, sum(givecoualias.colt) as givecoualias.colt, sum(giveamoualias.colt) as giveamoualias.colt, sum(givecoualias.colt + getcoualias.colt) as evealias.coltcoualias.colt, sum(getamoualias.colt - giveamoualias.colt) as alias.coletbealias.colefit from table group by alias.col order by evealias.coltcoualias.colt desc"
"select alias.col, alias.col as alias.col, alias.col from table as u ialias.colalias.coler joialias.col table as p oalias.col alias.col = alias.col where u.lastaccessdate = alias.col aalias.cold alias.col = alias.col aalias.cold p.aalias.colswercoualias.colt = alias.col aalias.cold alias.col is alias.colull aalias.cold p.commealias.coltcoualias.colt < alias.col aalias.cold p.viewcoualias.colt < alias.col aalias.cold p.score < alias.col order by alias.col"
"select top alias.col talias.col.tagalias.colame as alias.col, coualias.colt(palias.col.postid) as [post coualias.colt] from table palias.col joialias.col table palias.col oalias.col palias.col.postid = palias.col.postid aalias.cold palias.col.tagid != palias.col.tagid joialias.col table talias.col oalias.col talias.col.id = palias.col.tagid aalias.cold talias.col.tagalias.colame like alias.col:strialias.colg## joialias.col table talias.col oalias.col talias.col.id = palias.col.tagid left joialias.col table palias.col oalias.col palias.col.postid = palias.col.postid left joialias.col table talias.col oalias.col talias.col.id = palias.col.tagid aalias.cold talias.col.tagalias.colame like alias.col:strialias.colg## where talias.col.id is alias.colull group by talias.col.tagalias.colame order by coualias.colt(palias.col.postid) desc"
"declare @base_url AS nvarchar(N) = X; declare @question_url nvarchar(N) = @base_url + X, @answer_url nvarchar(N) = @base_url + X, @user_url nvarchar(N) = @base_url + X; select top N Rank = Question.FavoriteCount + BestAnswer.Score + Question.AnswerCount, Question.Title, Question = @question_url + convert(nvarchar(N), Question.Id), BestAnswer = @question_url + convert(nvarchar(N), BestAnswer.Id), Owner = @user_url + convert(nvarchar(N), Owner.Id) from Posts as Question join Posts as BestAnswer on BestAnswer.Id = ( select top N id from Posts where PostTypeId = N AND ParentId = Question.Id order by Score desc ) join Users as Owner on Question.OwnerUserId = Owner.Id where Question.PostTypeId = N AND Question.AnswerCount > N AND Question.AcceptedAnswerId IS NULL AND Question.CommunityOwnedDate IS NULL AND Owner.LastAccessDate <= DATEADD(mm, N, GETDATE()) order by Rank DESC;"
"select top alias.col row_alias.columber() over (order by coalias.colvert(float, dowalias.colvotes)/(alias.col+alias.col.alias.col) desc, dowalias.colvotes desc, alias.col asc, displayalias.colame, creatioalias.coldate) as raalias.colk, id as [user lialias.colk], case alias.col whealias.col alias.col thealias.col x else format(coalias.colvert(float, dowalias.colvotes)/alias.col, x) ealias.cold as [dowalias.col/up ratio], dowalias.colvotes, alias.col, (dowalias.colvotes+alias.col) as totalvotes from table where dowalias.colvotes >= ##mialias.coldowalias.colvotes?alias.col## aalias.cold (dowalias.colvotes+alias.col) >= ##mialias.colvotetotal?alias.col##"
"with table as ( select alias.col as alias.col, maalias.col(alias.col) as alias.col from table where posttypealias.col = alias.col group by alias.col ) select top alias.col alias.col(q.creatioalias.coldate,alias.col) alias.col, alias.col alias.colas, coalias.colcat(alias.col,q.alias.col,alias.col,alias.col) alias.col, q.aalias.colswercoualias.colt alias.col, q.alias.col alias.col, a.alias.col alias.col from table q left outer joialias.col table a oalias.col q.alias.col = a.alias.col where q.aalias.colswercoualias.colt > alias.col aalias.cold alias.col is alias.colull aalias.cold a.alias.col > alias.col aalias.cold q.creatioalias.coldate >= alias.col order by alias.col desc, alias.col desc, alias.col desc, alias.col desc, alias.col asc"
"selealias.col alias.col, count(alias.col) from ( selealias.col cast( cast(alias.col(alias.col, alias.col) as varchar) + alias.col + cast(alias.col(alias.col, alias.col) as varchar) + alias.col as datetime) alias.col, alias.col from table p join table pt on alias.col = alias.col join table t on alias.col = alias.col where alias.col in (alias.colyz) ) as alias.col group by alias.col, alias.col order by alias.col asc, alias.col asc"
select count = count(*) from table where alias.col >= alias.col
"select top alias.col alias.col as [post lialias.colk], p.creatioalias.coldate as alias.col, p.owalias.colerdisplayalias.colame as [currealias.colt user alias.colame], ph.commealias.colt as [commealias.colt] from table p ialias.colalias.coler joialias.col table ph oalias.col alias.col = alias.col where ph.tabletypeid = alias.col aalias.cold p.owalias.coleruserid is alias.colull order by alias.col desc"
select top alias.col alias.col from table where acceptedaalias.colswerid is alias.colull
"set alias.colocoualias.colt oalias.col create table table (alias.col ialias.colt alias.colealias.coltity, [start] datetime, [fialias.colish] datetime) ialias.colsert table select top alias.col alias.colull, alias.colull from table declare alias.col datetime select alias.col = creatioalias.coldate from table where alias.col = (select max(palias.col.alias.col) from table palias.col) update table set [start] = dateadd(d, (alias.col - alias.col) * alias.col, alias.col), [fialias.colish] = dateadd(d, (alias.col - alias.col) * alias.col, alias.col) select start, (select coualias.colt(*) from table where parealias.coltalias.col is alias.colull aalias.cold creatioalias.coldate betweealias.col [start] aalias.cold [fialias.colish] ) as [total questioalias.cols], (select coualias.colt(*) from table where parealias.coltalias.col is alias.colot alias.colull aalias.cold creatioalias.coldate betweealias.col [start] aalias.cold [fialias.colish] ) as [total aalias.colswers] from table"
"if object_id(X) is not null drop table #t ; create table #t ( owneruserid int, rn int, creationdate datetime, immune int, votes_capped int, total as immune + votes_capped, primary key clustered(owneruserid, rn)) ; insert #t select p.owneruserid, rn=row_number() over (partition by p.owneruserid order by v.creationdate), v.creationdate, sum(case votetypeid when N then N when N then -bountyamount when N then bountyamount end) as immune, (select min(a) from (select sum(case votetypeid when N then N when N then N else N end) a union all select N) x) as votes_capped from votes v inner join posts p on p.id = v.postid inner join users u on u.id = p.owneruserid where v.votetypeid in (XYZ) and p.communityowneddate is null and u.reputation >= N group by p.owneruserid, v.creationdate ; with cte as ( select *, first_date = creationdate, running_total = total from #t where rn=N union all select t.*, cte.first_date, cte.running_total + t.total from cte join #t t on t.rn = cte.rn+N and t.owneruserid = cte.owneruserid where cte.running_total < N ) select * from cte where running_total >= N order by datediff(d, creationdate, first_date) option (maxrecursion N) ; drop table #t ;"
select alias.col from table where body like x
"select top alias.col alias.col as [user lialias.colk], dowalias.colvotes as dowalias.colvotes, alias.col as alias.col, roualias.cold((alias.col.alias.col * alias.col) / (alias.col+dowalias.colvotes), alias.col) as [percealias.coltuv], alias.colutatioalias.col as alias.col from table where alias.col != alias.col aalias.cold dowalias.colvotes > alias.col aalias.cold alias.col > alias.col order by alias.col desc"
"select alias.col from ( select top alias.col alias.col as alias.col, roualias.cold(alias.col.alias.colalias.coldowalias.colvotes/alias.col,alias.col) as alias.col, alias.col as [user lialias.colk], dowalias.colvotes, alias.col, reputatioalias.col from table where reputatioalias.col>alias.col aalias.cold alias.col>alias.col aalias.cold alias.col+dowalias.colvotes>alias.col order by alias.col.alias.colalias.coldowalias.colvotes/alias.col desc ) table_a ualias.colioalias.col all select alias.col from ( select top alias.col alias.col as alias.col, alias.colull as alias.col, alias.col as [user lialias.colk], dowalias.colvotes, alias.col, reputatioalias.col from table where reputatioalias.col>alias.col aalias.cold alias.col=alias.col aalias.cold dowalias.colvotes>alias.col order by dowalias.colvotes desc ) table_b"
"declare @t table ( Id int, Name VARCHAR(N) ); DECLARE @PageIndex int; DECLARE @PageSize int; SET @PageIndex = N; SET @PageSize = N; INSERT INTO @t VALUES (XYZ), (N, X), (N, X), (N, X), (N, X), (N, X); ;With ranked AS ( SELECT ROW_NUMBER() OVER(ORDER BY Name) AS RowNum, * FROM @t ) SELECT * FROM Ranked WHERE RowNum BETWEEN ((@PageIndex - N) * @PageSize + N) AND (@PageIndex * @PageSize) ORDER BY Name"
"DECLARE @topCombos int = N DECLARE @tagCombos table ( Id int IDENTITY(N, N) PRIMARY KEY CLUSTERED, TagNId int NOT NULL, TagNId int NOT NULL ) ;WITH topTags AS ( SELECT TOP N t.Id FROM Tags t ORDER BY t.Count DESC ) INSERT INTO @tagCombos (TagNId, TagNId) SELECT ttN.Id, ttN.Id FROM topTags ttN CROSS JOIN topTags ttN WHERE ttN.Id != ttN.Id DELETE FROM tcN FROM @tagCombos tcN INNER JOIN @tagCombos tcN ON (tcN.TagNId = tcN.TagNId) AND (tcN.TagNId = tcN.TagNId) AND (tcN.Id < tcN.Id) SELECT TOP (@topCombos) tN.TagName, tN.TagName, a.Count FROM ( SELECT tc.TagNId, tc.TagNId, COUNT(N) AS Count FROM @tagCombos tc INNER JOIN PostTags ptN ON ptN.TagId = tc.TagNId INNER JOIN PostTags ptN ON (ptN.PostId = ptN.PostId) AND (ptN.TagId = tc.TagNId) GROUP BY tc.TagNId, tc.TagNId ) a INNER JOIN Tags tN ON tN.Id = a.TagNId INNER JOIN Tags tN ON tN.Id = a.TagNId ORDER BY Count DESC"
"select top alias.col row_alias.columber() over(order by reputatioalias.col desc) as [#], id as [user lialias.colk], reputatioalias.col, locatioalias.col from table where lower(locatioalias.col) like x or upper(locatioalias.col) like x ... or locatioalias.col like x aalias.cold reputatioalias.col >= alias.col order by reputatioalias.col desc;"
"select top alias.col alias.col as [post lialias.colk], alias.col, q.viewcoualias.colt, q.creatioalias.coldate from table q joialias.col table pt oalias.col alias.col = alias.col joialias.col table t oalias.col alias.col = alias.col where t.tagalias.colame = alias.col aalias.cold alias.col > alias.col aalias.cold alias.col is alias.colull aalias.cold parealias.coltid is alias.colull aalias.cold acceptedaalias.colswerid is alias.colull aalias.cold aalias.colswercoualias.colt = alias.col order by viewcoualias.colt desc, score desc"
"Set STATISTICS IO ON; set nocount on declare @VoteStats table (PostId int, up int, down int) insert @VoteStats select PostId, up = sum(case when VoteTypeId = N then N else N end), down = sum(case when VoteTypeId = N then N else N end) from Votes where VoteTypeId in (XYZ) group by PostId set nocount off select top N p.id as [Post Link], up, down, (cast((up - down) as decimal) / up * N) as ratio from @VoteStats join Posts p on PostId = p.Id where up < down and up > N and p.CommunityOwnedDate is null order by ratio desc, down desc, up desc"
"select top alias.col alias.col, alias.col, alias.col as [post lialias.colk], alias.col as [user lialias.colk] from table c where alias.col > alias.col order by alias.col desc"
"selealias.col alias.col as alias.col, alias.col, alias.col as alias.col, cast(alias.col as alias.columeric) / (alias.col * alias.col) as alias.col from table ialias.colalias.coler joialias.col (selealias.col top alias.col owalias.coleruseralias.col,coualias.colt(alias.col) as alias.col from table where posttypealias.col = alias.col group by owalias.coleruseralias.col order by alias.col desc ) as postcoualias.colt oalias.col postcoualias.colt.owalias.coleruseralias.col = table.alias.col where alias.col > alias.col order by alias.col desc"
declare alias.col ialias.colt = ##userid## declare alias.col ialias.colt = ##score## selealias.col (cast(coualias.colt(alias.col) as float) / ( selealias.col coualias.colt(*) from table q where alias.col = alias.col aalias.cold alias.col = alias.col ) * alias.col) as acceptedpercealias.coltage from table q ialias.colalias.coler joialias.col table a oalias.col q.acceptedaalias.colswerid = alias.col where a.alias.col = alias.col aalias.cold a.alias.col = alias.col aalias.cold alias.col > alias.col
declare @userid ialias.colt = ##userid## declare @ialias.colputalias.colame varchar(alias.col) = x select alias.col/ ( select coualias.colt(*) as uptable from table ialias.colalias.coler joialias.col posttable oalias.col posttable.tagid = table.id ialias.colalias.coler joialias.col table oalias.col table.parealias.coltid = posttable.postid ialias.colalias.coler joialias.col table oalias.col table.postid = table.id aalias.cold alias.col = alias.col where table.tagalias.colame = @ialias.colputalias.colame aalias.cold table.commualias.colityowalias.coleddate is alias.colull ) as [percealias.colt] from table;
"create table table (id int identity(n,n) not null, alias.col alias.colarchar(max) not null) insert into table(alias.col) select @@alias.colersion insert into table(alias.col) alias.colalues (x) select alias.col from table"
"select top alias.col alias.col as [post lialias.colk], alias.col, viewcoualias.colt from table where alias.col > alias.col aalias.cold alias.col like alias.col ... aalias.cold parealias.coltalias.col is alias.colull aalias.cold acceptedaalias.colsweralias.col is alias.colull order by viewcoualias.colt asc"
"select alias.col alias.col, alias.col, alias.col, alias.col from table u inner join table p on alias.col = alias.col where location like x and p.tags = x order by alias.col desc"
declare @alias.col ialias.colt = ##alias.col## select top alias.col alias.col from table where alias.col = @alias.col order by alias.col desc
"select alias.col as alias.col, alias.col from table where body like x order by alias.col desc;"
"declare @otheruseralias.col int = ##otheruseralias.col:int## declare alias.col nvarchar(n) = ##posttext:string## select alias.col = upper(alias.col) select alias.col as alias.col, alias.col as [alias.col], alias.col as alias.col from table where owneruseralias.col = @otheruseralias.col and posttypealias.col in (alias.col) and upper(body) like x + alias.col + x order by alias.col desc"
select alias.col from table where alias.col = alias.col aalias.cold creatioalias.coldate != alias.col
"select alias.col from table where alias.col = alias.col select alias.col from table p , table pt where posttypealias.col = alias.col aalias.cold pt.postalias.col = p.alias.col"
"select coualias.colt(alias.col) as alias.col, sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as [scored aalias.colswers], sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as [ualias.colscored aalias.colswers], sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold)*alias.col / coualias.colt(alias.col) / alias.col.alias.col as [peralias.colalias.coltage ualias.colscored], sum(case whealias.col alias.col = alias.col aalias.cold a.creatioalias.coldate <= dateadd(day, alias.col, getdate()) thealias.col alias.col else alias.col ealias.cold) as [alias.col days+ ualias.colscored aalias.colswers], sum(case whealias.col alias.col = alias.col aalias.cold a.creatioalias.coldate <= dateadd(day, alias.col, getdate()) thealias.col alias.col else alias.col ealias.cold)*alias.col / coualias.colt(alias.col) / alias.col.alias.col as [peralias.colalias.coltage alias.col days+ ualias.colscored] from table q ialias.colalias.coler joialias.col table a oalias.col alias.col = q.acalias.colptedaalias.colswerid where a.commualias.colityowalias.coleddate is alias.colull aalias.cold a.owalias.coleruserid = ##userid## aalias.cold q.owalias.coleruserid != ##userid## aalias.cold a.posttypeid = alias.col"
"select alias.col , alias.col , alias.col , alias.col as alias.col , alias.col as alias.col , rtalias.col as alias.col , rtalias.col , alias.col as [reject reasoalias.col] , alias.col from table r ialias.colalias.coler joialias.col table rt oalias.col alias.col = r.reviewtasktypeid ialias.colalias.coler joialias.col tabletates rts oalias.col alias.col = r.tabletateid ialias.colalias.coler joialias.col table rtr oalias.col rtr.reviewtaskid = alias.col ialias.colalias.coler joialias.col table rtrt oalias.col rtalias.col = rtr.reviewtaskresulttypeid left outer joialias.col table re oalias.col alias.col = rtr.rejectioalias.colreasoalias.colid where alias.col = alias.col"
"declare alias.col int = ##userid## select alias.col as alias.col , count(*) as alias.col from table vt, table v, table pn, table pn, table pt, table t where alias.col = alias.col and alias.col = alias.col and alias.col in (alias.colyz) and alias.col = alias.col and alias.col = alias.col and alias.col = alias.col and valias.col = alias.col and alias.col = alias.col group by alias.col"
"select alias.col(year, p.creationdate), alias.col(month, p.creationdate)m, count(*) from table p join table pt on alias.col = alias.col join table t on alias.col = alias.col where alias.col = alias.col:alias.col group by alias.col(month, p.creationdate), alias.col(year, p.creationdate) order by alias.col(year, p.creationdate), alias.col(month, p.creationdate) desc"
"select (select count(*) from table where alias.col >= alias.col##) as count, (select count(*) from table where alias.col >= alias.col##) as alias.col"
"set alias.colocoualias.colt oalias.col create table table (alias.col ialias.colt alias.colealias.coltity, [start] datetime, [fialias.colish] datetime) ialias.colsert table select top alias.col alias.colull, alias.colull from table declare alias.col datetime select alias.col = creatioalias.coldate from table where alias.col = (select max(palias.col.alias.col) from table palias.col) update table set [start] = dateadd(d, (alias.col - alias.col) * alias.col, alias.col), [fialias.colish] = dateadd(d, (alias.col - alias.col) * alias.col, alias.col) select start, (select coualias.colt(*) from table where parealias.coltalias.col is alias.colull aalias.cold creatioalias.coldate betweealias.col [start] aalias.cold [fialias.colish]) as [total questioalias.cols], (select coualias.colt(*) from table where parealias.coltalias.col is alias.colull aalias.cold closeddate is alias.colot alias.colull aalias.cold creatioalias.coldate betweealias.col [start] aalias.cold [fialias.colish]) as [closed], (select coualias.colt(*) from table where parealias.coltalias.col is alias.colull aalias.cold score > alias.col aalias.cold creatioalias.coldate betweealias.col [start] aalias.cold [fialias.colish]) as [score alias.col or higher], (select coualias.colt(*) from table where parealias.coltalias.col is alias.colull aalias.cold acceptedaalias.colsweralias.col is alias.colot alias.colull aalias.cold creatioalias.coldate betweealias.col [start] aalias.cold [fialias.colish]) as [with accepted aalias.colswers], (select coualias.colt(*) from table where parealias.coltalias.col is alias.colull aalias.cold aalias.colswercoualias.colt > alias.col aalias.cold creatioalias.coldate betweealias.col [start] aalias.cold [fialias.colish]) as [with alias.col or more aalias.colswers], (select coualias.colt(*) from table where parealias.coltalias.col is alias.colot alias.colull aalias.cold alias.col ialias.col (select palias.col.acceptedaalias.colsweralias.col from table palias.col where palias.col.parealias.coltalias.col is alias.colull) aalias.cold score > alias.col aalias.cold creatioalias.coldate betweealias.col [start] aalias.cold [fialias.colish]) as [accepted aalias.colswers, score higher thaalias.col alias.col] from table"
"select top alias.col lasteditoruserid as [user lialias.colk] ,raalias.colk() over (order by coualias.colt(*)) as ralias.colk ,coualias.colt(*) as alias.col ,coualias.colt(case whealias.col alias.col = alias.col thealias.col alias.col else alias.colull ealias.cold) as questioalias.coledits ,coualias.colt(case whealias.col alias.col = alias.col thealias.col alias.col else alias.colull ealias.cold) as aalias.colsweredits from table where lasteditoruserid <> owalias.coleruserid group by lasteditoruserid order by alias.col desc"
select alias.col from table
"select case whealias.col alias.col = alias.col thealias.col p.viewcoualias.colt else q.viewcoualias.colt ealias.cold as [views], p.creatioalias.coldate as [created oalias.col], alias.col, p.id as [post lialias.colk], p.owalias.coleruserid as [user lialias.colk] from table p left outer joialias.col table q oalias.col alias.col = p.parealias.coltid where alias.col like alias.col"
"select coalias.colvert(datetime, alias.col + alias.col, alias.col) as [moalias.colth], alias.col.coualias.colt as [alias.col] from ( select coalias.colvert(char(alias.col), creatioalias.coldate, alias.col) as [moalias.colth], coualias.colt(*) as [coualias.colt] from table p where alias.col = alias.col group by coalias.colvert(char(alias.col), creatioalias.coldate, alias.col) ) as alias.col order by alias.col asc"
"selealias.col alias.col, count(alias.col) from ( selealias.col cast( cast(alias.col(alias.col, alias.col) as varchar) + alias.col + cast(alias.col(alias.col, alias.col) as varchar) + alias.col as datetime) alias.col from table p join table pt on alias.col = alias.col join table t on alias.col = alias.col where alias.col = alias.col ) as alias.col group by alias.col order by alias.col asc"
"select alias.col, alias.col, alias.col, location from ( select alias.col alias.col, alias.col, location, dense_rank() over (order by alias.col desc) alias.col from table where ( lower(location) like x or lower(location) like x ... ) and not(lower(location) like x ... or lower(location) like x ... ) ) derivedtable where alias.col <= ##maximumalias.col## and alias.col >= ##minimumalias.col## order by alias.col"
";with PostTimes as ( select p.Id, datepart(hh, p.CreationDate) [HourPosted], p.PostTypeId from Posts p where p.CreationDate between ##minDate:string?NNN## and ##maxDate:string?NNN## ), QuestionTimes as ( select pt.HourPosted, count(pt.HourPosted) [QuestionCount] from PostTimes pt where pt.PostTypeId = N group by pt.HourPosted ), AnswerTimes as ( select pt.HourPosted, count(pt.HourPosted) [AnswerCount] from PostTimes pt where pt.PostTypeId = N group by pt.HourPosted ) select qt.HourPosted, N.N * at.AnswerCount / qt.QuestionCount as AnswersPerQuestion from QuestionTimes qt inner join AnswerTimes at on qt.HourPosted = at.HourPosted order by qt.HourPosted asc"
"declare @t table ( Id int, Name VARCHAR(N) ); DECLARE @PageNum int; DECLARE @PageSize int; SET @PageNum = N; SET @PageSize = N; INSERT INTO @t VALUES (XYZ), (N, X), (N, X), (N, X), (N, X), (N, X); ;With ranked AS ( SELECT ROW_NUMBER() OVER(ORDER BY Name) AS RowNum, * FROM @t ) SELECT * FROM Ranked WHERE RowNum BETWEEN ((@PageNum - N) * @PageSize + N) AND (@PageNum * @PageSize) ORDER BY Name"
"select alias.col as alias.col, coualias.colt(alias.col) as alias.col, alias.col from table as q ialias.colalias.coler joialias.col table as u oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table as ph oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table as pf oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col(day, q.creatioalias.coldate, getdate()) > alias.col aalias.cold q.score = alias.col aalias.cold q.aalias.colswercoualias.colt = alias.col aalias.cold ph.tabletypeid != alias.col aalias.cold alias.col < alias.col(day, q.creatioalias.coldate, getdate()) * alias.col.alias.col aalias.cold q.closeddate is alias.colull aalias.cold alias.col = alias.col aalias.cold lealias.col(q.body) < ##questioalias.collealias.colgth?alias.col## aalias.cold alias.col(day, u.lastaccessdate, getdate()) > alias.col aalias.cold u.reputatioalias.col < ##questioalias.colerrep?alias.col## group by alias.col, alias.col order by coualias.colt(alias.col) desc"
"select sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as [up table], sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as [dowalias.col table], case whealias.col sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) = alias.col thealias.col alias.col else (cast(sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as float) / cast(sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as float)) ealias.cold as [up table to dowalias.col table], alias.col [user lialias.colk], u.reputatioalias.col from table v ialias.colalias.coler joialias.col table p oalias.col alias.col=alias.col ialias.colalias.coler joialias.col table u oalias.col alias.col=p.owalias.coleruserid where u.reputatioalias.col > alias.col group by alias.col, u.reputatioalias.col order by [up table to dowalias.col table] desc"
"select alias.col(alias.col, alias.col) as alias.col, coualias.colt(*) as alias.col, alias.col(alias.col * coualias.colt(case whealias.col alias.col < alias.col thealias.col alias.col ealias.cold) / coualias.colt(*), alias.col) as [ alias.col<alias.col], alias.col(alias.col * coualias.colt(case whealias.col alias.col = alias.col thealias.col alias.col ealias.cold) / coualias.colt(*), alias.col) as [ alias.col=alias.col], alias.col(alias.col * coualias.colt(case whealias.col alias.col > alias.col thealias.col alias.col ealias.cold) / coualias.colt(*), alias.col) as [ alias.col>alias.col] from table where alias.col = alias.col group by alias.col(alias.col, alias.col) order by alias.col(alias.col, alias.col)"
select alias.col from table where alias.col = alias.col
select alias.col from table where location like x order by alias.col desc
"select alias.col as alias.col, coualias.colt(*) , alias.col - alias.col * coualias.colt(*) + alias.col from table palias.colv ialias.colalias.coler joialias.col table p oalias.col palias.colv.postid = alias.col joialias.col table u oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold palias.colv.votetypeid = alias.col aalias.cold p.commualias.colityowalias.coleddate is alias.colull aalias.cold alias.col is alias.colot alias.colull group by alias.col , alias.col havialias.colg coualias.colt(*) > alias.col aalias.cold alias.col - alias.col * coualias.colt(*) + alias.col < alias.col order by coualias.colt(*) desc"
"with table as ( selealias.col cast (alias.col as char(alias.col) ) calias.col, maalias.col (creatioalias.coldate) malias.col, cast (alias.col as char(alias.col) ) calias.col, maalias.col (lasteditdate) malias.col, cast (alias.col as char(alias.col) ) calias.col, maalias.col (lastaalias.colivitydate) malias.col, cast (alias.col as char(alias.col) ) calias.col, maalias.col (closeddate) malias.col, cast (alias.col as char(alias.col) ) calias.col, maalias.col (commualias.colityowalias.coleddate) malias.col from table ) selealias.col alias.col as alias.col , value from ( selealias.col calias.col, calias.col, calias.col, calias.col, calias.col from table ) pp ualias.colpivot ( value for colalias.colame ialias.col (alias.colyz) )as ualias.colpvt;"
"declare @commealias.colttealias.colt alias.colvarchar(alias.col) = ##commealias.colttealias.colt:strialias.colg## select alias.col as [commealias.colt alias.col], postalias.col as [post alias.col], alias.col as [alias.col], tealias.colt as alias.col, alias.col as alias.col from table where useralias.col = alias.col aalias.cold tealias.colt like alias.col + @commealias.colttealias.colt + alias.col order by alias.col desc"
"declare alias.col ialias.colt select alias.col = alias.col## select alias.col, alias.col, coualias.colt, alias.col as alias.col ialias.colto table from table where coualias.colt <= alias.col aalias.cold coualias.colt > alias.col go declare @useralias.col ialias.colt select @useralias.col=##useralias.col## declare @alias.col ialias.colt declare @creatoralias.col ialias.colt declare @alias.col alias.colvarchar (alias.col) while (ealias.colists (select alias.col from table where creatoralias.col = alias.col)) begialias.col select @alias.col=mialias.col(alias.col) from table where creatoralias.col = alias.col select @alias.col=alias.col from table where alias.col=@alias.col select @creatoralias.col = alias.colull select @creatoralias.col = useralias.col from table phalias.col where tealias.colt like alias.col+@alias.col+alias.col aalias.cold tabletypealias.col ialias.col (alias.colyz) aalias.cold useralias.col = ##useralias.col## aalias.cold alias.colot ealias.colists (select alias.col from table phalias.col where phalias.col.tealias.colt like alias.col+@alias.col+alias.col aalias.cold phalias.col.tabletypealias.col ialias.col (alias.colyz) aalias.cold phalias.col.creatioalias.coldate > phalias.col.creatioalias.coldate) select @creatoralias.col = coalesce(@creatoralias.col, alias.col) update table set creatoralias.col = @creatoralias.col where alias.col=@alias.col ealias.cold go select alias.col, alias.col-coualias.colt as alias.col from table where creatoralias.col = ##useralias.col## order by coualias.colt desc drop table table go"
"declare alias.col datetime, @maxtableperweek int, @daystocheck int set @maxtableperweek = ##maxtableperweek## set @daystocheck = ##daystocheck## select alias.col = max(alias.col) from table; with topusers as ( select top n id, displayname, reputation from users order by reputation desc ), newpostcounts as ( select owneruserid, count(*) as postcount, count(*) * n.n / @daystocheck as averagetableperweek from table where alias.col >= dateadd(day, -@daystocheck, alias.col) group by owneruserid ) select u.id, u.displayname, u.reputation, c.postcount, c.averagetableperweek from topusers u inner join newpostcounts c on c.owneruserid = u.id where c.averagetableperweek <= @maxtableperweek order by c.averagetableperweek desc"
"declare alias.col date select alias.col = min(table.date) from table where table.name = alias.col ; with badgeearners as ( select users.id as [user link], users.creationdate as [member since], table.date as [date won], n+datediff(day, users.creationdate, table.date) as [daysmembership] from table inner join users on table.userid = users.id where table.name = alias.col ) select *, datediff(day, alias.col, [date won]) as [dayssincenst] from badgeearners order by [daysmembership] asc"
"select top alias.col owalias.coleruserid as [user lialias.colk], coualias.colt(*) as postcoualias.colt from table where alias.col=alias.col aalias.cold owalias.coleruserid is alias.colot alias.colull group by owalias.coleruserid order by coualias.colt(*) desc"
"select avg(alias.col) alias.col, avg(alias.col) alias.colperday from ( select alias.col(alias.col, alias.col(alias.col, alias.col, creatioalias.coldate), alias.col) as alias.col, coualias.colt(*) alias.col, sum(case whealias.col alias.col=alias.col thealias.col alias.col else alias.col ealias.cold) as alias.col from table where creatioalias.coldate > alias.col(year, alias.col, getdate()) group by alias.col(alias.col, alias.col(alias.col, alias.col, creatioalias.coldate), alias.col) ) x"
"select alias.col, alias.col, alias.col from ( select alias.col(month, datediff(month, n, alias.col), n) alias.col , count(table.tagid) alias.col , tagid from table left join table on table.postid = table.id where table.tagid in (alias.col) and alias.col > alias.col and alias.col < alias.col(month, datediff(month, n, getdate()), n) group by alias.col(month, datediff(month, n, alias.col), n) , table.tagid )alias.colpermonth left join table on alias.colpermonth.tagid = table.id order by alias.col desc, alias.col asc"
select body from table where alias.col < alias.col and table.alias.col > alias.col
"declare @st_date date = x declare @end_date date = x select alias.col(week, datediff(week, n, p.creationdate), n) wk, cast(sum( case when votetypeid = n then n else n end ) as float)/ sum( case when votetypeid = n then n else n end ) neg_to_pos_ratio from ( select table.votetypeid, table.creationdate from table join table on table.id = table.postid where table.creationdate > alias.col(year, n, @st_date) and table.creationdate < alias.col(year, n, @end_date) and table.posttypeid = n ) p group by alias.col(week, datediff(week, n, p.creationdate), n) order by alias.col(week, datediff(week, n, p.creationdate), n)"
DECLARE @numDaysBegin int = ##numberOfDaysBeginLimit##; SELECT * FROM Votes WHERE CreationDate >= CURRENT_TIMESTAMP - @numDaysBegin;
"select alias.col(alias.col, alias.col, alias.col(alias.col, alias.col, creatioalias.coldate)) as creatioalias.colday, avg(alias.col) as avg_alias.col from table group by alias.col(alias.col, alias.col, alias.col(alias.col, alias.col, creatioalias.coldate))"
"DECLARE @TagName NVARCHAR(N) = X; DECLARE @MinimumScore INT = ##MinimumScore##; SELECT a.OwnerUserId AS [User Link] FROM Posts a, Posts q INNER JOIN PostTags qt ON q.Id = qt.PostId INNER JOIN Tags t ON t.Id = qt.TagId WHERE a.ParentId = q.Id AND a.PostTypeId = N AND a.CommunityOwnedDate IS NULL AND t.TagName LIKE @TagName GROUP BY a.OwnerUserId HAVING SUM(a.Score) >= @MinimumScore;"
"select alias.col as alias.col, body from table where owneruseralias.col = ##useralias.col:alias.col and body like x ..."
"create table table (id itablet tableot tableull, alias.col itablet tableot tableull) go itablesert itableto table selealias.col alias.col as alias.col, coutablet(*) as alias.col from table ph, table p where tabletypeid = table atabled alias.col = alias.col atabled p.owtableeruserid != alias.col group by alias.col go with table as ( selealias.col cast(coutablet(*) as float) as coutablet from table where alias.col = table ) selealias.col istableull(alias.col, table) as alias.col, coutablet(*) as [atableswers], routabled(coutablet(*) / (selealias.col coutablet from table) * table, table) as [percetablet] from table p left joitable table e otable alias.col = alias.col where p.alias.col = table group by alias.col order by alias.col"
"DECLARE @UserId INT = ##UserId##; DECLARE @SelfAnswered INT, @OthersAccepted INT, @TotalAnswers INT; SELECT @SelfAnswered = SUM ( CASE Qst.AcceptedAnswerId WHEN ans.Id THEN CASE Qst.OwnerUserId WHEN @UserId THEN N ELSE N END ELSE N END ), @OthersAccepted = SUM ( CASE Qst.AcceptedAnswerId WHEN ans.Id THEN CASE Qst.OwnerUserId WHEN @UserId THEN N ELSE N END ELSE N END ), @TotalAnswers = COUNT (ans.Id) FROM Posts ans INNER JOIN Posts Qst ON ans.ParentId = Qst.Id WHERE ans.OwnerUserId = @UserId DECLARE @Results TABLE ( item VARCHAR(N), [Count] INT, [Percent] FLOAT ) INSERT INTO @Results (item, [Count], [Percent]) VALUES (XYZ) ), (X, @OthersAccepted, ROUND (@OthersAccepted * N.N / @TotalAnswers, N) ), (X, @SelfAnswered, ROUND (@SelfAnswered * N.N / @TotalAnswers, N) ) SELECT * FROM @Results"
select alias.col = count(*) from table p join table pt on alias.col = alias.col join table t on alias.col = alias.col where alias.col = alias.col:alias.col and alias.col > alias.col:alias.col
"selealias.col top(alias.col) alias.col, displayalias.colame, alias.col, reputatioalias.col, creatioalias.coldate, lastaccessdate, alias.col + cast(alias.col as varchar) as alias.col from table where alias.col is alias.colot alias.colull aalias.cold reputatioalias.col > alias.col order by creatioalias.coldate, reputatioalias.col desc;"
"select name, count(*) from table ph inner join tabletypes pht on ph.tabletypeid=alias.col group by name"
"select alias.col as alias.col from table where body like x and body like x and lasteditdate >= convert (datetime, ##startdate:string?n.n.n## , n) and lasteditdate <= convert (datetime, ##enddate:string?n.n.n## , n)"
select alias.col from table p ialias.colalias.coler joialias.col table ph oalias.col alias.col = alias.col where alias.col > alias.col aalias.cold alias.col = alias.col
"with table as ( select table.id, count(*) as alias.col from table inner join table on table.userid = table.id where name like alias.col and location like alias.col group by table.id ) select alias.col alias.col, location from table inner join table on table.id = table.id order by alias.col desc"
"select top alias.col alias.col, u.displayalias.colame, coualias.colt(*) as alias.col, maalias.col(alias.col) as alias.col from table b ialias.colalias.coler joialias.col table u oalias.col alias.col = alias.col where alias.colame ialias.col (alias.col) group by alias.col, u.displayalias.colame order by alias.col desc, alias.col"
"select top alias.col table.tagalias.colame, coualias.colt (table.tagalias.colame) as [howmaalias.coly] from table, posttable where table.id = posttable.tagid aalias.cold table.tagalias.colame alias.colot like alias.col aalias.cold posttable.postid ialias.col ( select table.id from table where table.table like alias.col aalias.cold table.table alias.colot like alias.col aalias.cold table.table alias.colot like alias.col ) group by tagalias.colame order by howmaalias.coly desc"
"select (select coualias.colt(*) from table where alias.col=alias.col) as questioalias.cols, (select coualias.colt(*) from table where alias.col=alias.col) as aalias.colswers"
"select top alias.col alias.col as [post lialias.colk], alias.col as [user lialias.colk], alias.col, alias.col from table c where alias.col > alias.col aalias.cold alias.col = alias.col order by alias.col desc"
"select top alias.col owalias.coleruserid as [user lialias.colk], coualias.colt(*) as postcoualias.colt, sum(alias.col) as totalalias.col, avg(alias.col) as averagealias.col from table where alias.col=alias.col aalias.cold owalias.coleruserid != alias.col group by owalias.coleruserid havialias.colg coualias.colt(*) > ##mialias.colalias.colrquestioalias.cols?alias.col## order by avg(alias.col) asc"
"select alias.col, alias.col as alias.col, alias.col as alias.col, max(alias.col) as alias.col, alias.col as alias.col from table p inner join table h on alias.col = alias.col where h.tabletypeid in (alias.col) group by alias.col, alias.col, alias.col, alias.col having sum(case when h.tabletypeid = n then n else n end) > n order by alias.col desc"
"selealias.col un.emailhash, count(alias.col) as alias.col, sum(alias.col) as alias.col, maalias.col(alias.col) as alias.col, sum(alias.col) - maalias.col(alias.col) as alias.col, ( selealias.col cast(alias.col as varchar) + alias.col + alias.col + alias.col + cast(alias.col as varchar) + alias.col from table un where un.emailhash = un.emailhash order by alias.col desc for alias.colml path (alias.col)) as idsandnames from table un where un.emailhash is not null group by un.emailhash having count(alias.col) > n and maalias.col(alias.col) < sum(alias.col) * n.n order by alias.col desc"
"select alias.col as alias.col, coualias.colt(alias.col) from table where posttypealias.col = alias.col aalias.cold (body like x) group by alias.col havialias.colg coualias.colt(alias.col) > alias.col order by coualias.colt(alias.col) desc;"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... or location like x and alias.col >= n order by alias.col desc;"
"set nocount off declare @recent datetime = dateadd(mm, n, (select max(alias.col) from table)); select top n p.title, count(*) as numvotes from table p inner join votes v on (v.postid=p.id) where p.posttypeid=n and p.owneruserid!=n and p.alias.col > @recent group by p.id, p.title, p.posttypeid order by numvotes desc;"
"declare @tagalias.colame varchar(alias.col) = x select top alias.col alias.col, (select displayalias.colame from table udalias.col with (alias.cololock) where udalias.col.id = alias.col) ,coualias.colt(*) as uptable from table t with (alias.cololock) ialias.colalias.coler joialias.col posttable pt with (alias.cololock)oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table p with (alias.cololock) oalias.col p.parealias.coltid = alias.col ialias.colalias.coler joialias.col table v with (alias.cololock) oalias.col alias.col = alias.col aalias.cold alias.col = alias.col ialias.colalias.coler joialias.col table u with (alias.cololock) oalias.col alias.col = p.owalias.coleruserid where p.commualias.colityowalias.coleddate is alias.colull aalias.cold t.tagalias.colame = @tagalias.colame group by alias.col order by uptable desc"
"select alias.col , (case when alias.col is null and t.exalias.colrptpostid is null then x when alias.col is null then x when t.exalias.colrptpostid is null then x else x end) as [what is missing] from table t where (t.exalias.colrptpostid is null or alias.col is null) order by alias.col desc"
"select alias.col as alias.col, alias.col, body, alias.col, acceptedaalias.colsweralias.col, (select alias.col as alias.col from table where alias.col = acceptedaalias.colsweralias.col), (select alias.col as alias.col from table where alias.col = acceptedaalias.colsweralias.col), (select body as body from table where alias.col = acceptedaalias.colsweralias.col) from table where alias.col like alias.col aalias.cold alias.col > alias.col aalias.cold favoritecoualias.colt > alias.col;"
select alias.col from table q inner join table a on alias.col = alias.col where alias.col is null and a.owneruserid = ##userid## and q.owneruserid != ##userid## and a.posttypeid = n and a.score = n
"declare alias.col alias.colvarchar(alias.col) = ##tagalias.col:strialias.colg?jquery## select toalias alias.col alias.col as [aliasost lialias.colk], alias.col, alias.viewcoualias.colt from table t joialias.col aliasosttable aliast oalias.col alias.col = alias.col joialias.col table as alias oalias.col alias.col = alias.col where tagalias.colame = alias.col order by alias.viewcoualias.colt desc"
"select alias.col as alias.col, case alias.col whealias.col alias.col thealias.col x whealias.col alias.col thealias.col x else x ealias.cold as x, case pf.votetypeid whealias.col alias.col thealias.col x whealias.col alias.col thealias.col x else x ealias.cold as x, coualias.colt(alias.col) as coualias.colt from table pf joialias.col table p oalias.col (alias.col = alias.col) where pf.creatioalias.coldate >= coalias.colvert (datetime, ##startdate:strialias.colg?alias.col.alias.col.alias.col## , alias.col) aalias.cold pf.creatioalias.coldate <= coalias.colvert (datetime, ##ealias.colddate:strialias.colg?alias.col.alias.col.alias.col## , alias.col) aalias.cold pf.votetypeid ialias.col (xyz) aalias.cold (pf.votetypeid = ##upvotes:ialias.colt?alias.col## or pf.votetypeid = ##dowalias.colvotes:ialias.colt?alias.col## ) aalias.cold pf.isaalias.coloalias.colymous = alias.col group by alias.col, alias.col, pf.votetypeid order by coualias.colt desc"
"select alias.col as alias.col, alias.col(alias.col) as alias.colgth from table p where alias.col = alias.col## order by alias.colgth desc"
"select top alias.col row_alias.columber() over(order by reputatioalias.col desc) as [#], id as [user lialias.colk], reputatioalias.col, websiteurl, locatioalias.col from table where locatioalias.col like x order by reputatioalias.col desc"
"with table as ( select alias.col as alias.col, d.alias.col as duplicatealias.col from table d, table p, table pl where pl.lialias.colktypealias.col = alias.col aalias.cold pl.postalias.col = d.alias.col aalias.cold pl.relatedpostalias.col = alias.col ), doubletable as ( select alias.col as alias.col, d.duplicatealias.col as duplicatealias.col from table d, table p, table pl where pl.lialias.colktypealias.col = alias.col aalias.cold pl.postalias.col = d.alias.col aalias.cold pl.relatedpostalias.col = alias.col ) select d.duplicatealias.col as [post lialias.colk] from doubletable d, table p, table pl where pl.lialias.colktypealias.col = alias.col aalias.cold pl.postalias.col = d.alias.col aalias.cold pl.relatedpostalias.col = alias.col"
"select top alias.col:ialias.colt?alias.col mialias.col(alias.col) as alias.col,coualias.colt(*) as alias.col, sum(case whealias.col alias.col (alias.col,alias.col) ialias.col (alias.col) thealias.col alias.col else alias.col ealias.cold) as weekealias.cold, cast(sum(case whealias.col alias.col (alias.col,alias.col) ialias.col (alias.col) thealias.col alias.col else alias.col ealias.cold) as decimal(alias.col,alias.col))/coualias.colt(*) as alias.col from table p ialias.colalias.coler joialias.col table pt oalias.col alias.col=alias.col ialias.colalias.coler joialias.col table t oalias.col alias.col=alias.col where alias.col=alias.col group by alias.col havialias.colg coualias.colt(*)>=##mialias.colq:ialias.colt?alias.col order by alias.col desc"
"select alias.col, coualias.colt(distialias.colct(alias.col)) from table as q ialias.colalias.coler joialias.col table as ph oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col(day, q.creatioalias.coldate, getdate()) > alias.col aalias.cold q.aalias.colswercoualias.colt = alias.col aalias.cold alias.col = alias.col aalias.cold ph.tabletypeid != alias.col ualias.colioalias.col select alias.col, coualias.colt(distialias.colct(alias.col)) from table as q ialias.colalias.coler joialias.col table as ph oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col(day, q.creatioalias.coldate, getdate()) > alias.col aalias.cold q.aalias.colswercoualias.colt = alias.col aalias.cold alias.col = alias.col aalias.cold ph.tabletypeid != alias.col aalias.cold q.viewcoualias.colt <= alias.col(day, q.creatioalias.coldate, getdate()) * alias.col.alias.col aalias.cold q.commealias.coltcoualias.colt < alias.col ualias.colioalias.col select alias.col, coualias.colt(distialias.colct(alias.col)) from table as q ialias.colalias.coler joialias.col table as ph oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table as a oalias.col a.parealias.coltid = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold q.aalias.colswercoualias.colt = alias.col aalias.cold alias.col = alias.col aalias.cold alias.col <= alias.col aalias.cold ph.tabletypeid != alias.col aalias.cold q.acceptedaalias.colswerid is alias.colull aalias.cold alias.col(day, q.closeddate, getdate()) > alias.col aalias.cold alias.col(day, q.lasteditdate, getdate()) > alias.col aalias.cold alias.col alias.colot ialias.col (alias.colyz)) from table as q ialias.colalias.coler joialias.col table as ph oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table as a oalias.col a.parealias.coltid = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold q.aalias.colswercoualias.colt = alias.col aalias.cold alias.col <= alias.col aalias.cold alias.col = alias.col aalias.cold ph.tabletypeid != alias.col aalias.cold q.acceptedaalias.colswerid is alias.colull aalias.cold alias.col(day, q.closeddate, getdate()) > alias.col aalias.cold alias.col(day, q.lasteditdate, getdate()) > alias.col aalias.cold alias.col alias.colot ialias.col (select alias.col from table)"
"select top (alias.col##) row_number() over(order by alias.col desc) as [#], id [user link], alias.col, displayname, location, profileimageurl from table where lower(location) like lower(x) order by alias.col desc"
"selealias.col cast(alias.col as date) as alias.col, isalias.colull(coualias.colt(cast(alias.col as date)), alias.col) as [table] from table where alias.col = alias.col:ialias.colt?alias.col## group by cast(alias.col as date) order by cast(alias.col as date)"
"select top alias.col alias.col as [commealias.colt lialias.colk] , postalias.col as [post lialias.colk] , useralias.col as [user lialias.colk] from table where alias.col > alias.col"
"select alias.col as alias.col, alias.col, maalias.col(alias.col) as alias.col, alias.col as alias.col, alias.col from table as questioalias.col, table as aalias.colswer where alias.col=alias.col aalias.cold aalias.colswer.posttypeid=alias.col aalias.cold aalias.colswer.parealias.coltid = alias.col aalias.cold alias.col > alias.col group by alias.col, alias.col, questioalias.col.title, alias.col, alias.col havialias.colg maalias.col(alias.col) < alias.col order by alias.col - maalias.col(alias.col) desc"
"declare @otheruseralias.col ialias.colt = ##otheruseralias.col:ialias.colt## select alias.col as alias.col, alias.col as [alias.col], alias.col as alias.col, alias.col as alias.col from table where owalias.coleruseralias.col = @otheruseralias.col aalias.cold posttypealias.col = alias.col aalias.cold acceptedaalias.colsweralias.col is alias.colull order by alias.col asc"
"declare alias.col ialias.colt = ##userid## select table.id as alias.col, sum(case whealias.col table.alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as dowalias.colvotecoualias.colt, sum(case whealias.col table.alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as upvotecoualias.colt from table ialias.colalias.coler joialias.col posttable oalias.col posttable.tagid = table.id ialias.colalias.coler joialias.col table oalias.col table.parealias.coltid = posttable.postid ialias.colalias.coler joialias.col table oalias.col table.postid = table.id aalias.cold alias.col = alias.col where table.owalias.coleruserid = alias.col group by table.id order by table.id"
"select top alias.col table.id as [post lialias.colk], table.viewcoualias.colt as [view coualias.colt] from table where table.posttypeid = alias.col aalias.cold table.viewcoualias.colt >= alias.col order by table.viewcoualias.colt desc"
"select alias.col as alias.col, coualias.colt(case alias.col whealias.col alias.col thealias.col alias.col else alias.col ealias.cold) as [close table], coualias.colt(case alias.col whealias.col alias.col thealias.col alias.col else alias.col ealias.cold) as [reopealias.col table] from table where alias.col = alias.col or alias.col = alias.col group by alias.col order by [reopealias.col table]"
"select top alias.col alias.col as [post lialias.colk] , body , creatioalias.coldate from table where body like x"
"selealias.col table.alias.colalias.colame as alias.col, coualias.colt(*) as alias.col, sum(cast(table.viewcoualias.colt as bigialias.colt)) as views, sum(table.aalias.colswercoualias.colt) as aalias.colswers, sum(cast(table.viewcoualias.colt as bigialias.colt)) / coualias.colt(*) as avgviews from table joialias.col table oalias.col table.id = table.postid joialias.col table oalias.col table.alias.colid = table.id where table.posttypeid = alias.col aalias.cold table.alias.colalias.colame = alias.col aalias.cold table.alias.colalias.colame != alias.col group by table.alias.colalias.colame selealias.col table.alias.colalias.colame as alias.col, coualias.colt(*) as ualias.colaalias.colswerwedalias.col, sum(cast(table.viewcoualias.colt as bigialias.colt)) as views, sum(cast(table.viewcoualias.colt as bigialias.colt)) / coualias.colt(*) as avgviews from table joialias.col table oalias.col table.id = table.postid joialias.col table oalias.col table.alias.colid = table.id where table.posttypeid = alias.col aalias.cold table.alias.colalias.colame = alias.col aalias.cold table.alias.colalias.colame != alias.col aalias.cold table.aalias.colswercoualias.colt = alias.col group by table.alias.colalias.colame"
"select alias.col as alias.col, coualias.colt(alias.col) as alias.col from table p ialias.colalias.coler joialias.col table pt oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table t oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold p.creatioalias.coldate > alias.col(moalias.colth, alias.col, alias.col(dd, datediff(dd, alias.col, getdate()), alias.col)) aalias.cold ( alias.col like x or alias.col like x or alias.col like x or alias.col like x or alias.col like x or alias.col like x or alias.col like x or alias.col like x or alias.col like x or alias.col like x or alias.col like x or alias.col like x or alias.col like x or alias.col like x or alias.col like x or alias.col like x ) group by alias.col"
"select sum(case whealias.col table.votetypeid = alias.col thealias.col alias.col else alias.col ealias.cold) as uptable, sum(case whealias.col table.votetypeid = alias.col thealias.col alias.col else alias.col ealias.cold) as dowalias.coltable, table.postid as [post lialias.colk] from table group by table.postid havialias.colg sum(case whealias.col table.votetypeid = alias.col thealias.col alias.col else alias.col ealias.cold) > alias.col"
"select alias.col as alias.col, alias.col as alias.col, alias.col as alias.col from table q inner join table a on alias.col = alias.col and alias.col = alias.col and alias.col = alias.col inner join table u on alias.col = alias.col order by alias.col desc"
"declare @UserId int = ##UserId##; declare @OpponentUserId int = ##OpponentUserId##; with fights as ( select myAnswer.ParentId as Question, myAnswer.Score as MyScore, opponentAnswer.Score as OpponentScore from Posts as myAnswer inner join Posts as opponentAnswer on opponentAnswer.OwnerUserId = @OpponentUserId and myAnswer.ParentId = opponentAnswer.ParentId where myAnswer.ownerUserId = @UserId and myAnswer.postTypeId = N ) select case when myScore > OpponentScore then X when myScore < OpponentScore then X else X end as X, Question as [Post Link], myScore as X, OpponentScore as X from fights;"
"selealias.col coualias.colt(alias.col) as alias.col, alias.col as alias.col, alias.col as alias.col, coualias.colt(alias.col) as alias.col, alias.col as alias.col, alias.col from table v ialias.colalias.coler joialias.col table p oalias.col alias.col=alias.col ialias.colalias.coler joialias.col table c oalias.col alias.col=alias.col where alias.col = alias.col aalias.cold alias.col=alias.col aalias.cold {falias.col alias.colow()} - alias.col < alias.col## group by alias.col,p.body,alias.col,alias.col, alias.col, alias.col order by cast(alias.col as ialias.colt) * cast(alias.col as ialias.colt) * ( cast(coualias.colt(alias.col) as ialias.colt) + cast(coualias.colt(alias.col) as ialias.colt)) desc"
"select table.id as alias.col, table.viewcoualias.colt as alias.col from table where table.posttypeid = alias.col aalias.cold table.owalias.coleruserid = alias.col order by table.viewcoualias.colt desc"
"select table.id as alias.col, table.score as alias.col, table.creatioalias.coldate as alias.col from ( select alias.col from table where alias.col = alias.col aalias.cold table.score <= alias.col ) as table order by table.score asc"
"select top alias.col coualias.colt(alias.col) as alias.col, alias.col as [post lialias.colk],alias.col from table v ialias.colalias.coler joialias.col table p oalias.col alias.col=alias.col where alias.col = alias.col group by alias.col,alias.col order by alias.col desc"
"select top alias.col alias.col, displayalias.colame, reputatioalias.col, alias.col, locatioalias.col from table where locatioalias.col = alias.colx order by reputatioalias.col desc"
select coualias.colt(distialias.colct revisioalias.colguid) from table where alias.col = alias.col aalias.cold tabletypeid ialias.col (alias.col)
"selealias.col coualias.colt( alias.col ) as alias.col, coualias.colt( alias.col ) as alias.col, alias.col(cast(coualias.colt( alias.col )as float)/coualias.colt( alias.col )alias.colalias.col,alias.col) as alias.col, (coualias.colt( alias.col )-coualias.colt( p.owalias.coleruserid )) as alias.coloowalias.coler from table p where ealias.colists (selealias.col alias.col from table ph where ph.creatioalias.coldate > alias.col( alias.col , alias.col , {falias.col alias.colow()} ) aalias.cold alias.col = alias.col aalias.cold ph.tabletypeid = alias.col)"
declare alias.col ialias.colt = ##userid## select alias.col as alias.col from table ialias.colalias.coler joialias.col posttable oalias.col posttable.tagid = table.id ialias.colalias.coler joialias.col table oalias.col table.parealias.coltid = posttable.postid ialias.colalias.coler joialias.col table oalias.col table.postid = table.id aalias.cold alias.col = alias.col where table.owalias.coleruserid = alias.col aalias.cold table.commualias.colityowalias.coleddate is alias.colull group by alias.col havialias.colg coualias.colt(*) >= alias.col order by alias.col desc
select top alias.col alias.col from table
"select alias.col(year,table.creationdate) as x, alias.col(month,table.creationdate) as x, alias.col(day,table.creationdate)as x , table.tagname , count(*) as x from table as pt join table as table on alias.col = table.id join table as table on alias.col = table.id where table.tagname in (alias.col) group by alias.col(year,table.creationdate), alias.col(month,table.creationdate), alias.col(day,table.creationdate), table.tagname, table.viewcount order by alias.col(year,table.creationdate) desc, alias.col(month,table.creationdate) desc, alias.col(day,table.creationdate) desc"
"declare @mialias.colaalias.colswers ialias.colt = ##mialias.colaalias.colswers## selealias.col top alias.col alias.col as [user lialias.colk], coualias.colt(*) as alias.columaalias.colswers, avg(cast((alias.col - alias.col) as float)) as alias.col from table a ialias.colalias.coler joialias.col table u oalias.col alias.col = a.owalias.coleruserid ialias.colalias.coler joialias.col table q oalias.col a.parealias.coltid = alias.col where (q.owalias.coleruserid <> alias.col or q.owalias.coleruserid is alias.colull) aalias.cold q.tags like x group by alias.col havialias.colg coualias.colt(*) >= @mialias.colaalias.colswers order by alias.col desc, alias.columaalias.colswers desc"
"select top alias.col row_alias.columber() over(order by reputatioalias.col desc) as [#], id as [user lialias.colk], reputatioalias.col, locatioalias.col from table where lower(locatioalias.col) like x or upper(locatioalias.col) like x ... or locatioalias.col like x aalias.cold reputatioalias.col betweealias.col alias.col aalias.cold alias.col order by reputatioalias.col desc;"
"select avg(alias.col(alias.col * alias.col / alias.col, alias.col)) as [peralias.colalias.colt] from (select coualias.colt(alias.col) as alias.col, sum(case whealias.col q.acalias.colptedaalias.colswerid is alias.colull thealias.col alias.col else alias.col ealias.cold) as [acalias.colpted] from table as a left joialias.col table as q oalias.col alias.col = q.acalias.colptedaalias.colswerid where alias.col = alias.col group by a.owalias.coleruserid ) as t where t.alias.col > alias.col"
"select alias.col as alias.col, row_number() over (order by alias.col desc) as rank, alias.col as questionstotal from ( select count(alias.col) as alias.col, alias.colname from table, posttable, table where table.id = posttable.alias.colid and table.id = alias.col and alias.colname in (alias.col) group by alias.colname ) as alias.col order by alias.col desc ;"
declare alias.col ialias.colt = ##userid## selealias.col alias.col + cast(alias.col as alias.col(alias.col)) + alias.col+alias.col+alias.col from table u left joialias.col table v oalias.col alias.col = alias.col left joialias.col table p oalias.col alias.col = alias.col where alias.col = alias.col
"with table as ( select alias.col,coualias.colt(*) as alias.col from table where alias.col=alias.col group by alias.col ), table as ( select case alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col parealias.coltid ealias.cold as alias.col, coualias.colt(*) as alias.col from table p ialias.colalias.coler joialias.col table v oalias.col alias.col=v.alias.col where alias.col=alias.col group by case alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col parealias.coltid ealias.cold, alias.col,parealias.coltid ) select o.alias.col as [post lialias.colk],o.alias.col as opealias.colcoualias.colt,c.alias.col as closecoualias.colt from table o left joialias.col table c oalias.col o.alias.col=c.alias.col where c.alias.col is alias.colull or c.alias.col<o.alias.col"
select alias.col from table p ialias.colalias.coler joialias.col table ph oalias.col alias.col = alias.col where ph.tabletypeid = alias.col aalias.cold alias.col ialias.col (alias.col))
"select top alias.col alias.col as [post lialias.colk], alias.col from table p where alias.col=alias.col## aalias.cold alias.colot exists (select alias.col from table v where alias.col=alias.col aalias.cold alias.col=alias.col) order by alias.col desc"
"select alias.col, coualias.colt(*) from table v,table p where alias.col = alias.col aalias.cold alias.col = alias.col group by alias.col"
"selealias.col alias.col, coualias.colt(alias.col) from ( selealias.col cast( cast(alias.col(alias.col, alias.col) as varchar) + alias.col + cast(alias.col(alias.col, alias.col) as varchar) + alias.col as datetime) table, t.table from table p joialias.col table pt oalias.col alias.col = alias.col joialias.col table t oalias.col alias.col = alias.col where alias.col ialias.col ( selealias.col top alias.col alias.col from table order by coualias.colt desc ) ) as alias.col group by table, table order by table asc, table asc"
"select top alias.col alias.col, displayalias.colame, reputatioalias.col, alias.col, locatioalias.col from table where locatioalias.col like alias.colx order by reputatioalias.col desc"
"with table aalias.col ( alias.colelect aliaalias.col.col aalias.col aliaalias.col.col , aliaalias.col.col aalias.col aliaalias.col.col , aliaalias.col.col aalias.col aliaalias.col.col , aliaalias.col.col aalias.col aliaalias.col.col , aliaalias.col.col aalias.col aalias.colaliaalias.col.col , aliaalias.col.col(aliaalias.col.col) aalias.col qaliaalias.col.col , aliaalias.col.col(aliaalias.col.col) aalias.col aaliaalias.col.col , aliaalias.col.col(alias.col, alias.col, alias.col) aalias.col alias.colecoalias.coldalias.col from table aalias.col q ialias.colalias.coler joialias.col table aalias.col a oalias.col q.poalias.colttypeid = alias.col aalias.cold a.poalias.colttypeid = alias.col aalias.cold alias.col = a.parealias.coltid aalias.cold aliaalias.col.col <> aliaalias.col.col ialias.colalias.coler joialias.col table aalias.col aalias.col oalias.col aliaalias.col.col = aalias.col.poalias.coltid aalias.cold alias.col = aalias.col.creatioalias.coldate where q.cloalias.coleddate ialias.col alias.colull aalias.cold alias.col < alias.col ) alias.colelect top ##topalias.col:ialias.colt?alias.col## aliaalias.col.col aalias.col [poalias.colt lialias.colk] , aliaalias.col.col aalias.col [ualias.coler lialias.colk] , table.dialias.colplayalias.colame aalias.col [aalias.colalias.colwerer] , aalias.colaliaalias.col.col aalias.col [a alias.colaliaalias.col.col] , qaliaalias.col.col aalias.col [q aliaalias.col.col] , aaliaalias.col.col aalias.col [a aliaalias.col.col] , alias.colecoalias.coldalias.col , (alias.col.alias.col + qaliaalias.col.col + alias.col * aaliaalias.col.col) / alias.colecoalias.coldalias.col / alias.col.alias.col aalias.col [gualias.col alias.colpeed] from table left outer joialias.col table oalias.col table.aliaalias.col.col = table.id where alias.colecoalias.coldalias.col < alias.col order by alias.col dealias.colc;"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... or location like x and alias.col >= n order by alias.col desc;"
"declare alias.col ialias.colt = ##userid## create table table (alias.col ialias.colt, [coualias.colt] ialias.colt) ialias.colsert table select top alias.col alias.col, coualias.colt(*) as uptable from table ialias.colalias.coler joialias.col posttable oalias.col posttable.alias.col = table.id ialias.colalias.coler joialias.col table oalias.col table.parealias.coltid = posttable.postid ialias.colalias.coler joialias.col table oalias.col table.postid = table.id aalias.cold alias.col = alias.col where table.owalias.coleruserid = alias.col group by alias.col order by uptable desc create table table (id ialias.colt primary key) ialias.colsert table select alias.col from table q where (select coualias.colt(*) from table a where a.parealias.coltid = alias.col aalias.cold alias.col > alias.col) = alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold closeddate is alias.colull aalias.cold q.parealias.coltid is alias.colull aalias.cold acceptedaalias.colswerid is alias.colull select top alias.col alias.col as [post lialias.colk], (sum(t.[coualias.colt]) / alias.col.alias.col + us.reputatioalias.col / alias.col.alias.col + alias.col * alias.col) as alias.col from table u joialias.col table p oalias.col alias.col = alias.col joialias.col posttable pt oalias.col alias.col = alias.col joialias.col table t oalias.col t.alias.col = pt.alias.col joialias.col table us oalias.col alias.col = p.owalias.coleruserid group by alias.col, us.reputatioalias.col, alias.col order by alias.col desc"
select alias.col from table
select sum(count) from table where alias.col = alias.col
"select alias.col as alias.col, alias.col from table a where a.posttypealias.col = alias.col aalias.cold a.owalias.coleruseralias.col = ##useralias.col## aalias.cold a.alias.col <> (select acceptedaalias.colsweralias.col from table q where q.alias.col = a.parealias.coltalias.col) aalias.cold ( alias.col * (select coualias.colt(*) from table v where v.postalias.col = a.alias.col aalias.cold v.votetypealias.col = alias.col) - alias.col * (select coualias.colt(*) from table v where v.postalias.col = a.alias.col aalias.cold v.votetypealias.col = alias.col) ) < alias.col order by a.alias.col;"
"declare alias.col int = ##userid## select alias.col as alias.col , count(*) as alias.col from table vt join table v on alias.col = alias.col join table pn on alias.col = alias.col join table pn on alias.col = alias.col join table pt on alias.col = alias.col join table t on alias.col = alias.col where alias.col = alias.col and alias.col in (alias.colyz) and alias.col = alias.col group by alias.col"
"select alias.col(floor(alias.col / (alias.col(week,creatioalias.coldate,getdate())))+alias.col) as alias.col, alias.col(coualias.colt(*)) as alias.columquestioalias.cols from table where alias.col = alias.col aalias.cold alias.col(day, creatioalias.coldate, getdate()) > alias.col group by floor(alias.col / (alias.col(week,creatioalias.coldate,getdate())))+alias.col order by alias.col"
declare alias.col ialias.colt = ##userid## selealias.col avg(cast(alias.col as float)) as alias.col from table where table.owalias.coleruserid = alias.col aalias.cold table.posttypeid = alias.col
"declare @alias.col ialias.colt = ##alias.col## select top alias.col table.id as alias.col, sum( case whealias.col table.posttypeid=alias.col thealias.col alias.col else alias.col ealias.cold) as questioalias.coledits, sum( case whealias.col table.posttypeid=alias.col thealias.col alias.col else alias.col ealias.cold) as aalias.colsweredits, coualias.colt(distialias.colct table.id) as alias.col from table ialias.colalias.coler joialias.col table oalias.col table.lasteditoralias.col=table.id where table.owalias.coleralias.col != table.id group by table.id order by alias.col desc"
"select alias.col , sum(case whealias.col tabletypeid = alias.col thealias.col alias.col else alias.col ealias.cold) as closed , sum(case whealias.col tabletypeid = alias.col thealias.col alias.col else alias.col ealias.cold) as reopealias.coled from table where tabletypeid ialias.col (alias.col) group by alias.col havialias.colg sum(case whealias.col tabletypeid = alias.col thealias.col alias.col else alias.col ealias.cold) > alias.col order by sum(case whealias.col tabletypeid = alias.col thealias.col alias.col else alias.col ealias.cold) desc"
"selealias.col alias.col, alias.col(cast(alias.col as float)/alias.col(alias.col,alias.col,alias.col()),alias.col) alias.col, alias.col as [post lialias.colk] from table where posttypealias.col = alias.col aalias.cold owalias.coleruseralias.col = ##useralias.col## order by alias.col desc;"
"select table.id as alias.col, table.score as alias.col, table.viewcount as alias.col, table.reputation as [asker rep] from table inner join table on table.id = table.postid inner join table on table.tagid = table.id inner join table on table.id = table.owneruserid where table.tagname = alias.col and table.closeddate is null and table.communityowneddate is null and table.acceptedanswerid is null and table.score >= ##mintablecore## and table.reputation >= ##minaskerrep## order by table.score desc, table.viewcount desc"
"selealias.col top alias.col owalias.coleruserid as [user lialias.colk], coualias.colt(*) as postcoualias.colt, sum(alias.col) as totalalias.col, cast(sum(alias.col) as float)/cast(coualias.colt(*) as float) as avgalias.col from table where alias.col=alias.col aalias.cold owalias.coleruserid != alias.col group by owalias.coleruserid havialias.colg coualias.colt(*) > alias.col order by avgalias.col desc"
"select top alias.col alias.col as [post lialias.colk], alias.col, viewcoualias.colt from table where alias.col > alias.col aalias.cold viewcoualias.colt <> alias.col aalias.cold parealias.coltalias.col is alias.colull aalias.cold acceptedaalias.colsweralias.col is alias.colull order by viewcoualias.colt asc"
select alias.col from table pt full outer join table pht on alias.col = alias.col full outer join table vt on alias.col = alias.col
"select table.id as alias.col, alias.col, maalias.col(alias.col) as alias.col, maalias.col(locatioalias.col) as locatioalias.col, maalias.col(websiteurl) as website, maalias.col(reputatioalias.col) as rep, coualias.colt(aalias.colswers.id) as aalias.colswers, sum(alias.col) as score, cast(avg(cast(alias.col as float)) as alias.columeric(alias.col,alias.col)) as [avg] from table joialias.col posttable oalias.col posttable.tagid = table.id joialias.col table oalias.col table.id = posttable.postid joialias.col table as aalias.colswers oalias.col alias.col = table.id joialias.col table oalias.col table.id = alias.col where table.tagalias.colame = alias.col aalias.cold alias.col > alias.col group by table.id, alias.col order by sum(alias.col) desc"
select alias.col from table where alias.col = alias.col
"declare alias.col int = ##userid## select distinct alias.col as [post link], alias.col, type.name, alias.col from table p join table my on alias.col = alias.col join table other on alias.col = alias.col join tabletypes type on my.tabletypeid = alias.col where alias.col != alias.col and alias.col = alias.col and alias.col > alias.col and alias.col != alias.col order by alias.col desc"
"select alias.col as alias.col, count(alias.col) as alias.col, alias.col from table p left join table v on alias.col = alias.col where alias.col is not null and (alias.col = alias.col or alias.col is null) and p.tags like alias.col + ##tag:string?learning## + alias.col group by alias.col, alias.col, alias.col order by alias.col asc, alias.col desc"
"select alias.col, count(alias.col) as alias.col from table where alias.col is not null group by alias.col order by alias.col desc;"
"select alias.col as alias.col, alias.col, alias.col as views from table where posttypealias.col = alias.col aalias.cold body like x ... order by views desc"
"set alias.colocoualias.colt oalias.col declare table table (postid ialias.colt, viewcoualias.colt ialias.colt, alias.col ialias.colt) ialias.colsert table select top alias.col alias.col, viewcoualias.colt, alias.col from table p where viewcoualias.colt > alias.col order by viewcoualias.colt desc set alias.colocoualias.colt off select top alias.col sum(case whealias.col viewcoualias.colt > alias.col thealias.col alias.col ealias.cold) as poptable, sum(case whealias.col viewcoualias.colt <= alias.col aalias.cold viewcoualias.colt > alias.col thealias.col alias.col ealias.cold) as hugetable, sum(case whealias.col viewcoualias.colt <= alias.col aalias.cold viewcoualias.colt > alias.col thealias.col alias.col ealias.cold) as largetable, sum(case whealias.col viewcoualias.colt <= alias.col aalias.cold viewcoualias.colt > alias.col thealias.col alias.col ealias.cold) as medtable, sum(case whealias.col viewcoualias.colt <= alias.col aalias.cold viewcoualias.colt > alias.col thealias.col alias.col ealias.cold) as regtable, sum(case whealias.col viewcoualias.colt <= alias.col thealias.col alias.col ealias.cold) as smalltable from table vs"
"select table.*, table.id as alias.col from table joialias.col table oalias.col table.id = table.postid where table.userid = alias.col aalias.cold table.votetypeid = alias.col order by table.creatioalias.coldate desc;"
"select top alias.col table.id, table.displayalias.colame, coualias.colt(table.id) as alias.columtable, sum(table.score) as alias.col, avg(table.score) as alias.col from table ialias.colalias.coler joialias.col table oalias.col table.owalias.coleruserid = table.id where table.posttypeid = alias.col group by table.id, table.displayalias.colame"
"select top alias.col alias.col alias.col, a.creatioalias.coldate, alias.col alias.col, u.reputatioalias.col from table a ialias.colalias.coler joialias.col table q oalias.col (a.parealias.coltid = alias.col) ialias.colalias.coler joialias.col table u oalias.col (a.owalias.coleruserid = alias.col) where alias.col = alias.col aalias.cold alias.col < alias.col aalias.cold alias.col = q.acceptedaalias.colswerid aalias.cold a.owalias.coleruserid=alias.col:ialias.colt## aalias.cold a.owalias.coleruserid != q.owalias.coleruserid order by u.reputatioalias.col asc"
"select top alias.col row_alias.columber() over (order by u.dowalias.colvotes * alias.col.alias.col / alias.col desc), alias.col as [user lialias.colk], format(u.dowalias.colvotes * alias.col.alias.col / upvotes, x) as ratio, alias.col, u.dowalias.colvotes, u.reputatioalias.col, u.lastaccessdate from table as u ialias.colalias.coler joialias.col table as p oalias.col p.owalias.coleruserid = alias.col ialias.colalias.coler joialias.col table as pt oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table as t oalias.col alias.col = alias.col where u.dowalias.colvotes + alias.col > alias.col group by alias.col, alias.col, u.dowalias.colvotes, u.reputatioalias.col, u.lastaccessdate order by u.dowalias.colvotes * alias.col.alias.col / alias.col desc"
"select avg(alias.col) alias.col from (select alias.col, rnasc = row_number() over(order by alias.col), alias.col = row_number() over(order by alias.col desc) from table ) b where rnasc between alias.col - n and alias.col + n"
"select alias.col as alias.col, body, score from table where alias.col(alias.col) < alias.col aalias.cold parealias.coltalias.col is alias.colull"
"set alias.colocoualias.colt oalias.col create table table (alias.col ialias.colt alias.colealias.coltity, [start] datetime, [fialias.colish] datetime) ialias.colsert table select top alias.col alias.colull, alias.colull from table declare alias.col datetime select alias.col = creatioalias.coldate from table where alias.col = (select max(palias.col.alias.col) from table palias.col) update table set [start] = dateadd(d, (alias.col - alias.col) * alias.col, alias.col), [fialias.colish] = dateadd(d, (alias.col - alias.col) * alias.col, alias.col) select start, (select coualias.colt(*) from table where parealias.coltalias.col is alias.colull aalias.cold creatioalias.coldate betweealias.col [start] aalias.cold [fialias.colish] ) as [total questioalias.cols], (select coualias.colt(*) from table where parealias.coltalias.col is alias.colot alias.colull aalias.cold creatioalias.coldate betweealias.col [start] aalias.cold [fialias.colish] ) as [total aalias.colswers] from table"
"select alias.col as alias.col, alias.col alias.col, alias.col alias.col from table q joialias.col table a oalias.col alias.col = alias.col where alias.col >=alias.col aalias.cold alias.col = alias.col or alias.col >alias.col order by alias.col desc, alias.col asc"
"DECLARE @UserId int = ##UserId## DECLARE @Tag nvarchar(N) = X; DECLARE @QuestionsUp int = N; DECLARE @QuestionsDown int = N; DECLARE @AnswersUp int = N; DECLARE @AnswersDown int = N; DECLARE @TagScore int = N; SELECT @QuestionsUp = COUNT(*) FROM Tags INNER JOIN PostTags ON PostTags.TagId = Tags.id INNER JOIN Posts ON Posts.ParentId = PostTags.PostId INNER JOIN Votes ON Votes.PostId = Posts.Id and VoteTypeId = N WHERE Posts.OwnerUserId = @UserId and Posts.PostTypeId = N and Tags.TagName = @Tag SELECT @QuestionsDown = COUNT(*) FROM Tags INNER JOIN PostTags ON PostTags.TagId = Tags.id INNER JOIN Posts ON Posts.ParentId = PostTags.PostId INNER JOIN Votes ON Votes.PostId = Posts.Id and VoteTypeId = N WHERE Posts.OwnerUserId = @UserId and Posts.PostTypeId = N and Tags.TagName = @Tag SELECT @AnswersUp = COUNT(*) FROM Tags INNER JOIN PostTags ON PostTags.TagId = Tags.id INNER JOIN Posts ON Posts.ParentId = PostTags.PostId INNER JOIN Votes ON Votes.PostId = Posts.Id and VoteTypeId = N WHERE Posts.OwnerUserId = @UserId and Posts.PostTypeId = N and Tags.TagName = @Tag SELECT @AnswersDown = COUNT(*) FROM Tags INNER JOIN PostTags ON PostTags.TagId = Tags.id INNER JOIN Posts ON Posts.ParentId = PostTags.PostId INNER JOIN Votes ON Votes.PostId = Posts.Id and VoteTypeId = N WHERE Posts.OwnerUserId = @UserId and Posts.PostTypeId = N and Tags.TagName = @Tag SET @TagScore = @QuestionsUp * N + @QuestionsDown * N + @AnswersUp * N + @AnswersDown * N SELECT @QuestionsUp AS QU, @QuestionsDown AS QD, @AnswersUp AS AU, @AnswersDown AS AD, @TagScore AS Score"
"( select alias.col as type, score, coualias.colt(*) as coualias.colt, str(coualias.colt(*) * alias.col.alias.col / sum(coualias.colt(*)) over(), alias.col, alias.col) + alias.col as percealias.coltage from table where alias.col = alias.col## aalias.cold alias.col = alias.col group by score ) ualias.colioalias.col ( select alias.col as type, score, coualias.colt(*) as coualias.colt, str(coualias.colt(*) * alias.col.alias.col / sum(coualias.colt(*)) over(), alias.col, alias.col) + alias.col as percealias.coltage from table where alias.col = alias.col## aalias.cold alias.col = alias.col aalias.cold (select coualias.colt(*) from table as palias.col where palias.col.acceptedaalias.colswerid = table.id) > alias.col group by score ) order by type, score"
"select case whealias.col acalias.colptedaalias.colswerid is alias.colull thealias.col x else x ealias.cold as acalias.colptflag, avg(cast(u.reputatioalias.col as bigialias.colt)) as acalias.colptrep from table p ialias.colalias.coler joialias.col table u oalias.col alias.col = alias.col where alias.col <> alias.col group by case whealias.col acalias.colptedaalias.colswerid is alias.colull thealias.col x else x ealias.cold"
select name as alias.col from table order by name desc
"declare alias.col int = ##minalias.col## select alias.col as alias.col, alias.col, (select count(*) from table where table.owneruseralias.col = table.alias.col ) as [# table], alias.col / (select count(*) from table where table.owneruseralias.col = table.alias.col ) as alias.col from table where alias.col > alias.col order by alias.col desc"
"with table as ( select alias.col, alias.col=coualias.colt(*) from table where alias.col=alias.col group by alias.col ) select table.id as [user lialias.colk], table.alias.col as [# of table], reputatioalias.col from table left joialias.col table oalias.col alias.col=table.id where table.alias.col > reputatioalias.col aalias.cold table.alias.col > alias.col order by reputatioalias.col / table.alias.col"
"declare @totalquestioalias.cols ialias.colt = (select coualias.colt(alias.col) from table p where alias.col = alias.col); ;with base as ( select case whealias.col p.body like x thealias.col x else x ealias.cold [hasquestioalias.colmark] from table p where alias.col = alias.col ) select b.hasquestioalias.colmark, coualias.colt(b.hasquestioalias.colmark) [coualias.colt], coualias.colt(b.hasquestioalias.colmark) / @totalquestioalias.cols * alias.col [percealias.colt] from base b group by b.hasquestioalias.colmark"
"; with voting as ( SELECT SUM(case votes.votetypeid WHEN N THEN N WHEN N THEN N WHEN N THEN N WHEN N THEN BountyAmount END) as Rep, Votes.CreationDate AS CreationDate, Posts.OwnerUserId FROM Posts INNER JOIN Votes ON Votes.PostId = Posts.Id WHERE ( Posts.CommunityOwnedDate IS NULL ) GROUP BY Votes.CreationDate, Posts.OwnerUserId ), bounty as ( SELECT SUM(-BountyAmount) as Rep, Votes.CreationDate AS CreationDate, Votes.UserID as OwnerUserId FROM Votes WHERE votes.votetypeid = N GROUP BY Votes.CreationDate, Votes.UserID ), sugedit as ( SELECT COUNT(*) * N as Rep , cast(ApprovalDate as date) As CreationDate, OwnerUserId FROM SuggestedEdits WHERE ApprovalDate IS NOT NULL GROUP BY cast(ApprovalDate as date) , OwnerUserId ), topusers as (select top N * from users order by reputation desc) select UserId as [User Link] , Count(RepCapdate) from ( select U.id as userid , coalesce( v.creationdate , b.creationdate , s.creationdate , u.creationdate ) as RepCapDate , sum(v.rep+b.rep+s.rep) as rep from topusers U left outer join voting v on v.owneruserid = u.id left outer join bounty b on b.owneruserid = u.id left outer join sugedit s on s.owneruserid = u.id group by U.id , coalesce(v.creationdate,b.creationdate,s.creationdate, u.creationdate ) having sum(v.rep+b.rep+s.rep) > N ) as repcapperday group by UserId order by Count(RepCapDate) desc"
"select alias.col from table owneruserid >= n group by owneruserid, [table] order by alias.col descalias.col/"
declare alias.col alias declare alias.col alias selealias.col alias.col = cast(count(*) as alias) from table where alias.col is not null selealias.col alias.col = cast(count(*) as alias) from table selealias.col alias.col/alias.col
"select row_number() over(order by alias.col) as alias.col, alias.col as alias.col, alias.col from table where lower(location) like x or upper(location) like x ... order by alias.col desc;"
"create table table ( id int ) create table table ( id int, thread_id int, content varchar(n) ) insert into table values (alias.colyz) insert into table values (alias.colyz) select table.id as alias.col , table.id , table.content from table join table on table.id = table.thread_id select table.id as alias.col , table.id , table.content from table, table where table.id = table.thread_id drop table table drop table table"
"select top alias.col alias.col as [post lialias.colk], alias.col as alias.col, viewcoualias.colt as alias.col, alias.col(day, p.creatioalias.coldate, currealias.colt_timestamp) as age, p.viewcoualias.colt / alias.col(day, p.creatioalias.coldate, currealias.colt_timestamp) as [view rate] from table p where p.viewcoualias.colt > alias.col aalias.cold p.commualias.colityowalias.coleddate is alias.colull order by viewcoualias.colt desc"
"select alias.collialias.cols.col from (select top alias.collialias.cols.col v.crealias.coltioalias.collialias.cols.coldalias.colte, [talias.colble] = coualias.collialias.cols.colt(alias.collialias.cols.col), p.owalias.collialias.cols.coleruserid alias.cols alias.collialias.cols.col, p.owalias.collialias.cols.coleruserid alias.cols alias.collialias.cols.col from talias.colble v joialias.collialias.cols.col talias.colble vt oalias.collialias.cols.col alias.collialias.cols.col = alias.collialias.cols.col joialias.collialias.cols.col talias.colble p oalias.collialias.cols.col alias.collialias.cols.col = alias.collialias.cols.col alias.colalias.collialias.cols.cold vt.alias.collialias.cols.colalias.colme ialias.collialias.cols.col (alias.collialias.cols.colyz) alias.cols alias.col"
"select name, count(*) as alias.col from table where alias.col is null group by name"
"select top alias.col row_alias.columber() over(order by reputatioalias.col desc) as [#], id as [user lialias.colk], reputatioalias.col, locatioalias.col from table where lower(locatioalias.col) like x or upper(locatioalias.col) like x ... or locatioalias.col like x aalias.cold reputatioalias.col >= alias.col order by reputatioalias.col desc;"
"select top alias.col row_alias.columber() over(order by reputatioalias.col desc) as [#], id as [user lialias.colk], reputatioalias.col from table where lower(locatioalias.col) like x or upper(locatioalias.col) like x ... order by reputatioalias.col desc;"
"with usertable as ( select alias.col from table where alias.col = alias.col## ) select alias.col, count(alias.col) from usertable union select alias.col, count(alias.col) from usertable where lasteditdate != alias.col union select alias.col, count(alias.col) from usertable where lasteditoruseralias.col != alias.col;"
"selealias.col alias.col, count(alias.col) from ( selealias.col cast( cast(alias.col(alias.col, alias.col) as varchar) + alias.col + cast(alias.col(alias.col, alias.col) as varchar) + alias.col as date) month, tagname from ( selealias.col alias.col, p.alias.col from table p join table pt on alias.col = alias.col join table t on alias.col = alias.col where alias.col in (alias.colyz) ) alias.col join table pt on alias.col = palias.col join table t on alias.col = alias.col where alias.col like alias.col ) as alias.col group by tagname, month order by month desc, count(alias.col) desc"
"DECLARE @T table(value decimal(N, N)); INSERT @T VALUES (XYZ), (N), (N); SELECT RIGHT(REPLICATE(X, N) + CAST(value AS VARCHAR(N)), N) FROM @T;"
"select table.id as alias.col, table.score as alias.col, table.viewcoualias.colt as alias.col, table.creatioalias.coldate as [asked], table.commealias.coltcoualias.colt as [table], coualias.colt(*) as alias.col, max(table.creatioalias.coldate) as [last], sum(table.score) as alias.col, alias.col( ( select alias.col from table as c where alias.col = table.id aalias.cold alias.col = alias.col:alias.col for xml path(x), type ).value(x,x) ,alias.col,alias.col,x) as [text] from table joialias.col table oalias.col table.id = table.postid where table.userid = alias.col:alias.col aalias.cold table.posttypeid = alias.col aalias.cold table.creatioalias.coldate <= alias.col(day, -##mialias.colage:ialias.colt?alias.col##, getutcdate()) aalias.cold table.score betweealias.col alias.col aalias.cold alias.col aalias.cold (table.score = alias.col or table.owalias.coleruserid is alias.colull) aalias.cold table.aalias.colswercoualias.colt = alias.col aalias.cold (##igalias.coloreviews:ialias.colt?alias.col## > alias.col or alias.col * table.viewcoualias.colt <= alias.col * datediff(day, table.creatioalias.coldate, getutcdate())) aalias.cold table.commealias.coltcoualias.colt > alias.col group by table.id, table.score, table.commealias.coltcoualias.colt, table.viewcoualias.colt, table.creatioalias.coldate order by table.id"
"select coualias.colt(distialias.colct table.id) as tagwikisedited, cast(coalias.colvert(decimal(alias.col,alias.col), coualias.colt(distialias.colct table.id) * alias.col.alias.col) as varchar(alias.col)) + x as progress from table as edit left joialias.col table oalias.col alias.col=table.id where alias.col=alias.col:alias.col aalias.cold table.posttypeid ialias.col (alias.col) aalias.cold alias.col is alias.colot alias.colull"
"selealias.col alias.col as alias.col, alias.col + cast(alias.col as varchar(alias.col)) as alias.col, case valias.col.votetypeid whealias.col alias.col thealias.col alias.col else alias.col ealias.cold as [direalias.colioalias.col], s.creatioalias.coldate as alias.col from table valias.col, table valias.col, table valias.col, table s where valias.col.userid = alias.col## aalias.cold valias.col.suggestededitid = alias.col aalias.cold valias.col.suggestededitid = alias.col aalias.cold valias.col.suggestededitid = alias.col aalias.cold valias.col.votetypeid = valias.col.votetypeid aalias.cold valias.col.id <> valias.col.id aalias.cold valias.col.votetypeid <> valias.col.votetypeid order by alias.col"
declare alias.col ialias.colt = ##userid## selealias.col avg(cast(alias.col as float)) as alias.col from table where table.owalias.coleruserid = alias.col aalias.cold table.posttypeid = alias.col
"declare @tagalias.colame varcharaliasalias.col) declare @tagialias.colput bit declare @city varcharaliasalias.col) set @tagalias.colame = rtrimalias##tagalias.colame:strialias.colg##) if rtrimalias@tagalias.colame) = alias.col set @tagialias.colput = alias.col else set @tagialias.colput = alias.col if @tagialias.colput = alias.col select alias.col + alias.colalias.col + alias.col else with usertablecores as aliasselect a.table, alias.col, alias.col, u.table, sumaliascase alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col ealias.cold) as table from table v ialias.colalias.coler joialias.col table a oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table q oalias.col a.parealias.coltid = alias.col ialias.colalias.coler joialias.col table pt oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table t oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table u oalias.col alias.col = a.table where alias.col ialias.col aliasalias.colyz) aalias.cold alias.col = alias.col aalias.cold aliasa.commualias.colityowalias.coleddate is alias.colull or a.commualias.colityowalias.coleddate > v.creatioalias.coldate) aalias.cold alias@tagialias.colput = alias.col or alias.col = @tagalias.colame) aalias.cold a.table is alias.colot alias.colull aalias.cold loweraliasalias.col) like alias.col ... group by a.table, alias.col, alias.col, u.table) , table as alias select tagalias.colame, table, locatioalias.col, table, raalias.colkalias) over aliaspartitioalias.col by tagalias.colame order by table desc) raalias.colk, table from usertablecores) select tagalias.colame, raalias.colk, table, locatioalias.col, table, table [user lialias.colk], table from table order by tagalias.colame, raalias.colk"
"declare @UserId int = ##UserId##; SELECT TOP N Id AS [Post Link], Len(Body) AS [Characters], Replace(Replace(Body, X, X), X, X) AS [Body], Score As [Total Score] FROM Posts WHERE (OwnerUserID = @UserId) ORDER BY Len(Body) ASC"
"select row_alias.columber() over (order by alias.col*alias.col/alias.col desc) as x, alias.col as [user lialias.colk], alias.col, alias.col, format(alias.col*alias.col/alias.col,x) as x, alias.colscore as x, format(alias.col*alias.colscore/alias.col, x) as x, alias.colscore, format(alias.col*alias.colscore/alias.col, x) as x from ( select alias.col as alias.col, sum(case alias.col whealias.col p.acalias.colptedaalias.colswerid thealias.col alias.col else alias.col ealias.cold) as acalias.colpted, sum(case alias.col whealias.col p.acalias.colptedaalias.colswerid thealias.col a.score else alias.col ealias.cold) as acalias.colptedscore, coualias.colt(*) as total, sum(a.score) as totalscore from table a joialias.col table p oalias.col alias.col = alias.col where alias.col = alias.col group by alias.col) aalias.colswers joialias.col table u oalias.col aalias.colswers.alias.col = alias.col where alias.col>alias.col order by alias.col/alias.col desc"
"select alias.col as alias.col, alias.col as alias.col from table p where alias.col like alias.col and alias.col like alias.col + lower(alias.col) + alias.col"
"selealias.col top alias.col alias.col as [user lialias.colk], avg(a.alias.colormalizedscore) as avgalias.colormalizedscore from table u joialias.col (selealias.col (cast(alias.col as alias) / sum(allalias.col)) * alias.col as alias.colormalizedscore, alias.col, a.owalias.coleruserid from table a joialias.col table q oalias.col a.parealias.coltid = alias.col joialias.col table alla oalias.col alla.parealias.coltid = alias.col where alias.col = alias.col aalias.cold alias.col >= alias.col aalias.cold allalias.col > alias.col group by alias.col, a.owalias.coleruserid, alias.col havialias.colg sum(allalias.col) > alias.col) a oalias.col a.owalias.coleruserid = alias.col group by alias.col havialias.colg coualias.colt(alias.col) > alias.col order by avgalias.colormalizedscore desc"
declare @tabletring nvarchar(n) = ##tagname:string## select alias.col from table p inner join table pt on alias.col = alias.col inner join table t on alias.col = alias.col where alias.col = @tabletring
"DECLARE @ShowScore INT = N; DECLARE @TagN varchar(N) = X; DECLARE @TagN varchar(N) = X; DECLARE @TagN varchar(N) = X; DECLARE @TagN varchar(N) = X; DECLARE @TagN varchar(N) = X; DECLARE @TagN varchar(N) = X; DECLARE @TagN varchar(N) = X; DECLARE @TagN varchar(N) = X; DECLARE @TagN varchar(N) = X; WITH QuestStatsByMonth AS ( SELECT DATEADD (month, DATEDIFF (month, N, q.CreationDate), N) AS [Month], t.TagName, SUM (q.Score) AS TotalScore, COUNT (q.Id) AS NumQuests FROM Posts q INNER JOIN PostTags pt ON q.Id = pt.PostId INNER JOIN Tags t ON t.Id = pt.TagId WHERE q.PostTypeId = N AND t.TagName IN (XYZ) GROUP BY DATEADD (month, DATEDIFF (month, N, q.CreationDate), N), t.TagName ) SELECT q.[Month], CASE @ShowScore WHEN N THEN q.TagName + X ELSE q.TagName + X END AS [Tag], CASE @ShowScore WHEN N THEN SUM (h.TotalScore) ELSE SUM (h.NumQuests) END AS Cumulative FROM QuestStatsByMonth q LEFT JOIN QuestStatsByMonth h ON h.[Month] <= q.[Month] AND h.TagName = q.TagName GROUP BY q.[Month], q.TagName ORDER BY q.[Month], q.TagName"
"declare alias.col int = ##questionnairequestionid## declare alias.col int = ##candidateuserid## select link=concat(x,id) from table where alias.col = alias.col and alias.col = alias.col;"
"select commealias.colt as x, max(creatioalias.coldate) as x, avg(postid) as [post lialias.colk] from table as alias, tabletypes as aliast where alias.col = alias.col aalias.cold tabletypeid = alias.col aalias.cold alias.col <> alias.col aalias.cold alias.col <> alias.col aalias.cold commealias.colt is alias.colot alias.colull group by commealias.colt order by max(creatioalias.coldate)"
"select alias.collialias.cols.col alias.cols alias.collialias.cols.col, alias.collialias.cols.col, alias.collialias.cols.col, alias.collialias.cols.col, alias.collialias.cols.col, alias.collialias.cols.col from ( select alias.collialias.cols.col alias.cols alias.collialias.cols.col, alias.collialias.cols.col alias.cols alias.collialias.cols.col, (calias.colse whealias.collialias.cols.col alias.collialias.cols.col is alias.collialias.cols.colull thealias.collialias.cols.col alias.collialias.cols.col else alias.collialias.cols.col ealias.collialias.cols.cold) alias.cols alias.collialias.cols.col, (select coualias.collialias.cols.colt(*) from talias.colble closed where closed.alias.collialias.cols.col = p.alias.collialias.cols.col alias.colalias.collialias.cols.cold closed.talias.colbletypealias.collialias.cols.col = alias.collialias.cols.col) alias.cols alias.collialias.cols.col, (select coualias.collialias.cols.colt(*) from talias.colble opealias.collialias.cols.coled where opealias.collialias.cols.coled.alias.collialias.cols.col = p.alias.collialias.cols.col alias.colalias.collialias.cols.cold opealias.collialias.cols.coled.talias.colbletypealias.collialias.cols.col = alias.collialias.cols.col) alias.cols alias.collialias.cols.col, lalias.colsteditdalias.colte alias.cols alias.collialias.cols.col, crealias.coltioalias.collialias.cols.coldalias.colte alias.cols alias.collialias.cols.col from talias.colble p where p.posttypealias.collialias.cols.col = alias.collialias.cols.col ) alias.col where alias.collialias.cols.col > alias.collialias.cols.col order by (alias.collialias.cols.col + alias.collialias.cols.col) desc, alias.collialias.cols.col desc, alias.collialias.cols.col desc"
"select top alias.col coualias.colt(*) as postcoualias.colt, alias.col from table group by alias.col order by alias.col desc"
"select top alias.col## alias.col as alias.col, alias.col(alias.col,alias.col) as alias.col, alias.colutatioalias.col as alias.col, alias.col as alias.col, dowalias.colvotes as alias.col from table where alias.colutatioalias.col < ##maxalias.col## aalias.cold alias.col > ##mialias.colalias.col## aalias.cold dowalias.colvotes > ##mialias.coldowalias.colvotes## order by alias.col desc"
"select alias.col as alias.col, text from table where text like alias.col"
"select top alias.col alias.col, u.displayalias.colame, coualias.colt(*) as alias.col from table b ialias.colalias.coler joialias.col table u oalias.col alias.col = alias.col where alias.colame ialias.col (alias.col) group by alias.col, u.displayalias.colame order by alias.col desc"
"select sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold ) as up , sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold ) as dowalias.col from table where alias.col = alias.col"
"select alias.collialias.cols.col alias.cols alias.collialias.cols.col, alias.collialias.cols.col, alias.collialias.cols.col, alias.collialias.cols.col from ( select alias.collialias.cols.col alias.cols alias.collialias.cols.col, alias.collialias.cols.col alias.cols alias.collialias.cols.col, (calias.colse whealias.collialias.cols.col alias.collialias.cols.col is alias.collialias.cols.colull thealias.collialias.cols.col alias.collialias.cols.col else alias.collialias.cols.col ealias.collialias.cols.cold) alias.cols alias.collialias.cols.col, (select coualias.collialias.cols.colt(*) from talias.colble closed where closed.alias.collialias.cols.col = p.alias.collialias.cols.col alias.colalias.collialias.cols.cold closed.talias.colbletypealias.collialias.cols.col = alias.collialias.cols.col) alias.cols alias.collialias.cols.col, (select coualias.collialias.cols.colt(*) from talias.colble opealias.collialias.cols.coled where opealias.collialias.cols.coled.alias.collialias.cols.col = p.alias.collialias.cols.col alias.colalias.collialias.cols.cold opealias.collialias.cols.coled.talias.colbletypealias.collialias.cols.col = alias.collialias.cols.col) alias.cols alias.collialias.cols.col from talias.colble p where p.posttypealias.collialias.cols.col = alias.collialias.cols.col ) alias.col where alias.collialias.cols.col > alias.collialias.cols.col alias.colalias.collialias.cols.cold alias.collialias.cols.col = alias.collialias.cols.col order by (alias.collialias.cols.col + alias.collialias.cols.col) desc, alias.collialias.cols.col desc, alias.collialias.cols.col desc"
"select table.id as alias.col, avg(table.score) as alias.col, coualias.colt(*) as [close table], max(table.creatioalias.coldate) as [last vote], mialias.col(table.creatioalias.coldate) as alias.col from table ialias.colalias.coler joialias.col table oalias.col table.id=table.postid where table.votetypeid=alias.col aalias.cold table.closeddate is alias.colull aalias.cold table.tags like x ... group by table.id order by [close table] desc, [last vote] desc"
"with c as ( select alias.col, (select coualias.colt(alias.col) from table where table.tagid = table.id) as coualias.colt from table where alias.col(alias.col) = alias.col ) select (case whealias.col groupialias.colg(alias.col) = alias.col thealias.col x else alias.col ealias.cold) as x, sum(coualias.colt) as x from c group by alias.col with rollup order by (case whealias.col alias.col is alias.colull thealias.col alias.col else alias.col ealias.cold), sum(coualias.colt)"
"select top alias.col alias.col as [post lialias.colk], creatioalias.coldate from table where body like x"
"create table table ( tablelistid ialias.colt, periodid ialias.colt, alias.col datetime, periodealias.cold datetime, table ialias.colt) create table table ( tablelistid ialias.colt, table ialias.colt, period datetime ) ialias.colsert ialias.colto table values (alias.colyz), coalias.colvert(datetime, alias.col, alias.col),alias.col) ialias.colsert ialias.colto table values (alias.colyz), coalias.colvert(datetime, alias.col, alias.col),alias.col) ialias.colsert ialias.colto table values (alias.colyz), coalias.colvert(datetime, alias.col, alias.col),alias.col) ialias.colsert ialias.colto table values (alias.colyz), coalias.colvert(datetime, alias.col, alias.col),alias.col) ialias.colsert ialias.colto table values (alias.colyz), coalias.colvert(datetime, alias.col, alias.col),alias.col) ialias.colsert ialias.colto table values (alias.colyz), coalias.colvert(datetime, alias.col, alias.col),alias.col) declare tablestart datetime, tableealias.cold datetime select tablestart = coalias.colvert(datetime, alias.col, alias.col) select tableealias.cold = coalias.colvert(datetime, alias.col, alias.col) declare table datetime select table = tablestart declare @table ialias.colt, @tablelistid ialias.colt while (table < tableealias.cold) begialias.col select @table = alias.colull, @tablelistid = alias.colull ialias.colsert ialias.colto table select tablelistid, table, table from table where table >= alias.col aalias.cold table < periodealias.cold select table = alias.col(alias.col, alias.col, table) ealias.cold select tablelistid, sum(table) alias.col from table group by tablelistid drop table table drop table table"
"selealias.col top alias.col table.id, displayalias.colame, coualias.colt(table.id) as aalias.colswers, avg(cast(alias.col as float)) as averageaalias.colsweralias.col from table ialias.colalias.coler joialias.col table oalias.col table.id = owalias.coleruserid where alias.col = alias.col group by table.id, displayalias.colame havialias.colg coualias.colt(table.id) > alias.col order by averageaalias.colsweralias.col desc"
"select alias.col as alias.col, alias.col, alias.col from table as p inner join table as u on alias.col = alias.col where alias.col like alias.col and alias.col not like alias.col and alias.col not like alias.col and alias.col not like alias.col"
"select alias.col, alias.col from table q joialias.col table a oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col is alias.colull aalias.cold a.posttypeid = alias.col aalias.cold a.score >= alias.col aalias.cold a.owalias.coleruserid = ##userid## aalias.cold isalias.colull(q.owalias.coleruserid, alias.col) <> a.owalias.coleruserid aalias.cold exists(select alias.col from table ph where ph.tabletypeid ialias.col (alias.col) aalias.cold alias.col = alias.col aalias.cold alias.col = a.owalias.coleruserid)"
select alias.col from table
"select alias.collialias.cols.col, alias.collialias.cols.col, alias.collialias.cols.col falias.collialias.cols.colom ( select alias.collialias.cols.col, alias.collialias.cols.col, alias.collialias.cols.col, alias.collialias.cols.col falias.collialias.cols.colom ( select alias.collialias.cols.col, alias.collialias.cols.col, alias.collialias.cols.col, alias.collialias.cols.col alias.cols alias.collialias.cols.col, coualias.collialias.cols.colt(alias.collialias.cols.col) alias.cols postcoualias.collialias.cols.colt falias.collialias.cols.colom ( select alias.collialias.cols.col, alias.collialias.cols.col, alias.collialias.cols.col, alias.col.displalias.colyalias.collialias.cols.colalias.colme falias.collialias.cols.colom ( select alias.collialias.cols.col, u.displalias.colyalias.collialias.cols.colalias.colme, alias.collialias.cols.col, coalias.collesce(p.palias.colalias.collialias.cols.colealias.collialias.cols.coltid, alias.collialias.cols.col) alias.cols alias.collialias.cols.col, alias.collialias.cols.colow_alias.collialias.cols.columalias.colealias.collialias.cols.col() ovealias.collialias.cols.col(palias.colalias.collialias.cols.coltitioalias.collialias.cols.col alias.coly alias.collialias.cols.col, alias.collialias.cols.col oalias.collialias.cols.coldealias.collialias.cols.col alias.coly p.calias.collialias.cols.colealias.coltioalias.collialias.cols.coldalias.colte) alias.cols alias.collialias.cols.col falias.collialias.cols.colom talias.colalias.colle u ialias.collialias.cols.colalias.collialias.cols.colealias.collialias.cols.col joialias.collialias.cols.col talias.colalias.colle p oalias.collialias.cols.col p.owalias.collialias.cols.colealias.collialias.cols.colusealias.collialias.cols.colid = alias.collialias.cols.col whealias.collialias.cols.cole alias.collialias.cols.col ialias.collialias.cols.col (alias.collialias.cols.col) ) alias.col whealias.collialias.cols.cole alias.col.alias.collialias.cols.col <= alias.collialias.cols.col ) alias.col ialias.collialias.cols.colalias.collialias.cols.colealias.collialias.cols.col joialias.collialias.cols.col talias.colalias.colle pt oalias.collialias.cols.col pt.alias.collialias.cols.col = alias.col.alias.collialias.cols.col ialias.collialias.cols.colalias.collialias.cols.colealias.collialias.cols.col joialias.collialias.cols.col talias.colalias.colle t oalias.collialias.cols.col alias.col = pt.alias.collialias.cols.colid whealias.collialias.cols.cole alias.collialias.cols.col=alias.col galias.collialias.cols.coloup alias.coly alias.collialias.cols.col, alias.collialias.cols.col, alias.collialias.cols.col, alias.collialias.cols.col ) c ) d whealias.collialias.cols.cole alias.collialias.cols.col < alias.collialias.cols.col"
"declare @alias.col ialias.colt = alias.col select top alias.col alias.col as [post lialias.colk], alias.col, text from table where alias.col = @alias.col order by alias.col desc"
"declare @site nvarchar(n) = ##site:string?scifi## declare @command nvarchar(n) = xxxxxxxx + @site + xxxxxxxxxxxxxxx + @site + xx create table table (site nvarchar(n), count int, last datetime); exec sp_msforeachdb @command select x + lower(site) + x + site as site, count, last from table where count > n order by count desc, site;"
"select alias.col, avg(alias.col(alias.col)) as alias.col from table u inner join table p on alias.col = alias.col group by alias.col"
"declare alias.col ialias.colt = ##userid## select alias.col as alias.col, case whealias.col q.acalias.colptedaalias.colswerid=alias.col thealias.col x ealias.cold as acalias.colpted, alias.col from table q ialias.colalias.coler joialias.col table a oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col order by alias.col desc, a.creatioalias.coldate desc"
declare alias.col ialias.colt = ##userid## select sum(case whealias.col alias.col = alias.col thealias.col alias.col whealias.col alias.col=alias.col thealias.col alias.col whealias.col alias.col=alias.col thealias.col alias.col else alias.col ealias.cold) from table v ialias.colalias.coler joialias.col table p oalias.col alias.col = alias.col where p.owalias.coleruserid = alias.col
"select table.id as alias.col, body from table left joialias.col table oalias.col table.id=table.owalias.coleruserid where alias.col = alias.col aalias.cold locatioalias.col like upper(x + ##yourlocatioalias.col:strialias.colg## + x) order by table.creatioalias.coldate desc"
"select alias.col as alias.col, coualias.colt(alias.col) from table where posttypealias.col = alias.col aalias.cold (body like x) group by alias.col havialias.colg coualias.colt(alias.col) > alias.col order by coualias.colt(alias.col) desc;"
"select top alias.col alias.col, displayalias.colame, reputatioalias.col, alias.col, locatioalias.col from table where locatioalias.col like alias.colx aalias.cold locatioalias.col alias.colot like alias.colx order by reputatioalias.col desc"
"declare @alias.col int = ##alias.col## select count(*) as alias.col, alias.col from table where alias.col = @alias.col group by alias.col order by alias.col desc"
"declare table table ( section varchar(n), department varchar(n), salesamount float ) insert into table select table,table,table union select table,table,table union select table,table,table union select table,table,table union select table,table,table union select table,table,table union select table,table,table union select table,table,table union select table,table,table union select table,table,table union select table,table,table union select table,table,table union select table,table,table union select table,table,table ;with cte as ( select department, [secn] , [secn] , [secn] , [secn] from (select section, department, salesamount from table) as sourcetable pivot( sum([salesamount]) for [section] in (tableyz) ) as pivottable ) select a.secn secnbpo, a.secn secnbpo, a.secn secnbpo, a.secn secnbpo, b.secn secnit, b.secn secnit, b.secn secnit, b.secn secnit from cte a, cte b where a.department = table and b.department = table"
"select day, count(alias.col) from table pwd left join table p on alias.col = alias.col right join (select distinct datefromparts(year(creationdate), month(creationdate), n) as day from table) as dates on month(alias.col) = month(day) and year(alias.col) = year(day) where alias.col is null group by day order by day desc"
"declare alias.col ialias.colt = ##userid## select top alias.col alias.col as [post lialias.colk], p.viewcoualias.colt from table p where alias.col = alias.col aalias.cold p.owalias.coleruserid = alias.col order by p.viewcoualias.colt desc"
"create table #t( alias.col [int] not null, alias.col [image] null ) insert into #t (alias.col ,alias.col) values (xyz) insert into #t (alias.col ,alias.col) values (xyz) select alias.col, convert(varchar(max), convert(varbinary(max), cpphoto)) from #t"
"select table.id as alias.col, alias.col(table.body) as [alias.colgth], table.score as alias.col, case whealias.col table.id = questioalias.col.acalias.colptedaalias.colswerid thealias.col alias.col else alias.col ealias.cold as [acalias.colpted], case whealias.col table.body like alias.col thealias.col alias.col + right(table.body, alias.col(table.body)-charialias.coldealias.col(alias.col, table.body, alias.col)) else right(table.body, alias.col(table.body)alias.col) ealias.cold as [body], table.commealias.coltcoualias.colt as [#com], table.owalias.coleruserid as [user lialias.colk] from table joialias.col table as questioalias.col oalias.col table.parealias.coltid=alias.col where table.posttypeid = alias.col aalias.cold questioalias.col.tags like alias.col order by -alias.col(table.body) desc"
"select top alias.col a.owalias.coleruserid as [user lialias.colk], roualias.cold((coualias.colt(alias.col) / (select coualias.colt(*) from table where alias.col = alias.col) * alias.col), alias.col) as acceptedpercealias.coltage from table q ialias.colalias.coler joialias.col table a oalias.col q.acceptedaalias.colswerid = alias.col aalias.cold a.alias.col = alias.col group by a.owalias.coleruserid order by acceptedpercealias.coltage desc"
";with CountOfCreatedTags as ( select t.Id [tagId], count(N) [count] from Tags t inner join Posts p on p.Id = t.WikiPostId inner join PostTags pt on pt.TagId = t.Id where p.OwnerUserId = ##UserId## group by t.Id having count(N) >= N ) select t.TagName, coct.[count] [QuestionCount] from CountOfCreatedTags coct inner join Tags t on coct.tagId = t.Id order by coct.[count] desc"
"select alias.col, alias.col(alias.col) as questionalias.colgth, alias.col(alias.col) as titlealias.colgth , alias.col(second, alias.col, a.creationdate) as responsetime from table a join table p on alias.col = alias.col where alias.col >= alias.col(year, n, getdate()) and alias.col is not null"
"with table as ( selealias.col alias.col, alias.col, coualias.colt( alias.col ) as alias.col, coualias.colt( alias.col ) as alias.col from table u joialias.col table a oalias.col alias.col = alias.col left outer joialias.col table q oalias.col alias.col = alias.col group by alias.col, alias.col ) selealias.col top alias.col alias.col as [user lialias.colk], alias.col, u.alias.col, roualias.cold((cast(u.alias.col as float) / u.alias.col)*alias.col,alias.col) as acceptedaalias.colswerpercealias.coltage from table u where u.alias.col > alias.col order by acceptedaalias.colswerpercealias.coltage desc"
"select top alias.col alias.col as [user lialias.colk], displayalias.colame, reputatioalias.col, alias.col, locatioalias.col from table where locatioalias.col like alias.colx order by reputatioalias.col desc"
select alias.col as alias.col from table a where a.owalias.coleruseralias.col = ##useralias.col## aalias.cold a.posttypealias.col = alias.col aalias.cold alias.col <> (select acceptedaalias.colsweralias.col from table q where q.alias.col = a.parealias.coltalias.col) order by alias.col;
declare alias.col int = n declare alias.col int = n select alias.col as alias.col from table as a inner join table as q on alias.col = alias.col where alias.col = alias.col and alias.col = alias.col and alias.col = alias.col## and alias.col is null and q.answercount > n and a.score > (select max(alias.col) from table as s where alias.col != alias.col and alias.col = alias.col)
"select alias.col, sum(case whealias.col alias.col(day, p.lasteditdate, getdate()) > alias.col thealias.col alias.col ealias.cold) as active_last_thirty_days, sum(case whealias.col alias.col(day, p.lasteditdate, getdate()) > alias.col thealias.col alias.col ealias.cold) as active_last_sixty_days, sum(case whealias.col alias.col(day, p.lasteditdate, getdate()) > alias.col thealias.col alias.col ealias.cold) as active_last_alias.colialias.colety_days, sum(case whealias.col alias.col(day, p.lasteditdate, getdate()) > alias.col thealias.col alias.col ealias.cold) as active_last_alias.col_days, sum(case whealias.col alias.col(year, p.lasteditdate, getdate()) > alias.col thealias.col alias.col ealias.cold) as active_last_year from table p left joialias.col table v oalias.col alias.col = alias.col where alias.col = alias.col group by alias.col havialias.colg alias.col <= alias.col aalias.cold alias.col >= alias.col order by alias.col asc"
"select top alias.col alias.col as alias.col, mialias.col(alias.col) as alias.col, coualias.colt(case ph.tabletypeid whealias.col alias.col thealias.col alias.col ealias.cold) as [titleeditcoualias.colt], coualias.colt(case ph.tabletypeid whealias.col alias.col thealias.col alias.col ealias.cold) as [bodyeditcoualias.colt], coualias.colt(case ph.tabletypeid whealias.col alias.col thealias.col alias.col ealias.cold) as [retagcoualias.colt], coualias.colt(*) as [editcoualias.colt] from table ph, table p where alias.col = alias.col aalias.cold (alias.col = alias.col or alias.col = alias.col) aalias.cold (ph.tabletypeid = alias.col or ph.tabletypeid = alias.col or ph.tabletypeid = alias.col) group by alias.col"
"select top alias.col coualias.colt(alias.col) as alias.col, alias.col as [post lialias.colk],alias.col from table v ialias.colalias.coler joialias.col table p oalias.col alias.col=alias.col where alias.col = alias.col aalias.cold alias.col=alias.col group by alias.col,alias.col order by alias.col asc"
"set alias.colocoualias.colt oalias.col create table table (alias.col ialias.colt alias.colealias.coltity, [start] datetime, [fialias.colish] datetime) ialias.colsert table select top alias.col alias.colull, alias.colull from table declare alias.col datetime select alias.col = creatioalias.coldate from table where alias.col = (select max(palias.col.alias.col) from table palias.col) update table set [start] = dateadd(d, (alias.col - alias.col) * alias.col, alias.col), [fialias.colish] = dateadd(d, (alias.col - alias.col) * alias.col, alias.col) select start, (select coualias.colt(*) from table where parealias.coltalias.col is alias.colull aalias.cold creatioalias.coldate betweealias.col [start] aalias.cold [fialias.colish] ) as [total questioalias.cols], (select coualias.colt(*) from table where parealias.coltalias.col is alias.colot alias.colull aalias.cold creatioalias.coldate betweealias.col [start] aalias.cold [fialias.colish] ) as [total aalias.colswers] from table"
"select top alias.col alias.col, alias.col = sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold), dowalias.col = sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) from table where alias.col ialias.col (alias.col) groalias.col by alias.col"
"select isalias.colull(alias.col, alias.col), isalias.colull(alias.col, alias.col), alias.col, alias.col, alias.col, alias.col/alias.col as alias.col from ( select alias.col(year, table.creatioalias.coldate) year, alias.col(moalias.colth, table.creatioalias.coldate) moalias.colth, coualias.colt(table.id) questioalias.cols from table where alias.col = alias.col group by alias.col(year, table.creatioalias.coldate), alias.col(moalias.colth, table.creatioalias.coldate) ) as p left joialias.col ( select alias.col(year, table.creatioalias.coldate) year, alias.col(moalias.colth, table.creatioalias.coldate) moalias.colth, coualias.colt(table.id) boualias.colties, sum(table.boualias.coltyamoualias.colt) amoualias.colt from table where alias.col = alias.col group by alias.col(year, table.creatioalias.coldate), alias.col(moalias.colth, table.creatioalias.coldate) ) as v oalias.col alias.col = alias.col aalias.cold alias.col = alias.col order by alias.col, alias.col"
"select top alias.col coualias.colt(alias.col) as alias.col,alias.col as [post lialias.colk],alias.col from table v ialias.colalias.coler joialias.col table p oalias.col alias.col=alias.col where alias.col = alias.col aalias.cold alias.col=alias.col aalias.cold p.creatioalias.coldate betweealias.col alias.col aalias.cold alias.col group by alias.col,alias.col order by alias.col desc"
"selealias.col toalias alias.col alias.col as [aliasost lialias.colk], cast(alias.col as alias.colvarchar(alias.col)), lealias.col(alias.col) as alias.col, alias.creatioalias.coldate from table as alias, table as q where alias.col = alias.col aalias.cold ualiasaliaser(cast(alias.col as alias.colvarchar(alias.col))) like cast(alias.col as alias.colvarchar(alias.col)) aalias.cold lealias.col(alias.col) > alias.col"
"selecalias.col alias.col, alias.col, alias.col.coualias.colalias.col from alias.colable as palias.col joialias.col alias.colable as p oalias.col palias.col.posalias.colid = alias.col aalias.cold p.posalias.colalias.colypeid = alias.col aalias.cold p.creaalias.colioalias.coldaalias.cole > daalias.coleadd(day,-##daysagosalias.colaralias.col##,gealias.coldaalias.cole()) aalias.cold p.creaalias.colioalias.coldaalias.cole < daalias.coleadd(day,-##daysagoealias.cold##,gealias.coldaalias.cole()) joialias.col alias.colable as alias.col oalias.col palias.col.alias.colagid = alias.col aalias.cold (p.alias.colialias.colle like alias.col + alias.col or p.alias.colialias.colle like alias.col + alias.col or p.alias.colialias.colle like alias.col + alias.col or p.alias.colialias.colle like alias.col + alias.col or p.alias.colialias.colle like alias.col + alias.col + alias.col or p.alias.colialias.colle like alias.col + alias.col + alias.col)"
"DECLARE @UrlList nvarchar(MAX); SET @UrlList = X DECLARE @Delimiter nchar(N); SET @Delimiter = X; WITH Split(stpos,endpos) AS( SELECT N AS stpos, CHARINDEX(@Delimiter,@UrlList) AS endpos UNION ALL SELECT CAST(endpos+N as int), CHARINDEX(@Delimiter,@UrlList,endpos+N) FROM Split WHERE endpos > N ), Urls AS ( SELECT X = ROW_NUMBER() OVER (ORDER BY (SELECT N)), X = SUBSTRING(@UrlList,stpos,COALESCE(NULLIF(endpos,N),LEN(@UrlList)+N)-stpos) FROM Split ), IDs AS ( SELECT DISTINCT userID = substring(parturl, N, CASE patindex(X, parturl) WHEN N THEN N ELSE patindex(X, parturl) END) FROM urls inner join ( SELECT id, replace(url, left(url, patindex(X,url)N), X ) as parturl FROM urls ) firstclean ON urls.id = firstclean.id ) SELECT answer.OwnerUserId As [User Link], X + Cast(answer.OwnerUserId as nvarchar(N)) As [Permalink], Users.Reputation, count(answer.id) AS [Total Answers], count(question.id) AS [Accepted Answers] FROM Posts answer LEFT OUTER JOIN Posts question ON question.AcceptedAnswerId = answer.id INNER JOIN Users ON answer.OwnerUserId = Users.id WHERE answer.OwnerUserId in (select UserID from IDs) AND answer.postTypeId = N GROUP BY answer.OwnerUserId, Users.Reputation"
"select top alias.col alias.col, displayalias.colame, reputatioalias.col, alias.col, locatioalias.col from table where locatioalias.col like alias.colx order by reputatioalias.col desc"
select alias.col from table where alias.col = alias.col aalias.cold alias.col = alias.col
"selealias.col ualias.col.emailhash, coualias.colt(alias.col) as alias.col, ( selealias.col cast(alias.col as varchar) + alias.col + alias.col + alias.col + cast(alias.col as varchar) + alias.col from table ualias.col where ualias.col.emailhash = ualias.col.emailhash order by alias.col desc for alias.colml path (alias.col) ) as idsaalias.coldalias.colames, ( selealias.col sum(alias.col) from table ualias.col where ualias.col.emailhash = ualias.col.emailhash ) as alias.col from table ualias.col where ualias.col.emailhash is alias.colot alias.colull aalias.cold (selealias.col coualias.colt(*) from table ualias.col where ualias.col.emailhash = ualias.col.emailhash) > alias.col group by ualias.col.emailhash havialias.colg coualias.colt(alias.col) > alias.col order by alias.col desc"
"select alias.col as alias.col, body from table where alias.col > alias.col aalias.cold body like x ... aalias.cold lealias.col(body) < alias.col order by alias.col desc"
"selealias.col alias.col, count(alias.col) from (selealias.col cast(alias.col(year, creationdate) + alias.col + alias.col(month, creationdate) + alias.col as date) as [month], t.alias.col from table p join table pt on alias.col = alias.col join table t on alias.col = alias.col ) as alias.col where alias.col in (alias.colyz) group by alias.col, [month]"
"DECLARE @tagName varchar(N) DECLARE @tagInput bit SET @tagname = rtrim(##TagName:string##) IF RTRIM(@tagname) = X SET @tagInput = N ELSE SET @tagInput = N ;WITH UserTagScores as (SELECT a.OwnerUserId, t.TagName, SUM(CASE v.VoteTypeID WHEN N THEN N WHEN N THEN N END) as score FROM votes v INNER JOIN Posts a ON v.PostID = a.ID INNER JOIN Posts q ON a.parentId = q.id INNER JOIN PostTags pt ON q.id = pt.PostId INNER JOIN Tags T ON pt.TagId = t.id INNER JOIN Users U ON a.OwnerUserId = U.id WHERE v.voteTypeId in (XYZ) and a.PostTypeID = N AND (a.CommunityOwnedDate is null or a.CommunityOwnedDate > v.CreationDate) AND (@tagInput = N or t.TagName = @TagName) AND a.OwnerUserId is not null and lower(location) like X GROUP BY a.OwnerUserId, t.TagName) , userTagRank as ( SELECT TagName, OwnerUserId, rank() over (partition by TagName order by score desc) rank FROM UserTagScores) SELECT TagName, Rank FROM userTagRank WHERE OwnerUserId = ##UserId## ORDER BY TagName"
"select top alias.col alias.col as [post lialias.colk], alias.col, lastactivitydate from table where lastactivitydate> alias.col aalias.cold alias.col is alias.colot alias.colull aalias.cold alias.col alias.colot like alias.col aalias.cold lower(alias.col) like alias.col ... order by lastactivitydate desc ;"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where (lower(location) like x or upper(location) like x ... or location like x or lower(location) like x ... or upper(location) like x ... or location like x) and alias.col >= n order by alias.col desc;"
"select alias.col alias.col, alias.col, alias.col, location from table where location like x order by alias.col desc"
"select alias.col as alias.col, alias.col, alias.col from table q joialias.col table a oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col is alias.colull aalias.cold a.posttypeid = alias.col aalias.cold alias.col >= alias.col aalias.cold a.owalias.coleruserid = ##userid## aalias.cold isalias.colull(q.owalias.coleruserid, alias.col) <> a.owalias.coleruserid aalias.cold exists(select alias.col from table ph where ph.tabletypeid ialias.col (alias.col) aalias.cold alias.col = alias.col aalias.cold alias.col = a.owalias.coleruserid aalias.cold abs(alias.col(alias.col, ph.creatioalias.coldate, alias.col)) < alias.col) order by alias.col desc"
"select alias.col, alias.col from (select alias.col(alias.col) over (order by alias.col desc) as percealias.col, alias.col, alias.col from table where alias.col >= alias.col) as alias.col where percealias.col = ##selecttoppercealias.col?alias.col##"
"selealias.col alias.col, sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) questioalias.cols, sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) aalias.colswers from ( selealias.col cast( cast(alias.col(alias.col, creatioalias.coldate) as varchar) + alias.col + cast(alias.col(alias.col, creatioalias.coldate) as varchar) + alias.col as datetime) alias.col, alias.col from table p ) as alias.col group by alias.col order by alias.col asc"
"declare alias.col bigialias.colt declare alias.col bigialias.colt declare @topalias.colalias.coltotal decimal(alias.col,alias.col) declare @bottomalias.colalias.coltotal decimal(alias.col,alias.col) selealias.col alias.col = sum(alias.col) from table selealias.col alias.col = coualias.colt(alias.col) from table where alias.col > alias.col selealias.col @topalias.colalias.coltotal = sum(alias.col) from (selealias.col top(alias.col) percealias.colt alias.col as alias.col from table where alias.col > alias.col order by alias.col desc) as alias.col selealias.col @bottomalias.colalias.coltotal = sum(alias.col) from (selealias.col top(alias.col) percealias.colt alias.col as alias.col from table where alias.col > alias.col order by alias.col) as alias.col selealias.col alias.col totalalias.col, alias.col usercoualias.colt, @topalias.colalias.coltotal topalias.colalias.coltotal, @bottomalias.colalias.coltotal bottomalias.colalias.coltotal, cast((@topalias.colalias.coltotal/alias.col)*alias.col as decimal(alias.col,alias.col)) topalias.colpercealias.coltageofalias.col, cast((@bottomalias.colalias.coltotal/alias.col)*alias.col as decimal(alias.col,alias.col)) bottomalias.colpercealias.coltageofalias.col"
"select top alias.col alias.col as [user lialias.colk], u.reputatioalias.col, sum(alias.col) / coualias.colt(alias.col) as alias.col from table p ialias.colalias.coler joialias.col table u oalias.col p.owalias.coleruserid = alias.col where alias.col ialias.col (alias.col) aalias.cold p.commualias.colityowalias.coleddate is alias.colull group by alias.col, u.reputatioalias.col havialias.colg sum(alias.col) / coualias.colt(alias.col) > alias.col aalias.cold coualias.colt(alias.col) < alias.col aalias.cold u.reputatioalias.col > alias.col order by sum(alias.col) / coualias.colt(alias.col) desc"
"declare alias.col ialias.colt = ##userid## select alias.col, coualias.colt(*), alias.col - coualias.colt(*) as alias.col, alias.col - coualias.colt(*) as alias.col from table ialias.colalias.coler joialias.col posttable oalias.col posttable.tagid = table.id ialias.colalias.coler joialias.col table oalias.col table.parealias.coltid = posttable.postid ialias.colalias.coler joialias.col table oalias.col table.postid = table.id aalias.cold alias.col = alias.col where table.owalias.coleruserid = alias.col group by alias.col order by alias.col"
"select alias.col as alias.col, count(alias.col) as table from table p inner join table pt on alias.col = alias.col inner join table t on alias.col = alias.col where alias.col = alias.col group by alias.col having count(alias.col) > n order by count(alias.col) desc"
select table.* from table inner join posttable on table.id = posttable.tagid where table.tagname in (alias.col)
";with QueuedQuestions as ( select p.Id from Posts p inner join Votes v on v.PostId = p.Id and v.VoteTypeId = N and ( p.ViewCount < N ) where p.PostTypeId = N and p.ClosedDate is null group by p.Id having count(p.Id) >= N ) select t.TagName, count(t.TagName) [question count] from QueuedQuestions qq inner join PostTags pt on qq.Id = pt.PostId inner join Tags t on pt.TagId = t.Id group by t.TagName order by [question count] desc"
"with table as ( select alias.col, ( select coutablet(*) as ctablet from table pt joitable table pp otable alias.col = alias.col joitable table pa otable pa.paretabletid = alias.col joitable table v otable alias.col = alias.col where alias.col = alias.col atabled alias.col = table ) as uptable, ( select coutablet(*) as ctablet from table pt joitable table pp otable alias.col = alias.col joitable table pa otable pa.paretabletid = alias.col joitable table v otable alias.col = alias.col where alias.col = alias.col atabled alias.col = table ) as dowtabletable from table t cross apply ( select coutablet(*) as ctablet from table pt where alias.col = alias.col havitableg coutablet(*) >= table ) pt ) select tagtableame as [table], uptable as [uptable], dowtabletable as [dowtabletable], uptable/dowtabletable as alias.col from table order by table asc, table desc"
"Declare @FrDate datetime,@ToDate datetime Set @FrDate =X Set @ToDate =X ;WITH AllMonths AS ( SELECT DATEADD(day, Nums.n , @FrDate) AS dt FROM (VALUES(N), (N), (N), (N), (N), (N), (N), (N), (N), (N), (N), (N)) AS Nums(N) ) SELECT DISTINCT DATENAME(MONTH, dt) AS Result FROM AllMonths WHERE dt BETWEEN @frDate AND @ToDate"
"select top alias.col alias.col as [post lialias.colk], alias.col from table where alias.col = ##alias.col## order by alias.col desc"
"select alias.col, alias.col as alias.col, alias.col, isnull(alias.col, alias.col) as alias.col from table b left outer join table a on alias.col = alias.col where alias.col like alias.col --at least one of which isnalias.colhttp://i', order by alias.col desc"
"select alias.col as alias.col, alias.col, alias.col from table p left joialias.col table pp oalias.col alias.col=alias.col where alias.col is alias.colot alias.colull aalias.cold alias.col(alias.col) < alias.col aalias.cold alias.col like alias.col ..."
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x order by alias.col desc;"
"select top alias.col table.alias.col as [user lialias.colk], badgecoualias.colt as [popular questioalias.cols], questioalias.colcoualias.colt as [total questioalias.cols], coalias.colvert(float, badgecoualias.colt)/questioalias.colcoualias.colt as alias.col from table ialias.colalias.coler joialias.col ( select alias.col, coualias.colt(alias.col) as badgecoualias.colt from table where alias.colame = alias.col group by alias.col ) as pop oalias.col table.alias.col = pop.alias.col ialias.colalias.coler joialias.col ( select owalias.coleralias.col, coualias.colt(alias.col) as questioalias.colcoualias.colt from table where posttypealias.col = alias.col group by owalias.coleralias.col ) as q oalias.col table.alias.col = q.owalias.coleralias.col where badgecoualias.colt >= alias.col order by alias.col desc;"
"declare alias.col ialias.colt = ##userid## select alias.col, coualias.colt(*) as uptable, alias.col(alias.col * coualias.colt(*) / alias.col, alias.col) as broalias.colze, alias.col(alias.col * coualias.colt(*) / alias.col, alias.col) as alias.col, alias.col(alias.col * coualias.colt(*) / alias.col, alias.col) as alias.col from table ialias.colalias.coler joialias.col posttable oalias.col posttable.tagid = table.id ialias.colalias.coler joialias.col table oalias.col table.parealias.coltid = posttable.postid ialias.colalias.coler joialias.col table oalias.col table.postid = table.id aalias.cold alias.col = alias.col where table.owalias.coleruserid = alias.col aalias.cold table.commualias.colityowalias.coleddate is alias.colull group by alias.col order by uptable desc"
"with table as ( select alias.col, coualias.colt(alias.col) as alias.col from table group by alias.col ), table as ( select q.alias.col as alias.col, coualias.colt(a.alias.col) as aalias.col, sum(ac.alias.col) as acalias.col from table q ialias.colalias.coler joialias.col table a oalias.col q.alias.col = a.parealias.coltalias.col ialias.colalias.coler joialias.col table ac oalias.col a.alias.col = ac.alias.col where q.posttypealias.col = alias.col aalias.cold a.posttypealias.col = alias.col group by q.alias.col ) select top alias.col s.alias.col as [post lialias.colk], s.aalias.col as [aalias.colswers], (s.acalias.col + qc.alias.col) as [table] from table s ialias.colalias.coler joialias.col table qc oalias.col s.alias.col = qc.alias.col order by (s.aalias.col + s.acalias.col + qc.alias.col) desc ;"
"declare alias.col ialias.colt = ##userid## select top alias.col p.owalias.coleruserid as [user lialias.colk], coualias.colt(*) as [favorite coualias.colt], alias.col as [post lialias.colk] from table v joialias.col table p oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col group by p.owalias.coleruserid, alias.col order by [favorite coualias.colt] desc"
select count(*) from table where (lower(location) like x or upper(location) like x ...) and reputation > n
"with table as ( select top alias.col table.id, alias.col, reputatioalias.col, displayalias.colame, alias.col, locatioalias.col from table ialias.colalias.coler joialias.col table as a oalias.col table.id = a.owalias.coleruserid ialias.colalias.coler joialias.col table as q oalias.col alias.col = a.parealias.coltid ialias.colalias.coler joialias.col table oalias.col table.postid = alias.col ialias.colalias.coler joialias.col table oalias.col table.id = table.tagid aalias.cold table.tagalias.colame ialias.col (alias.col) where locatioalias.col like x or locatioalias.col like x ... ) select distialias.colct * from table"
"select top alias.col tagalias.colame as alias.col, ualias.colaalias.colsweredcoualias.colt as [ualias.colaalias.colswered], aalias.colsweredcoualias.colt as [aalias.colswered], ((alias.col.alias.col * ualias.colaalias.colsweredcoualias.colt) / aalias.colsweredcoualias.colt) as alias.col from ( select tagalias.colame, sum(case whealias.col post.aalias.colswercoualias.colt > alias.col thealias.col alias.col else alias.col ealias.cold) as aalias.colsweredcoualias.colt, sum(case whealias.col post.aalias.colswercoualias.colt = alias.col thealias.col alias.col else alias.col ealias.cold) as ualias.colaalias.colsweredcoualias.colt from table as tag ialias.colalias.coler joialias.col posttable as posttag oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table as post oalias.col alias.col = alias.col where alias.col >= alias.col aalias.cold alias.col is alias.colull group by tag.tagalias.colame ) as tabletatistics where aalias.colsweredcoualias.colt > alias.col order by ((alias.col.alias.col * ualias.colaalias.colsweredcoualias.colt) / aalias.colsweredcoualias.colt) desc"
"selealias.col alias.col from ( selealias.col top alias.col alias.col, owalias.coleruserid as [user lialias.colk], coualias.colt(table.id) as questioalias.cols, cast(avg(cast(alias.col as float)) as alias.columeric(alias.col,alias.col)) as [average questioalias.col alias.col] from table where commualias.colityowalias.coleddate is alias.colull aalias.cold closeddate is alias.colull group by owalias.coleruserid, alias.col order by coualias.colt(table.id) desc )d order by alias.col,[average questioalias.col alias.col] desc"
"select top alias.col owalias.coleruserid [user lialias.colk], reputatioalias.col, coualias.colt(*) [total questioalias.cols], avg(alias.col + alias.col.alias.col) [avg alias.col], sum(case whealias.col alias.col < alias.col thealias.col alias.col else alias.col ealias.cold) [alias.colegative alias.cold questioalias.cols] from table joialias.col table u oalias.col alias.col = owalias.coleruserid where parealias.coltid is alias.colull group by owalias.coleruserid, reputatioalias.col havialias.colg coualias.colt(*) > alias.col order by [avg alias.col] desc"
"create table table ( alias.col int not null, name nvarchar(n) null, alias.col nvarchar(n) null, alias.col nvarchar(n) null, ) insert into table(alias.col, name, alias.col, alias.col) values (xyz), (n,x,x,x), (n,x,x,x), (n,x,x,x), (n,x,x,x), (n,x,x,x), (n,x,x,x), (n,x,x,x), (n,x,x,x), (n,x,x,x) select alias.col from table cn left join table cn on (cn.alias.col = cn.alias.col and cn.alias.col >= cn.alias.col) group by cn.alias.col, cn.alias.col, cn.name, cn.alias.col having count(*) <= n"
select alias.col from table
"declare alias.col ialias.colt = ##userid## selealias.col top alias.col alias.col, alias.col, u.displayalias.colame, u.reputatioalias.col, u.lastaccessdate, alias.col + cast(alias.col as varchar(alias.col)) from table as p ialias.colalias.coler joialias.col table as u oalias.col p.owalias.coleruserid = alias.col ialias.colalias.coler joialias.col table as pt oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table as t oalias.col alias.col = alias.col where u.reputatioalias.col betweealias.col alias.col aalias.cold alias.col aalias.cold acceptedaalias.colswerid is alias.colull aalias.cold t.tagalias.colame ialias.col ( selealias.col top alias.col tagalias.colame from table as p ialias.colalias.coler joialias.col table as pt oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table as t oalias.col alias.col = alias.col where owalias.coleruserid = alias.col group by tagalias.colame order by coualias.colt(*) desc ) order by alias.col desc"
"with table as (select coualias.colt(*) as alias.col, alias.col, table = case whealias.col alias.col <= alias.col thealias.col x whealias.col alias.col > alias.col aalias.cold alias.col <= alias.col thealias.col x whealias.col alias.col > alias.col aalias.cold alias.col <= alias.col thealias.col x whealias.col alias.col > alias.col aalias.cold alias.col <= alias.col thealias.col x whealias.col alias.col > alias.col aalias.cold alias.col <= alias.col thealias.col x whealias.col alias.col > alias.col aalias.cold alias.col <= alias.col thealias.col x whealias.col alias.col > alias.col aalias.cold alias.col <= alias.col thealias.col x whealias.col alias.col > alias.col aalias.cold alias.col <= alias.col thealias.col x whealias.col alias.col > alias.col aalias.cold alias.col <= alias.col thealias.col x whealias.col alias.col > alias.col aalias.cold alias.col <= alias.col thealias.col x whealias.col alias.col > alias.col aalias.cold alias.col <= alias.col thealias.col x whealias.col alias.col > alias.col aalias.cold alias.col <= alias.col thealias.col x whealias.col alias.col > alias.col aalias.cold alias.col <= alias.col thealias.col x whealias.col alias.col > alias.col thealias.col x ealias.cold from table where alias.col is alias.colot alias.colull group by alias.col ) select sum(alias.col) as alias.columberoftable, percoftable = (sum(alias.col) / (select sum(alias.col) from table)), table as alias.colbracket from table group by table order by table"
select coualias.colt(distialias.colct table.id) as alias.col from table joialias.col table oalias.col table.owalias.coleruserid=table.id where table.tags like alias.col aalias.cold table.reputatioalias.col >= alias.col
"selealias.col top alias.col table.id as [user lialias.colk], coualias.colt(table.id) as aalias.colswers, cast(avg(cast(alias.col as float)) as alias.columeric(alias.col,alias.col)) as [average aalias.colswer alias.col] from table ialias.colalias.coler joialias.col table oalias.col table.id = owalias.coleruserid where alias.col = alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold closeddate is alias.colull group by table.id, displayalias.colame havialias.colg coualias.colt(table.id) > alias.col order by aalias.colswers desc"
"declare alias.col float select alias.col = coualias.colt(alias.col) from table where posttypealias.col = alias.col select owalias.colerdisplayalias.colame, coualias.colt(alias.col) as aalias.colswercoualias.colt, coalias.colvert(datetime,mialias.col(creatioalias.coldate),alias.col) as alias.col, max(creatioalias.coldate) as lasta, alias.col * coualias.colt(alias.col) / alias.col as percealias.coltquestioalias.colsaalias.colswered from table where posttypealias.col = alias.col aalias.cold owalias.coleruseralias.col is alias.colull group by owalias.colerdisplayalias.colame order by alias.col"
selealias.col (selealias.col cast(coualias.colt(alias.col) as float) from table u where alias.col alias.colot ialias.col (selealias.col distialias.colalias.col owalias.coleruserid from table where alias.col = alias.col aalias.cold owalias.coleruserid != alias.col) aalias.cold u.reputatioalias.col >= alias.col)/ (selealias.col cast(coualias.colt(alias.col) as float) from table u where u.reputatioalias.col >= alias.col) as [proportioalias.col of aalias.colswerers] ;
"selealias.col avg(alias.col(alias.col)) as averagealias.colgth, avg(cast(alias.col as float)/alias.col) as alias.col, avg(cast(alias.col as float)/alias.col) + alias.col(cast(alias.col as float)/alias.col) as alias.col, avg(cast(alias.col as float)/alias.col) - alias.col(cast(alias.col as float)/alias.col) as alias.col from table q ialias.colalias.coler joialias.col table a oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col(alias.col) <= alias.col group by roualias.cold(alias.col(alias.col), alias.col) order by roualias.cold(alias.col(alias.col), alias.col)"
"select alias.col as alias.col, location, alias.col from table where lower(location) like x order by alias.col desc"
"select top alias.col t.tagalias.colame, coualias.colt(alias.col) as alias.columposts from table t, posttable pt where alias.col = alias.col group by t.tagalias.colame order by alias.columposts desc"
"select alias.col alias.col, tealias.colt from table where tealias.colt like alias.col"
"set alias.colocoualias.colt oalias.col create table table (alias.col ialias.colt alias.colealias.coltity, [start] datetime, [fialias.colish] datetime) ialias.colsert table select top alias.col alias.colull, alias.colull from table declare alias.col datetime select alias.col = creatioalias.coldate from table where alias.col = (select max(palias.col.alias.col) from table palias.col) aalias.cold (title like x or body like x or tags like x) update table set [start] = dateadd(d, (alias.col - alias.col) * alias.col, alias.col), [fialias.colish] = dateadd(d, (alias.col - alias.col) * alias.col, alias.col) select start, (select coualias.colt(*) from table where parealias.coltalias.col is alias.colull aalias.cold creatioalias.coldate betweealias.col [start] aalias.cold [fialias.colish] ) as [total questioalias.cols], (select coualias.colt(*) from table where parealias.coltalias.col is alias.colot alias.colull aalias.cold creatioalias.coldate betweealias.col [start] aalias.cold [fialias.colish] ) as [total aalias.colswers] from table"
"declare alias.col as alias.colvarchar(alias.col) declare alias.col as ialias.colt = ##alias.col## selealias.col alias.col=alias.col+cast(alias.col as alias.colvarchar) selealias.col alias.col as alias.col , alias.col, alias.col(alias.col) , [tealias.colt] , charialias.coldealias.col(alias.col, [tealias.colt]) , charialias.coldealias.col(alias.col, [tealias.colt]) from table where tabletypeid = alias.col aalias.cold [tealias.colt] like alias.col+alias.col+alias.col aalias.cold charialias.coldealias.col(alias.col, [tealias.colt]) = charialias.coldealias.col(alias.col, [tealias.colt]) alias.col"
select ((select table.reputatioalias.col from table where table.id=alias.col##)/ (select coualias.colt(alias.col) from table where owalias.coleruserid=alias.col##) )
select count(*) from table left join table on table.owneruserid = table.id where alias.col is null and reputation >= n
"wialias.colh alias.colable as ( selecalias.col alias.col as alias.col, casalias.col (alias.col as char(alias.col) ) calias.col, maalias.col (creaalias.colioalias.coldaalias.cole) malias.col, casalias.col (alias.col as char(alias.col) ) calias.col, maalias.col (lasalias.coledialias.coldaalias.cole) malias.col, casalias.col (alias.col as char(alias.col) ) calias.col, maalias.col (lasalias.colacalias.colivialias.colydaalias.cole) malias.col, casalias.col (alias.col as char(alias.col) ) calias.col, maalias.col (closeddaalias.cole) malias.col, casalias.col (alias.col as char(alias.col) ) calias.col, maalias.col (commualias.colialias.colyowalias.coleddaalias.cole) malias.col from alias.colable ualias.colioalias.col all selecalias.col alias.col as alias.col, casalias.col (alias.col as char(alias.col) ) calias.col, maalias.col (creaalias.colioalias.coldaalias.cole) malias.col, casalias.col (alias.col as char(alias.col) ) calias.col, maalias.col (lasalias.colaccessdaalias.cole) malias.col, casalias.col (alias.col as char(alias.col) ) calias.col, casalias.col (alias.col as daalias.colealias.colime) malias.col, casalias.col (alias.col as char(alias.col) ) calias.col, casalias.col (alias.col as daalias.colealias.colime) malias.col, casalias.col (alias.col as char(alias.col) ) calias.col, casalias.col (alias.col as daalias.colealias.colime) malias.col from alias.colable ) selecalias.col alias.col as [alias.colable] , value , alias.colable from ( selecalias.col alias.col, calias.col, calias.col, calias.col, calias.col, calias.col, malias.col, malias.col, malias.col, malias.col, malias.col from alias.colable ) pp ualias.colpivoalias.col ( value for colalias.colame ialias.col (alias.colyz) )as ualias.colpalias.col ualias.colpivoalias.col ( alias.colable for colalias.colamealias.col ialias.col (alias.colyz) )as ualias.colpalias.col where righalias.col (colalias.colame, alias.col) = righalias.col (colalias.colamealias.col, alias.col) order by [alias.colable], value"
"DECLARE @start DATE = ##StartDate:string?NNN##, @end DATE = ##EndDate:string?NNN##; WITH AllBugs(ReportDate, Closed) AS ( SELECT CAST(P.CreationDate AS DATE) AS ReportDate, CASE WHEN P.ClosedDate IS NULL THEN N ELSE N END AS Closed FROM Posts AS P INNER JOIN PostTags AS PT ON PT.PostId = P.Id WHERE P.PostTypeId = N AND PT.TagId = (SELECT Id FROM Tags WHERE lower(TagName) = X) AND (CASE WHEN @start IS NULL THEN N ELSE DATEDIFF(DAY, @start, P.CreationDate) END) >= N AND (CASE WHEN @end IS NULL THEN N ELSE DATEDIFF(DAY, P.CreationDate, @end) END) >= N ), AllBugsByDate(ReportDate, BugCount) AS ( SELECT ReportDate, COUNT(*) FROM AllBugs GROUP BY ReportDate ), UnclosedBugsByDate(ReportDate, BugCount) AS ( SELECT ReportDate, COUNT(*) FROM AllBugs WHERE Closed = N GROUP BY ReportDate ) SELECT A.ReportDate AS [Date], A.BugCount AS [Total], U.BugCount AS [Unclosed] FROM AllBugsByDate AS A INNER JOIN UnclosedBugsByDate AS U ON A.ReportDate = U.ReportDate ORDER BY A.ReportDate ;"
"select row_number() over (order by alias.col asc) as alias.col, alias.col as alias.col, alias.col as alias.col from table u join table b on alias.col = alias.col where alias.col = alias.col:alias.col and b.class = case ##badgeclass:string?alias.col when alias.col then n when alias.col then n when alias.col then n else ##badgeclass## end"
"select top alias.col:ialias.colt?alias.col (case whealias.col alias.col is alias.colot alias.colull thealias.col x + cast(alias.col as alias.colvarchar) + x else x ealias.cold) + coalesalias.col(alias.userdisplayalias.colame, table.displayalias.colame) as [user lialias.colk], coualias.colt(distialias.colct alias.col) as alias.col, table.alias.colame as [edit type] from table as alias left joialias.col table as p oalias.col alias.col = alias.col left joialias.col table oalias.col alias.col = table.id left joialias.col table oalias.col alias.col = table.id where alias.col ialias.col (alias.col) aalias.cold alias.col(alias.col(alias.col)) > alias.col group by alias.col, alias.userdisplayalias.colame, table.displayalias.colame, table.alias.colame havialias.colg coualias.colt(distialias.colct alias.col) >= ##mialias.coledits?alias.col order by table.alias.colame, alias.col desc, alias.userdisplayalias.colame, table.displayalias.colame, alias.col"
"selealias.col top alias.col table.id as [user lialias.colk], coualias.colt(table.id) as aalias.colswers, cast(avg(cast(alias.col as float)) as alias.columeric(alias.col,alias.col)) as [average aalias.colswer alias.col] from table ialias.colalias.coler joialias.col table oalias.col table.id = owalias.coleruserid where alias.col = alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold closeddate is alias.colull group by table.id, displayalias.colame havialias.colg coualias.colt(table.id) > alias.col order by [average aalias.colswer alias.col] desc"
"select top alias.col alias.col as [user lialias.colk], u.reputatioalias.col, (alias.col * alias.col - u.dowalias.colvotes * alias.col) as reputatioalias.colgivealias.col, u.reputatioalias.col - (alias.col * alias.col - u.dowalias.colvotes * alias.col) as reputatioalias.coldifferealias.colce, (alias.col * (alias.col * alias.col - u.dowalias.colvotes * alias.col) ) / u.reputatioalias.col as alias.col from table u where u.reputatioalias.col > alias.col aalias.cold alias.col != alias.col order by alias.col asc, reputatioalias.colgivealias.col asc"
"select alias.col, alias.col, alias.col, location, reputation from table where lower(location) like x or lower(location) like x or lower(location) like x;"
"select alias.col as alias.col, alias.col as alias.col, alias.col as alias.col, alias.col as alias.col from taliasle as a join taliasle as b on alias.col = alias.col where alias.col < alias.col and alias.col is null and b.closeddate is null and isnull(a.owneruserid,n) <> isnull(b.owneruserid, n);"
"select alias.col as alias.col, location, reputation from table where lower(location) like (x) order by location asc"
"with table(uid,rep,pcalias.colt) as( selealias.col top alias.col table.id, reputatioalias.col, sum(case whealias.col alias.col = alias.col thealias.col alias.col whealias.col alias.col = alias.col thealias.col alias.col ealias.cold) from table ialias.colalias.coler joialias.col table oalias.col table.id = table.owalias.coleruserid group by table.id, table.reputatioalias.col order by reputatioalias.col desc ), table(uid,ualias.colcapped) as( selealias.col table.id, sum(case whealias.col alias.col = alias.col thealias.col boualias.coltyamoualias.colt whealias.col table.creatioalias.coldate > table.commualias.colityowalias.coleddate thealias.col alias.col whealias.col alias.col = alias.col thealias.col alias.col whealias.col alias.col = alias.col aalias.cold alias.col = alias.col thealias.col alias.col whealias.col alias.col = alias.col aalias.cold alias.col = alias.col thealias.col alias.col whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold ) from table ialias.colalias.coler joialias.col table oalias.col table.id = table.postid ialias.colalias.coler joialias.col table oalias.col table.id = table.owalias.coleruserid where table.alias.col = alias.col or alias.col = alias.col group by table.id, table.reputatioalias.col ) selealias.col alias.col as [user lialias.colk], u.pcalias.colt as [table], alias.col as alias.col, r.ualias.colcapped as [ualias.colcapped rep], r.ualias.colcapped - alias.col as alias.col, cast(alias.col. * (r.ualias.colcapped - alias.col) / alias.col as decimal(alias.col, alias.col)) as [peralias.colalias.colt lost], cast(alias.col.alias.col * alias.col / u.pcalias.colt as decimal(alias.col, alias.col)) as alias.col, cast(alias.col.alias.col * r.ualias.colcapped / u.pcalias.colt as decimal(alias.col, alias.col)) as [ualias.colcapped rep / post] from table u left outer joialias.col table r oalias.col alias.col = alias.col order by [user lialias.colk] desc"
"select coalesce(alias.col, table.title) as alias.col, table.name as alias.col, alias.col as alias.col from table join table on table.postid=table.id join table on table.alias.colid=table.id left outer join table on table.userid=table.id left join table x on alias.col = table.parentid where table.owneruserid=alias.col##;"
"declare @tag alias.colvarchar(alias.col) = ##tag:strialias.colg## create table table ( year ialias.colt, moalias.colth ialias.colt, ) ialias.colsert ialias.colto table (year, moalias.colth) select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col select table.year, table.moalias.colth, ( select coualias.colt(table.tagalias.colame) from table ialias.colalias.coler joialias.col table oalias.col table.postid = table.id ialias.colalias.coler joialias.col table oalias.col table.id = table.tagid where alias.col(year, table.creatioalias.coldate) = table.year aalias.cold alias.col(moalias.colth, table.creatioalias.coldate) = table.moalias.colth aalias.cold table.tagalias.colame = @tag ) as coualias.colt from table"
"set alias.colocoualias.colt oalias.col declare @tabletats table (alias.col ialias.colt, alias.col ialias.colt, dowalias.col ialias.colt) ialias.colsert @tabletats select alias.col, alias.col = sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold), dowalias.col = sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) from table where alias.col ialias.col (alias.col) groalias.col by alias.col set alias.colocoualias.colt off select top alias.col alias.col as [post lialias.colk] , alias.col, dowalias.col from @tabletats joialias.col table p oalias.col alias.col = alias.col where dowalias.col > (alias.col * alias.col.alias.col) aalias.cold alias.col=alias.col aalias.cold alias.col is alias.colull order by alias.col desc"
"select top alias.col tagalias.colame as [tag lialias.colk], coualias.colt(*) [total table], coualias.colt(alias.col) [closed table], alias.col.alias.col * coualias.colt(alias.col) / coualias.colt(*) as alias.col from table joialias.col posttable oalias.col table.id = posttable.tagid joialias.col table oalias.col table.id = posttable.postid group by tagid, tagalias.colame havialias.colg coualias.colt(alias.col) >= alias.col order by alias.col.alias.col * coualias.colt(alias.col) / coualias.colt(*) desc"
declare @userid ialias.colt set @userid = ##userid## select alias.col as alias.col from table v where alias.col = alias.col
"select table.id, table.name, count(table.id) as count, (x+ convert(varchar, table.id)) as listurl from table left join table on table.id = table.posttypeid group by table.id, table.name order by table.id"
"select alias.col as alias.col, alias.col from table as q ialias.colalias.coler joialias.col table as u oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table as ph oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col(day, q.creatioalias.coldate, getdate()) > alias.col aalias.cold q.score = alias.col aalias.cold q.aalias.colswercoualias.colt = alias.col aalias.cold ph.tabletypeid != alias.col aalias.cold alias.col(day, q.creatioalias.coldate, getdate()) < alias.col aalias.cold q.commealias.coltcoualias.colt < alias.col aalias.cold q.closeddate is alias.colull aalias.cold lealias.col(q.body) < ##questioalias.collealias.colgth?alias.col## aalias.cold alias.col(day, u.lastaccessdate, getdate()) > alias.col aalias.cold u.reputatioalias.col < ##questioalias.colerrep?alias.col## order by alias.col desc"
"select top alias.col raalias.colk() over (order by sum(boualias.coltyamoualias.colt) desc) as [raalias.colk], owalias.coleruserid [user lialias.colk], raalias.colk() over (order by sum(boualias.coltyamoualias.colt) desc) as [raalias.colk], owalias.coleruserid, coualias.colt(alias.col) [boualias.colty aalias.colswers provided], sum(boualias.coltyamoualias.colt) [boualias.colty amoualias.colt woalias.col] from table p,table where alias.col = alias.col aalias.cold alias.col = alias.col group by owalias.coleruserid order by sum(boualias.coltyamoualias.colt) desc"
"select alias.col, body from table where body like x;"
"declare alias.col ialias.colt = ##userid## create table table (alias.col ialias.colt, [coualias.colt] ialias.colt) ialias.colsert table select top alias.col alias.col, coualias.colt(*) as uptable from table ialias.colalias.coler joialias.col posttable oalias.col posttable.alias.col = table.id ialias.colalias.coler joialias.col table oalias.col table.parealias.coltid = posttable.postid ialias.colalias.coler joialias.col table oalias.col table.postid = table.id aalias.cold alias.col = alias.col where table.owalias.coleruserid = alias.col group by alias.col order by uptable desc create table table (id ialias.colt primary key) ialias.colsert table select alias.col from table q where (select coualias.colt(*) from table a where a.parealias.coltid = alias.col aalias.cold alias.col > alias.col) = alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold closeddate is alias.colull aalias.cold q.parealias.coltid is alias.colull aalias.cold acceptedaalias.colswerid is alias.colull select top alias.col alias.col as [post lialias.colk], us.reputatioalias.col as alias.col, alias.col as asalias.col from table u joialias.col table p oalias.col alias.col = alias.col joialias.col posttable pt oalias.col alias.col = alias.col joialias.col table t oalias.col t.alias.col = pt.alias.col joialias.col table us oalias.col alias.col = p.owalias.coleruserid group by alias.col, us.reputatioalias.col, p.score order by alias.col desc"
"select isalias.colull(alias.col, alias.col), isalias.colull(alias.col, alias.col), alias.col, alias.col, alias.col from ( select alias.col(year, table.creatioalias.coldate) year, alias.col(moalias.colth, table.creatioalias.coldate) moalias.colth, coualias.colt(table.id) questioalias.cols from table where alias.col = alias.col group by alias.col(year, table.creatioalias.coldate), alias.col(moalias.colth, table.creatioalias.coldate) ) as p left joialias.col ( select alias.col(year, table.creatioalias.coldate) year, alias.col(moalias.colth, table.creatioalias.coldate) moalias.colth, coualias.colt(table.id) boualias.colties, sum(table.boualias.coltyamoualias.colt) amoualias.colt from table where alias.col = alias.col group by alias.col(year, table.creatioalias.coldate), alias.col(moalias.colth, table.creatioalias.coldate) ) as v oalias.col alias.col = alias.col aalias.cold alias.col = alias.col order by alias.col, alias.col"
"create table table ( alias.col ialias.colt, alias.col ialias.colt, ) ialias.colsert ialias.colto table (alias.col, alias.col) select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col select su.alias.col, su.alias.col, ( select coualias.colt(alias.col) from table u where (alias.col(year, u.creatioalias.coldate) = su.alias.col aalias.cold alias.col(moalias.colth, u.creatioalias.coldate) = su.alias.col) ) as regtable from table su"
select alias.col as alias.col
"declare @MyUserId int = ##MyUserId##; select count(distinct myAnswer.ParentId) as cnt, tag.Id tagID, tag.TagName tagName from Posts as myAnswer, PostTags as aNt, Tags as tag where aNt.PostId = myAnswer.ParentId and aNt.TagId = tag.Id and myAnswer.ownerUserId = @MyUserId and myAnswer.postTypeId = N group by tag.Id, tag.TagName order by cnt desc"
"declare table table( qid ialias.colt, userid ialias.colt, qdate datetime, rep ialias.colt ) ialias.colsert table selealias.col alias.col, alias.col,coalias.colvert(alias.col(alias.col),cast(a.creatioalias.coldate as date),alias.col), u.reputatioalias.col from table a, table u where alias.col ialias.col (alias.col) as timeualias.colix, alias.col as currealias.coltrep, (alias.col - ( selealias.col sum(alias.col)from ( selealias.col uid, sum(acceptalias.col) + sum(dowalias.coltablecore) + case whealias.col sum(uptablecore) > alias.col thealias.col alias.col else sum(uptablecore) ealias.cold alias.col from ( selealias.col p.owalias.coleruserid uid, sum(case whealias.col v.votetypeid = alias.col thealias.col alias.col else alias.col ealias.cold) as acceptalias.col, sum(case whealias.col v.votetypeid = alias.col aalias.cold alias.col = alias.col thealias.col alias.col whealias.col v.votetypeid = alias.col aalias.cold alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as uptablecore, sum(case whealias.col v.votetypeid = alias.col thealias.col alias.col else alias.col ealias.cold) as dowalias.coltablecore from table v joialias.col table p oalias.col alias.col = alias.col aalias.cold alias.col ialias.col (alias.col) aalias.cold p.owalias.coleruserid = alias.col aalias.cold p.commualias.colityowalias.coleddate is alias.colull where v.creatioalias.coldate betweealias.col a.qdate aalias.cold getdate() group by p.owalias.coleruserid ualias.colioalias.col selealias.col q.owalias.coleruserid, sum(alias.col), alias.col, alias.col from table v joialias.col table p oalias.col alias.col = alias.col aalias.cold alias.col = alias.col joialias.col table q oalias.col p.parealias.coltid = alias.col aalias.cold q.owalias.coleruserid= alias.col where v.creatioalias.coldate betweealias.col a.qdate aalias.cold getdate() aalias.cold v.votetypeid = alias.col group by q.owalias.coleruserid ) x group by uid) y ) )estimatedrep from table a"
"select alias.col as alias.col, row_alias.colber() over (order by alias.col desc) as rank, row_alias.colber() over (order by alias.col desc) as totalrank, alias.col as questionsinperiod, alias.col as questionstotal from (select count(alias.col) as alias.col, alias.colname from table, posttable, table where table.id = posttable.alias.colid and table.id = alias.col and table.creationdate > alias.col group by alias.colname) as alias.col inner join (select count(alias.col) as alias.col, alias.colname from table, posttable, table where table.id = posttable.alias.colid and table.id = alias.col group by alias.colname having count(alias.col) > n) as alias.col on alias.col.alias.colname = alias.col order by alias.col desc ;"
"select top alias.col row_alias.columber() over(order by reputatioalias.col desc) as [#], id as [user lialias.colk], reputatioalias.col, locatioalias.col from table where lower(locatioalias.col) like x or upper(locatioalias.col) like x ... or locatioalias.col like x aalias.cold reputatioalias.col >= alias.col order by reputatioalias.col desc;"
"selealias.col top alias.col table.id as [user lialias.colk], coualias.colt(table.id) as questioalias.cols, cast(avg(cast(alias.col as float)) as alias.columeric(alias.col,alias.col)) as [average questioalias.col alias.col] from table ialias.colalias.coler joialias.col table oalias.col table.id = owalias.coleruserid where alias.col = alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold closeddate is alias.colull group by table.id, displayalias.colame havialias.colg coualias.colt(table.id) > alias.col order by [average questioalias.col alias.col] desc"
declare alias.col ialias.colt = ##userid## select coualias.colt(*) from table where alias.col = alias.col aalias.cold lasteditoruserid = alias.col aalias.cold owalias.coleruserid != alias.col
"select alias.col as alias.col, alias.col, body from table p where p.alias.col in (alias.col)"
"declare @userid ialias.colt = ##userid## declare @dummy ialias.colt = ##useridalias.col## select top alias.col alias.col, body, alias.col, tags from table where alias.col > alias.col aalias.cold alias.col = alias.col order by alias.col desc"
"declare alias.col ialias.colt = ##userid## declare @tagalias.col alias.colvarchar(alias.col) = ##tagalias.col:strialias.colg?jsf## declare @tagalias.col alias.colvarchar(alias.col) = ##tagalias.col:strialias.colg?jsfalias.col## declare @tagalias.col alias.colvarchar(alias.col) = ##tagalias.col:strialias.colg## select alias.col, p.table from table p ialias.colalias.coler joialias.col table v oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table u oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table pt oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table t oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold t.tagalias.colame ialias.col (alias.col)"
";with reviews as ( SELECT t.id, X + CAST(t.id as nvarchar) as [Review Link], t.ReviewTaskTypeId, tt.name reviewname, t.postid, r.reviewtaskresulttypeid, rt.name, r.creationdate FROM ReviewTasks t, ReviewTaskTypes tt, ReviewTaskResults r, ReviewTaskResultTypes rt WHERE t.reviewtasktypeid in (XYZ) and ph.creationdate <= r.creationdate order by r.postid, ph.postid"
declare alias.col ialias.colt = ##userid## select top alias.col alias.col from table v where alias.col = alias.col
"select top alias.col alias.col,displayalias.colame,views as profileviews,reputatioalias.col,creatioalias.coldate,websiteurl from table order by views desc;"
"declare table table ( id ialias.colt alias.colot alias.colull primary key, alias.colame alias.colvarchar(alias.col) alias.colot alias.colull ) ialias.colsert ialias.colto table values (xyz), (alias.col, x), (alias.col, x), (alias.col, x), (alias.col, x), (alias.col, x), (alias.col, x) selealias.col (case whealias.col alias.col is alias.colull thealias.col x else alias.col ealias.cold) as x, cast(table.commealias.colt as ialias.colt) as closereasoalias.colid, sum(alias.col) as coualias.colt from table left outer joialias.col table cr oalias.col alias.col = cast(table.commealias.colt as ialias.colt) where tabletypeid = alias.col group by alias.col, cast(table.commealias.colt as ialias.colt) order by coualias.colt desc"
"select alias.col as alias.col , alias.col , alias.col from table u left join table b on (alias.col = alias.col and (alias.col is null or lower(alias.col) = alias.col) ) where alias.col in (alias.colyz) order by alias.col"
"select top alias.col alias.col as [post lialias.colk], alias.col as [alias.col], viewcoualias.colt as alias.col, viewcoualias.colt / alias.col + alias.col * alias.col - (lealias.col(alias.col) - alias.col) * lealias.col(alias.col) as [badalias.coless] from table where posttypealias.col = alias.col aalias.cold alias.col like alias.col ... order by badalias.coless desc"
"select top alias.col alias.col, lealias.col(alias.col), alias.col as [post lialias.colk], alias.col, a.creatioalias.coldate, alias.col, u.reputatioalias.col as [reputatioalias.col] from table c ialias.colalias.coler joialias.col table a oalias.col c.alias.col = alias.col ialias.colalias.coler joialias.col table u oalias.col a.owalias.coleruserid = alias.col ialias.colalias.coler joialias.col table q oalias.col a.parealias.coltid = alias.col where alias.col = alias.col aalias.cold upper(alias.col) like alias.col ... aalias.cold alias.col != q.acceptedaalias.colswerid aalias.cold year(a.creatioalias.coldate) > alias.col aalias.cold alias.col <= alias.col aalias.cold u.reputatioalias.col < alias.col order by lealias.col(alias.col) asc"
"with answertable as ( select alias.col, sum((case when name=alias.col then n else n end)) as alias.col, sum((case when name=alias.col then n else n end)) as alias.col, sum((case when name=alias.col then n else n end)) as nialias.colanswers, sum((case when name=alias.col then n else n end)) as alias.col, sum((case when name=alias.col then n else n end)) as alias.col, count(*) as alias.col from table group by alias.col ) select top ##maalias.colusers?alias.col alias.col as alias.col, alias.col, alias.col, nialias.colanswers, alias.col, alias.col, alias.col from answertable order by alias.col desc"
";with PersonsAnswers as ( select answers.ParentId [QuestionId] from Posts answers where answers.OwnerUserId != ##AnswerUserId?N## ), PersonsQuestions as ( select questions.Id from Posts questions where questions.OwnerUserId = ##QuestionUserId?N## ) select pq.Id [Post Link] from PersonsQuestions pq left outer join PersonsAnswers pa on pq.Id = pa.QuestionId where pa.QuestionId is null"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or lower(location) like x ... order by alias.col desc;"
"alias.coleclare @alias.colaysolalias.col ialias.colt = ##mialias.colalias.colaysolalias.col:ialias.colt?alias.col## alias.coleclare alias.col alias.colatetime = getalias.colate() select alias.colistialias.colct top ##top:ialias.colt?alias.col## alias.col as [post lialias.colk], alias.col, maalias.col(alias.col) as [best aalias.colswer], q.creatioalias.colalias.colate, q.closealias.colalias.colate, q.viewcoualias.colt from table q left joialias.col table ph oalias.col alias.col = alias.col aalias.colalias.col alias.col(alias.col, ph.creatioalias.colalias.colate, alias.col) <= alias.col left joialias.col table v oalias.col v.postialias.col = alias.col aalias.colalias.col v.votetypeialias.col = alias.col aalias.colalias.col alias.col(alias.col, v.creatioalias.colalias.colate, alias.col) <= alias.col left joialias.col table a oalias.col alias.col = a.parealias.coltialias.col left joialias.col table pl oalias.col relatealias.colpostialias.col = alias.col aalias.colalias.col lialias.colktypeialias.col = alias.col where q.closealias.colalias.colate is alias.colot alias.colull aalias.colalias.col alias.col(alias.col, q.closealias.colalias.colate, alias.col) > @alias.colaysolalias.col aalias.colalias.col (select top alias.col commealias.colt from table ph where alias.col = alias.col aalias.colalias.col tabletypeialias.col = alias.col oralias.coler by ialias.col alias.colesc) alias.colot ialias.col (alias.colyz) aalias.colalias.col alias.col <= alias.col aalias.colalias.col coalesce((select top alias.col tabletypeialias.col from table where table.postialias.col = alias.col aalias.colalias.col table.tabletypeialias.col ialias.col (alias.colyz) oralias.coler by ialias.col alias.colesc), alias.col) <> alias.col aalias.colalias.col q.acceptealias.colaalias.colswerialias.col is alias.colull group by alias.col, alias.col, q.creatioalias.colalias.colate, q.closealias.colalias.colate, q.viewcoualias.colt havialias.colg coalesce(maalias.col(alias.col),alias.col) <= alias.col aalias.colalias.col coualias.colt(ph.ialias.col) = alias.col aalias.colalias.col coualias.colt(v.ialias.col) = alias.col aalias.colalias.col coualias.colt(pl.ialias.col) = alias.col oralias.coler by maalias.col(alias.col), alias.col, creatioalias.colalias.colate select alias.col as alias.col"
"selealias.col alias.col, alias.col = alias.col*sum(alias.col)/sum(alias.col), alias.col = maalias.col(alias.col) from ( selealias.col alias.col, alias.col = alias.col, alias.col = alias.col, [] = alias.colalias.col, alias.col = raalias.colk() over (order by alias.colalias.col desc), alias.colviewraalias.colk = raalias.colk() over (order by alias.col desc), alias.col = alias.coltile(alias.col) over (order by alias.col) from ( selealias.col alias.col, alias.col = sum(alias.col), alias.col = sum(alias.col), alias.colalias.col = cast(alias.col*sum(alias.col)/sum(alias.col) as alias.columeric(alias.col,alias.col)) from ( selealias.col alias.col = substrialias.colg(alias.cols, v.alias.columber+alias.col, charialias.coldealias.col(alias.col, alias.cols, v.alias.columber+alias.col)-v.alias.columberalias.col), alias.col, alias.col from ( selealias.col q.alias.cols, sum(q.viewcoualias.colt) alias.col, coualias.colt(case whealias.col alias.col=alias.col thealias.col alias.col ealias.cold) alias.col from table q ialias.colalias.coler joialias.col table a oalias.col alias.col = q.acalias.colptedaalias.colswerid where alias.col=alias.col aalias.cold q.creatioalias.coldate >= alias.col aalias.cold q.creatioalias.coldate < alias.col group by q.alias.cols) q ialias.colalias.coler joialias.col mastertable v oalias.col alias.col=alias.col aalias.cold substrialias.colg(alias.cols, v.alias.columber, alias.col) = alias.col ) alias.col group by alias.col ) y ) z where alias.col ialias.col (alias.colyz) group by alias.col order by alias.col"
"select top alias.col alias.col as postalias.col_aalias.colswer, alias.col as postbody_aalias.colswer, sum(alias.col) as tablecore from table p joialias.col ( select p_total.acalias.colptedaalias.colsweralias.col as alias.col, case whealias.col v_total.votetypealias.col = alias.col thealias.col alias.col whealias.col v_total.votetypealias.col = alias.col thealias.col alias.col else alias.col ealias.cold as alias.col from table p_total joialias.col table v_total oalias.col p_total.acalias.colptedaalias.colsweralias.col = v_total.postalias.col ) alias.col oalias.col alias.col = alias.col.alias.col group by alias.col, alias.col order by sum(alias.col)"
"select alias.col as alias.col, alias.col, alias.col, alias.col as alias.col from table p where alias.col = alias.col## and alias.col is null order by alias.col desc"
"select top alias.col alias.col as [user lialias.colk], (select sum(lealias.col(body)) from table where owalias.coleralias.col = alias.col) + (select sum(lealias.col(text)) from table where alias.col = alias.col) alias.col from table u order by alias.col desc"
"declare table table( [alias.col] [int] null, [alias.col] [varchar](n) null ) insert into table (alias.col, alias.col) values (xyz) insert into table (alias.col, alias.col) values (xyz) insert into table (alias.col, alias.col) values (xyz) insert into table (alias.col, alias.col) values (xyz) insert into table (alias.col, alias.col) values (xyz) declare @rowcount int set @rowcount = (select count(alias.col) from table) print @rowcount declare @i int set @i = n while (@i <= @rowcount) begin declare @name varchar(n) ;with cte as (select row_number() over (order by alias.col) rn, alias.col from table) select @name = lower(alias.col) from cte where rn = @i print x + convert(varchar(n), @i) print @name set @i = @i + n end"
"select coualias.colt(*) as alias.col, floor(alias.col / alias.col(day,creatioalias.coldate,getdate()))+alias.col as alias.col from table where alias.col = alias.col group by floor(alias.col / alias.col(day,creatioalias.coldate,getdate()))+alias.col order by alias.col"
"select alias.col as alias.col, alias.col, alias.col from table where alias.col >= alias.col aalias.cold alias.col <= alias.col?alias.col## aalias.cold alias.col > alias.col order by alias.col asc"
"select top alias.col alias.col as [user lialias.colk], (select sum(lealias.col(body)) from table where owalias.coleralias.col = alias.col) table, (select sum(lealias.col(text)) from table where alias.col = alias.col) table, (select sum(lealias.col(body)) from table where owalias.coleralias.col = alias.col) + (select sum(lealias.col(text)) from table where alias.col = alias.col) alias.col from table u order by alias.col desc"
"with table as ( select alias.col as alias.col, alias.col as alias.col from table v ialias.colalias.coler joialias.col table vt oalias.col alias.col = alias.col ) select top alias.col alias.col as [post lialias.colk], alias.col, posttypealias.col as alias.col , (select coualias.colt(*) from table vc where vc.alias.col = alias.col aalias.cold vc.alias.col = alias.col) as [total up table] , (select coualias.colt(*) from table vc where vc.alias.col = alias.col aalias.cold vc.alias.col = alias.col) as [total dowalias.col table] from table order by alias.col desc"
"select alias.col, coualias.colt(*) from table v joialias.col table t oalias.col alias.col = alias.col where alias.col = alias.col group by alias.col order by alias.col"
"set alias.colocoualias.colt oalias.col declare @tabletats table (alias.col ialias.colt, alias.col ialias.colt, dowalias.col ialias.colt) ialias.colsert @tabletats select alias.col, alias.col = sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold), dowalias.col = sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) from table where alias.col ialias.col (alias.col) groalias.col by alias.col set alias.colocoualias.colt off select top alias.col u.displayalias.colame as alias.col, alias.col as [post lialias.colk] , alias.col, dowalias.col from @tabletats joialias.col table p oalias.col alias.col = alias.col joialias.col table u oalias.col p.owalias.coleruserid = alias.col where dowalias.col > (alias.col * alias.col.alias.col) aalias.cold p.commualias.colityowalias.coleddate is alias.colull aalias.cold p.closeddate is alias.colull order by alias.col desc"
"select alias.col as alias.col, coalias.colvert(float, alias.col)/alias.col as alias.col, alias.col, alias.col, (alias.col+alias.col) as alias.col, alias.col from table where alias.col > alias.col aalias.cold alias.col > alias.col order by alias.col desc"
"select alias.col, coualias.colt(alias.col) as alias.col from table u, table p where alias.col = alias.col aalias.cold alias.col = alias.col group by alias.col order by coualias.colt(alias.col) asc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... order by alias.col desc;"
"select alias.col as alias.col, alias.col, body, lasteditoruseralias.col, lasteditdate, lastactivitydate from table where posttypealias.col = ##typealias.col##"
"declare alias.col ialias.colt = ##userid## select alias.col, coualias.colt(*) as uptable from table ialias.colalias.coler joialias.col posttable oalias.col posttable.tagid = table.id ialias.colalias.coler joialias.col table oalias.col table.parealias.coltid = posttable.postid ialias.colalias.coler joialias.col table oalias.col table.postid = table.id aalias.cold alias.col = alias.col where table.owalias.coleruserid = alias.col aalias.cold table.creatioalias.coldate > alias.col group by alias.col order by uptable desc"
"select top alias.col table.score as alias.col, table.creatioalias.coldate as alias.col, table.id as [post lialias.colk] from table joialias.col table as questioalias.col oalias.col table.parealias.coltid=questioalias.col.id where table.posttypeid = alias.col aalias.cold questioalias.col.tags like alias.col order by table.score desc"
"select alias.col, alias.col, alias.col, alias.col from table p inner join table v on alias.col = alias.col where not alias.col in (alias.col)"
"declare alias.col as alias.colvarchar(alias.col) declare alias.col as ialias.colt = ##alias.col## selealias.col alias.col=alias.col+cast(alias.col as alias.colvarchar)+alias.col selealias.col alias.col as alias.col , alias.col, alias.col(alias.col) , [tealias.colt] , alias.col([tealias.colt]) , charialias.coldealias.col(alias.col, alias.col([tealias.colt])) , charialias.coldealias.col(alias.col(alias.col), alias.col([tealias.colt])) from table where tabletypeid = alias.col aalias.cold [tealias.colt] like alias.col+alias.col+alias.col aalias.cold (charialias.coldealias.col(alias.col, alias.col([tealias.colt])) - (alias.col(alias.col)alias.col) = charialias.coldealias.col(alias.col(alias.col), alias.col([tealias.colt]))) aalias.cold (commealias.colt = alias.col or commealias.colt = alias.col)"
"select alias.col, alias.col as alias.col, alias.col from table where posttypealias.col = alias.col aalias.cold (alias.col like alias.col or alias.col like alias.col or alias.col like alias.col) aalias.cold alias.col >= alias.col aalias.cold acceptedaalias.colsweralias.col is alias.colull aalias.cold (select maalias.col(alias.col) from table aalias.colswers where posttypealias.col = alias.col aalias.cold parealias.coltalias.col = table.alias.col) <= alias.col aalias.cold alias.col is alias.colull aalias.cold alias.colot ealias.colists (select alias.col from table aalias.colswers where owalias.coleruseralias.col = ##useralias.col## aalias.cold posttypealias.col = alias.col aalias.cold parealias.coltalias.col = table.alias.col) aalias.cold alias.col(alias.col,alias.col,alias.col()) >= alias.col order by alias.col"
"declare alias.col ialias.colt = ##userid## select sumtable = case whealias.col sum(alltable.table) >= alias.col thealias.col sum(alltable.table) - alias.col else alias.col ealias.cold from (select coualias.colt(*) * alias.col as table, table.creatioalias.coldate as creatioalias.coldate from table ialias.colalias.coler joialias.col table oalias.col table.postid = table.id aalias.cold alias.col = alias.col where table.owalias.coleruserid = alias.col aalias.cold table.commualias.colityowalias.coleddate is alias.colull group by table.creatioalias.coldate ualias.colioalias.col select coualias.colt(*) * alias.col as table, table.creatioalias.coldate as creatioalias.coldate from table ialias.colalias.coler joialias.col table oalias.col table.postid = table.id aalias.cold alias.col = alias.col where table.owalias.coleruserid = alias.col aalias.cold table.commualias.colityowalias.coleddate is alias.colull group by table.creatioalias.coldate) as alltable group by alltable.creatioalias.coldate"
"select alias.col alias.col, alias.col alias.col from table p inner join table se on alias.col = alias.col where alias.col = alias.col:alias.col"
"select alias.col as alias.col, alias.col from table where (body like x collate sql_latinn_general_cpn_ci_as) and posttypealias.col = n and closeddate is null order by alias.col desc"
"with table as ( selealias.col alias.col alias.col, coualias.colt(*) alias.col from table p group by alias.col ), table as ( selealias.col top alias.col t.alias.colalias.colame alias.col, coualias.colt(*) alias.colcoualias.colt from table p ialias.colalias.coler joialias.col table pt oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table t oalias.col alias.col = pt.alias.colid where alias.col = alias.col group by t.alias.colalias.colame ), table as ( selealias.col talias.col.alias.colalias.colame alias.colalias.col, talias.col.alias.colalias.colame alias.colalias.col, coualias.colt(*) alias.colpaircoualias.colt from table p ialias.colalias.coler joialias.col table ptalias.col oalias.col ptalias.col.postid = alias.col ialias.colalias.coler joialias.col table ptalias.col oalias.col ptalias.col.postid = alias.col ialias.colalias.coler joialias.col table talias.col oalias.col talias.col.id = ptalias.col.alias.colid ialias.colalias.coler joialias.col table talias.col oalias.col talias.col.id = ptalias.col.alias.colid where talias.col.alias.colalias.colame < talias.col.alias.colalias.colame group by talias.col.alias.colalias.colame, talias.col.alias.colalias.colame ) selealias.col top alias.col tpc.alias.colalias.col alias.colalias.col, tpc.alias.colalias.col alias.colalias.col, cast((tpc.alias.colpaircoualias.colt) as float) / cast((tcalias.col.alias.colcoualias.colt * tcalias.col.alias.colcoualias.colt) as float) alias.col from table tpc ialias.colalias.coler joialias.col table tcalias.col oalias.col tcalias.col.alias.col = tpc.alias.colalias.col ialias.colalias.coler joialias.col table tcalias.col oalias.col tcalias.col.alias.col = tpc.alias.colalias.col ialias.colalias.coler joialias.col table ptc oalias.col ptc.alias.col = alias.col order by cast(tpc.alias.colpaircoualias.colt as float) / cast((tcalias.col.alias.colcoualias.colt * tcalias.col.alias.colcoualias.colt) as float)"
"select alias.col as alias.col, alias.col alias.col, coualias.colt(distialias.colct a.parealias.coltid) [self-aalias.colswered], coualias.colt(*) [questioalias.cols], coalias.colvert(decimal(alias.col,alias.col),alias.col) * coualias.colt(distialias.colct a.parealias.coltid) / coualias.colt(*) [peralias.colalias.coltage], raalias.colk() over (order by coalias.colvert(decimal(alias.col,alias.col),alias.col) * coualias.colt(distialias.colct a.parealias.coltid) / coualias.colt(*) desc) [raalias.colk] from table q left joialias.col table a oalias.col alias.col = a.parealias.coltid aalias.cold alias.col = a.owalias.coleruserid where alias.col is alias.colot alias.colull aalias.cold alias.col = alias.col group by alias.col havialias.colg coualias.colt(*) > alias.col order by case whealias.col alias.col != alias.col## thealias.col alias.col ealias.cold, peralias.colalias.coltage desc"
"select alias.col as alias.col, alias.col, alias.col from table where alias.col < alias.col aalias.cold tealias.colt like alias.col ... aalias.cold alias.col(tealias.colt) < alias.col order by alias.col desc"
"select top alias.col alias.col as [post lialias.colk], alias.col, a.creatioalias.coldate from table as a ialias.colalias.coler joialias.col table as q oalias.col a.parealias.coltid = alias.col ialias.colalias.coler joialias.col table as ph oalias.col alias.col = alias.col where ph.tabletypeid != alias.col aalias.cold alias.col > alias.col aalias.cold alias.col < alias.col aalias.cold alias.col <= alias.col group by alias.col, alias.col, a.creatioalias.coldate order by alias.col desc, a.creatioalias.coldate desc"
"select top alias.col## alias.col as alias.col, alias.col, alias.col from table where alias.col > alias.col() - alias.col## order by alias.col desc"
"select top alias.col owalias.coleruserid as [user lialias.colk], coualias.colt(*) as postcoualias.colt, sum(alias.col) as totalalias.col from table where alias.col=alias.col aalias.cold owalias.coleruserid != alias.col aalias.cold creatioalias.coldate >= coalias.colvert(datetime, coalias.colvert(ialias.colt, alias.col()) - alias.col) group by owalias.coleruserid order by coualias.colt(*) desc"
"select alias.col, coualias.colt(*) from table ph left joialias.col tabletypes pht oalias.col ph.tabletypeid = alias.col where alias.col = alias.col aalias.cold ph.tabletypeid ialias.col (alias.col) group by alias.col with cube"
declare alias.col ialias.colt = ##userid## select table.tagalias.colame from table ialias.colalias.coler joialias.col posttable oalias.col posttable.tagid = table.id ialias.colalias.coler joialias.col table oalias.col table.parealias.coltid = posttable.postid ialias.colalias.coler joialias.col table oalias.col table.postid = table.id aalias.cold alias.col = alias.col where table.owalias.coleruserid = alias.col
"select alias.col alias.col, alias.col alias.col from table p inner join table se on alias.col = alias.col and alias.col is not null where alias.col = alias.col:alias.col"
"select top alias.col alias.col as [post lialias.colk], alias.col from table as p ialias.colalias.coler joialias.col table as u oalias.col alias.col = p.owalias.coleruserid where alias.col = alias.col aalias.cold (body like x) aalias.cold u.realiastatioalias.col < alias.col aalias.cold p.score < alias.col order by alias.col"
"select alias.col as alias.col, alias.col as alias.col, alias.col as alias.col, alias.col as alias.col, alias.col as alias.col, p.lastactivitydate as [last active date] from table p where alias.col is alias.colot alias.colull aalias.cold alias.col > alias.col aalias.cold alias.col > alias.col aalias.cold ( alias.col(day, p.lastactivitydate, alias.col) > alias.col or alias.col(hour, alias.col, alias.col) < alias.col ) aalias.cold alias.colot exists (select alias.col from table ph where alias.col = alias.col aalias.cold ph.tabletypeid = alias.col )"
"select top alias.col alias.col as [user lialias.colk], u.reputatioalias.col, coualias.colt(*) as dowalias.coltable, (u.reputatioalias.col + alias.col.alias.col) / (coualias.colt(*) + alias.col.alias.col) as alias.col from table u joialias.col table p oalias.col alias.col = p.owalias.coleruserid joialias.col table v oalias.col alias.col = alias.col where u.reputatioalias.col > alias.col aalias.cold alias.col = alias.col group by alias.col, u.reputatioalias.col order by (u.reputatioalias.col + alias.col.alias.col) / (coualias.colt(*) + alias.col.alias.col)"
"create table table ( alias.col tealias.colt, alias.col ialias.colt ) ialias.colsert ialias.colto table (alias.col, alias.col) select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col ualias.colioalias.col all select alias.col, alias.col select rc.alias.col, rc.alias.col, ( select coualias.colt(alias.col) from table u where u.reputatioalias.col >= rc.alias.col ) as usercoualias.colt from table rc"
"selealias.col alias.col, count(alias.col) from ( selealias.col cast( cast(alias.col(alias.col, alias.col) as varchar) + alias.col + cast(alias.col(alias.col, alias.col) as varchar) + alias.col as datetime) alias.col, alias.col from table p join table pt on alias.col = alias.col join table t on alias.col = alias.col where alias.col in ( alias.col:string?sql-server## ) ) as alias.col group by alias.col, alias.col order by alias.col asc, alias.col asc"
"selealias.col top alias.col table.id as [user lialias.colk], (cast(coualias.colt(alias.col) as alias) / cast((selealias.col coualias.colt(*) from table p where p.owalias.coleruserid = table.id aalias.cold alias.col = alias.col) as alias) * alias.col) as selfaalias.colswerpercealias.coltage from table q ialias.colalias.coler joialias.col table a oalias.col q.acceptedaalias.colswerid = alias.col ialias.colalias.coler joialias.col table oalias.col table.id = q.owalias.coleruserid where q.owalias.coleruserid = a.owalias.coleruserid group by table.id, displayalias.colame havialias.colg coualias.colt(alias.col) > alias.col order by selfaalias.colswerpercealias.coltage desc"
"selealias.col top alias.col table.id as [user lialias.colk], coualias.colt(*) as alias.col, roualias.cold(avg(aalias.colswers.alias.col * alias.col / questioalias.cols.viewcoualias.colt),alias.col) as alias.col, roualias.cold(avg(aalias.colswers.alias.col),alias.col) as alias.col, roualias.cold(avg(questioalias.cols.viewcoualias.colt),alias.col) as alias.col from ( selealias.col cast(alias.col as alias.columeric) as alias.col, owalias.coleruserid, parealias.coltid from table where alias.col = alias.col ) as aalias.colswers ialias.colalias.coler joialias.col ( selealias.col table.id, alias.col, viewcoualias.colt from table ialias.colalias.coler joialias.col table oalias.col table.id = table.postid ialias.colalias.coler joialias.col table oalias.col table.tagid = table.id where table.alias.col = alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold table.tagalias.colame = alias.col aalias.cold viewcoualias.colt > alias.col ) as questioalias.cols oalias.col aalias.colswers.parealias.coltid = questioalias.cols.id ialias.colalias.coler joialias.col table oalias.col aalias.colswers.owalias.coleruserid = table.id group by table.id havialias.colg coualias.colt(*) > alias.col order by alias.col desc"
"select row_number() over(order by alias.col desc) as [#], table.id as [user link], table.alias.col from table where lower(location) like lower(x) order by alias.col desc;"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... order by alias.col desc;"
"with table as ( select alias.col(alias.col, alias.col) as year, alias.col(q, alias.col) as table, count(*) as total, sum(case when table.name = x then n else n end) as up, sum(case when table.name = x then n else n end) as down from table left join table on table.votetypeid=table.id group by alias.col(alias.col, alias.col),alias.col(q, alias.col) ) select year, table, up + down as table, cast(convert(numeric(n,n), cast(up as float) * n / (up+down)) as varchar(n)) + x as up, cast(convert(numeric(n,n), cast(down as float) * n / (up+down)) as varchar(n)) + x as down from table order by year, table"
"select top alias.col row_alias.columber() over(order by reputatioalias.col desc) as [#], id as [user lialias.colk], reputatioalias.col from table where lower(locatioalias.col) like x or upper(locatioalias.col) like x ... order by reputatioalias.col desc;"
"with usersquestioalias.colslatesttable as ( select alias.col as alias.col , max(table.creatioalias.coldate) as alias.col from table ialias.colalias.coler joialias.col table oalias.col table.postid = table.id where table.posttypeid = alias.col aalias.cold alias.col ialias.col (alias.col) group by table.alias.col ) select questioalias.cols.id as [post lialias.colk] , questioalias.cols.tags as alias.col , questioalias.cols.score as [questioalias.col score] , questioalias.cols.aalias.colswercoualias.colt as [# aalias.colswers] , users.reputatioalias.col as [alias.col questioalias.cols. this sets up a roughly circular queue:"
"select row_number() over (order by count desc) rn, count, tagname from table order by count desc"
"select alias.col , alias.col as alias.col , commealias.colt , tealias.colt from table where alias.col = alias.col aalias.cold tabletypeid = alias.col aalias.cold tealias.colt like alias.col select alias.col , row_alias.columber() over (order by alias.col asc) , owalias.coleralias.col as alias.col from table where alias.col = alias.col"
"declare alias.col ialias.colt = ##threshold## select top alias.col [post lialias.colk] = alias.col, sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) - sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as [alias.coletuptable], p.viewcoualias.colt as [views], roualias.cold(cast(sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) - sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as float) / cast(p.viewcoualias.colt as float) * alias.col, alias.col) as alias.col from table p ialias.colalias.coler joialias.col table v oalias.col alias.col=alias.col where p.viewcoualias.colt > alias.col group by alias.col, p.viewcoualias.colt order by alias.col desc"
"select coualias.colt(alias.col) as [alias.columber of table], avg(alias.col) as [average alias.col] from table where year(alias.col) = alias.col"
"select alias.col as alias.col, alias.col as alias.col, max(alias.col) as alias.col from table a joialias.col table q oalias.col alias.col = alias.col joialias.col table p oalias.col alias.col = alias.col where alias.col = alias.col## aalias.cold alias.col = alias.col aalias.cold alias.col < alias.col group by alias.col, alias.col order by alias.col desc"
"declare alias.col bigialias.colt declare table bigialias.colt declare table decimal(alias.col,alias.col) declare table decimal(alias.col,alias.col) selealias.col alias.col = sum(alias.col) from table selealias.col table = coualias.colt(alias.col) from table where alias.col > alias.col selealias.col table = sum(alias.col) from (selealias.col top(alias.col) percealias.colt alias.col as alias.col from table order by alias.col desc) as alias.col selealias.col table = sum(alias.col) from (selealias.col top(alias.col) percealias.colt alias.col as alias.col from table order by alias.col) as alias.col selealias.col alias.col totalalias.col, table usercoualias.colt, table topalias.colalias.coltotal, table bottomalias.colalias.coltotal, cast((table/alias.col)*alias.col as decimal(alias.col,alias.col)) topalias.colpercealias.coltageofalias.col, cast((table/alias.col)*alias.col as decimal(alias.col,alias.col)) bottomalias.colpercealias.coltageofalias.col"
"select top alias.col table.id as [post lialias.colk], table.score from table joialias.col table oalias.col table.id = table.postid joialias.col table oalias.col table.tagid = table.id where table.tagalias.colame like alias.col group by table.id, table.score order by table.score desc;"
"select ( (alias.col(alias.col)*alias.col) + ((qaalias.colswers * alias.col)/alias.col) + asalias.col )/( power( (qageialias.colhours+alias.col) - ((qageialias.colhours - alias.col)/alias.col), alias.col.alias.col) ) as hotalias.coless , alias.col from ( select viewcoualias.colt as alias.col , aalias.colswercoualias.colt as qaalias.colswers , alias.col as alias.col , (select sum(alias.col) from table where parealias.coltalias.col = q.alias.col) as asalias.col , alias.col(alias.col, creatioalias.coldate, alias.col()) as qageialias.colhours , alias.col(alias.col, lastactivitydate, alias.col()) as alias.col , alias.col from table q where q.posttypealias.col = alias.col ) alias.col order by alias.col desc"
"select alias.col+convert(varchar,alias.col)+alias.col+convert(varchar,alias.col) alias.col, postalias.col as alias.col, comment, creationdate, alias.col from table where owneruseralias.col = ##useralias.col## and alias.col is not null order by alias.col desc"
"with table as ( selealias.col alias.col, ( selealias.col coualias.colt(*) as alias.col from table pt joialias.col table pp oalias.col alias.col = alias.col joialias.col table pa oalias.col alias.col = alias.col joialias.col table v oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold pa.commualias.colityowalias.coleddate is alias.colull ) as uptable, ( selealias.col coualias.colt(*) as alias.col from table pt joialias.col table pp oalias.col alias.col = alias.col joialias.col table pa oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold pa.commualias.colityowalias.coleddate is alias.colull ) as aalias.colswers from table t cross apply ( selealias.col coualias.colt(*) as alias.col from table pt where alias.col = alias.col havialias.colg coualias.colt(*) >= alias.col ) pt ) selealias.col raalias.colk() over (order by roualias.cold(cast(uptable as decimal) / alias.colullif(aalias.colswers, alias.col), alias.col) desc ) raalias.colk, tagalias.colame as [table], uptable as [uptable], aalias.colswers as [aalias.colswers], roualias.cold(cast(uptable as decimal) / alias.colullif(aalias.colswers, alias.col), alias.col) as [avg uptable / aalias.colswer] from table order by alias.col desc"
selealias.col top ##numtable:alias.col alias.col as alias.col from table where alias.col >= ##alias.col:alias.col and alias.col > cast(alias.col:alias.col as alias.col) order by newalias.col()
select avg(alias.col) as alias.col from table
"declare @userid int = ##userid## select alias.col as alias.col, count(distinct ph.revisionguid) as alias.col from table ph where ph.tabletypeid in (alias.col) and alias.col not in (select alias.col from table p where alias.col = alias.col) group by alias.col order by alias.col desc"
"select alias.col, alias.col, alias.col(alias.col, alias.col, alias.col) as alias.col, (alias.col / alias.col(alias.col, alias.col, alias.col())) as alias.col from table order by alias.col"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where location like x order by alias.col desc;"
"select top alias.col alias.col as [user lialias.colk], b.questioalias.cols from table as a ialias.colalias.coler joialias.col ( select owalias.coleruserid, coualias.colt(*) as questioalias.cols from table where parealias.coltid is alias.colull group by owalias.coleruserid ) as b oalias.col alias.col = b.owalias.coleruserid order by b.questioalias.cols desc"
"with table as ( selealias.col alias.col as alias.col, maalias.col(alias.col) as alias.col from table where posttypealias.col = alias.col group by alias.col ) , table as ( selealias.col coualias.colt(*) as asalias.col, sum(alias.col(q.alias.colaalias.colsweralias.col is alias.colull, alias.col, alias.col)) as alias.col, sum(alias.col(q.alias.colaalias.colsweralias.col is alias.colull aalias.cold a.alias.col > alias.col, alias.col, alias.col)) as votedalias.colotalias.col, sum(alias.col(a.alias.col is alias.colull, alias.col, alias.col)) as aalias.colswered from table q left outer joialias.col table a oalias.col q.alias.col = a.alias.col where q.posttypealias.col = alias.col ) selealias.col asalias.col, alias.col, votedalias.colotalias.col, (alias.col + votedalias.colotalias.col) as alias.colorvoted, cast(cast( (alias.col + votedalias.colotalias.col) / cast(asalias.col as float) *alias.col as decimal(alias.col,alias.col)) as varchar(alias.col)) + alias.col as alias.col, aalias.colswered from table"
"select alias.collialias.cols.col alias.cols alias.collialias.cols.col, alias.collialias.cols.col, alias.collialias.cols.col, alias.collialias.cols.col from ( select alias.collialias.cols.col alias.cols alias.collialias.cols.col, alias.collialias.cols.col alias.cols alias.collialias.cols.col, (calias.colse whealias.collialias.cols.col alias.collialias.cols.col is alias.collialias.cols.colull thealias.collialias.cols.col alias.collialias.cols.col else alias.collialias.cols.col ealias.collialias.cols.cold) alias.cols alias.collialias.cols.col, (select coualias.collialias.cols.colt(*) from talias.colble closed where closed.alias.collialias.cols.col = p.alias.collialias.cols.col alias.colalias.collialias.cols.cold closed.talias.colbletypealias.collialias.cols.col = alias.collialias.cols.col) alias.cols alias.collialias.cols.col, (select coualias.collialias.cols.colt(*) from talias.colble opealias.collialias.cols.coled where opealias.collialias.cols.coled.alias.collialias.cols.col = p.alias.collialias.cols.col alias.colalias.collialias.cols.cold opealias.collialias.cols.coled.talias.colbletypealias.collialias.cols.col = alias.collialias.cols.col) alias.cols alias.collialias.cols.col from talias.colble p where p.posttypealias.collialias.cols.col = alias.collialias.cols.col ) alias.col where alias.collialias.cols.col > alias.collialias.cols.col order by (alias.collialias.cols.col + alias.collialias.cols.col) desc, alias.collialias.cols.col desc, alias.collialias.cols.col desc"
"select top alias.col alias.col as [user lialias.colk], (alias.col + dowalias.colvotes) as alias.col, alias.col as alias.col, dowalias.colvotes alias.col from table order by alias.col desc"
"select alias.col, alias.col as alias.col from table where body like x order by lastactivitydate asc"
"declare @mialias.colquesalias.colioalias.colcoualias.colalias.col ialias.colalias.col = alias.col declare alias.col ialias.colalias.col = alias.col selecalias.col alias.col, alias.col, alias.col from ( selecalias.col alias.colop (alias.col) alias.col as alias.col, coualias.colalias.col(alias.col) as ualias.colaalias.colsweredcoualias.colalias.col, alias.col.coualias.colalias.col as quesalias.colioalias.colcoualias.colalias.col from alias.colable q ialias.colalias.coler joialias.col alias.colable palias.col oalias.col alias.col = palias.col.posalias.colid ialias.colalias.coler joialias.col alias.colable alias.col oalias.col palias.col.alias.colagid = alias.col.id where (q.posalias.colalias.colypeid = alias.col) aalias.cold (q.closeddaalias.cole is alias.colull) aalias.cold alias.coloalias.col exisalias.cols ( selecalias.col alias.col from alias.colable a where (a.parealias.colalias.colid = alias.col) aalias.cold ((alias.col > alias.col) or (alias.col = q.accepalias.coledaalias.colswerid)) ) group by alias.col, alias.col.coualias.colalias.col order by quesalias.colioalias.colcoualias.colalias.col desc ) uqalias.col, ( selecalias.col alias.col as alias.col, alias.col as alias.col, coualias.colalias.col(alias.col) as aalias.colswerscoualias.colalias.col from alias.colable alias.col joialias.col alias.colable palias.col oalias.col palias.col.alias.colagid = alias.col.id joialias.col alias.colable p oalias.col alias.col = palias.col.posalias.colid joialias.col alias.colable as aalias.colswers oalias.col aalias.colswers.parealias.colalias.colid = alias.col joialias.col alias.colable u oalias.col alias.col = aalias.colswers.owalias.coleralias.col group by alias.col, alias.col ) usalias.col where uqalias.col.quesalias.colioalias.colcoualias.colalias.col > @mialias.colquesalias.colioalias.colcoualias.colalias.col aalias.cold usalias.col = alias.col"
"select count, (x + tagname + x + tagname) as tagname, alias.col as [post link], wikipostid as [post link] from table t left join table pe on alias.col = alias.col left join table pw on alias.col = alias.col where alias.col is null or wikipostid is null or len(pe.body) = n or len(pw.body) = n order by count desc"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... order by alias.col desc;"
"set alias.colocoualias.colt oalias.col select top alias.col alias.col as [post lialias.colk] , alias.col from table p where p.commualias.colityowalias.coleddate is alias.colull aalias.cold p.closeddate is alias.colull order by alias.col desc"
"select case when alias.col < alias.col then alias.col else alias.col end alias.col, alias.col, count(*) alias.col from table where alias.col is not null group by alias.col order by alias.col desc"
"select alias.col, alias.col, alias.col, alias.col from table q ialias.colalias.coler joialias.col table a oalias.col alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold alias.col = alias.col where a.owalias.coleruserid = alias.col## order by alias.col desc"
"select alias.col(hour, creatioalias.coldate), coualias.colt(*) from table where alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold creatioalias.coldate >= alias.col(moalias.colth, alias.col, getdate()) group by alias.col(hour, creatioalias.coldate)"
"select top alias.col alias.col as [user lialias.colk], roualias.cold((alias.col.alias.col * dowalias.colvotes) / alias.col, alias.col) as alias.col, alias.colutatioalias.col as alias.col, alias.col as alias.col, dowalias.colvotes alias.col from table where alias.colutatioalias.col > ##mialias.colalias.col## aalias.cold dowalias.colvotes > ##mialias.coldowalias.colvotes## aalias.cold alias.col > alias.col order by alias.col desc"
"declare @locatioalias.col alias.colvarchar(alias.col) = ##locatioalias.col## select top(alias.col) alias.col, u.displayalias.colame, u.reputatioalias.col, alias.col, alias.col, u.lastaccessdate from table u where u.locatioalias.col like @locatioalias.col order by u.reputatioalias.col desc"
"selealias.col alias.col, count(alias.col) from ( selealias.col cast( cast(alias.col(alias.col, alias.col) as varchar) + alias.col + cast(alias.col(alias.col, alias.col) as varchar) + alias.col as datetime) alias.col, alias.col from table p join table pt on alias.col = alias.col join table t on alias.col = alias.col where alias.col in (alias.colyz) ) as alias.col group by alias.col, alias.col order by alias.col asc, alias.col asc"
"select row_number() over(order by alias.col desc) as position ,displayname ,alias.col ,age ,websiteurl ,alias.col ,location ,x + convert(varchar(n), id) as profileurl from table(nolock) where alias.col like alias.col and ( location like alias.col or location like alias.col or location like alias.col or location like alias.col or location like alias.col or location like alias.col ) order by alias.col asc"
"select alias.col as alias.col, owalias.coleruseralias.col as alias.col from table where posttypealias.col = alias.col aalias.cold (body like x or body like x or body like x or body like x or body like xx )"
"selealias.col top alias.col a.owalias.coleruserid as [user lialias.colk], cast( sum( q.viewcoualias.colt ) as float ) / sum( alias.col ), sum( alias.col ) as alias.col, sum( q.viewcoualias.colt ) as alias.col, coualias.colt( * ) as alias.col from table a joialias.col table q oalias.col alias.col = a.parealias.coltid group by a.owalias.coleruserid havialias.colg coualias.colt(*) > alias.col order by alias.col"
"DECLARE @PostId INT = ##PostId##; SELECT p.Id AS [Post Link] , CASE p.PostTypeId WHEN N THEN X WHEN N THEN X ELSE X END AS [Q/A] , p.Score , p.ViewCount , CONVERT (VARCHAR(N), p.CreationDate, N) FROM Posts p WHERE p.Id IN ( SELECT q.id FROM Posts q WHERE q.id = @PostId UNION ALL SELECT a.Id FROM Posts a WHERE a.ParentId = @PostId ) ORDER BY P.Id"
"select alias.col as alias.col, alias.col, alias.col, alias.col, alias.col, alias.col from table p where p.posttypealias.col = alias.col aalias.cold p.owalias.coleruseralias.col = ##useralias.col## order by alias.col desc"
select top alias.col alias.col as [post lialias.colk] from table p left outer joialias.col table c oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table pt oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table t oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col is alias.colull aalias.cold t.tagalias.colame =x aalias.cold aalias.colswercoualias.colt = alias.col aalias.cold p.score > alias.col aalias.cold closeddate is alias.colull
"declare @alias.col ialias.colt = ##alias.col## select top alias.col table.text, table.alias.col, table.id as [post lialias.colk], table.parealias.coltid as [post lialias.colk] from table ialias.colalias.coler joialias.col table oalias.col table.postid = table.id where alias.col = @alias.col order by alias.col desc"
"create table table (questioalias.colid ialias.colt primary key, questioalias.colowalias.coleracalias.colptedperalias.colalias.colt float) ialias.colsert table select top alias.col alias.col as questioalias.colid, (select (sum(case whealias.col subq.acalias.colptedaalias.colswerid is alias.colot alias.colull thealias.col alias.col else alias.col ealias.cold)*alias.col.alias.col/coualias.colt(*)) as acalias.colptedperalias.colalias.colt from table subq where alias.col = alias.col aalias.cold subq.owalias.coleruserid = q.owalias.coleruserid) as questioalias.colowalias.coleracalias.colptedperalias.colalias.colt from table q joialias.col table u oalias.col alias.col = q.owalias.coleruserid where (select coualias.colt(*) from table a where alias.col = alias.col aalias.cold a.parealias.coltid = alias.col aalias.cold alias.col > alias.col) = alias.col aalias.cold alias.col = alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold closeddate is alias.colull aalias.cold q.parealias.coltid is alias.colull aalias.cold q.alias.col >= alias.col aalias.cold acalias.colptedaalias.colswerid is alias.colull aalias.cold datediff(day, q.creatioalias.coldate, getdate()) > alias.col aalias.cold datediff(moalias.colth, q.creatioalias.coldate, getdate()) < alias.col aalias.cold u.reputatioalias.col > alias.col order by questioalias.colowalias.coleracalias.colptedperalias.colalias.colt desc select top alias.col ua.questioalias.colid as [post lialias.colk], roualias.cold( (us.reputatioalias.col / alias.col.alias.col + alias.col * alias.col + roualias.cold(ua.questioalias.colowalias.coleracalias.colptedperalias.colalias.colt, alias.col)), alias.col) as alias.col, roualias.cold(ua.questioalias.colowalias.coleracalias.colptedperalias.colalias.colt, alias.col) as questioalias.colowalias.coleracalias.colptedperalias.colalias.colt , row_alias.columber() over (order by alias.col desc) from table ua joialias.col table p oalias.col ua.questioalias.colid = alias.col joialias.col table us oalias.col alias.col = p.owalias.coleruserid where questioalias.colowalias.coleracalias.colptedperalias.colalias.colt > alias.col order by alias.col desc"
select top alias.col alias.col from table where parealias.coltalias.col is alias.colull aalias.cold creatioalias.coldate betweealias.col alias.colalias.colalias.col aalias.cold alias.colalias.colalias.col order by alias.col desc
"select table.tagalias.colame, avg(tablecore.score) as alias.col, coualias.colt(*) as alias.col from table ialias.colalias.coler joialias.col table oalias.col table.id = table.postid ialias.colalias.coler joialias.col table oalias.col table.tagid = table.id ialias.colalias.coler joialias.col (select table.postid, sum(case alias.col whealias.col alias.col thealias.col alias.col else alias.col ealias.cold) as score from table where alias.col ialias.col (alias.col) group by table.postid) as tablecore oalias.col tablecore.postid = table.id group by table.tagalias.colame havialias.colg table.tagalias.colame = x order by alias.col desc"
"declare @tag varchar(alias.col) = ##tag:strialias.colg## select top alias.col alias.col as [post lialias.colk], alias.col, viewcoualias.colt as views, aalias.colswercoualias.colt as aalias.colswers, body, creatioalias.coldate from table where acceptedaalias.colsweralias.col is alias.colull aalias.cold posttypealias.col = alias.col aalias.cold creatioalias.coldate < getdate() - alias.col aalias.cold closeddate is alias.colull aalias.cold tags like x ... + lower(@tag) + x order by creatioalias.coldate desc"
select alias.col from table
"select top alias.col table.id as [post lialias.colk], table.viewcoualias.colt as [view coualias.colt] from table where table.posttypeid = alias.col aalias.cold table.viewcoualias.colt >= alias.col order by table.viewcoualias.colt desc"
"select alias.col, text, alias.col, alias.col, alias.col from table where alias.col >= alias.col order by alias.col desc, alias.col asc;"
declare @question int = n declare alias.col int = n declare alias.col int = ##userid## select alias.col as alias.col from table where alias.col = alias.col and alias.col = alias.col
select alias.col from table where alias.col = alias.col;
with caalias.coldidatetable as ( select alias.col alias.col from table p where alias.col = alias.col## aalias.cold alias.col = alias.col aalias.cold alias.col > alias.col ) select palias.col.id as [post lialias.colk] from table palias.col joialias.col caalias.coldidatetable cp oalias.col cp.alias.col = palias.col.alias.col where palias.col.owalias.coleruserid <> alias.col##
"select top alias.col alias.col, displayalias.colame, reputatioalias.col, alias.col, locatioalias.col from table where locatioalias.col like alias.colx order by reputatioalias.col desc"
"declare alias.col ialias.colt = ##userid## create table table (alias.col ialias.colt, [coualias.colt] ialias.colt) ialias.colsert table select top alias.col alias.col, coualias.colt(*) as uptable from table ialias.colalias.coler joialias.col posttable oalias.col posttable.alias.col = table.id ialias.colalias.coler joialias.col table oalias.col table.parealias.coltid = posttable.postid ialias.colalias.coler joialias.col table oalias.col table.postid = table.id aalias.cold alias.col = alias.col where table.owalias.coleruserid = alias.col group by alias.col order by uptable desc create table table (id ialias.colt primary key) ialias.colsert table select alias.col from table q where (select coualias.colt(*) from table a where a.parealias.coltid = alias.col aalias.cold alias.col > alias.col) = alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold closeddate is alias.colull aalias.cold q.parealias.coltid is alias.colull aalias.cold acceptedaalias.colswerid is alias.colull select top alias.col alias.col as [post lialias.colk], (sum(t.[coualias.colt]) / alias.col.alias.col + us.reputatioalias.col / alias.col.alias.col + alias.col * alias.col) as alias.col from table u joialias.col table p oalias.col alias.col = alias.col joialias.col posttable pt oalias.col alias.col = alias.col joialias.col table t oalias.col t.alias.col = pt.alias.col joialias.col table us oalias.col alias.col = p.owalias.coleruserid group by alias.col, us.reputatioalias.col, alias.col order by alias.col desc"
"select top alias.col alias.col as [post lialias.colk], pt.alias.colame as alias.col, p.owalias.coleruserid as [user lialias.colk] from table p joialias.col table pt oalias.col alias.col = alias.col where alias.col=alias.col aalias.cold alias.col like alias.col ..."
"select alias.col(year, creationdate) year, alias.col(month, creationdate) month, count(*) count from table where alias.col in (alias.col), alias.col(month, creationdate) order by alias.col(year, creationdate), alias.col(month, creationdate)"
"select table.id as alias.col, table.score from table where alias.col is alias.colull aalias.cold posttypeid = alias.col aalias.cold id alias.colot ialias.col ( select table.postid from table ) aalias.cold id ialias.col ( select table.postid from table where table.votetypeid = alias.col ) order by table.id desc;"
"select alias.col as alias.col, count(*) as alias.col, min(alias.col) as alias.col from table a, table b where alias.col = alias.col## and alias.col = alias.col and alias.col > alias.col and alias.col <= alias.col(hour, n, b.creationdate) group by alias.col order by alias.col desc"
"declare @tagx alias.colvarchar(max) = ##bob:strialias.colg## select top alias.col tagalias.colame, table.coualias.colt from table where coualias.colt > alias.col order by table.coualias.colt desc"
"declare @tN table( person_id int, item_name varchar(N), item_value varchar(N) ); insert into @tN values (XYZ); insert into @tN values (XYZ); insert into @tN values (XYZ) insert into @tN values (XYZ); insert into @tN values (XYZ); Select person_id as X, case WHEN item_name = X then item_value end as X, case WHEN item_name = X then item_value end as X, case WHEN item_name = X then item_value end as X From @tN where person_id = N"
"select coalias.colvert(date, alias.col) as alias.col, coualias.colt(*) as alias.col from table p joialias.col table pt oalias.col alias.col = alias.col aalias.cold alias.col = alias.col where p.owalias.coleruserid = alias.col## group by coalias.colvert(date, alias.col) order by alias.col desc;"
"select alias.col, alias.col, alias.col from table where alias.col >= alias.col aalias.cold ealias.colists (select alias.col from table b where b.useralias.col = table.alias.col aalias.cold b.alias.colame = alias.col) aalias.cold ealias.colists (select alias.col from table b where b.useralias.col = table.alias.col aalias.cold b.alias.colame = alias.col) aalias.cold ealias.colists (select alias.col from table b where b.useralias.col = table.alias.col aalias.cold b.alias.colame = alias.col) aalias.cold ealias.colists (select alias.col from table b where b.useralias.col = table.alias.col aalias.cold b.alias.colame = alias.col) aalias.cold ealias.colists (select alias.col from table b where b.useralias.col = table.alias.col aalias.cold b.alias.colame = alias.col) aalias.cold ealias.colists (select alias.col from table b where b.useralias.col = table.alias.col aalias.cold b.alias.colame = alias.col) order by alias.col desc"
"select top alias.col alias.col as [post lialias.colk], alias.col from table where lastactivitydate> alias.col aalias.cold alias.col is alias.colot alias.colull aalias.cold alias.col alias.colot like alias.col aalias.cold lower(alias.col) like alias.col ... ;"
"select top alias.col alias.col as [post lialias.colk], alias.col+coalias.colvert(varchar,alias.col)+alias.col+coalias.colvert(varchar,alias.col) [lialias.colk], alias.col, rejectioalias.coldate, commealias.colt from table where owalias.coleruseralias.col is alias.colull order by alias.col desc"
"select top alias.col coualias.colt(alias.col) as [alias.colquoted] , alias.col, coualias.colt(*) over (partitioalias.col by alias.col), ta.uid as [user lialias.colk] from ( select p.owalias.coleruserid as uid, p.id as pid , substrialias.colg ( p.urlbody, alias.col, case whealias.col charialias.coldex(x, p.urlbody) > charialias.coldex(x, p.urlbody) thealias.col charialias.coldex(x, p.urlbody) else charialias.coldex(x, p.urlbody) ealias.cold ) as url from ( select substrialias.colg ( body, charialias.coldex(x, upper(body)) + alias.col, alias.col ) as urlbody, id, owalias.coleruserid from table where upper(body) like x aalias.cold year(creatioalias.coldate) = alias.col aalias.cold moalias.colth(creatioalias.coldate) = alias.col ) p ) as ta group by alias.col, ta.uid havialias.colg coualias.colt(distialias.colct ta.uid) > alias.col order by coualias.colt(alias.col) / coualias.colt(distialias.colct ta.uid) desc"
"select top alias.col alias.col as [post lialias.colk], alias.col as alias.col, alias.col as alias.col, viewcoualias.colt as alias.col, alias.col(day, p.creatioalias.coldate, currealias.colt_timestamp) as age, p.viewcoualias.colt / alias.col(day, p.creatioalias.coldate, currealias.colt_timestamp) as alias.col from table p where p.viewcoualias.colt > alias.col aalias.cold p.commualias.colityowalias.coleddate is alias.colull aalias.cold p.viewcoualias.colt / alias.col(day, p.creatioalias.coldate, currealias.colt_timestamp) > alias.col order by alias.col desc"
"set alias.colocoualias.colt oalias.col declare @tabletats table (alias.col ialias.colt, alias.col ialias.colt, dowalias.col ialias.colt) declare table table (questioalias.colid ialias.colt, alias.col ialias.colt, dowalias.col ialias.colt) ialias.colsert @tabletats select alias.col, alias.col = sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold), dowalias.col = sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) from table where alias.col ialias.col (alias.col) groalias.col by alias.col set alias.colocoualias.colt off ialias.colsert table select alias.col as questioalias.colid, alias.col, dowalias.col from @tabletats joialias.col table p oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold dowalias.col > alias.col select top alias.col alias.col as tableid, questioalias.colid as [post lialias.colk], alias.col, dowalias.col, ph.commealias.colt as commealias.colt from table joialias.col table ph oalias.col questioalias.colid = ph.alias.col where ph.tabletypeid = alias.col order by dowalias.col desc"
"declare @dayssialias.colceaalias.colivity ialias.colt = ##dayssialias.colceaalias.colivity## selealias.col top ##alias.columberoftable## table.id as alias.col, table.displayalias.colame as alias.col, coualias.colt(table.id) as alias.col, cast(avg(cast(alias.col as float)) as alias.columeric(alias.col,alias.col)) as [average aalias.colswer alias.col] from table ialias.colalias.coler joialias.col table oalias.col table.id = owalias.coleruserid where alias.col = alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull aalias.cold closeddate is alias.colull aalias.cold table.lastaccessdate > dateadd(day, @dayssialias.colceaalias.colivity, getdate()) group by table.id, table.displayalias.colame havialias.colg coualias.colt(table.id) > alias.col order by [average aalias.colswer alias.col] desc"
"select alias.col, alias.col, alias.col, commealias.colt from table where alias.col = alias.col order by creatioalias.coldate"
"declare @laalias.colguage alias.colvarchar(alias.col) = x select alias.col, max(alias.col) as alias.col, mialias.col(alias.col) as alias.col, alias.col(secoalias.cold, max(alias.col), mialias.col(alias.col)) as alias.col, alias.col from table q, table a where alias.col = alias.col aalias.cold alias.col = a.parealias.coltid aalias.cold charialias.coldex(@laalias.colguage, alias.col) != alias.col group by alias.col, alias.col order by alias.col"
"select top alias.col:ialias.colt?alias.col alias.col as alias.col,max(alias.col) as alias.col,max(alias.col) as alias.col from table alias.col ialias.colalias.coler joialias.col table l oalias.col alias.col=alias.col ialias.colalias.coler joialias.col table o oalias.col alias.col=alias.col ialias.colalias.coler joialias.col table alias.cola oalias.col alias.col=alias.col or alias.col=alias.col ialias.colalias.coler joialias.col table oa oalias.col alias.col=alias.col or alias.col=alias.col where alias.col=alias.col group by alias.col havialias.colg max(alias.cola.score)-max(oa.score)>=##threshold:ialias.colt?alias.col"
"declare alias.col int = ##userid## declare table cursor for select count(distinct ph.revisionguid) from table ph where alias.col = alias.col and ph.tabletypeid in (alias.col) and alias.col not in (select alias.col from table p where alias.col = alias.col) open table declare alias.col varchar(n) declare alias.col varchar(n) declare alias.col varchar(n) declare table int fetch nealias.colt from table into table set alias.col = n - table set alias.col = n - table set alias.col = n - table if alias.col < n begin set alias.col = alias.col end if alias.col < n begin set alias.col = alias.col end if alias.col < n begin set alias.col = alias.col end select alias.col as alias.col, alias.col as alias.col, alias.col as alias.col, table as alias.col"
"select alias.col, alias.col from ( select alias.col alias.col, sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as [alias.coloalias.col zero score aalias.colswers], sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as [zero score aalias.colswers], roualias.cold(avg(case whealias.col alias.col = alias.col thealias.col alias.col.alias.col else alias.col.alias.col ealias.cold), alias.col) as peralias.colalias.coltage from table q joialias.col table a oalias.col alias.col = q.acalias.colptedaalias.colswerid where a.commualias.colityowalias.coleddate is alias.colull aalias.cold alias.col is alias.colot alias.colull aalias.cold alias.col <> isalias.colull(q.owalias.coleruserid,alias.col) group by alias.col havialias.colg sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) > alias.col ) as x joialias.col table u oalias.col alias.col = alias.col order by x.peralias.colalias.coltage desc"
"select alias.col as alias.col, alias.col as alias.col, alias.col as alias.col, alias.col as alias.col from table p where alias.col = alias.col## and alias.col is null order by alias.col desc"
"select table.id, table.tealias.colt from table ialias.colalias.coler joialias.col table oalias.col table.postid = table.id where table.owalias.coleruserid = alias.col aalias.cold table.userid = alias.col aalias.cold table.tealias.colt like alias.col"
select top alias.col alias.col from table order by alias.col desc
"selealias.col avg(cast(alias.col(alias.col, -floor(alias.col(alias.col, alias.col))) as bigialias.colt)) as useralias.col, sum(case whealias.col alias.col is alias.colull thealias.col alias.col else alias.col ealias.cold) / cast(coualias.colt(table.id) as float) as x from table ialias.colalias.coler joialias.col table oalias.col (table.id = table.owalias.coleruserid) where alias.col = alias.col group by alias.col(alias.col, -floor(alias.col(alias.col, alias.col))) order by useralias.col;"
"select alias.col, count(tablealias.col) as [table], count(tablealias.col) as [table], count(alias.col) as alias.col, count(alias.col) as alias.col, count(alias.col) as alias.col from ( select alias.col(year, creationdate) * n + alias.col(month, creationdate) as active, n as alias.col, n as tablealias.col, null as tablealias.col, null as alias.col, null as alias.col from table union all select alias.col(year, creationdate) * n + alias.col(month, creationdate) as active, n as alias.col, null as tablealias.col, n as tablealias.col, null as alias.col, null as alias.col from table union all select alias.col(year, creationdate) * n + alias.col(month, creationdate) as active, n as alias.col, null as tablealias.col, null as tablealias.col, null as alias.col, n as alias.col from table union all select alias.col(year, creationdate) * n + alias.col(month, creationdate) as active, n as alias.col, null as tablealias.col, null as tablealias.col, n as alias.col, null as alias.col from table ) as a right join ( select distinct alias.col(year, creationdate) * n + alias.col(month, creationdate) as year_month from table ) as h on alias.col = alias.col group by alias.col"
"select top alias.col table.id as [user lialias.colk], max(alias.col) as alias.col, max(locatioalias.col) as locatioalias.col, max(websiteurl) as website, max(reputatioalias.col) as rep, coualias.colt(aalias.colswers.id) as aalias.colswers, sum(aalias.colswers.score) as score, cast(avg(cast(aalias.colswers.score as float)) as alias.columeric(alias.col,alias.col)) as [avg] from table joialias.col posttable oalias.col posttable.tagid = table.id joialias.col table oalias.col table.id = posttable.postid joialias.col table as aalias.colswers oalias.col aalias.colswers.parealias.coltid = table.id joialias.col table oalias.col table.id = aalias.colswers.owalias.coleruserid where table.tagalias.colame ialias.col (alias.col) group by table.id, displayalias.colame order by sum(aalias.colswers.score) desc"
select alias.col from table where alias.col = alias.col;
"select alias.col alias.col, alias.col, alias.col, coualias.colt(alias.col) from table a ialias.colalias.coler joialias.col table q oalias.col alias.col = alias.col aalias.cold alias.col = alias.col ialias.colalias.coler joialias.col table u oalias.col alias.col = alias.col where alias.col = alias.col group by alias.col, alias.col, alias.col, q.creatioalias.coldate havialias.colg coualias.colt(alias.col) > alias.col order by coualias.colt (alias.col) desc"
"select table.id, alias.col, lastactivitydate, alias.col, body, table, acceptedanswerid from table inner join table on table.id = table.postid inner join table on table.id = table.tagid where table.tagname = alias.col and alias.col > alias.col"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... or location like x and alias.col >= n order by alias.col desc;"
"select alias.col, alias.col alias.col, alias.col alias.col, alias.col alias.col, alias.col alias.col from table q joialias.col table ajs oalias.col alias.col=alias.col aalias.cold alias.col=alias.col aalias.cold alias.col=alias.col joialias.col table a oalias.col a.parealias.coltid=alias.col aalias.cold a.owalias.coleruserid=alias.col## aalias.cold alias.col=alias.col joialias.col table accepted oalias.col alias.col=q.acceptedaalias.colswerid aalias.cold alias.col=alias.col joialias.col table uaccepted oalias.col ualias.col=accepted.owalias.coleruserid where alias.col=alias.col aalias.cold alias.col>alias.col;"
"declare @answers int, @questions int, @askers int, @answerers int, @goodanswers int, @goodquestions int, @niceanswers int, @nicequestions int, @totalfavorites int, @avganswerscore float, @avgquestionscore float, @avgquestionviews float, @maalias.colanswerscore int, @maalias.colquestionscore int, @maalias.colquestionviews int declare table table( type varchar(n), items int, posters int, good int, nice int, favtotal int, maalias.colscore int, avgscore float, maalias.colviews int, avgviews float ) set nocount on insert into table select alias.col, count(alias.col), count(distinct p.owneruserid), sum(case when p.score > n then n else n end), sum(case when p.score > n then n else n end), sum(isnull(p.favoritecount,n)), maalias.col(score), round(avg(score + n.n),n), maalias.col(viewcount), round(avg(viewcount + n.n),n) from table p join table pt on alias.col = alias.col join table t on alias.col = alias.col where alias.col = alias.col:alias.col and alias.col is null insert into table select alias.col, count(alias.col), count(distinct pn.owneruserid), sum(case when pn.score > n then n else n end), sum(case when pn.score > n then n else n end), null, maalias.col(pn.score), round(avg(pn.score + n.n),n), null, null from table p join table pn on alias.col = alias.col join table pt on alias.col = alias.col join table t on alias.col = alias.col where alias.col = alias.col:alias.col set nocount off select alias.col from table;"
"with silvertagtable as (select max(table.alias.col) as alias.col from table inner join table t on alias.col = name group by useralias.col, name having (count(*)>n) and (count(*)<n)) select name, [useralias.col] as alias.col, alias.col as alias.col from table where name in (alias.col) union select name, [useralias.col] as alias.col, alias.col as alias.col from table inner join silvertagtable g on g.alias.col = table.alias.col order by alias.col desc"
"declare alias.col nvarchar(maalias.col) select alias.col = isnull(alias.col + alias.col,alias.col) + alias.colalias.col + alias.col(name) + alias.colalias.col + alias.col(name) + alias.colalias.colalias.col + alias.col(name) + alias.colalias.colalias.col + alias.col + alias.col(name) + alias.col from table d where ((alias.col not like alias.col) or alias.col=alias.col) and (alias.col not in (alias.colyz)) ealias.colec sp_ealias.colecutesql alias.col"
"with table as ( select alias.col, alias.col=coualias.colt(*) from table where alias.col=alias.col group by alias.col ) select table.id as [user lialias.colk], table.alias.col as [# of table], reputatioalias.col from table left joialias.col table oalias.col alias.col=table.id where reputatioalias.col < alias.col aalias.cold table.alias.col > alias.col order by reputatioalias.col / table.alias.col desc"
"create table table(id integer, type integer, msg nvarchar(max), ts datetime); insert into table values (xyz); insert into table values (xyz); insert into table values (xyz); insert into table values (xyz); insert into table values (xyz); insert into table values (xyz); insert into table values (xyz); with o as ( select id, ts, msg from table where type = n ) ,u as ( select id, ts, msg, (select top n id from o where o.ts < x.ts order by ts desc) as o_id from table x where type = n ) select o.msg ,(select u.msg + x from u where u.o_id = o.id for xml path(x)) as u_msg from o order by o.ts"
"with table as ( select alias.col as alias.col, alias.col as alias.col, row_alias.columber() over(partitioalias.col by alias.col order by alias.col) as alias.col, alias.col as alias.col, alias.col+table(day, alias.col, alias.col) as daysmembership from table b joialias.col table u oalias.col b.alias.col = alias.col where b.alias.colame = alias.col ), table as ( select alias.col, mialias.col(alias.col) firstwoalias.col from table group by alias.col ) select case table whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col else alias.col ealias.cold as [type], table as [user lialias.colk], table as [daysmembership], table(day, firstwoalias.col, alias.col) as [dayssialias.colalias.colalias.colst], be.alias.col as [member sialias.colalias.col], be.alias.col as [date woalias.col] from table be joialias.col table fe oalias.col table=fe.alias.col order by table desc, table asc"
"declare alias.col ialias.colt = ##userid## select alias.col, alias.col, alias.col from table ialias.colalias.coler joialias.col ( select table.id as alias.col, coualias.colt(*) as alias.col from table ialias.colalias.coler joialias.col posttable oalias.col posttable.alias.col = table.id ialias.colalias.coler joialias.col table oalias.col table.parealias.coltid = posttable.postid where table.owalias.coleruserid = alias.col aalias.cold table.posttypeid = alias.col group by table.id ) pc oalias.col pc.alias.col = table.id ialias.colalias.coler joialias.col ( select table.id as alias.col, coualias.colt(*) as alias.col from table ialias.colalias.coler joialias.col posttable oalias.col posttable.alias.col = table.id ialias.colalias.coler joialias.col table oalias.col table.parealias.coltid = posttable.postid ialias.colalias.coler joialias.col table oalias.col table.postid = table.id aalias.cold alias.col = alias.col where table.owalias.coleruserid = alias.col group by table.id ) vc oalias.col vc.alias.col = table.id order by alias.col desc"
declare @t table([alias.col] varchar(n)) insert into @t values (alias.col) insert into @t values (alias.col) insert into @t values (alias.col) insert into @t values (alias.col) insert into @t values (alias.col) insert into @t values (alias.col) insert into @t values (alias.col) select alias.col from @t where [alias.col] like alias.col and [alias.col] like alias.col ...
"select alias.col as alias.col, coualias.colt(alias.col) as coualias.colt from table t joialias.col posttable pt oalias.col alias.col = pt.alias.colid joialias.col table p oalias.col alias.col = alias.col joialias.col table u oalias.col alias.col = alias.col joialias.col table a oalias.col alias.col = alias.col where {alias.col alias.col()} - alias.col < alias.col * ##moalias.colths## group by alias.col order by coualias.colt desc"
select top alias.col alias.col from table where locatioalias.col=x order by table.views desc
"select row_number() over(order by alias.col desc) as [rank], id as [user link], alias.col from table where lower(location) like lower(x) order by alias.col desc;"
select top alias.col alias.col from table order by alias.col desc
"select top alias.col table.id as [post lialias.colk], alias.col, viewcoualias.colt from table, table where alias.col = alias.col aalias.cold viewcoualias.colt < alias.col aalias.cold alias.col = alias.col aalias.cold owalias.coleruserid = table.id aalias.cold reputatioalias.col < alias.col aalias.cold parealias.coltid is alias.colull aalias.cold acceptedaalias.colswerid is alias.colull aalias.cold closeddate is alias.colull aalias.cold table.creatioalias.coldate < dateadd(moalias.colth, alias.col, getdate()) aalias.cold lastaccessdate < dateadd(day, alias.col, getdate())"
"select alias.col, text, alias.col, alias.col, alias.col from table where alias.col >= alias.col order by alias.col desc, alias.col asc;"
select alias.col from table where alias.col = alias.col
"set alias.colocoualias.colt oalias.col declare @tabletats table (alias.col ialias.colt, alias.col ialias.colt, dowalias.col ialias.colt) ialias.colsert @tabletats select alias.col, alias.col = sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold), dowalias.col = sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) from table where alias.col ialias.col (alias.col) groalias.col by alias.col set alias.colocoualias.colt off select coualias.colt (*) from @tabletats joialias.col table p oalias.col alias.col = alias.col where alias.col > alias.col aalias.cold dowalias.col < (alias.col * alias.col.alias.col) aalias.cold p.commualias.colityowalias.coleddate is alias.colull aalias.cold p.closeddate is alias.colull"
"select top alias.col owalias.coleruserid as [user lialias.colk], coualias.colt(*) as postcoualias.colt, sum(alias.col) as totalalias.col from table where alias.col=alias.col aalias.cold owalias.coleruserid != alias.col group by owalias.coleruserid order by coualias.colt(*) desc"
"select top alias.col alias.col as [post lialias.colk], coualias.colt(distialias.colct ph.revisioalias.colguid) as [revisioalias.cols] from table as p ialias.colalias.coler joialias.col table as ph oalias.col alias.col = alias.col group by alias.col order by coualias.colt(distialias.colct ph.revisioalias.colguid) desc"
"declare @alias.col int = ##alias.col## select count(*) as alias.col, alias.col, alias.col as alias.col, text as text, alias.col as date from table where alias.col = @alias.col group by alias.col, alias.col, alias.col, text order by alias.col desc"
"DECLARE @UserId int = ##UserId##; WITH T as (SELECT COUNT(*) * N as Votes, Votes.CreationDate AS CreationDate FROM Posts INNER JOIN Votes ON Votes.PostId = Posts.Id and VoteTypeId = N WHERE Posts.OwnerUserId = @UserId AND Posts.CommunityOwnedDate IS NULL GROUP BY Votes.CreationDate) select * from T where Votes >= N"
"select alias.col ,alias.col ,alias.col ,alias.col ,alias.col ,alias.col + coalias.colvert(varchar(alias.col), alias.col) as alias.col from table(alias.cololock) where upper(locatioalias.col) like alias.colalias.col or locatioalias.col like alias.colalias.col or locatioalias.col like alias.colalias.col or upper(locatioalias.col) like alias.colalias.col or locatioalias.col like alias.colalias.col or upper(locatioalias.col) like alias.colalias.col or upper(locatioalias.col) like alias.colalias.col or locatioalias.col like alias.colalias.col or upper(locatioalias.col) like alias.colalias.col or locatioalias.col like alias.colalias.col order by alias.col desc"
"select avg(alias.col) as alias.col, avg(alias.col) as alias.col, avg(alias.col) + alias.col(alias.col) as alias.col, avg(alias.col) - alias.col(alias.col) as alias.col from table a ialias.colalias.coler joialias.col table q oalias.col alias.col = alias.col where alias.col = alias.col group by sigalias.col(alias.col)*roualias.cold(alias.col(abs(alias.col)+alias.col), alias.col) order by sigalias.col(alias.col)*roualias.cold(alias.col(abs(alias.col)+alias.col), alias.col)"
"selealias.col top(alias.col) alias.col, displayalias.colame, alias.col, reputatioalias.col, creatioalias.coldate, lastaccessdate, alias.col + cast(alias.col as varchar) as alias.col from table where alias.col is alias.colot alias.colull aalias.cold reputatioalias.col > alias.col order by alias.col asc, reputatioalias.col desc;"
"select alias.col from table where table.creationdate >= alias.col(day, n, getdate()) order by table.creationdate desc"
"select alias.col, alias.col, alias.col as alias.col, alias.col, p.lastactivitydate from table p left outer joialias.col table pt oalias.col alias.col = alias.col left outer joialias.col table t oalias.col alias.col = alias.col where alias.col like alias.col:alias.col aalias.cold alias.col <= alias.col(alias.col, alias.col, alias.col()) aalias.cold p.acceptedaalias.colswerid is alias.colull aalias.cold p.aalias.colswercoualias.colt = alias.col aalias.cold p.coalias.colealias.coltcoualias.colt <= alias.col aalias.cold p.closeddate is alias.colull order by p.lastactivitydate"
"select table.displayname, alias.col, table.name, count(*) from table join table on table.postid = table.id join table on table.votetypeid = table.id join table on table.owneruserid = table.id where table.id = alias.col## and table.name in (alias.col) group by table.displayname, alias.col, table.name"
"select mialias.col(alias.col) as alias.col, left(right(alias.col, alias.col(alias.col, alias.col(alias.col)) + alias.col), alias.col) as alias.col from table where posttypealias.col = alias.col group by left(right(alias.col, alias.col(alias.col, alias.col(alias.col)) + alias.col), alias.col) order by alias.col asc"
"declare alias.col ialias.colt = ##alias.col## declare alias.col ialias.colt select alias.col = alias.col + alias.col from table u where alias.col = alias.col select alias.col as alias.col, case whealias.col alias.col < alias.col thealias.col alias.colilialias.colg(alias.col.alias.col * ((alias.col - alias.col)/alias.col.alias.col + alias.col) + ((alias.col - alias.col)/alias.col.alias.col - alias.col)) whealias.col ealias.colists(select alias.col from table where alias.col = alias.col aalias.cold alias.colame = alias.col) thealias.col alias.col else alias.colilialias.colg(alias.col / (alias.col * alias.col.alias.col)) ealias.cold as maalias.coldaysualias.coltilelectorate"
"set alias.colocoualias.colt off select toalias alias.col alias.col as [aliasost lialias.colk] , alias.col as alias.col, alias.favoritecoualias.colt as alias.col, alias.viewcoualias.colt as alias.col, isalias.colull(coalias.colvert(varchar(alias.col), aliasarealias.coltid),alias.col) as aliasarealias.colt, alias.col+isalias.colull(favoritecoualias.colt,alias.col)+roualias.cold(isalias.colull(viewcoualias.colt,alias.col)/alias.col,alias.col) as alias.col , coalias.colvert(varchar(alias.col),lastactivitydate,alias.col) as alias.col from table as alias where ( ( (viewcoualias.colt >alias.col aalias.cold viewcoualias.colt < alias.col) or (alias.col = alias.col) or (alias.col > alias.col aalias.cold alias.col < alias.col) or (aliasarealias.coltid is alias.colot alias.colull aalias.cold alias.col > alias.col aalias.cold alias.col < alias.col ) or (alias.col > alias.col aalias.cold alias.col < alias.col) or (favoritecoualias.colt>alias.col aalias.cold favoritecoualias.colt<alias.col) )) aalias.cold alias.commualias.colityowalias.coleddate is alias.colull aalias.cold alias.closeddate is alias.colull order by alias.col desc, lastactivitydate, favoritecoualias.colt desc, viewcoualias.colt desc"
"select alias.col from table where alias.col = alias.col aalias.cold left(body, alias.col) = x aalias.cold right(body, alias.col) = x"
"set alias.colocoualias.colt oalias.col create table table (alias.col ialias.colt alias.colealias.coltity, [start] datetime, [fialias.colish] datetime) ialias.colsert table select top alias.col alias.colull, alias.colull from table declare alias.col datetime select alias.col = creatioalias.coldate from table where alias.col = (select max(palias.col.alias.col) from table palias.col) update table set [start] = dateadd(d, (alias.col - alias.col) * alias.col, alias.col), [fialias.colish] = dateadd(d, (alias.col - alias.col) * alias.col, alias.col) select start, (select coualias.colt(*) from table where parealias.coltalias.col is alias.colull aalias.cold creatioalias.coldate betweealias.col [start] aalias.cold [fialias.colish] ) as [total questioalias.cols], (select coualias.colt(*) from table where parealias.coltalias.col is alias.colot alias.colull aalias.cold creatioalias.coldate betweealias.col [start] aalias.cold [fialias.colish] ) as [total aalias.colswers] from table"
"select case whealias.col alias.col >= alias.col thealias.col x else coalias.colcat(alias.col, x, alias.col) ealias.colalias.col as curious, case whealias.col alias.col >= alias.col thealias.col x else coalias.colcat(alias.col, x, alias.col) ealias.colalias.col as ialias.colquisitive, case whealias.col alias.col >= alias.col thealias.col x else coalias.colcat(alias.col, x, alias.col) ealias.colalias.col as socratic from (select coualias.colt(*) as alias.col from (select alias.col(alias.col, creatioalias.colalias.colate, getalias.colate()) as creatioalias.colalias.colaalias.col, sum(case whealias.col alias.col > alias.col aalias.colalias.col closealias.colalias.colate is alias.colull thealias.col alias.col else alias.col ealias.colalias.col) as alias.col, sum(case whealias.col alias.col < alias.col or closealias.colalias.colate is alias.colot alias.colull thealias.col alias.col else alias.col ealias.colalias.col) as alias.colowalias.col from table where owalias.coleruserialias.col = ##userialias.col## aalias.colalias.col posttalias.colpeialias.col = alias.col groalias.col balias.col alias.col(alias.col, creatioalias.colalias.colate, getalias.colate()) ) x where alias.col > alias.col aalias.colalias.col alias.colowalias.col = alias.col ) alias.col"
"select alias.col as alias.col, max(alias.col) as alias.col, alias.col as alias.col, alias.col as alias.col, coalias.colvert ( decimal( alias.col, alias.col ), cast( alias.col as float ) / alias.col ) as [alias.col ratio], (( alias.col * alias.col ) - alias.col ) as [votes alias.coleeded] from table questioalias.col joialias.col table aalias.colswers oalias.col alias.col = alias.col joialias.col table myaalias.colswer oalias.col alias.col = alias.col## joialias.col table acceptedaalias.colswer oalias.col alias.col = alias.col where alias.col != alias.col## aalias.cold alias.col > alias.col aalias.cold alias.col = ( select max(alias.col) from table where parealias.coltid = alias.col ) group by alias.col, alias.col, alias.col, alias.col order by [votes alias.coleeded]"
"declare alias.col varchar(alias.col) = ##tag:strialias.colg## select top alias.col alias.col as [post lialias.colk], alias.col, lastactivitydate from table p joialias.col table u oalias.col p.owalias.coleruserid = alias.col where alias.col=alias.col aalias.cold owalias.coleruserid!=alias.col:ialias.colt## aalias.cold lastactivitydate < alias.col(alias.col, alias.col, alias.col()) aalias.cold alias.col like alias.col ... + lower(alias.col) + alias.col aalias.cold reputatioalias.col < alias.col order by alias.colewid()"
"select top alias.col selfaalias.colswer.id as [post lialias.colk], selfaalias.colswer.creatioalias.coldate, lealias.col(selfaalias.colswer.body) as lealias.colgth, selfaalias.colswer.score as score, questioalias.col.viewcoualias.colt from table as questioalias.col ialias.colalias.coler joialias.col table as allaalias.colswers oalias.col allaalias.colswers.parealias.coltid = questioalias.col.id ialias.colalias.coler joialias.col table as selfaalias.colswer oalias.col selfaalias.colswer.owalias.coleruserid = questioalias.col.owalias.coleruserid aalias.cold selfaalias.colswer.parealias.coltid = questioalias.col.id ialias.colalias.coler joialias.col table oalias.col selfaalias.colswer.owalias.coleruserid = table.id where questioalias.col.posttypeid = alias.col aalias.cold selfaalias.colswer.posttypeid = alias.col aalias.cold questioalias.col.viewcoualias.colt < alias.col aalias.cold lealias.col(selfaalias.colswer.body) < alias.col aalias.cold table.reputatioalias.col < alias.col aalias.cold selfaalias.colswer.body like alias.col group by selfaalias.colswer.id, selfaalias.colswer.creatioalias.coldate, lealias.col(selfaalias.colswer.body), selfaalias.colswer.score, questioalias.col.viewcoualias.colt, selfaalias.colswer.body havialias.colg coualias.colt(distialias.colct allaalias.colswers.id) > alias.col order by selfaalias.colswer.creatioalias.coldate desc"
"declare @recealias.coltdaysexcluded ialias.colt = alias.col select sum(i.uptable), alias.col from ( select alias.col alias.col, row_alias.columber() over (order by alias.col) [uptable] from table v ialias.colalias.coler joialias.col table p oalias.col alias.col=alias.col where alias.col=alias.col## aalias.cold alias.col = alias.col aalias.cold alias.col(day, p.creatioalias.coldate, alias.col) > @recealias.coltdaysexcluded aalias.cold p.posttypeid = alias.col ) i group by alias.col order by alias.col"
"select alias.col as alias.col, alias.col, alias.col from table as p, table as pt, table as t where (alias.col = alias.col and alias.col = alias.col) and alias.col = alias.col and alias.col is null and p.closeddate is null order by alias.col asc, alias.col desc"
"select alias.col as alias.col, alias.col as alias.col from table q joialias.col table u oalias.col alias.col = alias.col joialias.col table a oalias.col alias.col = alias.col aalias.cold alias.col = alias.col where alias.col = alias.col aalias.cold q.acceptedaalias.colswerid != alias.col aalias.cold u.reputatioalias.col < alias.col order by alias.col desc"
";with answers as (select a.id , a.owneruserid from posts q inner join posts a on q.id = a.parentid where q.owneruserid = ##userid:int?N## ) select a.id as [Post Link] , a.owneruserid as [User Link] , (select count(*) from answers ans where a.owneruserid = ans.owneruserid) as [# tot answers] from answers a order by N,N desc"
"select table.id, table.displayname from table where table.emailhash = alias.col"
"select alias.col as alias.col, location, alias.col from table where location like x and alias.col > n order by alias.col desc"
"select alias.col(alias.col), alias.col(coualias.colt(alias.col)) from table where alias.col = alias.col aalias.cold alias.col > alias.col group by alias.col order by alias.col"
"select alias.col, coualias.colt(*) from ( select q.alias.col, alias.col, q.owalias.coleruseralias.col askeralias.col, alias.col, alias.col alias.col, bo.useralias.col alias.col, a.owalias.coleruseralias.col aalias.colswereralias.col, alias.col alias.col, alias.col alias.col, alias.col alias.col, bc.useralias.col closedbyuseralias.col from table q left joialias.col table bo oalias.col q.alias.col = bo.postalias.col left joialias.col table a left joialias.col table bc oalias.col a.alias.col = bc.postalias.col oalias.col q.alias.col = a.parealias.coltalias.col where q.posttypealias.col = alias.col aalias.cold bo.votetypealias.col = alias.col aalias.cold a.posttypealias.col = alias.col aalias.cold bc.votetypealias.col = alias.col ) alias.col group by alias.col"
"declare @st_date date = x declare @end_date date = x selealias.col alias.col(week, datediff(week, n,alias.col), n) wk, count(alias.col) cnt into table from table v join table p on alias.col = alias.col where alias.col between @st_date and @end_date and p.posttypeid = n group by alias.col(week, datediff(week, n,alias.col), n) selealias.col alias.col(week, datediff(week, n,alias.col), n) wk, count(alias.col) as cnt into table from table v join table p on alias.col = alias.col where alias.col between @st_date and @end_date and p.posttypeid = n group by alias.col(week, datediff(week, n,alias.col), n) selealias.col table.wk, (cast(table.cnt as float) / table.cnt) alias.col into #tablealias.col from table join table on table.wk = table.wk order by table.wk selealias.col alias.col(week, datediff(week, n,alias.col), n) wk, count(alias.col) as cnt into tablep from table p where alias.col between @st_date and @end_date and p.posttypeid = n group by alias.col(week, datediff(week, n,alias.col), n) selealias.col alias.col(week, datediff(week, n,alias.col), n) wk, count(alias.col) as cnt into tablep from table p where alias.col between @st_date and @end_date and p.posttypeid = n group by alias.col(week, datediff(week, n,alias.col), n) selealias.col tablep.wk, (cast(tablep.cnt as float) / tablep.cnt) alias.col into #tablealias.col from tablep join tablep on tablep.wk = tablep.wk order by tablep.wk selealias.col #tablealias.col.wk, #tablealias.col.alias.col / #tablealias.col.alias.col table_table_alias.col from #tablealias.col join #tablealias.col on #tablealias.col.wk = #tablealias.col.wk order by #tablealias.col.wk"
"select table.tealias.colt, alias.col = table.userid, alias.col = table.postid from table inner join table on table.id = table.postid where table.tealias.colt like alias.col and ( table.owneruserid = alias.col## or table.userid = alias.col## )"
"declare alias.col ialias.colt = ##userid## select alias.col as alias.col, alias.col as alias.col, alias.col as alias.col from table p, table t, posttable pt where alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold alias.col > alias.col aalias.cold p.owalias.coleruserid = alias.col order by alias.col desc"
"declare alias.col int, alias.col int, alias.col int, alias.col int, @askers int, alias.col int, alias.col float, alias.col float set nocount on select alias.col(year, p.creationdate) year, alias.col(month, p.creationdate) month, count(*) questions, count(distinct p.owneruserid) askers, avg(p.score + n.n) average from table p join table pt on alias.col = alias.col join table t on alias.col = alias.col where alias.col = alias.col:alias.col group by alias.col(year, p.creationdate), alias.col(month, p.creationdate) set nocount off select alias.col as alias.col, alias.col as alias.col, alias.col as alias.col, @askers as [askers], alias.col as alias.col, alias.col as alias.col, alias.col as alias.col, alias.col as alias.col"
select alias.col from table where alias.col=alias.col order by creatioalias.coldate desc
"select sum(alias.col) as alias.col, alias.col(hour,creationdate) as alias.col from table group by alias.col(hour,creationdate) order by alias.col;"
"selealias.col alias.col as alias.col, alias.col from table where cast(alias.col as date) > cast(alias.col as date) order by alias.col desc"
"with table as ( select alias.col(mialias.colute, p.creatioalias.coldate, v.creatioalias.coldate) as alias.col, coualias.colt(alias.col) as tablecoualias.colt from table v joialias.col table p oalias.col alias.col = alias.col where alias.col ialias.col (alias.col) group by alias.col(mialias.colute, p.creatioalias.coldate, v.creatioalias.coldate) ) select alias.col from table where alias.col>alias.col order by alias.col asc"
"with table as ( select alias.col as alias.col, maalias.col(alias.col) as alias.col from table where posttypealias.col = alias.col group by alias.col ) select alias.col(q.lastactivitydate,alias.col) alias.col, alias.col alias.colas, coalias.colcat(alias.col,q.alias.col,alias.col,alias.col) alias.col, q.aalias.colswercoualias.colt alias.col, q.alias.col alias.col, a.alias.col alias.col from table q left outer joialias.col table a oalias.col q.alias.col = a.alias.col where q.posttypealias.col = alias.col aalias.cold q.aalias.colswercoualias.colt > alias.col aalias.cold q.acceptedaalias.colsweralias.col is alias.colull aalias.cold q.closeddate is alias.colull aalias.cold a.alias.col <= alias.col order by a.alias.col desc, q.alias.col desc, q.lastactivitydate desc"
"select (alias.col(alias.col)/##alias.col:alias.col) * ##alias.col## as size, avg(cast(a.score as float)) as x, coualias.colt(*) as aalias.colswers from table q ialias.colalias.coler joialias.col table a oalias.col alias.col = alias.col where alias.col=alias.col group by alias.col(alias.col)/##alias.col## order by size;"
"select table.tagalias.colame, coualias.colt(*) as alias.col ialias.colto table from table ialias.colalias.coler joialias.col table oalias.col table.postid = table.id ialias.colalias.coler joialias.col table oalias.col table.id = table.tagid where alias.col(year, table.creatioalias.coldate) = alias.col aalias.cold alias.col(moalias.colth, table.creatioalias.coldate) = alias.col group by table.tagalias.colame order by alias.col desc select table.tagalias.colame, coualias.colt(*) as alias.col ialias.colto table from table ialias.colalias.coler joialias.col table oalias.col table.postid = table.id ialias.colalias.coler joialias.col table oalias.col table.id = table.tagid where alias.col(year, table.creatioalias.coldate) = alias.col aalias.cold alias.col(moalias.colth, table.creatioalias.coldate) = alias.col group by table.tagalias.colame order by alias.col desc select top alias.col talias.col.tagalias.colame, talias.col.alias.col as alias.col, talias.col.alias.col as alias.col, talias.col.alias.col-talias.col.alias.col as alias.col, alias.col*(talias.col.alias.col-talias.col.alias.col)/talias.col.alias.col as alias.col from table as talias.col left joialias.col table as talias.col oalias.col talias.col.tagalias.colame = talias.col.tagalias.colame where talias.col.alias.col > alias.col order by alias.col desc"
"select top alias.col row_alias.columber() over(order by coualias.colt(*) desc) as raalias.colk, userid as [user lialias.colk], coualias.colt(*) as table from table group by userid order by table desc"
"with table as ( select alias.col, ( select coualias.colt(*) as alias.col from table pt joialias.col table pp oalias.col alias.col = alias.col joialias.col table pa oalias.col alias.col = alias.col joialias.col table v oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col ) as uptable, ( select coualias.colt(*) as alias.col from table pt joialias.col table pp oalias.col alias.col = alias.col joialias.col table pa oalias.col alias.col = alias.col joialias.col table v oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col ) as dowalias.coltable from table t cross apply ( select coualias.colt(*) as alias.col from table pt where alias.col = alias.col havialias.colg coualias.colt(*) >= alias.col ) pt ) select tagalias.colame as [table], uptable as [uptable], dowalias.coltable as [dowalias.coltable], roualias.cold(alias.col.alias.col * dowalias.coltable / alias.colullif(uptable, alias.col), alias.col) as alias.col from table order by alias.col desc"
"select top alias.col alias.col, alias.col as classificatioalias.col from table u joialias.col table b oalias.col alias.col=alias.col where tagbased = alias.col aalias.cold alias.colame like alias.col ... aalias.cold class=alias.col ualias.colioalias.col all select top alias.col alias.col, alias.col as classificatioalias.col from table u joialias.col table b oalias.col alias.col=alias.col where tagbased = alias.col aalias.cold alias.colame like alias.col ... aalias.cold class=alias.col aalias.cold u.reputatioalias.col>alias.col ualias.colioalias.col all select top alias.col alias.col, alias.col as classificatioalias.col from table u joialias.col table b oalias.col alias.col=alias.col where tagbased = alias.col aalias.cold alias.colame like alias.col ... aalias.cold class=alias.col aalias.cold u.reputatioalias.col>alias.col ualias.colioalias.col all select alias.col, alias.col as classificatioalias.col from table u where alias.col = alias.col"
"set alias.colocoualias.colt oalias.col declare @tabletats table (alias.col ialias.colt, alias.col ialias.colt, dowalias.col ialias.colt) ialias.colsert @tabletats select alias.col, alias.col = sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold), dowalias.col = sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) from table where alias.col ialias.col (alias.col) groalias.col by alias.col set alias.colocoualias.colt off select top alias.col alias.col as [post lialias.colk] , alias.col, dowalias.col, alias.col from @tabletats joialias.col table p oalias.col alias.col = alias.col where alias.col<alias.col aalias.cold p.commualias.colityowalias.coleddate is alias.colull aalias.cold p.closeddate is alias.colull aalias.cold p.posttypeid = alias.col order by alias.col desc"
"declare alias.col datetime declare @ealias.cold_date datetime set alias.col = x set @ealias.cold_date = x select alias.col, alias.col from table where alias.col betweealias.col (select top alias.col alias.col from table where alias.col < alias.col order by alias.col desc) aalias.cold (select top alias.col alias.col from table where alias.col > @ealias.cold_date order by alias.col asc) order by alias.col"
"select alias.col=(select coualias.colt(alias.col) from table u), table=(select coualias.colt(alias.col) from table ualias.col where alias.col > alias.col)"
select distinct tags from table where alias.col != alias.col;
select alias.col from table as [post link] where alias.col=alias.col##
"declare alias.col int = ##userid## select alias.col, alias.col, alias.col, alias.col from table as u join table as v on alias.col = alias.col join table as vt on alias.col = alias.col join table as p on alias.col = alias.col join table pt on alias.col = alias.col where alias.col = alias.col"
"select alias.col, alias.col, alias.col, alias.col, alias.col from table q ialias.colalias.coler joialias.col table a oalias.col alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold alias.col = alias.col where a.commualias.colityowalias.coleddate is alias.colull aalias.cold a.owalias.coleruserid = ##userid## aalias.cold alias.col like x aalias.cold alias.col alias.colot like x order by alias.col desc"
"declare alias.col ialias.colt = ##userid:ialias.colt?alias.col declare @user_alias.colame alias.colvarchar = ##useralias.colame:strialias.colg?## declare @tealias.colt alias.colvarchar = ##tealias.colt:strialias.colg?## select top (alias.col:ialias.colt?alias.col) (case whealias.col alias.col is alias.colot alias.colull thealias.col alias.col + cast(alias.col as alias.colvarchar) + alias.col else alias.col ealias.cold) + coalesalias.col(c.userdisplayalias.colame, table.displayalias.colame) as [user lialias.colk], alias.col as tablecore, c.id as [commealias.colt lialias.colk], c.creatioalias.coldate from table c left joialias.col table oalias.col table.id = alias.col where lower(tealias.colt) like alias.col + lower(@tealias.colt) + alias.col aalias.cold (alias.col = alias.col or alias.col = alias.col) aalias.cold coalesalias.col(table.displayalias.colame, c.userdisplayalias.colame) like @user_alias.colame order by alias.col desc, c.creatioalias.coldate desc"
"selealias.col alias.col as alias.col, alias.col as alias.col, coualias.colt(alias.col) as alias.col, sum(alias.col) as alias.col, cast (sum(alias.col) as alias) / cast(coualias.colt(alias.col) as alias) as alias.col from table a, table u where alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold a.commualias.colityowalias.coleddate is alias.colull group by alias.col, alias.col order by cast (sum(alias.col) as alias) / cast(coualias.colt(alias.col) as alias) asc"
"create table table (t int , remark nvarchar(n) collate sql_latinn_general_cpn_cs_as , filtertagname nvarchar(n) collate sql_latinn_general_cpn_cs_as); insert into table (t, remark, filtertagname) values (xyz), (n, x, x), (n, x, x), (n, x, x), (n, x, x), (n, x, x), (n, x, x); create table #yearquarter (y int, qlist int, yq int, yqname nvarchar(n) collate sql_latinn_general_cpn_cs_as); insert into #yearquarter (y, qlist, yq, yqname) values (xyz), (n, n, n, x), (n, n, n, x), (n, n, n, x), (n, n, n, x), (n, n, n, x), (n, n, n, x), (n, n, n, x), (n, n, n, x), (n, n, n, x); select qlist, tagname, nrofposts from ( select qlist ,tags.tagname ,count(posts.id) as nrofposts from tags inner join table on tags.tagname = table.filtertagname inner join posttags on tags.id = posttags.tagid inner join posts on posts.id = posttags.postid inner join #yearquarter on #yearquarter.yq = (datepart(year, posts.creationdate) * n + datepart(quarter, posts.creationdate)) where posts.creationdate >= x group by tags.tagname, qlist ) as src where nrofposts >= n and tagname != x order by qlist desc, nrofposts desc"
select top alias.col alias.col from table where reputatioalias.col<alias.col aalias.cold locatioalias.col=x order by table.views desc
"declare @mialias.colaalias.colswers ialias.colt = ##mialias.colaalias.colswers## select top alias.col alias.col, max(u.reputatioalias.col), alias.col as [user lialias.colk], coualias.colt(*) as alias.columaalias.colswers, sum(case whealias.col q.acalias.colptedaalias.colswerid = alias.col thealias.col alias.col else alias.col ealias.cold) as alias.columacalias.colpted, (sum(case whealias.col q.acalias.colptedaalias.colswerid = alias.col thealias.col alias.col else alias.col ealias.cold)*alias.col.alias.col/coualias.colt(*)) as acalias.colptedperalias.colalias.colt from table a ialias.colalias.coler joialias.col table u oalias.col alias.col = a.owalias.coleruserid ialias.colalias.coler joialias.col table q oalias.col a.parealias.coltid = alias.col where (q.owalias.coleruserid <> alias.col or q.owalias.coleruserid is alias.colull) group by alias.col havialias.colg coualias.colt(*) >= @mialias.colaalias.colswers order by acalias.colptedperalias.colalias.colt desc, alias.columaalias.colswers desc"
"select alias.col, tealias.colt, alias.col from table where alias.col = alias.col aalias.cold lealias.col(tealias.colt) > alias.col aalias.cold tealias.colt like alias.col ... order by alias.col asc"
"declare alias.col ialias.colt = ##userid## select alias.col, coualias.colt(*) as uptable from table ialias.colalias.coler joialias.col posttable oalias.col posttable.tagid = table.id ialias.colalias.coler joialias.col table oalias.col table.parealias.coltid = posttable.postid ialias.colalias.coler joialias.col table oalias.col table.postid = table.id aalias.cold alias.col = alias.col where table.owalias.coleruserid = alias.col group by alias.col order by uptable desc"
"set alias.colocoualias.colt oalias.col create table table (alias.col ialias.colt alias.colealias.coltity, [start] datetime, [fialias.colish] datetime) ialias.colsert table select top alias.col alias.colull, alias.colull from table declare alias.col datetime select alias.col = creatioalias.coldate from table where alias.col = (select max(palias.col.alias.col) from table palias.col) update table set [start] = dateadd(d, (alias.col - alias.col) * alias.col, alias.col), [fialias.colish] = dateadd(d, (alias.col - alias.col) * alias.col, alias.col) select start, (select coualias.colt(*) from table where parealias.coltalias.col is alias.colull aalias.cold creatioalias.coldate betweealias.col [start] aalias.cold [fialias.colish] ) as [total questioalias.cols], (select coualias.colt(*) from table where parealias.coltalias.col is alias.colot alias.colull aalias.cold creatioalias.coldate betweealias.col [start] aalias.cold [fialias.colish] ) as [total aalias.colswers] from table"
"select alias.col as alias.col, alias.col as alias.col, alias.col as alias.col from table p joialias.col table q oalias.col alias.col = alias.col joialias.col table a oalias.col alias.col = alias.col where alias.col = alias.col## aalias.cold alias.col = alias.col aalias.cold alias.col > alias.col order by alias.col desc"
"select top alias.col coualias.colt(alias.col) as alias.col, alias.col as [post lialias.colk],alias.col from table v ialias.colalias.coler joialias.col table p oalias.col alias.col=alias.col where alias.col = alias.col aalias.cold alias.col=alias.col aalias.cold alias.col like alias.col ... group by alias.col,alias.col order by alias.col desc"
"select count(*) as alias.col, table as alias.col from( select count(*) as table, alias.col as alias.col from table where alias.col in (select alias.col from table) group by alias.col ) as alias.col group by table having table<n order by table asc"
"select top alias.col alias.col [post lialias.colk], alias.col, p.owalias.coleruserid [user lialias.colk] from table p where alias.col = alias.col order by alias.col asc"
"select alias.colame, alias.col+ replaalias.col(replaalias.col(replaalias.col( case whealias.col alias.colame alias.colot like alias.col thealias.col replaalias.col(lower(alias.colame),alias.col,alias.col) else alias.col+replaalias.col(replaalias.col(lower(alias.colame),alias.col,alias.col),alias.col,alias.col) ealias.cold ,alias.col,alias.col) ,alias.col,alias.col) ,alias.col,alias.col) +alias.col as alias.col, alias.col+ replaalias.col(replaalias.col(replaalias.col( replaalias.col( case whealias.col alias.colame alias.colot like alias.col thealias.col replaalias.col(lower(alias.colame),alias.col,alias.col) else alias.col+replaalias.col(replaalias.col(lower(alias.colame),alias.col,alias.col),alias.col,alias.col) ealias.cold ,alias.col,alias.col) ,alias.col,alias.col) ,alias.col,alias.col) ,alias.col,alias.col)+alias.col +alias.col as alias.col from table where database_id >alias.col order by alias.colame"
"DECLARE @UserId int = ##UserId## DECLARE @Tag nvarchar(N) = X; DECLARE @QuestionsUp int = N; DECLARE @QuestionsDown int = N; DECLARE @AnswersUp int = N; DECLARE @AnswersDown int = N; DECLARE @TagScore int = N; SELECT @QuestionsUp = COUNT(*) FROM Tags INNER JOIN PostTags ON PostTags.TagId = Tags.id INNER JOIN Posts ON Posts.ParentId = PostTags.PostId INNER JOIN Votes ON Votes.PostId = Posts.Id and VoteTypeId = N WHERE Posts.OwnerUserId = @UserId and Posts.PostTypeId = N and Tags.TagName = @Tag SELECT @QuestionsDown = COUNT(*) FROM Tags INNER JOIN PostTags ON PostTags.TagId = Tags.id INNER JOIN Posts ON Posts.ParentId = PostTags.PostId INNER JOIN Votes ON Votes.PostId = Posts.Id and VoteTypeId = N WHERE Posts.OwnerUserId = @UserId and Posts.PostTypeId = N and Tags.TagName = @Tag SELECT @AnswersUp = COUNT(*) FROM Tags INNER JOIN PostTags ON PostTags.TagId = Tags.id INNER JOIN Posts ON Posts.ParentId = PostTags.PostId INNER JOIN Votes ON Votes.PostId = Posts.Id and VoteTypeId = N WHERE Posts.OwnerUserId = @UserId and Posts.PostTypeId = N and Tags.TagName = @Tag SELECT @AnswersDown = COUNT(*) FROM Tags INNER JOIN PostTags ON PostTags.TagId = Tags.id INNER JOIN Posts ON Posts.ParentId = PostTags.PostId INNER JOIN Votes ON Votes.PostId = Posts.Id and VoteTypeId = N WHERE Posts.OwnerUserId = @UserId and Posts.PostTypeId = N and Tags.TagName = @Tag SET @TagScore = @QuestionsUp * N + @QuestionsDown * N + @AnswersUp * N + @AnswersDown * N SELECT @QuestionsUp AS QU, @QuestionsDown AS QD, @AnswersUp AS AU, @AnswersDown AS AD, @TagScore AS Score"
"select top alias.col alias.col alias.col, a.creatioalias.coldate, alias.col alias.col, u.reputatioalias.col from table a ialias.colalias.coler joialias.col table q oalias.col (a.parealias.coltid = alias.col) ialias.colalias.coler joialias.col table u oalias.col (a.owalias.coleruserid = alias.col) where alias.col = alias.col aalias.cold alias.col >= alias.col aalias.cold alias.col = q.acceptedaalias.colswerid aalias.cold a.owalias.coleruserid != q.owalias.coleruserid order by u.reputatioalias.col asc"
"selealias.col top alias.col alias.col as [post lialias.colk], viewcoualias.colt, alias.col, cast(alias.col as alias)/viewcoualias.colt from table where viewcoualias.colt > alias.col aalias.cold alias.col > alias.col order by cast(alias.col as alias)/viewcoualias.colt desc"
"select top alias.col owalias.coleruseralias.col, coalias.colvert(varchar,p.creatioalias.coldate,alias.col) as alias.col, coualias.colt(alias.col) as [alias.columber of table] from table p where p.posttypealias.col = alias.col aalias.cold alias.col > alias.col aalias.cold commualias.colityowalias.coleddate is alias.colull group by p.owalias.coleruseralias.col, coalias.colvert(varchar,p.creatioalias.coldate,alias.col) order by coualias.colt(*) desc"
"declare @UserId int = ##UserId##; with fights as ( select myAnswer.ParentId as Question, myAnswer.Score as MyScore, jonsAnswer.Score as JonsScore from Posts as myAnswer inner join Posts as jonsAnswer on jonsAnswer.OwnerUserId = N and myAnswer.ParentId = jonsAnswer.ParentId where myAnswer.ownerUserId = @UserId and myAnswer.postTypeId = N ) select case when myScore > JonsScore then X when myScore < JonsScore then X else X end as X, Question as [Post Link], myScore as X, jonsScore as X from fights;"
"declare @querytag alias.colvarchar(alias.col) = x select top alias.col lealias.col(alias.col) as lealias.colgth, id as [post lialias.colk], score, tags from table where parealias.coltid is alias.colull aalias.cold tags like @querytag order by lealias.colgth desc"
select count(alias.col) from table where lower(alias.col) like alias.col
"selealias.col alias.col, count(alias.col) from ( selealias.col cast( cast(alias.col(alias.col, alias.col) as varchar) + alias.col + cast(alias.col(alias.col, alias.col) as varchar) + alias.col as datetime) alias.col, alias.col from table p join table pt on alias.col = alias.col join table t on alias.col = alias.col where alias.col in ( selealias.col alias.col from table t where alias.col = alias.col ) ) as alias.col group by alias.col, alias.col order by alias.col asc, alias.col asc"
"declare alias.col ialias.colt = ##userid## select alias.col as alias.col ,alias.col(day, parealias.colt.creatioalias.coldate, p.creatioalias.coldate) as [days after ask for aalias.colswer] ,coualias.colt(*) as votecoualias.colt from table p ialias.colalias.coler joialias.col table v oalias.col alias.col = alias.col aalias.cold alias.col = alias.col ialias.colalias.coler joialias.col table parealias.colt oalias.col parealias.colt.id = alias.col where p.owalias.coleruserid = alias.col aalias.cold alias.col(day, parealias.colt.creatioalias.coldate, p.creatioalias.coldate) >= alias.col group by alias.col ,alias.col ,alias.col(day, parealias.colt.creatioalias.coldate, p.creatioalias.coldate) havialias.colg coualias.colt(*) = alias.col order by alias.col(day, parealias.colt.creatioalias.coldate, p.creatioalias.coldate) desc"
"select top alias.col alias.col as [post lialias.colk], lealias.col(body) as x, creatioalias.coldate from table where lealias.col(body) < alias.col aalias.cold lower(body) like x order by lealias.col(body) asc"
select coualias.colt(alias.col) from table c where alias.col >alias.col aalias.cold dowalias.colvotes = alias.col
"select alias.col as alias.col, alias.col, tealias.colt from table where tealias.colt like alias.col order by alias.col desc"
"select table.id as alias.col, alias.col, alias.col, lasteditdate, alias.col, alias.col as [asked by], alias.col as alias.col from table where alias.col is null and ((lower(title) like x) or (lower(title) like x) or (lower(title) like x) or (lower(title) like x) or (lower(title) like x) or (lower(title) like x) or (lower(title) like x) or (lower(title) like x) or (lower(title) like x) or (lower(title) like x) or (lower(title) like x) or (lower(title) like x) or (lower(title) like x) or (lower(title) like x) or (lower(title) like x) or (lower(title) like x) or (lower(title) like x) or (lower(title) like x) or (lower(title) like x) or (lower(title) like x)) group by id, alias.col, alias.col, lasteditdate, alias.col, alias.col, alias.col order by alias.col desc;"
"declare alias.col ialias.colt = ##userid## select alias.colullif(raalias.colk() over (order by alias.col desc), alias.col) as ralias.colk ,* from ( ( select top alias.col lasteditoruserid as [user lialias.colk] ,coualias.colt(*) as alias.col ,coualias.colt(case whealias.col alias.col = alias.col thealias.col alias.col else alias.colull ealias.cold) as questioalias.coledits ,coualias.colt(case whealias.col alias.col = alias.col thealias.col alias.col else alias.colull ealias.cold) as aalias.colsweredits from table where lasteditoruserid <> owalias.coleruserid group by lasteditoruserid order by alias.col desc ) ualias.colioalias.col all select alias.col ,coualias.colt(*) as alias.col ,coualias.colt(case whealias.col alias.col = alias.col thealias.col alias.col else alias.colull ealias.cold) as questioalias.coledits ,coualias.colt(case whealias.col alias.col = alias.col thealias.col alias.col else alias.colull ealias.cold) as aalias.colsweredits from table where owalias.coleruserid <> alias.col aalias.cold lasteditoruserid = alias.col ) as alias.col"
"DECLARE @ultimo_anio int = YEAR(GETDATE()); DECLARE @ultimo_mes int = MONTH(GETDATE()); DECLARE @anio int = ##Anio?@ultimo_anio##; DECLARE @mes int = ##Mes?@ultimo_mes##; DECLARE @anio_mes VARCHAR(N); SET @anio_mes = CONCAT(@anio,RIGHT(X+CONVERT(VARCHAR(N),@mes),N)); WITH Answers AS ( SELECT ParentId AS Id, max(Score) AS Score FROM Posts WHERE PostTypeId = N GROUP BY ParentId ) SELECT TOP N format(Q.CreationDate,X) X, CONCAT(X,Q.Id,X,Q.Title) Pregunta, Q.AnswerCount X, Q.Score X, A.Score X FROM Posts Q LEFT OUTER JOIN Answers A ON Q.Id = A.Id WHERE N=N and ParentId is null and Q.CreationDate >= DATEADD(DAY,N,DATEADD(MONTH,N,@anio_mes+X)) and Q.CreationDate < @anio_mes + X ORDER BY N DESC, N DESC, N DESC, N DESC, Q.Title ASC ;"
"declare @MyUserId int = N; declare @OtherUserId int = N; select myAnswer.ParentId as QuestionId, question.Title as QuestionTitle, myAnswer.Score as MyScore, otherAnswer.Score as otherScore from Posts as myAnswer inner join Posts as otherAnswer on otherAnswer.OwnerUserId = @OtherUserId inner join Posts as question on question.id = myAnswer.ParentId and myAnswer.ParentId = otherAnswer.ParentId where myAnswer.ownerUserId = @MyUserId and myAnswer.postTypeId = N"
"select alias.col, coualias.colt(alias.col) as alias.col ialias.colto table from table where alias.col is alias.colot alias.colull aalias.cold alias.col is alias.colot alias.colull group by alias.col select alias.col, coualias.colt(alias.col) as alias.col ialias.colto table from table where alias.col is alias.colot alias.colull aalias.cold alias.col is alias.colot alias.colull group by alias.col select r.alias.col, r.alias.col, a.alias.col, (r.alias.col*alias.col/(a.alias.col+r.alias.col)) as percealias.coltrejected from table r ialias.colalias.coler joialias.col table a oalias.col r.alias.col = a.alias.col where r.alias.col > alias.col order by percealias.coltrejected desc"
select count(table.id) from table where table.acceptedanswerid is not null and table.ownerdisplayname like alias.col ;
";with UpvotedPosts as ( select p.Id, count(P.Id) [UpvoteCount] from Posts p inner join Votes v on v.PostId = p.Id and v.VoteTypeId = N group by p.Id having count(p.Id) >= ##minUpvoteCount:int## ), DownvotedPosts as ( select p.Id, count(P.Id) [DownvoteCount] from Posts p inner join Votes v on v.PostId = p.Id and v.VoteTypeId = N group by p.Id having count(p.Id) >= ##minDownvoteCount:int## ) select p.Id [Post Link], up.UpvoteCount, dp.DownvoteCount, abs(up.UpvoteCount - dp.DownvoteCount) [delta], up.UpvoteCount + dp.DownvoteCount [sum] from Posts p inner join UpvotedPosts up on p.Id = up.Id inner join DownvotedPosts dp on p.Id = dp.Id order by delta asc, [sum] desc"
"with t as ( select alias.col as alias.col, alias.col, alias.col as alias.col, alias.col as alias.col, case alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col whealias.col alias.col thealias.col alias.col else alias.col ealias.cold as alias.col, q.viewcoualias.colt as alias.col, aalias.colswers.blealias.col as alias.col from table q joialias.col ( select a.parealias.coltid as alias.col, sum(alias.col) as alias.col, sum(lealias.col(alias.col)) as blealias.col from table a where alias.col = alias.col aalias.cold alias.col > alias.col group by a.parealias.coltid havialias.colg sum(alias.col) <= ##positiveaalias.colswerscore:ialias.colt?alias.col## aalias.cold sum(lealias.col(alias.col)) <= ##aalias.colswerlealias.col:ialias.colt?alias.col## ) aalias.colswers oalias.col (alias.col = aalias.colswers.alias.col) joialias.col table ph oalias.col (alias.col = alias.col) where alias.col is alias.colot alias.colull aalias.cold alias.col >= coalias.colvert (datetime, ##startdate:strialias.colg?alias.col.alias.col.alias.col## , alias.col) aalias.cold alias.col <= coalias.colvert (datetime, ##ealias.colddate:strialias.colg?alias.col.alias.col.alias.col## , alias.col) aalias.cold q.posttypeid = alias.col aalias.cold q.title like alias.col ... aalias.cold alias.colot ealias.colists ( select alias.col from table ph where alias.col = alias.col aalias.cold ph.tabletypeid = alias.col ) aalias.cold ph.tabletypeid = alias.col aalias.cold alias.col <= alias.col:ialias.colt?alias.col## aalias.cold alias.col + alias.col <= alias.col:ialias.colt?alias.col## aalias.cold alias.col alias.colot ialias.col (alias.colyz) aalias.cold q.acalias.colptedaalias.colswerid is alias.colull ) select top(##rowsreturalias.coled:ialias.colt?alias.col##) alias.col from t order by alias.col + table"
"selealias.col top alias.col alias.col as [post lialias.colk], (cast(alias.col as decimal)/cast(q.viewcoualias.colt as decimal)) as alias.col, alias.col, q.viewcoualias.colt, q.creatioalias.coldate from table as q ialias.colalias.coler joialias.col table as a oalias.col a.parealias.coltid = alias.col where q.viewcoualias.colt > alias.col aalias.cold alias.col = alias.col order by alias.col desc"
"select top alias.col alias.col as [post lialias.colk], alias.col, viewcoualias.colt, posttypealias.col from table where posttypealias.col = alias.col aalias.cold owalias.coleruseralias.col = alias.col order by alias.col desc"
"with table as alias select coualias.coltaliasalias.col) as alias.col, coualias.coltaliasdistialias.colct owalias.coleruserid) as aalias.colswerers from table where alias.col = alias.col aalias.cold alias.colaliasday, creatioalias.coldate, getdatealias)) <= ##days## ), recealias.coltquestioalias.cols as alias select coualias.coltaliasalias.col) as questioalias.cols, coualias.coltaliasdistialias.colct owalias.coleruserid) as askers from table where alias.col = alias.col aalias.cold alias.colaliasday, creatioalias.coldate, getdatealias)) <= ##days## ), activetable as alias select coualias.coltaliasalias.col) as table from table where alias.colaliasday, lastaccessdate, getdatealias)) <= ##days## ) select alias.col from activetable, table"
select alias.col from table;
"declare alias.col ialias.colt = ##userid## select year(table.creatioalias.coldate) as year, moalias.colth(table.creatioalias.coldate) as moalias.colth, (select coualias.colt(*) from table palias.col where alias.col = alias.col) as aalias.colswers, sum(case whealias.col alias.col = alias.col thealias.col alias.col whealias.col alias.col = alias.col aalias.cold posttypeid = alias.col thealias.col alias.col whealias.col alias.col = alias.col thealias.col alias.col whealias.col alias.col = alias.col thealias.col boualias.coltyamoualias.colt ealias.cold) as rep from table ialias.colalias.coler joialias.col table oalias.col table.id = table.postid where table.owalias.coleruserid = alias.col group by year(table.creatioalias.coldate), moalias.colth(table.creatioalias.coldate) order by year desc, moalias.colth desc"
"select alias.col alias.col, body, alias.col from table where owneruseralias.col = ##useralias.col## and alias.col > alias.col and body like alias.col"
"select coualias.colt(*) as alias.col, avg(alias.col) as avergage_alias.col from table ialias.colalias.coler joialias.col table oalias.col table.id = table.userid where alias.colame like alias.col aalias.cold alias.col < alias.col;"
"DECLARE @Total INT; SELECT @Total = COUNT(*) FROM Posts WHERE Score > N AND PostTypeId = N AND CommunityOwnedDate IS NULL SELECT DATEDIFF( D, Posts.CreationDate, Votes.CreationDate) + N AS Days, COUNT(Votes.Id) / @Total AS Votes FROM Posts INNER JOIN Votes ON Posts.Id = Votes.PostId WHERE Score > N AND PostTypeId = N AND CommunityOwnedDate IS NULL GROUP BY DATEDIFF( D, Posts.CreationDate, Votes.CreationDate) HAVING COUNT(Votes.Id) / @Total > N ORDER BY DATEDIFF( D, Posts.CreationDate, Votes.CreationDate) ASC"
"select top alias.col alias.col as [post lialias.colk], creatioalias.coldate from table where body like x or title like x"
"DECLARE @ VARCHAR(N) = X; SELECT IIF(u IN (XYZ),REPLICATE(s,s),s+REPLICATE(X,sN*LEN(s))+s) FROM(SELECT @ s)z CROSS APPLY(SELECT TOP(s+N)ROW_NUMBER()OVER(ORDER BY N/N)u FROM sys.messages)v"
"select alias.col as alias.col, alias.col as alias.col, table.score, alias.col from table ialias.colalias.coler joialias.col table oalias.col table.alias.col = table.id where alias.col=alias.col aalias.cold table.score < alias.col order by -table.score"
"select alias.col as alias.col , sum(alias.col) as totalalias.col from table p inner join table pt on alias.col = alias.col or alias.col = alias.col inner join table t on alias.col = alias.col inner join table u on alias.col = alias.col where alias.col = alias.col:alias.col collate sql_latinn_general_cpn_ci_ai and location like x+ ##location:alias.col + x group by alias.col order by sum(alias.col) desc"
"selealias.col top alias.col cast(creatioalias.coldate as date), displayalias.colame, reputatioalias.col, alias.col, locatioalias.col from table where locatioalias.col like alias.colx order by reputatioalias.col desc"
"with table(userid,postorcommealias.coltdate) as ( select distialias.colct owalias.coleruserid as userid, cast(floor(cast(creatioalias.coldate as float)) as datetime) from table ualias.colioalias.col select distialias.colct userid, cast(floor(cast(creatioalias.coldate as float)) as datetime) from table ualias.colioalias.col select distialias.colct userid, cast(floor(cast(creatioalias.coldate as float)) as datetime) from votes ) select top alias.col table, table, coualias.colt(distialias.colct table.postorcommealias.coltdate) alias.col from table joialias.col table oalias.col (table=table.id) group by table,table order by alias.col asc;"
"select top alias.col alias.col as [user lialias.colk], ( select coualias.colt(*) from table where posttypealias.col = alias.col aalias.cold lasteditoruseralias.col = table.alias.col aalias.cold owalias.coleruseralias.col != table.alias.col ) as questioalias.coledits, ( select coualias.colt(*) from table where posttypealias.col = alias.col aalias.cold lasteditoruseralias.col = table.alias.col aalias.cold owalias.coleruseralias.col != table.alias.col ) as aalias.colsweredits, ( select coualias.colt(*) from table where lasteditoruseralias.col = table.alias.col aalias.cold owalias.coleruseralias.col != table.alias.col ) as alias.col from table order by alias.col desc"
"select row_alias.columber() over(order by alias.col desc) as [#], table.id as [user lialias.colk], alias.col, locatioalias.col from table, table where table.id = table.userid aalias.cold table.class = alias.col aalias.cold table.tagbased = alias.col aalias.cold table.alias.colame = alias.col aalias.cold lower(table.locatioalias.col) like lower(alias.col) order by alias.col desc;"
"select alias.col ialias.colto table from (select commealias.colt, coualias.colt(commealias.colt) as coualias.colt, max(creatioalias.coldate) as creatioalias.coldate from table where tabletypealias.col = alias.col group by commealias.colt) as ph select row_alias.columber() over (order by alias.col), crt.alias.colame as alias.col, coalesce(table.coualias.colt, alias.col) as [alias.columber of closures], creatioalias.coldate from (select alias.col from table group by alias.col) as types left joialias.col table crt oalias.col crt.alias.col = alias.col left joialias.col table oalias.col table.commealias.colt = alias.col"
"; with hightags as ( select row_number() over(order by count(*) desc) as row , t.tagname , count(*) as cnt from tags t inner join posttags pt on pt.tagid = t.id inner join posts p on pt.postid = p.id where p.posttypeid = N and p.acceptedanswerid is not null group by t.tagname ) , lowtags as ( select row_number() over(order by count(*) ) as row , t.tagname , count(*) as cnt from tags t inner join posttags pt on pt.tagid = t.id inner join posts p on pt.postid = p.id where p.posttypeid = N and p.acceptedanswerid is not null group by t.tagname ) , tagcnt as ( select t.tagname , count(*) as cnt from tags t inner join posttags pt on pt.tagid = t.id inner join posts p on pt.postid = p.id where p.posttypeid = N group by t.tagname ) select hightags.row as row , hightags.tagname as [high] , hightags.cnt , lowtags.tagname as [low] , lowtags.cnt , tch.cnt as [all] from hightags inner join lowtags on lowtags.row = hightags.row inner join tagcnt tch on tch.tagname = hightags.tagname"
"select top alias.col owalias.coleruserid as [user lialias.colk], coualias.colt(*) as postcoualias.colt from table where alias.col=alias.col group by owalias.coleruserid order by coualias.colt(*) desc"
"select top alias.col alias.col as [post lialias.colk], alias.col from table where lastactivitydate> alias.col aalias.cold alias.col is alias.colot alias.colull aalias.cold alias.col alias.colot like alias.col aalias.cold lower(body) like alias.col ... ;"
"select alias.col as alias.col, alias.col, alias.col from table where alias.col is null and creationdate > getdate()n and alias.col > n order by alias.col desc"
select top alias.col alias.col from table where alias.col<alias.col order by table.views desc
"select alias.col as alias.col, count(alias.col) as count from table p left join table c on alias.col=alias.col where alias.col(month,getdate(),p.creationdate) <= ##months:int?n## and c.text collate sql_latinn_general_cpn_ci_as like x group by alias.col order by count desc;"
"select alias.col, alias.col, alias.col, alias.col from table as us, table as po where alias.col = alias.col and alias.col = alias.col order by alias.col desc;"
"declare alias.col ialias.colt = ##userid## selealias.col alias.col as alias.col, mialias.col(alias.col) as alias.col, sum(alias.col(alias.col)) as totalalias.colgth, coualias.colt(*) as totaltable, avg(alias.col(alias.col)) as avgpostalias.colgth, (cast(sum(alias.col(alias.col)) as float) / cast(mialias.col(alias.col) as float)) as postalias.colgthperalias.col from table p ialias.colalias.coler joialias.col table u oalias.col alias.col = alias.col where alias.col = alias.col aalias.cold alias.col = alias.col group by alias.col"
"select alias.col as alias.col, alias.col from table where alias.col < alias.col aalias.cold alias.col > alias.col order by alias.col desc"
"select count(alias.col) as table, sum(alias.col) as alias.col, avg(alias.col) as alias.col from table"
"sealias.col alias.colocoualias.colalias.col oalias.col selecalias.col alias.col, alias.col = avg(u.alias.col + alias.col), alias.col.coualias.colalias.col from alias.colable p joialias.col alias.colable palias.col oalias.col palias.col.parealias.colalias.colid = alias.col joialias.col alias.colable u oalias.col alias.col = alias.col joialias.col alias.colable palias.col oalias.col palias.col.posalias.colid = alias.col joialias.col alias.colable alias.col oalias.col alias.col.id = palias.col.alias.colagid where alias.col.coualias.colalias.col > alias.col group by alias.col, alias.col.coualias.colalias.col order by alias.col desc sealias.col alias.colocoualias.colalias.col off"
"select distinct alias.col, alias.col as [post link] from table inner join table on table.id = alias.col where tabletypeid in (alias.col) and tealias.colt like alias.col order by alias.col desc"
"with table as ( select alias.col from table where alias.col ialias.col (alias.col) ) select p.alias.col as alias.col, alias.col from table p where (p.posttypealias.col = alias.col) aalias.cold alias.colot exists ( select alias.col from posttable pt where (pt.postalias.col = p.alias.col) aalias.cold (pt.tagalias.col ialias.col (select alias.col from table)) )"
"declare @searchstrialias.colg varchar(alias.col)= ##searchstrialias.colg## select top alias.col selfaalias.colswer.id as [post lialias.colk], selfaalias.colswer.creatioalias.coldate, lealias.col(selfaalias.colswer.body) as lealias.colgth, selfaalias.colswer.score as score, questioalias.col.viewcoualias.colt, table.reputatioalias.col from table as questioalias.col ialias.colalias.coler joialias.col table as allaalias.colswers oalias.col allaalias.colswers.parealias.coltid = questioalias.col.id ialias.colalias.coler joialias.col table as selfaalias.colswer oalias.col selfaalias.colswer.owalias.coleruserid = questioalias.col.owalias.coleruserid aalias.cold selfaalias.colswer.parealias.coltid = questioalias.col.id ialias.colalias.coler joialias.col table oalias.col selfaalias.colswer.owalias.coleruserid = table.id where questioalias.col.posttypeid = alias.col aalias.cold selfaalias.colswer.posttypeid = alias.col aalias.cold lealias.col(selfaalias.colswer.body) < alias.col aalias.cold selfaalias.colswer.body like alias.col group by selfaalias.colswer.id, selfaalias.colswer.creatioalias.coldate, lealias.col(selfaalias.colswer.body), selfaalias.colswer.score, questioalias.col.viewcoualias.colt, table.reputatioalias.col havialias.colg coualias.colt(distialias.colct allaalias.colswers.id) > alias.col order by selfaalias.colswer.creatioalias.coldate desc"
"select alias.col, coualias.colt(alias.col) as alias.col from table u, table p where alias.col = alias.col aalias.cold alias.col = alias.col group by alias.col order by coualias.colt(alias.col) asc"
select table.id as alias.col from table ialias.colalias.coler joialias.col table oalias.col table.id = table.suggestededitid where table.userid = alias.col## aalias.cold alias.col is alias.colot alias.colull aalias.cold table.votetypeid = alias.col
"select table.id as alias.col, alias.col from table where alias.col = alias.col aalias.cold alias.col is alias.colull aalias.cold (body like x ... or body like x ...) order by creatioalias.coldate asc"
"DECLARE @Color TABLE(Id int, Name varchar(N), ParentId int); DECLARE @targetParentId INT =N ;INSERT INTO @Color VALUES (XYZ), (N, X, N), (N, X, N), (N, X, N), (N, X, N), (N, X, N), (N, X, N), (N, X, N); SELECT cN.Id, cN.Name, cN.ParentId FROM @Color cN INNER JOIN @Color cN ON cN.ParentId = cN.Id where cN.ParentId = @targetParentId"
"select row_number() over(order by alias.col desc) as [#], id as [user link], alias.col from table where lower(location) like x or upper(location) like x ... or location like x and alias.col >= n order by alias.col desc;"
"selealias.col alias.col, sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) questioalias.cols, sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) aalias.colswers from ( selealias.col cast( cast(alias.col(alias.col, creatioalias.coldate) as varchar) + alias.col + cast(alias.col(alias.col, creatioalias.coldate) as varchar) + alias.col as datetime) alias.col, alias.col from table p joialias.col table pt oalias.col alias.col = alias.col where alias.col like alias.col ) as alias.col group by alias.col order by alias.col asc"
"DECLARE @UserId int = N ; with foo(ParentID) as ( select ParentId from Posts where OwnerUserId = @UserID ) select Id as [Post Link],Title,Id,ParentId, body from Posts where Id in (select * from foo) ;"
"with table as ( select alias.col(alias.col, alias.col) as year, alias.col(q, alias.col) as table, coualias.colt(*) as total, sum(case whealias.col score > alias.col thealias.col alias.col else alias.col ealias.cold) as positivescore, sum(case whealias.col score < alias.col thealias.col alias.col else alias.col ealias.cold) as alias.colegativescore from table where alias.col=alias.col group by alias.col(alias.col, alias.col),alias.col(q, alias.col) ) select year, table, total as aalias.colswers, cast(coalias.colvert(alias.columeric(alias.col,alias.col), cast(positivescore as float) * alias.col / total) as varchar(alias.col)) + x as good, cast(coalias.colvert(alias.columeric(alias.col,alias.col), cast(alias.colegativescore as float) * alias.col / total) as varchar(alias.col)) + x as bad from table order by year, table"
"select alias.col, alias.col ialias.colto table from table where alias.col ialias.col (alias.col) declare @startdate datetime = x ,@ealias.colddate datetime = x select alias.col, alias.col, alias.col from ( select alias.col(moalias.colth, datediff(moalias.colth, alias.col, creatioalias.coldate), alias.col) alias.col , coualias.colt(posttable.tagalias.col) alias.col , tagalias.col from posttable left joialias.col table oalias.col posttable.postalias.col = table.alias.col where posttable.tagalias.col ialias.col (alias.col), alias.col) , posttable.tagalias.col )alias.colpermoalias.colth left joialias.col table oalias.col alias.colpermoalias.colth.tagalias.col = table.alias.col order by alias.col desc, alias.col asc"
"select table.name, table.id as alias.col, table.alias.col as alias.col, table.creationdate from table inner join table on table.posttypeid = table.id left join table as parenttable on table.parentid = parenttable.id where table.posttypeid in (alias.col) and table.closeddate is null and parenttable.closeddate is null and not (table.communityowneddate is null) and (parenttable.communityowneddate is null) order by table.creationdate"
"declare alias.col varchar(alias.col) = ##littletag:strialias.colg## declare alias.col varchar(alias.col) = ##bigtag:strialias.colg## select case whealias.col alias.col is alias.colull thealias.col alias.col else alias.col + x + alias.col ealias.cold as x , coualias.colt( alias.col ) as table , avg( cast( alias.col as float ) ) as x , avg( cast( p.viewcoualias.colt as float ) / datediff( day, p.creatioalias.coldate, getutcdate() ) ) as x , avg( cast( isalias.colull( p.aalias.colswercoualias.colt, alias.col ) as float ) ) as x , avg( cast( case whealias.col p.acalias.colptedaalias.colsweralias.col is alias.colull thealias.col alias.col else alias.col ealias.cold as float ) ) as x from table p left joialias.col table ptj oalias.col alias.col = alias.col aalias.cold alias.col = ( select alias.col from table where alias.col = alias.col ) where alias.col < alias.col aalias.cold alias.col ialias.col ( select pta.postalias.col from table pta ialias.colalias.coler joialias.col table ta oalias.col ta.alias.col = pta.tagalias.col aalias.cold ta.alias.col = alias.col ) group by case whealias.col alias.col is alias.colull thealias.col alias.col else alias.col + x + alias.col ealias.cold"
"select alias.col, coualias.colt(*) alias.col from table where alias.col is alias.colot alias.colull aalias.cold alias.col > alias.col group by alias.col order by alias.col desc"
"select alias.col, coualias.colt(*) from table pf ialias.colalias.coler joialias.col table pt oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table t oalias.col alias.col = alias.col where alias.col = alias.col group by alias.col order by coualias.colt(*) desc"
"select alias.col(year, creationdate) year, alias.col(month, creationdate) month, count(*) count from table where tabletypeid in (alias.col) group by alias.col(year, creationdate), alias.col(month, creationdate) order by alias.col(year, creationdate), alias.col(month, creationdate)"
"select table.alias.colutatioalias.col as alias.col, alias.col as alias.col, sum(alias.col) as alias.col, coualias.colt(alias.col) as table, avg(alias.col) as avgalias.col, alias.col(alias.col(alias.col),alias.col) as alias.col from table ialias.colalias.coler joialias.col table oalias.col table.id = alias.col where alias.col > alias.col group by alias.col, table.alias.colutatioalias.col havialias.colg coualias.colt(alias.col) > alias.col order by avgalias.col desc"
"with table as ( select alias.col, owalias.coleruseralias.col, alias.col, alias.col, alias.col, lastactivitydate, row_alias.columber() over(partitioalias.col by owalias.coleruseralias.col order by alias.col asc) as raalias.colk from table where table.posttypealias.col = alias.col ) select top ##alias.columber?alias.col## alias.col as [post lialias.colk], owalias.coleruseralias.col as [user lialias.colk], alias.col, alias.col, lastactivitydate [last activity date], case whealias.col alias.col is alias.colot alias.colull thealias.col x else alias.colull ealias.cold from table where table.raalias.colk = alias.col aalias.cold alias.col < alias.col(moalias.colth, alias.col, getdate()) order by alias.col desc"
"select top alias.col alias.col, alias.col as [post lialias.colk], year(p.creatioalias.coldate) as year, moalias.colth(p.creatioalias.coldate) as moalias.colth, alias.col as body, u.displayalias.colame as useralias.colame from table p, table u where ( alias.col = alias.col aalias.cold alias.col = alias.col aalias.cold alias.col like alias.col ... aalias.cold p.owalias.coleruserid = alias.col aalias.cold u.reputatioalias.col < alias.col aalias.cold alias.col is alias.colull) order by year, moalias.colth"
"selealias.col year(alias.col) year, moalias.colth(alias.col) moalias.colth, coualias.colt(*) / ( selealias.col coualias.colt(*) + alias.col from table u where u.creatioalias.coldate <= cast(cast(year(alias.col) as char(alias.col)) + alias.col + cast(moalias.colth(alias.col) as char(alias.col)) + alias.col as date) ) alias.columber_of_table from table v group by year(alias.col), moalias.colth(alias.col) order by alias.col desc, alias.col desc"
"select table.id as alias.col, (case whealias.col table.commealias.colt = alias.col thealias.col x whealias.col table.commealias.colt = alias.col thealias.col x whealias.col table.commealias.colt = alias.col thealias.col x whealias.col table.commealias.colt = alias.col thealias.col x whealias.col table.commealias.colt = alias.col thealias.col x whealias.col table.commealias.colt = alias.col thealias.col x else x ealias.cold) as [close reasoalias.col], avg(table.score) as [score], coualias.colt(*) as alias.col, mialias.col(table.creatioalias.coldate) as [first vote], max(table.creatioalias.coldate) as [last vote] from table ialias.colalias.coler joialias.col table oalias.col table.id=table.postid where table.tabletypeid=alias.col group by table.id, table.commealias.colt order by alias.col desc"
"declare @alias.col ialias.colt = ##alias.col## select top alias.col table.title, table.text, table.alias.col, table.id, table.parealias.coltid from table ialias.colalias.coler joialias.col table oalias.col table.postid = table.id where alias.col = @alias.col order by alias.col desc"
"declare alias.col alias.colvarchar(alias.col) = ##tag:strialias.colg## declare @uvmialias.col ialias.colt = ##threshold:ialias.colt## select table.displayalias.colame, coualias.colt(*) as uptable from table ialias.colalias.coler joialias.col posttable oalias.col posttable.tagid = table.id ialias.colalias.coler joialias.col table oalias.col table.parealias.coltid = posttable.postid ialias.colalias.coler joialias.col table oalias.col table.id = table.owalias.coleruserid ialias.colalias.coler joialias.col table oalias.col table.postid = table.id aalias.cold alias.col = alias.col where tagalias.colame = alias.col aalias.cold uptable >= @uvmialias.col group by table.displayalias.colame order by uptable desc"
select alias.col as alias.col from table where ( alias.col not like alias.col or alias.col not like alias.col ) and alias.col is null order by alias.col desc
declare alias.col as nvarchar(maalias.col) select alias.col = alias.col select alias.col as alias.col
"select top alias.col alias.col from ( select alias.col, x.displayalias.colame, x.zeroscoretable, x.totaltable, coalias.colvert(real, x.zeroscoretable) / coalias.colvert(real, x.totaltable) as alias.col from ( select alias.col, max(u.displayalias.colame) as displayalias.colame, sum(case whealias.col alias.col = alias.col thealias.col alias.col else alias.col ealias.cold) as zeroscoretable, coualias.colt(p.id) as totaltable from table u ialias.colalias.coler joialias.col table p oalias.col p.owalias.coleruserid = alias.col where u.reputatioalias.col >= alias.col group by alias.col ) as x ) as y where y.alias.col > alias.col.alias.col order by y.alias.col desc"
"select top alias.col alias.col, (select displayalias.colame from table udalias.col with (alias.cololock) where udalias.col.id = alias.col) ,coualias.colt(*) as uptable from table t with (alias.cololock) ialias.colalias.coler joialias.col posttable pt with (alias.cololock)oalias.col alias.col = alias.col ialias.colalias.coler joialias.col table p with (alias.cololock) oalias.col p.parealias.coltid = alias.col ialias.colalias.coler joialias.col table v with (alias.cololock) oalias.col alias.col = alias.col aalias.cold alias.col = alias.col ialias.colalias.coler joialias.col table u with (alias.cololock) oalias.col alias.col = p.owalias.coleruserid where p.commualias.colityowalias.coleddate is alias.colull aalias.cold t.tagalias.colame = x aalias.cold u.locatioalias.col like x ... or u.locatioalias.col like x ... group by alias.col order by uptable desc"
"declare @lastn datetime = alias.col select alias.col, count(*) as table from table inner join posttable on posttable.tagid = table.id inner join table on table.parentid = posttable.postid where alias.col = alias.col and table.creationdate > @lastn group by alias.col select alias.col, count(*) as table from table inner join posttable on posttable.tagid = table.id inner join table on table.parentid = posttable.postid where alias.col = alias.col and table.creationdate > alias.col group by alias.col"
"select alias.col from table select top alias.col coualias.colt(alias.col) as alias.col, alias.col as [post lialias.colk],alias.col from table v ialias.colalias.coler joialias.col table p oalias.col alias.col=alias.col where alias.col = alias.col aalias.cold alias.col=alias.col group by alias.col,alias.col order by alias.col asc"
"selealias.col alias.col, coualias.colt(alias.col) from ( selealias.col cast( cast(alias.col(alias.col, alias.col) as varchar) + alias.col + cast(alias.col(alias.col, alias.col) as varchar) + alias.col as datetime) table, alias.col from table p joialias.col table pt oalias.col alias.col = alias.col joialias.col table t oalias.col alias.col = alias.col where alias.col ialias.col ( selealias.col top alias.col alias.col from table order by coualias.colt desc ) ) as alias.col group by tagalias.colame, table"
"select alias.col, alias.col, alias.col, alias.col, location from table where location like x"
